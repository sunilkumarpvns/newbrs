package com.elitecore.aaa.mibs.radius.dynauth.client.autogen;

//
// Generated by mibgen version 5.1 (03/08/07) when compiling RADIUS-DYNAUTH-CLIENT-MIB in standard metadata mode.
//


// jmx imports
//
import com.sun.management.snmp.SnmpStatusException;

/**
 * This interface is used for representing the remote management interface for the "RadiusDynAuthServerEntry" MBean.
 */
public interface RadiusDynAuthServerEntryMBean {

    /**
     * Getter for the "RadiusDynAuthClientCounterDiscontinuity" variable.
     */
    public Long getRadiusDynAuthClientCounterDiscontinuity() throws SnmpStatusException;

    /**
     * Getter for the "RadiusDynAuthClientUnknownTypes" variable.
     */
    public Long getRadiusDynAuthClientUnknownTypes() throws SnmpStatusException;

    /**
     * Getter for the "RadiusDynAuthClientCoAPacketsDropped" variable.
     */
    public Long getRadiusDynAuthClientCoAPacketsDropped() throws SnmpStatusException;

    /**
     * Getter for the "RadiusDynAuthClientCoARequests" variable.
     */
    public Long getRadiusDynAuthClientCoARequests() throws SnmpStatusException;

    /**
     * Getter for the "RadiusDynAuthClientDisconPacketsDropped" variable.
     */
    public Long getRadiusDynAuthClientDisconPacketsDropped() throws SnmpStatusException;

    /**
     * Getter for the "RadiusDynAuthClientDisconTimeouts" variable.
     */
    public Long getRadiusDynAuthClientDisconTimeouts() throws SnmpStatusException;

    /**
     * Getter for the "RadiusDynAuthClientDisconPendingRequests" variable.
     */
    public Long getRadiusDynAuthClientDisconPendingRequests() throws SnmpStatusException;

    /**
     * Getter for the "RadiusDynAuthClientDisconBadAuthenticators" variable.
     */
    public Long getRadiusDynAuthClientDisconBadAuthenticators() throws SnmpStatusException;

    /**
     * Getter for the "RadiusDynAuthClientMalformedDisconResponses" variable.
     */
    public Long getRadiusDynAuthClientMalformedDisconResponses() throws SnmpStatusException;

    /**
     * Getter for the "RadiusDynAuthClientDisconNakSessNoContext" variable.
     */
    public Long getRadiusDynAuthClientDisconNakSessNoContext() throws SnmpStatusException;

    /**
     * Getter for the "RadiusDynAuthClientDisconNakAuthOnlyRequest" variable.
     */
    public Long getRadiusDynAuthClientDisconNakAuthOnlyRequest() throws SnmpStatusException;

    /**
     * Getter for the "RadiusDynAuthClientDisconNaks" variable.
     */
    public Long getRadiusDynAuthClientDisconNaks() throws SnmpStatusException;

    /**
     * Getter for the "RadiusDynAuthClientDisconAcks" variable.
     */
    public Long getRadiusDynAuthClientDisconAcks() throws SnmpStatusException;

    /**
     * Getter for the "RadiusDynAuthClientDisconRetransmissions" variable.
     */
    public Long getRadiusDynAuthClientDisconRetransmissions() throws SnmpStatusException;

    /**
     * Getter for the "RadiusDynAuthClientDisconAuthOnlyRequests" variable.
     */
    public Long getRadiusDynAuthClientDisconAuthOnlyRequests() throws SnmpStatusException;

    /**
     * Getter for the "RadiusDynAuthClientCoATimeouts" variable.
     */
    public Long getRadiusDynAuthClientCoATimeouts() throws SnmpStatusException;

    /**
     * Getter for the "RadiusDynAuthClientDisconRequests" variable.
     */
    public Long getRadiusDynAuthClientDisconRequests() throws SnmpStatusException;

    /**
     * Getter for the "RadiusDynAuthClientCoAPendingRequests" variable.
     */
    public Long getRadiusDynAuthClientCoAPendingRequests() throws SnmpStatusException;

    /**
     * Getter for the "RadiusDynAuthClientRoundTripTime" variable.
     */
    public Long getRadiusDynAuthClientRoundTripTime() throws SnmpStatusException;

    /**
     * Getter for the "RadiusDynAuthClientCoABadAuthenticators" variable.
     */
    public Long getRadiusDynAuthClientCoABadAuthenticators() throws SnmpStatusException;

    /**
     * Getter for the "RadiusDynAuthServerID" variable.
     */
    public String getRadiusDynAuthServerID() throws SnmpStatusException;

    /**
     * Getter for the "RadiusDynAuthClientMalformedCoAResponses" variable.
     */
    public Long getRadiusDynAuthClientMalformedCoAResponses() throws SnmpStatusException;

    /**
     * Getter for the "RadiusDynAuthServerClientPortNumber" variable.
     */
    public Long getRadiusDynAuthServerClientPortNumber() throws SnmpStatusException;

    /**
     * Getter for the "RadiusDynAuthClientCoANakSessNoContext" variable.
     */
    public Long getRadiusDynAuthClientCoANakSessNoContext() throws SnmpStatusException;

    /**
     * Getter for the "RadiusDynAuthServerAddress" variable.
     */
    public Byte[] getRadiusDynAuthServerAddress() throws SnmpStatusException;

    /**
     * Getter for the "RadiusDynAuthClientCoANakAuthOnlyRequest" variable.
     */
    public Long getRadiusDynAuthClientCoANakAuthOnlyRequest() throws SnmpStatusException;

    /**
     * Getter for the "RadiusDynAuthServerAddressType" variable.
     */
    public EnumRadiusDynAuthServerAddressType getRadiusDynAuthServerAddressType() throws SnmpStatusException;

    /**
     * Getter for the "RadiusDynAuthClientCoANaks" variable.
     */
    public Long getRadiusDynAuthClientCoANaks() throws SnmpStatusException;

    /**
     * Getter for the "RadiusDynAuthServerIndex" variable.
     */
    public Integer getRadiusDynAuthServerIndex() throws SnmpStatusException;

    /**
     * Getter for the "RadiusDynAuthClientCoAAcks" variable.
     */
    public Long getRadiusDynAuthClientCoAAcks() throws SnmpStatusException;

    /**
     * Getter for the "RadiusDynAuthClientCoARetransmissions" variable.
     */
    public Long getRadiusDynAuthClientCoARetransmissions() throws SnmpStatusException;

    /**
     * Getter for the "RadiusDynAuthClientCoAAuthOnlyRequest" variable.
     */
    public Long getRadiusDynAuthClientCoAAuthOnlyRequest() throws SnmpStatusException;

}
