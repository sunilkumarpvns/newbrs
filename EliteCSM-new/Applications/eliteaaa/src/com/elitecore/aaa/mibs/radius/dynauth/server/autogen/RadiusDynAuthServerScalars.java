package com.elitecore.aaa.mibs.radius.dynauth.server.autogen;

//
// Generated by mibgen version 5.1 (03/08/07) when compiling RADIUS-DYNAUTH-SERVER-MIB.
//

// java imports
//
import java.io.Serializable;

import javax.management.MBeanServer;

import com.sun.management.snmp.SnmpStatusException;
import com.sun.management.snmp.agent.SnmpMib;
// jmx imports
//
// jdmk imports
//

/**
 * The class is used for implementing the "RadiusDynAuthServerScalars" group.
 * The group is defined with the following oid: 1.3.6.1.2.1.146.1.1.
 */
public class RadiusDynAuthServerScalars implements RadiusDynAuthServerScalarsMBean, Serializable {

    /**
     * Variable for storing the value of "RadiusDynAuthServerIdentifier".
     * The variable is identified by: "1.3.6.1.2.1.146.1.1.3".
     *
     * "The NAS-Identifier of the RADIUS Dynamic Authorization
     * Server.  This is not necessarily the same as sysName in
     * MIB II."
     *
     */
    protected String RadiusDynAuthServerIdentifier = new String("JDMK 5.1");

    /**
     * Variable for storing the value of "RadiusDynAuthServerCoAInvalidClientAddresses".
     * The variable is identified by: "1.3.6.1.2.1.146.1.1.2".
     *
     * "The number of CoA-Request packets received from unknown
     * addresses.  This counter may experience a discontinuity
     * when the DAS module (re)starts, as indicated by the
     * value of radiusDynAuthServerCounterDiscontinuity."
     *
     */
    protected Long RadiusDynAuthServerCoAInvalidClientAddresses = new Long(1);

    /**
     * Variable for storing the value of "RadiusDynAuthServerDisconInvalidClientAddresses".
     * The variable is identified by: "1.3.6.1.2.1.146.1.1.1".
     *
     * "The number of Disconnect-Request packets received from
     * unknown addresses.  This counter may experience a
     * discontinuity when the DAS module (re)starts, as
     * indicated by the value of
     * radiusDynAuthServerCounterDiscontinuity."
     *
     */
    protected Long RadiusDynAuthServerDisconInvalidClientAddresses = new Long(1);


    /**
     * Constructor for the "RadiusDynAuthServerScalars" group.
     * If the group contains a table, the entries created through an SNMP SET will not be registered in Java DMK.
     */
    public RadiusDynAuthServerScalars(SnmpMib myMib) {
    }


    /**
     * Constructor for the "RadiusDynAuthServerScalars" group.
     * If the group contains a table, the entries created through an SNMP SET will be AUTOMATICALLY REGISTERED in Java DMK.
     */
    public RadiusDynAuthServerScalars(SnmpMib myMib, MBeanServer server) {
    }

    public RadiusDynAuthServerScalars() {
	}
    
    /**
     * Getter for the "RadiusDynAuthServerIdentifier" variable.
     */
    public String getRadiusDynAuthServerIdentifier() throws SnmpStatusException {
        return RadiusDynAuthServerIdentifier;
    }

    /**
     * Getter for the "RadiusDynAuthServerCoAInvalidClientAddresses" variable.
     */
    public Long getRadiusDynAuthServerCoAInvalidClientAddresses() throws SnmpStatusException {
        return RadiusDynAuthServerCoAInvalidClientAddresses;
    }

    /**
     * Getter for the "RadiusDynAuthServerDisconInvalidClientAddresses" variable.
     */
    public Long getRadiusDynAuthServerDisconInvalidClientAddresses() throws SnmpStatusException {
        return RadiusDynAuthServerDisconInvalidClientAddresses;
    }

}
