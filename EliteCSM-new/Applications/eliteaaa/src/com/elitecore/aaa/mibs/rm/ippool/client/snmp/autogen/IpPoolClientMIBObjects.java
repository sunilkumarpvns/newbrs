package com.elitecore.aaa.mibs.rm.ippool.client.snmp.autogen;

//
// Generated by mibgen version 5.1 (03/08/07) when compiling IP-POOL-SERVICE-CLIENT-MIB.
//

// java imports
//
import java.io.Serializable;

import javax.management.MBeanServer;

import com.sun.management.snmp.SnmpStatusException;
import com.sun.management.snmp.agent.SnmpMib;
// jmx imports
//
// jdmk imports
//

/**
 * The class is used for implementing the "IpPoolClientMIBObjects" group.
 * The group is defined with the following oid: 1.3.6.1.4.1.21067.1.7.2.
 */
public class IpPoolClientMIBObjects implements IpPoolClientMIBObjectsMBean, Serializable {

    /**
     * Variable for storing the value of "IpPoolTotalAllocationResponse".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.7.2.9".
     *
     * "Total no. of Acconting Response received by AAA client from IP-Pool Service"
     *
     */
    protected Long IpPoolTotalAllocationResponse = new Long(1);

    /**
     * Variable for storing the value of "IpPoolTotalAllocationRequest".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.7.2.8".
     *
     * "Total no. of Acconting Start send by AAA client to IP-Pool Service"
     *
     */
    protected Long IpPoolTotalAllocationRequest = new Long(1);

    /**
     * Variable for storing the value of "IpPoolTotalDeclineResponse".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.7.2.7".
     *
     * "Total no. of Access Reject received by AAA client from IP-Pool Service"
     *
     */
    protected Long IpPoolTotalDeclineResponse = new Long(1);

    /**
     * Variable for storing the value of "IpPoolTotalOfferResponse".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.7.2.6".
     *
     * "Total no. of Access Accept received by AAA client from IP-Pool Service"
     *
     */
    protected Long IpPoolTotalOfferResponse = new Long(1);

    /**
     * Variable for storing the value of "IpPoolTotalDiscoverRequest".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.7.2.5".
     *
     * "Total no. of Access Request send by AAA client to IP-Pool Service"
     *
     */
    protected Long IpPoolTotalDiscoverRequest = new Long(1);

    /**
     * Variable for storing the value of "IpPoolTotalRequestRetransmission".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.7.2.4".
     *
     * "Total no. of Request Retry-Count Event Occured"
     *
     */
    protected Long IpPoolTotalRequestRetransmission = new Long(1);

    /**
     * Variable for storing the value of "IpPoolTotalRequestTimeOut".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.7.2.3".
     *
     * "Total no. of Request Time-Out Event Occured"
     *
     */
    protected Long IpPoolTotalRequestTimeOut = new Long(1);

    /**
     * Variable for storing the value of "IpPoolServerStatisticsTable".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.7.2.101".
     *
     * "Table defines number of NAS Client Communicate with RM server"
     *
     */
    protected TableIpPoolServerStatisticsTable IpPoolServerStatisticsTable;

    /**
     * Variable for storing the value of "IpPoolTotalResponses".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.7.2.2".
     *
     * "Total no. of Response received by AAA client from IP-Pool Service"
     *
     */
    protected Long IpPoolTotalResponses = new Long(1);

    /**
     * Variable for storing the value of "IpPoolTotalUpdateRequest".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.7.2.11".
     *
     * "Total no. of Acconting Update send by AAA client to IP-Pool Service"
     *
     */
    protected Long IpPoolTotalUpdateRequest = new Long(1);

    /**
     * Variable for storing the value of "IpPoolTotalReleaseRequest".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.7.2.10".
     *
     * "Total no. of Acconting Stop send by AAA client to IP-Pool Service"
     *
     */
    protected Long IpPoolTotalReleaseRequest = new Long(1);

    /**
     * Variable for storing the value of "IpPoolTotalRequest".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.7.2.1".
     *
     * "Total no. of Request send by AAA client to IP-Pool Service"
     *
     */
    protected Long IpPoolTotalRequest = new Long(1);

    public IpPoolClientMIBObjects() {
		// TODO Auto-generated constructor stub
	}
    
    /**
     * Constructor for the "IpPoolClientMIBObjects" group.
     * If the group contains a table, the entries created through an SNMP SET will not be registered in Java DMK.
     */
    public IpPoolClientMIBObjects(SnmpMib myMib) {
        IpPoolServerStatisticsTable = new TableIpPoolServerStatisticsTable (myMib);
    }


    /**
     * Constructor for the "IpPoolClientMIBObjects" group.
     * If the group contains a table, the entries created through an SNMP SET will be AUTOMATICALLY REGISTERED in Java DMK.
     */
    public IpPoolClientMIBObjects(SnmpMib myMib, MBeanServer server) {
        IpPoolServerStatisticsTable = new TableIpPoolServerStatisticsTable (myMib, server);
    }

    /**
     * Getter for the "IpPoolTotalAllocationResponse" variable.
     */
    public Long getIpPoolTotalAllocationResponse() throws SnmpStatusException {
        return IpPoolTotalAllocationResponse;
    }

    /**
     * Getter for the "IpPoolTotalAllocationRequest" variable.
     */
    public Long getIpPoolTotalAllocationRequest() throws SnmpStatusException {
        return IpPoolTotalAllocationRequest;
    }

    /**
     * Getter for the "IpPoolTotalDeclineResponse" variable.
     */
    public Long getIpPoolTotalDeclineResponse() throws SnmpStatusException {
        return IpPoolTotalDeclineResponse;
    }

    /**
     * Getter for the "IpPoolTotalOfferResponse" variable.
     */
    public Long getIpPoolTotalOfferResponse() throws SnmpStatusException {
        return IpPoolTotalOfferResponse;
    }

    /**
     * Getter for the "IpPoolTotalDiscoverRequest" variable.
     */
    public Long getIpPoolTotalDiscoverRequest() throws SnmpStatusException {
        return IpPoolTotalDiscoverRequest;
    }

    /**
     * Getter for the "IpPoolTotalRequestRetransmission" variable.
     */
    public Long getIpPoolTotalRequestRetransmission() throws SnmpStatusException {
        return IpPoolTotalRequestRetransmission;
    }

    /**
     * Getter for the "IpPoolTotalRequestTimeOut" variable.
     */
    public Long getIpPoolTotalRequestTimeOut() throws SnmpStatusException {
        return IpPoolTotalRequestTimeOut;
    }

    /**
     * Access the "IpPoolServerStatisticsTable" variable.
     */
    public TableIpPoolServerStatisticsTable accessIpPoolServerStatisticsTable() throws SnmpStatusException {
        return IpPoolServerStatisticsTable;
    }

    /**
     * Access the "IpPoolServerStatisticsTable" variable as a bean indexed property.
     */
    public IpPoolServerEntryMBean[] getIpPoolServerStatisticsTable() throws SnmpStatusException {
        return IpPoolServerStatisticsTable.getEntries();
    }

    /**
     * Getter for the "IpPoolTotalResponses" variable.
     */
    public Long getIpPoolTotalResponses() throws SnmpStatusException {
        return IpPoolTotalResponses;
    }

    /**
     * Getter for the "IpPoolTotalUpdateRequest" variable.
     */
    public Long getIpPoolTotalUpdateRequest() throws SnmpStatusException {
        return IpPoolTotalUpdateRequest;
    }

    /**
     * Getter for the "IpPoolTotalReleaseRequest" variable.
     */
    public Long getIpPoolTotalReleaseRequest() throws SnmpStatusException {
        return IpPoolTotalReleaseRequest;
    }

    /**
     * Getter for the "IpPoolTotalRequest" variable.
     */
    public Long getIpPoolTotalRequest() throws SnmpStatusException {
        return IpPoolTotalRequest;
    }

}
