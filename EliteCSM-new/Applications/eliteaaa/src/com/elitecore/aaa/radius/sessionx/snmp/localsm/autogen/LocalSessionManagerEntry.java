package com.elitecore.aaa.radius.sessionx.snmp.localsm.autogen;

//
// Generated by mibgen version 5.1 (03/08/07) when compiling LOCAL-SESSION-MANAGER-MIB.
//

// java imports
//
import java.io.Serializable;

import com.sun.management.snmp.SnmpStatusException;
import com.sun.management.snmp.agent.SnmpMib;
// jmx imports
//
// jdmk imports
//

/**
 * The class is used for implementing the "LocalSessionManagerEntry" group.
 * The group is defined with the following oid: 1.3.6.1.4.1.21067.1.6.1.1.1.
 */
public class LocalSessionManagerEntry implements LocalSessionManagerEntryMBean, Serializable {

	public LocalSessionManagerEntry() {
	}
	
    /**
     * Variable for storing the value of "SmTotalAcctStopRequestTimeouts".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.203".
     *
     * "total no. of Accounting stop response timeout by Session Manager"
     *
     */
    protected Long SmTotalAcctStopRequestTimeouts = new Long(1);

    /**
     * Variable for storing the value of "SmTotalAcctStopResponseRx".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.202".
     *
     * "total no. of Accounting stop response received by Session Manager"
     *
     */
    protected Long SmTotalAcctStopResponseRx = new Long(1);

    /**
     * Variable for storing the value of "SmTotalAcctStopRequestTx".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.201".
     *
     * "total no. of Accounting stop request send by Session Manager"
     *
     */
    protected Long SmTotalAcctStopRequestTx = new Long(1);

    /**
     * Variable for storing the value of "SmTotalAcctUpdateRequestRx".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.108".
     *
     * "total no. of Accounting update request received by Session Manager"
     *
     */
    protected Long SmTotalAcctUpdateRequestRx = new Long(1);

    /**
     * Variable for storing the value of "SmTotalAcctStopRequestRx".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.107".
     *
     * "total no. of Accounting stop request received by Session Manager"
     *
     */
    protected Long SmTotalAcctStopRequestRx = new Long(1);

    /**
     * Variable for storing the value of "SmTotalAcctStartRequestRx".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.106".
     *
     * "total no. of Accounting start request received by Session Manager"
     *
     */
    protected Long SmTotalAcctStartRequestRx = new Long(1);

    /**
     * Variable for storing the value of "SmTotalAcctRequestRx".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.105".
     *
     * "total no. of Accounting request received by Session Manager"
     *
     */
    protected Long SmTotalAcctRequestRx = new Long(1);

    /**
     * Variable for storing the value of "SmTotalAccessRejectTx".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.104".
     *
     * "total no. of Access reject given by Session Manager"
     *
     */
    protected Long SmTotalAccessRejectTx = new Long(1);

    /**
     * Variable for storing the value of "SmTotalAccessRequestRx".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.103".
     *
     * "total no. of Access request received by Session Manager"
     *
     */
    protected Long SmTotalAccessRequestRx = new Long(1);

    /**
     * Variable for storing the value of "SmTotalRequestRx".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.102".
     *
     * "total no. of request received by Session Manager"
     *
     */
    protected Long SmTotalRequestRx = new Long(1);

    /**
     * Variable for storing the value of "SmStatsResetTime".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.101".
     *
     * "counters reset time"
     *
     */
    protected Long SmStatsResetTime = new Long(1);

    /**
     * Variable for storing the value of "SmTotalDisconnectNAckRequestInitiated".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.224".
     *
     * "Error cause for NAck,RequestInitiated"
     *
     */
    protected Long SmTotalDisconnectNAckRequestInitiated = new Long(1);

    /**
     * Variable for storing the value of "SmTotalDisconnectNAckResourcesUnavailable".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.223".
     *
     * "Error cause for NAck,ResourcesUnavailable"
     *
     */
    protected Long SmTotalDisconnectNAckResourcesUnavailable = new Long(1);

    /**
     * Variable for storing the value of "SmTotalDisconnectNAckOtherProxyProcessingError".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.222".
     *
     * "Error cause for NAck,OtherProxyProcessingError"
     *
     */
    protected Long SmTotalDisconnectNAckOtherProxyProcessingError = new Long(1);

    /**
     * Variable for storing the value of "SmTotalDisconnectNAckSessionCtxNotRemovable".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.221".
     *
     * "Error cause for NAck,SessionContextNotRemovable"
     *
     */
    protected Long SmTotalDisconnectNAckSessionCtxNotRemovable = new Long(1);

    /**
     * Variable for storing the value of "SmTotalDisconnectNAckSessionCtxNotFound".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.220".
     *
     * "Error cause for NAck,SessionContextNotFound"
     *
     */
    protected Long SmTotalDisconnectNAckSessionCtxNotFound = new Long(1);

    /**
     * Variable for storing the value of "SmTotalTimedOutSession".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.9".
     *
     * "total no. of session Timeout"
     *
     */
    protected Long SmTotalTimedOutSession = new Long(1);

    /**
     * Variable for storing the value of "SmTotalOverridedSession".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.8".
     *
     * "total no. of Overrided session"
     *
     */
    protected Long SmTotalOverridedSession = new Long(1);

    /**
     * Variable for storing the value of "SmTotalInActiveSession".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.7".
     *
     * "total no. of InActive session"
     *
     */
    protected Long SmTotalInActiveSession = new Long(1);

    /**
     * Variable for storing the value of "SmTotalActiveSession".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.6".
     *
     * "total no. of active session"
     *
     */
    protected Long SmTotalActiveSession = new Long(1);

    /**
     * Variable for storing the value of "SmTotalSessionDeletionFailure".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.5".
     *
     * "total no. of session deletion failed"
     *
     */
    protected Long SmTotalSessionDeletionFailure = new Long(1);

    /**
     * Variable for storing the value of "SmTotalSessionUpdationFailure".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.4".
     *
     * "total no. of session updation failed"
     *
     */
    protected Long SmTotalSessionUpdationFailure = new Long(1);

    /**
     * Variable for storing the value of "SmTotalSessionCreationFailure".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.3".
     *
     * "total no. of session creation failed"
     *
     */
    protected Long SmTotalSessionCreationFailure = new Long(1);

    /**
     * Variable for storing the value of "SmName".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.2".
     *
     * "indicate the name of Session Manager"
     *
     */
    protected String SmName = new String("JDMK 5.1");

    /**
     * Variable for storing the value of "SmIndex".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.1".
     *
     * "Index uniquely defines the configured Session Manager"
     *
     */
    protected Integer SmIndex = new Integer(1);

    /**
     * Variable for storing the value of "SmTotalDisconnectNAckRequestNotRoutable".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.219".
     *
     * "Error cause for NAck,RequestNotRoutable"
     *
     */
    protected Long SmTotalDisconnectNAckRequestNotRoutable = new Long(1);

    /**
     * Variable for storing the value of "SmTotalDisconnectNAckAdministrativelyProhibited".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.218".
     *
     * "Error cause for NAck,AdministrativelyProhibited"
     *
     */
    protected Long SmTotalDisconnectNAckAdministrativelyProhibited = new Long(1);

    /**
     * Variable for storing the value of "SmTotalDisconnectNAckUnsupportedExtension".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.217".
     *
     * "Error cause for NAck,UnsupportedExtension"
     *
     */
    protected Long SmTotalDisconnectNAckUnsupportedExtension = new Long(1);

    /**
     * Variable for storing the value of "SmTotalDisconnectNAckUnsupportedService".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.216".
     *
     * "Error cause for NAck,UnsupportedService"
     *
     */
    protected Long SmTotalDisconnectNAckUnsupportedService = new Long(1);

    /**
     * Variable for storing the value of "SmTotalDisconnectNAckInvalidRequest".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.215".
     *
     * "Error cause for NAck,InvalidRequest"
     *
     */
    protected Long SmTotalDisconnectNAckInvalidRequest = new Long(1);

    /**
     * Variable for storing the value of "SmTotalDisconnectNAckNASIdentificationMismatch".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.214".
     *
     * "Error cause for NAck,NASIdentificationMismatch"
     *
     */
    protected Long SmTotalDisconnectNAckNASIdentificationMismatch = new Long(1);

    /**
     * Variable for storing the value of "SmTotalDisconnectNAckMissingAttribute".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.213".
     *
     * "Error cause for NAck,MissingAttribute"
     *
     */
    protected Long SmTotalDisconnectNAckMissingAttribute = new Long(1);

    /**
     * Variable for storing the value of "SmTotalDisconnectNAckUnsupporteAttribute".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.212".
     *
     * "Error cause for NAck,UnsupporteAttribute"
     *
     */
    protected Long SmTotalDisconnectNAckUnsupporteAttribute = new Long(1);

    /**
     * Variable for storing the value of "SmTotalDisconnectNAckInvalidEAPPacket".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.211".
     *
     * "Error cause for NAck,InvalidEAPPacket"
     *
     */
    protected Long SmTotalDisconnectNAckInvalidEAPPacket = new Long(1);

    /**
     * Variable for storing the value of "SmTotalDisconnectNAckResidualSessCtxRemoved".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.210".
     *
     * "Error cause for NAck,Residual session context removed"
     *
     */
    protected Long SmTotalDisconnectNAckResidualSessCtxRemoved = new Long(1);

    /**
     * Variable for storing the value of "SmTotalDisconnectResponseDropped".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.209".
     *
     * "total no. of Dynauth response dropped by Session Manager"
     *
     */
    protected Long SmTotalDisconnectResponseDropped = new Long(1);

    /**
     * Variable for storing the value of "SmTotalDisconnectRequestTimeouts".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.208".
     *
     * "total no. of Dynauth request timeout by Session Manager"
     *
     */
    protected Long SmTotalDisconnectRequestTimeouts = new Long(1);

    /**
     * Variable for storing the value of "SmTotalDisconnectNAck".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.207".
     *
     * "total no. of Dynauth NAck received by Session Manager"
     *
     */
    protected Long SmTotalDisconnectNAck = new Long(1);

    /**
     * Variable for storing the value of "SmTotalDisconnectAck".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.206".
     *
     * "total no. of Dynauth Ack received by Session Manager"
     *
     */
    protected Long SmTotalDisconnectAck = new Long(1);

    /**
     * Variable for storing the value of "SmTotalDisconnectRequest".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.205".
     *
     * "total no. of Dynauth request send by Session Manager"
     *
     */
    protected Long SmTotalDisconnectRequest = new Long(1);

    /**
     * Variable for storing the value of "SmTotalAcctStopResponseDropped".
     * The variable is identified by: "1.3.6.1.4.1.21067.1.6.1.1.1.204".
     *
     * "total no. of Accounting stop response dropped by Session Manager"
     *
     */
    protected Long SmTotalAcctStopResponseDropped = new Long(1);


    /**
     * Constructor for the "LocalSessionManagerEntry" group.
     */
    public LocalSessionManagerEntry(SnmpMib myMib) {
    }

    /**
     * Getter for the "SmTotalAcctStopRequestTimeouts" variable.
     */
    public Long getSmTotalAcctStopRequestTimeouts() throws SnmpStatusException {
        return SmTotalAcctStopRequestTimeouts;
    }

    /**
     * Getter for the "SmTotalAcctStopResponseRx" variable.
     */
    public Long getSmTotalAcctStopResponseRx() throws SnmpStatusException {
        return SmTotalAcctStopResponseRx;
    }

    /**
     * Getter for the "SmTotalAcctStopRequestTx" variable.
     */
    public Long getSmTotalAcctStopRequestTx() throws SnmpStatusException {
        return SmTotalAcctStopRequestTx;
    }

    /**
     * Getter for the "SmTotalAcctUpdateRequestRx" variable.
     */
    public Long getSmTotalAcctUpdateRequestRx() throws SnmpStatusException {
        return SmTotalAcctUpdateRequestRx;
    }

    /**
     * Getter for the "SmTotalAcctStopRequestRx" variable.
     */
    public Long getSmTotalAcctStopRequestRx() throws SnmpStatusException {
        return SmTotalAcctStopRequestRx;
    }

    /**
     * Getter for the "SmTotalAcctStartRequestRx" variable.
     */
    public Long getSmTotalAcctStartRequestRx() throws SnmpStatusException {
        return SmTotalAcctStartRequestRx;
    }

    /**
     * Getter for the "SmTotalAcctRequestRx" variable.
     */
    public Long getSmTotalAcctRequestRx() throws SnmpStatusException {
        return SmTotalAcctRequestRx;
    }

    /**
     * Getter for the "SmTotalAccessRejectTx" variable.
     */
    public Long getSmTotalAccessRejectTx() throws SnmpStatusException {
        return SmTotalAccessRejectTx;
    }

    /**
     * Getter for the "SmTotalAccessRequestRx" variable.
     */
    public Long getSmTotalAccessRequestRx() throws SnmpStatusException {
        return SmTotalAccessRequestRx;
    }

    /**
     * Getter for the "SmTotalRequestRx" variable.
     */
    public Long getSmTotalRequestRx() throws SnmpStatusException {
        return SmTotalRequestRx;
    }

    /**
     * Getter for the "SmStatsResetTime" variable.
     */
    public Long getSmStatsResetTime() throws SnmpStatusException {
        return SmStatsResetTime;
    }

    /**
     * Getter for the "SmTotalDisconnectNAckRequestInitiated" variable.
     */
    public Long getSmTotalDisconnectNAckRequestInitiated() throws SnmpStatusException {
        return SmTotalDisconnectNAckRequestInitiated;
    }

    /**
     * Getter for the "SmTotalDisconnectNAckResourcesUnavailable" variable.
     */
    public Long getSmTotalDisconnectNAckResourcesUnavailable() throws SnmpStatusException {
        return SmTotalDisconnectNAckResourcesUnavailable;
    }

    /**
     * Getter for the "SmTotalDisconnectNAckOtherProxyProcessingError" variable.
     */
    public Long getSmTotalDisconnectNAckOtherProxyProcessingError() throws SnmpStatusException {
        return SmTotalDisconnectNAckOtherProxyProcessingError;
    }

    /**
     * Getter for the "SmTotalDisconnectNAckSessionCtxNotRemovable" variable.
     */
    public Long getSmTotalDisconnectNAckSessionCtxNotRemovable() throws SnmpStatusException {
        return SmTotalDisconnectNAckSessionCtxNotRemovable;
    }

    /**
     * Getter for the "SmTotalDisconnectNAckSessionCtxNotFound" variable.
     */
    public Long getSmTotalDisconnectNAckSessionCtxNotFound() throws SnmpStatusException {
        return SmTotalDisconnectNAckSessionCtxNotFound;
    }

    /**
     * Getter for the "SmTotalTimedOutSession" variable.
     */
    public Long getSmTotalTimedOutSession() throws SnmpStatusException {
        return SmTotalTimedOutSession;
    }

    /**
     * Getter for the "SmTotalOverridedSession" variable.
     */
    public Long getSmTotalOverridedSession() throws SnmpStatusException {
        return SmTotalOverridedSession;
    }

    /**
     * Getter for the "SmTotalInActiveSession" variable.
     */
    public Long getSmTotalInActiveSession() throws SnmpStatusException {
        return SmTotalInActiveSession;
    }

    /**
     * Getter for the "SmTotalActiveSession" variable.
     */
    public Long getSmTotalActiveSession() throws SnmpStatusException {
        return SmTotalActiveSession;
    }

    /**
     * Getter for the "SmTotalSessionDeletionFailure" variable.
     */
    public Long getSmTotalSessionDeletionFailure() throws SnmpStatusException {
        return SmTotalSessionDeletionFailure;
    }

    /**
     * Getter for the "SmTotalSessionUpdationFailure" variable.
     */
    public Long getSmTotalSessionUpdationFailure() throws SnmpStatusException {
        return SmTotalSessionUpdationFailure;
    }

    /**
     * Getter for the "SmTotalSessionCreationFailure" variable.
     */
    public Long getSmTotalSessionCreationFailure() throws SnmpStatusException {
        return SmTotalSessionCreationFailure;
    }

    /**
     * Getter for the "SmName" variable.
     */
    public String getSmName() throws SnmpStatusException {
        return SmName;
    }

    /**
     * Getter for the "SmIndex" variable.
     */
    public Integer getSmIndex() throws SnmpStatusException {
        return SmIndex;
    }

    /**
     * Getter for the "SmTotalDisconnectNAckRequestNotRoutable" variable.
     */
    public Long getSmTotalDisconnectNAckRequestNotRoutable() throws SnmpStatusException {
        return SmTotalDisconnectNAckRequestNotRoutable;
    }

    /**
     * Getter for the "SmTotalDisconnectNAckAdministrativelyProhibited" variable.
     */
    public Long getSmTotalDisconnectNAckAdministrativelyProhibited() throws SnmpStatusException {
        return SmTotalDisconnectNAckAdministrativelyProhibited;
    }

    /**
     * Getter for the "SmTotalDisconnectNAckUnsupportedExtension" variable.
     */
    public Long getSmTotalDisconnectNAckUnsupportedExtension() throws SnmpStatusException {
        return SmTotalDisconnectNAckUnsupportedExtension;
    }

    /**
     * Getter for the "SmTotalDisconnectNAckUnsupportedService" variable.
     */
    public Long getSmTotalDisconnectNAckUnsupportedService() throws SnmpStatusException {
        return SmTotalDisconnectNAckUnsupportedService;
    }

    /**
     * Getter for the "SmTotalDisconnectNAckInvalidRequest" variable.
     */
    public Long getSmTotalDisconnectNAckInvalidRequest() throws SnmpStatusException {
        return SmTotalDisconnectNAckInvalidRequest;
    }

    /**
     * Getter for the "SmTotalDisconnectNAckNASIdentificationMismatch" variable.
     */
    public Long getSmTotalDisconnectNAckNASIdentificationMismatch() throws SnmpStatusException {
        return SmTotalDisconnectNAckNASIdentificationMismatch;
    }

    /**
     * Getter for the "SmTotalDisconnectNAckMissingAttribute" variable.
     */
    public Long getSmTotalDisconnectNAckMissingAttribute() throws SnmpStatusException {
        return SmTotalDisconnectNAckMissingAttribute;
    }

    /**
     * Getter for the "SmTotalDisconnectNAckUnsupporteAttribute" variable.
     */
    public Long getSmTotalDisconnectNAckUnsupporteAttribute() throws SnmpStatusException {
        return SmTotalDisconnectNAckUnsupporteAttribute;
    }

    /**
     * Getter for the "SmTotalDisconnectNAckInvalidEAPPacket" variable.
     */
    public Long getSmTotalDisconnectNAckInvalidEAPPacket() throws SnmpStatusException {
        return SmTotalDisconnectNAckInvalidEAPPacket;
    }

    /**
     * Getter for the "SmTotalDisconnectNAckResidualSessCtxRemoved" variable.
     */
    public Long getSmTotalDisconnectNAckResidualSessCtxRemoved() throws SnmpStatusException {
        return SmTotalDisconnectNAckResidualSessCtxRemoved;
    }

    /**
     * Getter for the "SmTotalDisconnectResponseDropped" variable.
     */
    public Long getSmTotalDisconnectResponseDropped() throws SnmpStatusException {
        return SmTotalDisconnectResponseDropped;
    }

    /**
     * Getter for the "SmTotalDisconnectRequestTimeouts" variable.
     */
    public Long getSmTotalDisconnectRequestTimeouts() throws SnmpStatusException {
        return SmTotalDisconnectRequestTimeouts;
    }

    /**
     * Getter for the "SmTotalDisconnectNAck" variable.
     */
    public Long getSmTotalDisconnectNAck() throws SnmpStatusException {
        return SmTotalDisconnectNAck;
    }

    /**
     * Getter for the "SmTotalDisconnectAck" variable.
     */
    public Long getSmTotalDisconnectAck() throws SnmpStatusException {
        return SmTotalDisconnectAck;
    }

    /**
     * Getter for the "SmTotalDisconnectRequest" variable.
     */
    public Long getSmTotalDisconnectRequest() throws SnmpStatusException {
        return SmTotalDisconnectRequest;
    }

    /**
     * Getter for the "SmTotalAcctStopResponseDropped" variable.
     */
    public Long getSmTotalAcctStopResponseDropped() throws SnmpStatusException {
        return SmTotalAcctStopResponseDropped;
    }

}
