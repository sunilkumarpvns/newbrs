<list>
	<case behaviour= "attribute value can be assigned with an assignment expression having syntax LHS=RHS,
						LHS represents the attribute in which value of RHS will be assigned,
						RHS can be of identifier type (without single quotes),
						RHS can be of literal type  (enclosed within double quotes), 
						if identifier in RHS is not found then assigns default value">
						
		<radius-packet type="1">
			<attribute id="0:1" value="919123456789" />
			<attribute id="0:25" value="classValue" />
		</radius-packet>

		<translation-mapping>
			<translation-id>1</translation-id>
			<translation-mapping-policy>
				<basetranslation-mapping-id>null</basetranslation-mapping-id>
				<dummy-responses />
				<from-interpreter-id>TTI0004</from-interpreter-id>
				<dummy-response-enable>false</dummy-response-enable>
				<name>test-static-value</name>
				<to-interpreter-id>TTI0001</to-interpreter-id>
				<translation-mapping-id>1</translation-mapping-id>
				<mappings>

					<mapping>
						<in-request-type>&quot;1&quot; = &quot;1&quot;</in-request-type>
						<dummy-response-enabled>false</dummy-response-enabled>
						<mapping-name>static_value_mapping</mapping-name>
						<out-request-type>COMMANDCODE=265,ApplicationId=1,RequestFlag=TRUE</out-request-type>
						<request-mappings>
							<request-mapping>
								<checked-expression>*</checked-expression>
								<mapping-expression>0:25=&quot;classValue&quot;</mapping-expression>
							</request-mapping>
							
							<request-mapping>
							<checked-expression>*</checked-expression>
							<mapping-expression>0:31=0:1</mapping-expression>
							</request-mapping>
						</request-mappings>
						<response-mappings />
					</mapping>

				</mappings>
			</translation-mapping-policy>
		</translation-mapping>
		
		<assert>
			<request>
			<contains-attribute id="0:25" value="classValue" />
			<contains-attribute id="0:31"  value="919123456789" />
			</request>
		</assert>
	</case>


	<case behaviour="Any mapping whose rulest is not satisfied
						is skipped. Note that rest of the mappings are applied 
						given there ruleset matches .">
		
		<radius-packet type="1">
			<attribute id="0:1" value="south" />
			<attribute id="0:25" value="classValue" />
		</radius-packet>

		<translation-mapping>
			<translation-id>1</translation-id>
			<translation-mapping-policy>
				<basetranslation-mapping-id>null</basetranslation-mapping-id>
				<dummy-responses />
				<from-interpreter-id>TTI0004</from-interpreter-id>
				<dummy-response-enable>false</dummy-response-enable>
				<name>test-check-expression-value</name>
				<to-interpreter-id>TTI0001</to-interpreter-id>
				<translation-mapping-id>1</translation-mapping-id>
				<mappings>

					<mapping>
						<in-request-type>&quot;1&quot; = &quot;1&quot;</in-request-type>
						<out-request-type>COMMANDCODE=265,ApplicationId=1,RequestFlag=TRUE</out-request-type>
						<dummy-response-enabled>false</dummy-response-enabled>
						<mapping-name>checkExpression</mapping-name>
						<out-request-type />
						<request-mappings>
							<request-mapping>
								<checked-expression> 0:25 = &quot;*&quot; </checked-expression>
								<mapping-expression> 0:25=0:25 </mapping-expression>
							</request-mapping>
							<request-mapping>
								<checked-expression> 0:1 = &quot;north&quot; </checked-expression>
								<mapping-expression> 0:31=&quot;north&quot; </mapping-expression>
							</request-mapping>
							<request-mapping>
								<checked-expression> 0:1 = &quot;south&quot; </checked-expression>
								<mapping-expression> 0:31=&quot;south&quot; </mapping-expression>
							</request-mapping>

						</request-mappings>
						<response-mappings />
					</mapping>

				</mappings>
			</translation-mapping-policy>
		</translation-mapping>

		<assert>
			<request>
			<contains-attribute id="0:25" value="classValue" />
			<contains-attribute id="0:31" value="south" />
			</request>
		</assert>
		
	</case>


	<case behaviour="in case an AVP is configured on RHS and 
					 the configured AVP is missing or it's value
					 is missing then default value if configured
					 is used.">

		<radius-packet type="1">
			<attribute id="0:25" value="classValue"/>
		</radius-packet>

		<translation-mapping>
			<translation-id>1</translation-id>
			<translation-mapping-policy>
				<basetranslation-mapping-id>null</basetranslation-mapping-id>
				<dummy-responses />
				<from-interpreter-id>TTI0004</from-interpreter-id>
				<dummy-response-enable>false</dummy-response-enable>
				<name>test-check-default-value</name>
				<to-interpreter-id>TTI0001</to-interpreter-id>
				<translation-mapping-id>1</translation-mapping-id>
				<mappings>

					<mapping>
						<in-request-type>&quot;1&quot; = &quot;1&quot;</in-request-type>
						<out-request-type>COMMANDCODE=265,ApplicationId=1,RequestFlag=TRUE</out-request-type>
						<dummy-response-enabled>false</dummy-response-enabled>
						<mapping-name>defaultValue</mapping-name>
						<request-mappings>
						
							<request-mapping>
								<checked-expression>*</checked-expression>
								<mapping-expression>0:4=0:4</mapping-expression>
								<default-value>0:4=0.0.0.0</default-value>
							</request-mapping>
							<request-mapping>
								<checked-expression>*</checked-expression>
								<mapping-expression>0:25=0:25</mapping-expression>
							</request-mapping>
							<request-mapping>
								<checked-expression>*</checked-expression>
								<mapping-expression>0:1=0:1</mapping-expression>
								<default-value>0:1=anonymousUser</default-value>
							</request-mapping>
						</request-mappings>
						<response-mappings />
					</mapping>

				</mappings>
			</translation-mapping-policy>
		</translation-mapping>
		
		<assert>
			<request>
			<contains-attribute id="0:1" value="anonymousUser" />
			<contains-attribute id="0:25" value="classValue" />
			<contains-attribute id="0:4" value="0.0.0.0" />
			
			</request>
		</assert>
		
	</case>
	
	<case behaviour="Translation keywords can be applied for advanced support. 
					Keywords can be configured in RHS part of expression like LHS=${KEYWORD[-ARG]}:SRC_ARG,
					SRC_ARG can either be identifier or another keyword expression">
					
		<radius-packet type="1">
			<attribute id="0:1" value="eliteaaa" />
			<attribute id="21067:117:1" value="poolname=ippool-1" />
			<attribute id="21067:117:1" value="poolid=1" />
			<attribute id="21067:117:1" value="serialnumber=1" />
			<attribute id="0:31" value="d487.d8b7.a040" />
		</radius-packet>

		<translation-mapping>
			<translation-id>1</translation-id>
			<translation-mapping-policy>
				<name>translation-mapping-policy</name>
				<from-interpreter-id>TTI0004</from-interpreter-id>
				<to-interpreter-id>TTI0001</to-interpreter-id>
				<dummy-response-enable>false</dummy-response-enable>
				<dummy-responses></dummy-responses>
				<basetranslation-mapping-id></basetranslation-mapping-id>
				<translation-mapping-id>1</translation-mapping-id>
				<mappings>
					<mapping>
						<mapping-name>mapping1</mapping-name>
						<in-request-type>0:1="*"</in-request-type>
						<out-request-type>COMMANDCODE=265,ApplicationId=1,RequestFlag=TRUE,ProxyFlag=TRUE</out-request-type>
						<dummy-response-enabled></dummy-response-enabled>

						<request-mappings>
							<request-mapping>
								<checked-expression>*</checked-expression>
								<mapping-expression>0:25=${MULTIMODE}:21067:117:1</mapping-expression>
								<default-value>0:25=default-class-for-ippool-communication</default-value>
								<value-mapping></value-mapping>
							</request-mapping>
							<request-mapping>
								<checked-expression>*</checked-expression>
								<mapping-expression>0:89=${MULTIMODE}:0:30</mapping-expression>
								<default-value>0:89=default-cui</default-value>
								<value-mapping></value-mapping>
							</request-mapping>
							<request-mapping>
								<checked-expression>*</checked-expression>
								<mapping-expression>0:31=${MAC2TGPP-"IMEI","",""}:0:31</mapping-expression>
								<default-value>0:31=123456789</default-value>
								<value-mapping></value-mapping>
							</request-mapping>
						</request-mappings>
						<response-mappings>
						</response-mappings>
					</mapping>
				</mappings>
			</translation-mapping-policy>
		</translation-mapping>
		
		<assert>
			<request>
				<contains-attribute id="0:89" value="default-cui" />
				<contains-attribute id="0:31" value="170761309143684"/>
			</request>
		</assert>
	</case>
	
	<case behaviour="Translation keywords can be recursed in RHS of expression.
					LHS=${KEYWORD}:${KEYWORD}....n"
					>
					
		<radius-packet type="1">
			<attribute id="0:1" value="eliteaaa@elitecore.com" />
			<attribute id="0:2" value="eliteaaa" />
		</radius-packet>
		
		<translation-mapping>
			<translation-id>1</translation-id>
			<translation-mapping-policy>
				<name>translation-mapping-policy</name>
				<from-interpreter-id>TTI0004</from-interpreter-id>
				<to-interpreter-id>TTI0001</to-interpreter-id>
				<dummy-response-enable>false</dummy-response-enable>
				<dummy-responses></dummy-responses>
				<basetranslation-mapping-id></basetranslation-mapping-id>
				<translation-mapping-id>1</translation-mapping-id>
				<mappings>
					<mapping>
						<mapping-name>mapping1</mapping-name>
						<in-request-type>0:1="*"</in-request-type>
						<out-request-type>COMMANDCODE=265,ApplicationId=1,RequestFlag=TRUE,ProxyFlag=TRUE</out-request-type>
						<dummy-response-enabled></dummy-response-enabled>

						<request-mappings>
							<request-mapping>
								<checked-expression>0:1=toLowerCase(0:1)</checked-expression>
								<mapping-expression>0:31=${STROP-(toUpperCase)}:${STROP-(stripSuffix,"@")}:0:1
								</mapping-expression>
								<default-value></default-value>
								<value-mapping></value-mapping>
							</request-mapping>
						</request-mappings>
						<response-mappings>
						</response-mappings>
					</mapping>
				</mappings>
			</translation-mapping-policy>
		</translation-mapping>

		<assert>
			<request>
				<contains-attribute id="0:31" value="ELITEAAA" />
			</request>
		</assert>
	</case>
	
	<case behaviour="request translation is not applied when dummy response is enabled">
	
		<radius-packet type="1">
			<attribute id="0:1" value="eliteaaa" />
			<attribute id="0:2" value="eliteaaa" />
			<attribute id="0:31" value="123456789" />
		</radius-packet>
		
		<translation-mapping>
			<translation-id>1</translation-id>
			<translation-mapping-policy>
				<name>translation-mapping-policy</name>
				<from-interpreter-id>TTI0004</from-interpreter-id>
				<to-interpreter-id>TTI0001</to-interpreter-id>
				<dummy-response-enable>true</dummy-response-enable>
				<dummy-responses></dummy-responses>
				<basetranslation-mapping-id></basetranslation-mapping-id>
				<translation-mapping-id>1</translation-mapping-id>
				<mappings>
					<mapping>
						<mapping-name>mapping1</mapping-name>
						<in-request-type>0:1="eliteaaa"</in-request-type>
						<out-request-type>COMMANDCODE=265,ApplicationId=1,RequestFlag=TRUE,ProxyFlag=TRUE</out-request-type>
						<dummy-response-enabled>true</dummy-response-enabled>

						<request-mappings>
							<request-mapping>
								<checked-expression>*</checked-expression>
								<mapping-expression>0:25=&quot;classValue&quot;</mapping-expression>
							</request-mapping>
						</request-mappings>

						<response-mappings>
							<response-mapping>
								<checked-expression></checked-expression>
								<mapping-expression></mapping-expression>
								<default-value></default-value>
								<value-mapping></value-mapping>
							</response-mapping>
						</response-mappings>
					</mapping>
				</mappings>
			</translation-mapping-policy>
		</translation-mapping>
		
		<assert>
			<request>
				<not >
				<contains-attribute id="0:25" value="classValue" />
				</not>
			</request>
		</assert>
	</case>
		
	<case behaviour="a single group attribute having multiple sub attributes can be configured with JSON syntax
							VENDOR-ID:ATTRIB-ID=&quot;{'SUB-ATTRIB-ID'='LITERAL'|'IDENTIFIER';...}&quot;">

		<radius-packet type="1">
			<attribute id="0:1" value="eliteaaa" />
			<attribute id="0:2" value="eliteaaa" />
		</radius-packet>
		
		<translation-mapping>
			<translation-id>1</translation-id>
			<translation-mapping-policy>
				<name>translation-mapping-policy</name>
				<from-interpreter-id>TTI0004</from-interpreter-id>
				<to-interpreter-id>TTI0001</to-interpreter-id>
				<dummy-response-enable>false</dummy-response-enable>
				<dummy-responses></dummy-responses>
				<basetranslation-mapping-id></basetranslation-mapping-id>
				<translation-mapping-id>1</translation-mapping-id>
				<mappings>
					<mapping>
						<mapping-name>mapping1</mapping-name>
						<in-request-type>0:1="*"</in-request-type>
						<out-request-type></out-request-type>
						<dummy-response-enabled></dummy-response-enabled>

						<request-mappings>
							<request-mapping>
								<checked-expression>0:1="*"</checked-expression>
								<mapping-expression>21067:117="{'1'='\"param1\"';'2'='\"param2\"'}"
								</mapping-expression>
								<default-value></default-value>
								<value-mapping></value-mapping>
							</request-mapping>
						</request-mappings>
						<response-mappings>
						</response-mappings>
					</mapping>
				</mappings>
			</translation-mapping-policy>
		</translation-mapping>

		<assert>
			<request>
				<contains-attribute id="21067:117" value="{'1'='&quot;param1&quot;';'2'='&quot;param2&quot;'}" />
			</request>
		</assert>		
		
	</case>

</list>
