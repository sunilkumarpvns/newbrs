package com.elitecore.aaa.rm.service.ippool.snmp.autogen;

//
// Generated by mibgen version 5.1 (03/08/07) when compiling IP-POOL-SERVICE-MIB in standard metadata mode.
//


// jmx imports
//
import com.sun.management.snmp.SnmpStatusException;

/**
 * This interface is used for representing the remote management interface for the "IpPoolServMIBObjects" MBean.
 */
public interface IpPoolServMIBObjectsMBean {

    /**
     * Getter for the "IpPoolServTotalInvalidRequest" variable.
     */
    public Long getIpPoolServTotalInvalidRequest() throws SnmpStatusException;

    /**
     * Getter for the "IpPoolServTotalUnknownPacket" variable.
     */
    public Long getIpPoolServTotalUnknownPacket() throws SnmpStatusException;

    /**
     * Getter for the "IpPoolServTotalDuplicateRequest" variable.
     */
    public Long getIpPoolServTotalDuplicateRequest() throws SnmpStatusException;

    /**
     * Getter for the "IpPoolServTotalRequestDropped" variable.
     */
    public Long getIpPoolServTotalRequestDropped() throws SnmpStatusException;

    /**
     * Getter for the "IpPoolServTotalUpdateRequest" variable.
     */
    public Long getIpPoolServTotalUpdateRequest() throws SnmpStatusException;

    /**
     * Getter for the "IpPoolServTotalReleaseRequest" variable.
     */
    public Long getIpPoolServTotalReleaseRequest() throws SnmpStatusException;

    /**
     * Getter for the "IpPoolServTotalResponses" variable.
     */
    public Long getIpPoolServTotalResponses() throws SnmpStatusException;

    /**
     * Getter for the "IpPoolServTotalAllocationRequest" variable.
     */
    public Long getIpPoolServTotalAllocationRequest() throws SnmpStatusException;

    /**
     * Getter for the "IpPoolServTotalRequest" variable.
     */
    public Long getIpPoolServTotalRequest() throws SnmpStatusException;

    /**
     * Getter for the "IpPoolServiceResetTime" variable.
     */
    public Long getIpPoolServiceResetTime() throws SnmpStatusException;

    /**
     * Getter for the "IpPoolServTotalDeclineResponse" variable.
     */
    public Long getIpPoolServTotalDeclineResponse() throws SnmpStatusException;

    /**
     * Access the "IpPoolNASClientStatisticsTable" variable.
     */
    public TableIpPoolNASClientStatisticsTable accessIpPoolNASClientStatisticsTable() throws SnmpStatusException;

    /**
     * Getter for the "IpPoolServiceReset" variable.
     */
    public EnumIpPoolServiceReset getIpPoolServiceReset() throws SnmpStatusException;

    /**
     * Setter for the "IpPoolServiceReset" variable.
     */
    public void setIpPoolServiceReset(EnumIpPoolServiceReset x) throws SnmpStatusException;

    /**
     * Checker for the "IpPoolServiceReset" variable.
     */
    public void checkIpPoolServiceReset(EnumIpPoolServiceReset x) throws SnmpStatusException;

    /**
     * Access the "IpPoolAAAClientStatisticsTable" variable.
     */
    public TableIpPoolAAAClientStatisticsTable accessIpPoolAAAClientStatisticsTable() throws SnmpStatusException;

    /**
     * Getter for the "IpPoolServTotalOfferResponse" variable.
     */
    public Long getIpPoolServTotalOfferResponse() throws SnmpStatusException;

    /**
     * Getter for the "IpPoolServiceUpTime" variable.
     */
    public Long getIpPoolServiceUpTime() throws SnmpStatusException;

    /**
     * Getter for the "IpPoolServTotalDiscoverRequest" variable.
     */
    public Long getIpPoolServTotalDiscoverRequest() throws SnmpStatusException;

}
