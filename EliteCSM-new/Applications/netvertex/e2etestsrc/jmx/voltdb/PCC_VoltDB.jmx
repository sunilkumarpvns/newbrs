<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.1" jmeter="3.1 r1770033">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Automation_plan_6622" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Global Variable Definition" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="originhost" elementType="Argument">
            <stringProp name="Argument.name">originhost</stringProp>
            <stringProp name="Argument.value">gx.elite.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Origin Host of Gx Gateway</stringProp>
          </elementProp>
          <elementProp name="originrealm" elementType="Argument">
            <stringProp name="Argument.name">originrealm</stringProp>
            <stringProp name="Argument.value">elite.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Origin Realm of Gx Gateway</stringProp>
          </elementProp>
          <elementProp name="destinationhost" elementType="Argument">
            <stringProp name="Argument.name">destinationhost</stringProp>
            <stringProp name="Argument.value">netvertex.elitecore.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="destinationrealm" elementType="Argument">
            <stringProp name="Argument.name">destinationrealm</stringProp>
            <stringProp name="Argument.value">elitecore.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="serverip" elementType="Argument">
            <stringProp name="Argument.name">serverip</stringProp>
            <stringProp name="Argument.value">10.122.21.129</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="smserverport" elementType="Argument">
            <stringProp name="Argument.name">smserverport</stringProp>
            <stringProp name="Argument.value">48080</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**Tomcat Startup port on which SM and PD will be displayed</stringProp>
          </elementProp>
          <elementProp name="smshutdownport" elementType="Argument">
            <stringProp name="Argument.name">smshutdownport</stringProp>
            <stringProp name="Argument.value">5992</stringProp>
            <stringProp name="Argument.desc">**Tomcat Shutdown port</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="diameterport" elementType="Argument">
            <stringProp name="Argument.name">diameterport</stringProp>
            <stringProp name="Argument.value">3868</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**change it after manual configuration</stringProp>
          </elementProp>
          <elementProp name="smcontextpath" elementType="Argument">
            <stringProp name="Argument.name">smcontextpath</stringProp>
            <stringProp name="Argument.value">netvertexsm</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**sm+username</stringProp>
          </elementProp>
          <elementProp name="smapplicationname" elementType="Argument">
            <stringProp name="Argument.name">smapplicationname</stringProp>
            <stringProp name="Argument.value">sm</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pdcontextpath" elementType="Argument">
            <stringProp name="Argument.name">pdcontextpath</stringProp>
            <stringProp name="Argument.value">nvsmx</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**pd+username</stringProp>
          </elementProp>
          <elementProp name="nvuser" elementType="Argument">
            <stringProp name="Argument.name">nvuser</stringProp>
            <stringProp name="Argument.value">pcc720</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">** os username</stringProp>
          </elementProp>
          <elementProp name="nvhome" elementType="Argument">
            <stringProp name="Argument.name">nvhome</stringProp>
            <stringProp name="Argument.value">/home/pcc720/server</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**Dont&apos; provide too long Name</stringProp>
          </elementProp>
          <elementProp name="pdhome" elementType="Argument">
            <stringProp name="Argument.name">pdhome</stringProp>
            <stringProp name="Argument.value">/home/pcc720/netvertexsm/sm</stringProp>
            <stringProp name="Argument.desc">for PD logs</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="73_origin_host_primary" elementType="Argument">
            <stringProp name="Argument.name">73_origin_host_primary</stringProp>
            <stringProp name="Argument.value">23_gx.elite.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Do not change</stringProp>
          </elementProp>
          <elementProp name="73_origin_host_secondary" elementType="Argument">
            <stringProp name="Argument.name">73_origin_host_secondary</stringProp>
            <stringProp name="Argument.value">73_secondary.elitecore.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Do not change</stringProp>
          </elementProp>
          <elementProp name="73_origin_realm" elementType="Argument">
            <stringProp name="Argument.name">73_origin_realm</stringProp>
            <stringProp name="Argument.value">elitecore.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Do not change</stringProp>
          </elementProp>
          <elementProp name="origin_host_rx" elementType="Argument">
            <stringProp name="Argument.name">origin_host_rx</stringProp>
            <stringProp name="Argument.value">af.elite.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Do not change</stringProp>
          </elementProp>
          <elementProp name="origin_realm_rx" elementType="Argument">
            <stringProp name="Argument.name">origin_realm_rx</stringProp>
            <stringProp name="Argument.value">elite.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Do not change</stringProp>
          </elementProp>
          <elementProp name="origin_host" elementType="Argument">
            <stringProp name="Argument.name">origin_host</stringProp>
            <stringProp name="Argument.value">gx.elite.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="origin_realm" elementType="Argument">
            <stringProp name="Argument.name">origin_realm</stringProp>
            <stringProp name="Argument.value">elite.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="destination_realm" elementType="Argument">
            <stringProp name="Argument.name">destination_realm</stringProp>
            <stringProp name="Argument.value">elitecore.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="destination_host" elementType="Argument">
            <stringProp name="Argument.name">destination_host</stringProp>
            <stringProp name="Argument.value">netvertex.elitecore.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dbserverip" elementType="Argument">
            <stringProp name="Argument.name">dbserverip</stringProp>
            <stringProp name="Argument.value">192.168.2.134</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">*</stringProp>
          </elementProp>
          <elementProp name="dbserversid" elementType="Argument">
            <stringProp name="Argument.name">dbserversid</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">*Output of &apos;echo $ORACLE_SERVICE&apos;</stringProp>
          </elementProp>
          <elementProp name="dbserverport" elementType="Argument">
            <stringProp name="Argument.name">dbserverport</stringProp>
            <stringProp name="Argument.value">21212</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">*</stringProp>
          </elementProp>
          <elementProp name="dbusername" elementType="Argument">
            <stringProp name="Argument.name">dbusername</stringProp>
            <stringProp name="Argument.value">voltdb</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**Provide DB Username with Prefix NETVERTEX</stringProp>
          </elementProp>
          <elementProp name="dbpassword" elementType="Argument">
            <stringProp name="Argument.name">dbpassword</stringProp>
            <stringProp name="Argument.value">voltdb</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**Provide DB Password with Prefix NETVERTEX</stringProp>
          </elementProp>
          <elementProp name="serverinstancename" elementType="Argument">
            <stringProp name="Argument.name">serverinstancename</stringProp>
            <stringProp name="Argument.value">voltdb</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**Dont&apos; provide too long Name</stringProp>
          </elementProp>
          <elementProp name="logpath" elementType="Argument">
            <stringProp name="Argument.name">logpath</stringProp>
            <stringProp name="Argument.value">daily_build</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**Dont&apos; provide too long Name</stringProp>
          </elementProp>
          <elementProp name="rootpassword" elementType="Argument">
            <stringProp name="Argument.name">rootpassword</stringProp>
            <stringProp name="Argument.value">csm#10</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">*</stringProp>
          </elementProp>
          <elementProp name="dbserverip_for_sp_interface" elementType="Argument">
            <stringProp name="Argument.name">dbserverip_for_sp_interface</stringProp>
            <stringProp name="Argument.value">192.168.2.133</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Do not change</stringProp>
          </elementProp>
          <elementProp name="sp_dbusername" elementType="Argument">
            <stringProp name="Argument.name">sp_dbusername</stringProp>
            <stringProp name="Argument.value">pcc720</stringProp>
            <stringProp name="Argument.desc">**DB Username for SP Interface</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sp_dbpassword" elementType="Argument">
            <stringProp name="Argument.name">sp_dbpassword</stringProp>
            <stringProp name="Argument.value">pcc720</stringProp>
            <stringProp name="Argument.desc">**DB Password for SP Interface</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="tomcat_home" elementType="Argument">
            <stringProp name="Argument.name">tomcat_home</stringProp>
            <stringProp name="Argument.value">/home/ngt70/netvertexsm</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**</stringProp>
          </elementProp>
          <elementProp name="sy_root_pwd" elementType="Argument">
            <stringProp name="Argument.name">sy_root_pwd</stringProp>
            <stringProp name="Argument.value">csm#10</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">*</stringProp>
          </elementProp>
          <elementProp name="sy_serverip" elementType="Argument">
            <stringProp name="Argument.name">sy_serverip</stringProp>
            <stringProp name="Argument.value">192.168.2.133</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="syport" elementType="Argument">
            <stringProp name="Argument.name">syport</stringProp>
            <stringProp name="Argument.value">3782</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**</stringProp>
          </elementProp>
          <elementProp name="buildsourcefolder" elementType="Argument">
            <stringProp name="Argument.name">buildsourcefolder</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.desc">**Specifies path From where to take all binaries</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="oracleuserpath" elementType="Argument">
            <stringProp name="Argument.name">oracleuserpath</stringProp>
            <stringProp name="Argument.value">/home/oracle</stringProp>
            <stringProp name="Argument.desc">Oracle User&apos;s Home Directory</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="oraclehome" elementType="Argument">
            <stringProp name="Argument.name">oraclehome</stringProp>
            <stringProp name="Argument.value">/opt/u01/app/oracle/product/12.1.0/db_1</stringProp>
            <stringProp name="Argument.desc">*Output of &apos;echo $ORACLE_HOME&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="elapsed_time" elementType="Argument">
            <stringProp name="Argument.name">elapsed_time</stringProp>
            <stringProp name="Argument.value">120</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Elapsed Time is in Minutes</stringProp>
          </elementProp>
          <elementProp name="checked_version" elementType="Argument">
            <stringProp name="Argument.name">checked_version</stringProp>
            <stringProp name="Argument.value">12</stringProp>
            <stringProp name="Argument.desc">6.8.2.1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="checked_revision" elementType="Argument">
            <stringProp name="Argument.name">checked_revision</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**24284 was release version of 6.8.2.1</stringProp>
          </elementProp>
          <elementProp name="test_run_id" elementType="Argument">
            <stringProp name="Argument.name">test_run_id</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.desc">Test Run ID in Test Rail (e.g. R196)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rest_data_package_url" elementType="Argument">
            <stringProp name="Argument.name">rest_data_package_url</stringProp>
            <stringProp name="Argument.value">rest/restful/import/import/pkgs</stringProp>
            <stringProp name="Argument.desc">REST URL to create Data Pacakge</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rest_addon_package_url" elementType="Argument">
            <stringProp name="Argument.name">rest_addon_package_url</stringProp>
            <stringProp name="Argument.value">rest/restful/import/import/pkgs</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">REST URL to create Addon Pacakge</stringProp>
          </elementProp>
          <elementProp name="rest_ims_package_url" elementType="Argument">
            <stringProp name="Argument.name">rest_ims_package_url</stringProp>
            <stringProp name="Argument.value">rest/restful/import/import/imsPkgs</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">REST URL to create IMS Pacakge</stringProp>
          </elementProp>
          <elementProp name="rest_emergency_package_url" elementType="Argument">
            <stringProp name="Argument.name">rest_emergency_package_url</stringProp>
            <stringProp name="Argument.value">rest/restful/import/import/emergencyPkgs</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">REST URL to create Emergency Pacakge</stringProp>
          </elementProp>
          <elementProp name="rest_topup_package_url" elementType="Argument">
            <stringProp name="Argument.name">rest_topup_package_url</stringProp>
            <stringProp name="Argument.value">rest/restful/import/import/pkgs</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">REST URL to create Topup Pacakge</stringProp>
          </elementProp>
          <elementProp name="rest_global_pcc_url" elementType="Argument">
            <stringProp name="Argument.name">rest_global_pcc_url</stringProp>
            <stringProp name="Argument.value">rest/restful/import/import/globalPCCRules</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">REST URL to create Global PCC Rule</stringProp>
          </elementProp>
          <elementProp name="rest_promotional_package_url" elementType="Argument">
            <stringProp name="Argument.name">rest_promotional_package_url</stringProp>
            <stringProp name="Argument.value">rest/restful/import/import/promotionalPkgs</stringProp>
            <stringProp name="Argument.desc">*REST URL to create Promotional Package</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rest_charging_rule_base_name_url" elementType="Argument">
            <stringProp name="Argument.name">rest_charging_rule_base_name_url</stringProp>
            <stringProp name="Argument.value">rest/restful/import/import/chargingRuleBaseNames</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">*REST URL to create CRBN</stringProp>
          </elementProp>
          <elementProp name="rest_service_type_url" elementType="Argument">
            <stringProp name="Argument.name">rest_service_type_url</stringProp>
            <stringProp name="Argument.value">rest/restful/import/import/dataServiceTypes</stringProp>
            <stringProp name="Argument.desc">*REST_URL to create Service Type</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="replace" elementType="Argument">
            <stringProp name="Argument.name">replace</stringProp>
            <stringProp name="Argument.value">action=REPLACE</stringProp>
            <stringProp name="Argument.desc">Import Action with Replace</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="fail" elementType="Argument">
            <stringProp name="Argument.name">fail</stringProp>
            <stringProp name="Argument.value">action=FAIL</stringProp>
            <stringProp name="Argument.desc">Import Action with Fail</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="script_location" elementType="Argument">
            <stringProp name="Argument.name">script_location</stringProp>
            <stringProp name="Argument.value">/opt/scripts/6.8</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">*Location on server where script is kept</stringProp>
          </elementProp>
          <elementProp name="adminport" elementType="Argument">
            <stringProp name="Argument.name">adminport</stringProp>
            <stringProp name="Argument.value">3782</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**admin port to be configured in netvertex.sh file</stringProp>
          </elementProp>
          <elementProp name="jdbcvar" elementType="Argument">
            <stringProp name="Argument.name">jdbcvar</stringProp>
            <stringProp name="Argument.value">DB</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Jdbc connection variable bound to pool</stringProp>
          </elementProp>
          <elementProp name="sy_origin_host" elementType="Argument">
            <stringProp name="Argument.name">sy_origin_host</stringProp>
            <stringProp name="Argument.value">pocs.elitecore.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">configured in ocs_gateway</stringProp>
          </elementProp>
          <elementProp name="sy_origin_realm" elementType="Argument">
            <stringProp name="Argument.name">sy_origin_realm</stringProp>
            <stringProp name="Argument.value">elitecore.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">configured in ocs_gateway</stringProp>
          </elementProp>
          <elementProp name="jmeterip" elementType="Argument">
            <stringProp name="Argument.name">jmeterip</stringProp>
            <stringProp name="Argument.value">192.168.2.133</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">ip of server where jmeter is running</stringProp>
          </elementProp>
          <elementProp name="radiusport" elementType="Argument">
            <stringProp name="Argument.name">radiusport</stringProp>
            <stringProp name="Argument.value">2821</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**radius listener port</stringProp>
          </elementProp>
          <elementProp name="jmeterport" elementType="Argument">
            <stringProp name="Argument.name">jmeterport</stringProp>
            <stringProp name="Argument.value">3636</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Any free port can be used by jmeter</stringProp>
          </elementProp>
          <elementProp name="radiusshared" elementType="Argument">
            <stringProp name="Argument.name">radiusshared</stringProp>
            <stringProp name="Argument.value">secret</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">shared secret</stringProp>
          </elementProp>
          <elementProp name="nasip" elementType="Argument">
            <stringProp name="Argument.name">nasip</stringProp>
            <stringProp name="Argument.value">127.0.0.1 </stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">NAS-IP-ADDRESS (4)</stringProp>
          </elementProp>
          <elementProp name="nasport" elementType="Argument">
            <stringProp name="Argument.name">nasport</stringProp>
            <stringProp name="Argument.value">3589</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">NAS-PORT (5)</stringProp>
          </elementProp>
          <elementProp name="server_group_url" elementType="Argument">
            <stringProp name="Argument.name">server_group_url</stringProp>
            <stringProp name="Argument.value">servergroup/server-group.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="server_instance_url" elementType="Argument">
            <stringProp name="Argument.name">server_instance_url</stringProp>
            <stringProp name="Argument.value">serverinstance/server-instance.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="session_url" elementType="Argument">
            <stringProp name="Argument.name">session_url</stringProp>
            <stringProp name="Argument.value">sessionconfiguration/session-configuration/SESSION_CONFIG_1.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="diameter_gw_profile_url" elementType="Argument">
            <stringProp name="Argument.name">diameter_gw_profile_url</stringProp>
            <stringProp name="Argument.value">gatewayprofile/diameter-gateway-profile.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="diameter_gw_url" elementType="Argument">
            <stringProp name="Argument.name">diameter_gw_url</stringProp>
            <stringProp name="Argument.value">gateway/diameter-gateway.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="default_db_datasource_url" elementType="Argument">
            <stringProp name="Argument.name">default_db_datasource_url</stringProp>
            <stringProp name="Argument.value">database/database.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="spr_url" elementType="Argument">
            <stringProp name="Argument.name">spr_url</stringProp>
            <stringProp name="Argument.value">spr/spr.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sp_interface_url" elementType="Argument">
            <stringProp name="Argument.name">sp_interface_url</stringProp>
            <stringProp name="Argument.value">spinterface/db-sp-interface.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ddf_url" elementType="Argument">
            <stringProp name="Argument.name">ddf_url</stringProp>
            <stringProp name="Argument.value">ddf/ddf/DDF_TABLE_1.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="db_cdr_url" elementType="Argument">
            <stringProp name="Argument.name">db_cdr_url</stringProp>
            <stringProp name="Argument.value">driver/db-cdr-driver.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="csv_cdr_url" elementType="Argument">
            <stringProp name="Argument.name">csv_cdr_url</stringProp>
            <stringProp name="Argument.value">driver/csv-driver.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="device_url" elementType="Argument">
            <stringProp name="Argument.name">device_url</stringProp>
            <stringProp name="Argument.value">device/device.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="network_url" elementType="Argument">
            <stringProp name="Argument.name">network_url</stringProp>
            <stringProp name="Argument.value">network/network.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="region_url" elementType="Argument">
            <stringProp name="Argument.name">region_url</stringProp>
            <stringProp name="Argument.value">region/region.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="city_url" elementType="Argument">
            <stringProp name="Argument.name">city_url</stringProp>
            <stringProp name="Argument.value">city/city.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="area_url" elementType="Argument">
            <stringProp name="Argument.name">area_url</stringProp>
            <stringProp name="Argument.value">area/area.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pcc_service_policy" elementType="Argument">
            <stringProp name="Argument.name">pcc_service_policy</stringProp>
            <stringProp name="Argument.value">pccservicepolicy/pcc-service-policy.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="radius_gw_profile_url" elementType="Argument">
            <stringProp name="Argument.name">radius_gw_profile_url</stringProp>
            <stringProp name="Argument.value">gatewayprofile/radius-gateway-profile.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="radius_gw_url" elementType="Argument">
            <stringProp name="Argument.name">radius_gw_url</stringProp>
            <stringProp name="Argument.value">gateway/radius-gateway.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="packet_mapping_url" elementType="Argument">
            <stringProp name="Argument.name">packet_mapping_url</stringProp>
            <stringProp name="Argument.value">packetmapping/radius-packet-mapping.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="nasidentifier" elementType="Argument">
            <stringProp name="Argument.name">nasidentifier</stringProp>
            <stringProp name="Argument.value">netvertexfull.elitecore.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mapping_file_name" elementType="Argument">
            <stringProp name="Argument.name">mapping_file_name</stringProp>
            <stringProp name="Argument.value">PCC_Gy_Mapping.csv</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="network" elementType="Argument">
            <stringProp name="Argument.name">network</stringProp>
            <stringProp name="Argument.value">network/network.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">add in CI Integration</stringProp>
          </elementProp>
          <elementProp name="voltserverip" elementType="Argument">
            <stringProp name="Argument.name">voltserverip</stringProp>
            <stringProp name="Argument.value">10.121.21.53</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="voltserverport" elementType="Argument">
            <stringProp name="Argument.name">voltserverport</stringProp>
            <stringProp name="Argument.value">21212</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="voltuser" elementType="Argument">
            <stringProp name="Argument.name">voltuser</stringProp>
            <stringProp name="Argument.value">voltdb</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">User Defined Variables</stringProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="REST Default Parameters" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
        <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value">Basic YWRtaW46YWRtaW4=</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
      </HeaderManager>
      <hashTree/>
      <ConfigTestElement guiclass="com.computaris.jmeter.protocol.diameter.config.gui.DiameterConfigGui" testclass="ConfigTestElement" testname="Diameter Stack" enabled="true">
        <stringProp name="GxPCEFDiameterClient.server.0">${serverip}</stringProp>
        <stringProp name="GxPCEFDiameterClient.port.0">${diameterport}</stringProp>
        <stringProp name="GxPCEFDiameterClient.timeout.0">10000</stringProp>
        <stringProp name="GxPCEFDiameterClient.protocol.0">TCP</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.message">Capabilities-Exchange-Request</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.flagP">false</stringProp>
        <stringProp name="GxPCEFCERGxPCEFCERDiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.appID">16777238</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.0">Supported-Vendor-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.0">10415</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.1">Vendor-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.1">11</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.2">Origin-Host</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.2">${originhost}</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.3">Origin-Realm</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.3">${originrealm}</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.4">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.4">10.106.1.88</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.5">Vendor-Specific-Application-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.5">3</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.6">Acct-Application-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.6">0</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.7">Auth-Application-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.7">16777238</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.8">Vendor-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.8">10415</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.9">Product-Name</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.9">Jmeter</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.10">Origin-State-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.10">1094807040</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.11">Auth-Application-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.11">16777238</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.12">Acct-Application-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.12">4</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.13">Firmware-Revision</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.13">267</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpCounter">14</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.message">Disconnect-Peer-Request</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.flagP">false</stringProp>
        <stringProp name="GxPCEFDPRGxPCEFDPRDiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.avpData.0">${origin_host}</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.avpData.1">${originrealm}</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.avpName.2">Disconnect-Cause</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.avpData.2">2</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.avpCounter">3</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.message">Device-Watchdog-Answer</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.flagP">false</stringProp>
        <stringProp name="GxPCEFDWAGxPCEFDWADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpName.0">Result-Code</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpData.0">2001</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpName.1">Origin-Host</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpData.1">gx.elite.com</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpName.2">Origin-Realm</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpData.2">elite.com</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpName.3">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpData.3">10.106.1.142</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpName.4">Vendor-Id</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpData.4">10415</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpName.5">Product-Name</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpData.5">Jmeter</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpCounter">6</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.message">Re-Auth-Answer</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFRAAGxPCEFRAADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.appID">16777238</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.HBHID">${__diamGetHopId(var)}</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.ETEID">${__diamGetEndId(var)}</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpData.0">${origin_host}</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpData.1">${origin_realm}</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpData.2">10.106.1.142</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpData.4">Jmeter</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpName.5">Result-Code</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpData.5">2001</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpName.6">Session-Id</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpData.6">${sessionid}</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpCounter">7</stringProp>
        <stringProp name="GxPCEFASADiameterClient.message">Abort-Session-Answer</stringProp>
        <stringProp name="GxPCEFASADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFASAGxPCEFASADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFASADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFASADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFASADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFASADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpData.0"></stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpData.1"></stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpData.2"></stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpCounter">5</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.message">Cancel-Location-Answer</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFCLAGxPCEFCLADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpData.0"></stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpData.1"></stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpData.2"></stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpCounter">5</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.message">Insert-Subscriber-Data-Answer</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFIDAGxPCEFIDADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpData.0"></stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpData.1"></stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpData.2"></stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpCounter">5</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.message">Delete-Subscriber-Data-Answer</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFDSAGxPCEFDSADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpData.0"></stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpData.1"></stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpData.2"></stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpCounter">5</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.message">Reset-Answer</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFRSAGxPCEFRSADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpData.0"></stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpData.1"></stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpData.2"></stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpCounter">5</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.message">Registration-Termination-Answer</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFRTAGxPCEFRTADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpData.0"></stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpData.1"></stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpData.2"></stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpCounter">5</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.message">Push-Profile-Answer</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFPPAGxPCEFPPADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpData.0"></stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpData.1"></stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpData.2"></stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpCounter">5</stringProp>
        <stringProp name="GxPCEFSLADiameterClient.message">Spending-Limit-Answer</stringProp>
        <stringProp name="GxPCEFSLADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFSLAGxPCEFSLADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFSLADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFSLADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFSLADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFSLADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFSLADiameterClient.avpCounter">0</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.message">Session-Termination-Answer</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFSTAGxPCEFSTADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpData.0"></stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpData.1"></stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpData.2"></stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpCounter">5</stringProp>
        <boolProp name="GxPCEFDiameterClient.overrideStack">true</boolProp>
        <boolProp name="GxPCEFDiameterClient.disableAutomaticBgResponder">false</boolProp>
        <boolProp name="GxPCEFDiameterClient.enablePeerStateMachine">true</boolProp>
        <stringProp name="73_PCEF_primaryDiameterClient.server.0">${serverip}</stringProp>
        <stringProp name="73_PCEF_primaryDiameterClient.port.0">${diameterport}</stringProp>
        <stringProp name="73_PCEF_primaryDiameterClient.timeout.0">3000</stringProp>
        <stringProp name="73_PCEF_primaryDiameterClient.protocol.0">TCP</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.message">Capabilities-Exchange-Request</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.flagP">false</stringProp>
        <stringProp name="73_PCEF_primaryCER73_PCEF_primaryCERDiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.appID">16777238</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.0">Supported-Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.0">10415</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.1">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.1">${73_origin_host_primary}</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.2">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.2">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.3">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.3">10.106.1.88</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.4">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.4">11</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.5">Vendor-Specific-Application-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.5">3</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.6">Acct-Application-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.6">0</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.7">Auth-Application-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.7">16777238</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.8">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.8">10415</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.9">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.9">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.10">Origin-State-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.10">1094807040</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.11">Auth-Application-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.11">16777238</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.12">Acct-Application-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.12">0</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.13">Firmware-Revision</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.13">267</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpCounter">14</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.message">Disconnect-Peer-Request</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.flagP">false</stringProp>
        <stringProp name="73_PCEF_primaryDPR73_PCEF_primaryDPRDiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.avpData.0">${73_origin_host_primary}</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.avpData.1">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.avpName.2">Disconnect-Cause</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.avpData.2">2</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.avpCounter">3</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.message">Device-Watchdog-Answer</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.flagP">false</stringProp>
        <stringProp name="73_PCEF_primaryDWA73_PCEF_primaryDWADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpName.0">Result-Code</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpData.0">2001</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpName.1">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpData.1">${73_origin_host_primary}</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpName.2">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpData.2">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpName.3">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpData.3">127.0.0.1</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpName.4">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpData.4">0</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpName.5">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpData.5">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpCounter">6</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.message">Re-Auth-Answer</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primaryRAA73_PCEF_primaryRAADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpData.0">${73_origin_host_primary}</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpData.1">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpData.2">10.106.1.172</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.message">Abort-Session-Answer</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primaryASA73_PCEF_primaryASADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpData.0">${73_origin_host_primary}</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpData.1">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpData.2">10.106.1.172</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.message">Cancel-Location-Answer</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primaryCLA73_PCEF_primaryCLADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.message">Insert-Subscriber-Data-Answer</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primaryIDA73_PCEF_primaryIDADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.message">Delete-Subscriber-Data-Answer</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primaryDSA73_PCEF_primaryDSADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.message">Reset-Answer</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primaryRSA73_PCEF_primaryRSADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.message">Registration-Termination-Answer</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primaryRTA73_PCEF_primaryRTADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.message">Push-Profile-Answer</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primaryPPA73_PCEF_primaryPPADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_primarySLADiameterClient.message">Spending-Limit-Answer</stringProp>
        <stringProp name="73_PCEF_primarySLADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primarySLA73_PCEF_primarySLADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primarySLADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primarySLADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primarySLADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primarySLADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primarySLADiameterClient.avpCounter">0</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.message">Session-Termination-Answer</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primarySTA73_PCEF_primarySTADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpCounter">5</stringProp>
        <boolProp name="73_PCEF_primaryDiameterClient.overrideStack">true</boolProp>
        <boolProp name="73_PCEF_primaryDiameterClient.disableAutomaticBgResponder">false</boolProp>
        <boolProp name="73_PCEF_primaryDiameterClient.enablePeerStateMachine">true</boolProp>
        <stringProp name="73_PCEF_secondaryDiameterClient.server.0">${serverip}</stringProp>
        <stringProp name="73_PCEF_secondaryDiameterClient.port.0">${diameterport}</stringProp>
        <stringProp name="73_PCEF_secondaryDiameterClient.timeout.0">3000</stringProp>
        <stringProp name="73_PCEF_secondaryDiameterClient.protocol.0">TCP</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.message">Capabilities-Exchange-Request</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.flagP">false</stringProp>
        <stringProp name="73_PCEF_secondaryCER73_PCEF_secondaryCERDiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.appID">16777238</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.0">${73_origin_host_secondary}</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.1">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.2">10.106.1.172</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.3">Supported-Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.3">10415</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.4">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.4">11</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.5">Vendor-Specific-Application-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.5">3</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.6">Acct-Application-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.6">0</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.7">Auth-Application-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.7">16777238</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.8">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.8">10415</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.9">Origin-State-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.9">1094807040</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.10">Auth-Application-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.10">16777238</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.11">Acct-Application-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.11">0</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.12">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.12">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.13">Firmware-Revision</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.13">267</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpCounter">14</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.message">Disconnect-Peer-Request</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.flagP">false</stringProp>
        <stringProp name="73_PCEF_secondaryDPR73_PCEF_secondaryDPRDiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.avpData.0">${73_origin_host_secondary}</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.avpData.1">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.avpName.2">Disconnect-Cause</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.avpData.2">2</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.avpCounter">3</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.message">Device-Watchdog-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.flagP">false</stringProp>
        <stringProp name="73_PCEF_secondaryDWA73_PCEF_secondaryDWADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpName.0">Result-Code</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpData.0">2001</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpName.1">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpData.1">${73_origin_host_secondary}</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpName.2">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpData.2">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpName.3">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpData.3">10.106.1.172</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpName.4">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpData.4">0</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpName.5">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpData.5">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpCounter">6</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.message">Re-Auth-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondaryRAA73_PCEF_secondaryRAADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpData.0">${73_origin_host_secondary}</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpData.1">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpData.2">10.106.1.172</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.message">Abort-Session-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondaryASA73_PCEF_secondaryASADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpData.0">${73_origin_host_secondary}</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpData.1">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpData.2">10.106.1.172</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.message">Cancel-Location-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondaryCLA73_PCEF_secondaryCLADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.message">Insert-Subscriber-Data-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondaryIDA73_PCEF_secondaryIDADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.message">Delete-Subscriber-Data-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondaryDSA73_PCEF_secondaryDSADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.message">Reset-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondaryRSA73_PCEF_secondaryRSADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.message">Registration-Termination-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondaryRTA73_PCEF_secondaryRTADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.message">Push-Profile-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondaryPPA73_PCEF_secondaryPPADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_secondarySLADiameterClient.message">Spending-Limit-Answer</stringProp>
        <stringProp name="73_PCEF_secondarySLADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondarySLA73_PCEF_secondarySLADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondarySLADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondarySLADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondarySLADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondarySLADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondarySLADiameterClient.avpCounter">0</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.message">Session-Termination-Answer</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondarySTA73_PCEF_secondarySTADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpCounter">5</stringProp>
        <boolProp name="73_PCEF_secondaryDiameterClient.overrideStack">true</boolProp>
        <boolProp name="73_PCEF_secondaryDiameterClient.disableAutomaticBgResponder">false</boolProp>
        <boolProp name="73_PCEF_secondaryDiameterClient.enablePeerStateMachine">true</boolProp>
        <stringProp name="RxPCEFDiameterClient.server.0">${serverip}</stringProp>
        <stringProp name="RxPCEFDiameterClient.port.0">${diameterport}</stringProp>
        <stringProp name="RxPCEFDiameterClient.timeout.0">3000</stringProp>
        <stringProp name="RxPCEFDiameterClient.protocol.0">TCP</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.message">Capabilities-Exchange-Request</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.flagP">false</stringProp>
        <stringProp name="RxPCEFCERRxPCEFCERDiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.appID">16777236</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.0">Auth-Application-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.0">16777236</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.1">Acct-Application-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.1">0</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.2">Vendor-Specific-Application-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.2">3</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.3">Acct-Application-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.4">Auth-Application-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.4">16777236</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.5">Vendor-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.5">10415</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.6">Supported-Vendor-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.6">10415</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.7">Origin-Host</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.7">${origin_host_rx}</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.8">Origin-Realm</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.8">${origin_realm_rx}</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.9">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.9">10.106.1.172</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.10">Origin-State-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.10">1094807040</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.11">Vendor-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.11">11</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.12">Product-Name</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.12">Applicaion Function</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.13">Firmware-Revision</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.13">267</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpCounter">14</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.message">Disconnect-Peer-Request</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.flagP">false</stringProp>
        <stringProp name="RxPCEFDPRRxPCEFDPRDiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.avpData.0">${origin_host_rx}</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.avpData.1">${origin_realm_rx}</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.avpName.2">Disconnect-Cause</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.avpData.2">2</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.avpCounter">3</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.message">Device-Watchdog-Answer</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.flagP">false</stringProp>
        <stringProp name="RxPCEFDWARxPCEFDWADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpName.0">Result-Code</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpData.0">2001</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpName.1">Origin-Host</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpData.1">${origin_host_rx}</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpName.2">Origin-Realm</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpData.2">${origin_realm_rx}</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpName.3">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpData.3">127.0.0.1</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpName.4">Vendor-Id</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpData.4">0</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpName.5">Product-Name</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpData.5">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpCounter">6</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.message">Re-Auth-Answer</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFRAARxPCEFRAADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpData.0">${origin_host_rx}</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpData.1">${origin_realm_rx}</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpData.2">10.106.1.172</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpCounter">5</stringProp>
        <stringProp name="RxPCEFASADiameterClient.message">Abort-Session-Answer</stringProp>
        <stringProp name="RxPCEFASADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFASARxPCEFASADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFASADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFASADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFASADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFASADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpData.0">${origin_host_rx}</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpData.1">${origin_realm_rx}</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpData.2">10.106.1.172</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpName.5">Result-Code</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpData.5">2001</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpCounter">6</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.message">Cancel-Location-Answer</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFCLARxPCEFCLADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpData.0"></stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpData.1"></stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpData.2"></stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpCounter">5</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.message">Insert-Subscriber-Data-Answer</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFIDARxPCEFIDADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpData.0"></stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpData.1"></stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpData.2"></stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpCounter">5</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.message">Delete-Subscriber-Data-Answer</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFDSARxPCEFDSADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpData.0"></stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpData.1"></stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpData.2"></stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpCounter">5</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.message">Reset-Answer</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFRSARxPCEFRSADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpData.0"></stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpData.1"></stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpData.2"></stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpCounter">5</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.message">Registration-Termination-Answer</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFRTARxPCEFRTADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpData.0"></stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpData.1"></stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpData.2"></stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpCounter">5</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.message">Push-Profile-Answer</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFPPARxPCEFPPADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpData.0"></stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpData.1"></stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpData.2"></stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpCounter">5</stringProp>
        <stringProp name="RxPCEFSLADiameterClient.message">Spending-Limit-Answer</stringProp>
        <stringProp name="RxPCEFSLADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFSLARxPCEFSLADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFSLADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFSLADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFSLADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFSLADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFSLADiameterClient.avpCounter">0</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.message">Session-Termination-Answer</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFSTARxPCEFSTADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpData.0"></stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpData.1"></stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpData.2"></stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpCounter">5</stringProp>
        <boolProp name="RxPCEFDiameterClient.overrideStack">true</boolProp>
        <boolProp name="RxPCEFDiameterClient.disableAutomaticBgResponder">false</boolProp>
        <boolProp name="RxPCEFDiameterClient.enablePeerStateMachine">true</boolProp>
        <objProp>
          <name>DiameterClient.CONNECTION_IDS</name>
          <value class="java.util.ArrayList">
            <java.lang.String>GxPCEF</java.lang.String>
            <java.lang.String>73_PCEF_primary</java.lang.String>
            <java.lang.String>73_PCEF_secondary</java.lang.String>
            <java.lang.String>RxPCEF</java.lang.String>
          </value>
        </objProp>
      </ConfigTestElement>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Oracle Configuration" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery">Select 1 from dual</stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">DB</stringProp>
        <stringProp name="dbUrl">jdbc:oracle:thin:@${dbserverip}:${dbserverport}/${dbserversid}</stringProp>
        <stringProp name="driver">oracle.jdbc.driver.OracleDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">${dbpassword}</stringProp>
        <stringProp name="poolMax">10</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">${dbusername}</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Voltdb Configuration" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">volt</stringProp>
        <stringProp name="dbUrl">jdbc:voltdb://${voltserverip}:${voltserverport}</stringProp>
        <stringProp name="driver">org.voltdb.jdbc.Driver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">${voltuser}</stringProp>
        <stringProp name="poolMax">10</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">${voltuser}</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Global Configurations" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Global Entiry Configuration</stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Disable Password Change" enabled="true">
          <stringProp name="dataSource">DB</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">update tblm_staff set PASSWORD_CHANGE_DATE = SYSDATE</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Oracle Datasource" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;: &quot;DATABASE_DS_2&quot;,&#xd;
    &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
    &quot;groups&quot;: null,&#xd;
    &quot;name&quot;: &quot;Oracle Datasource&quot;,&#xd;
    &quot;connectionUrl&quot;: &quot;jdbc:oracle:thin:@${dbserverip}:${dbserverport}/${dbserversid}&quot;,&#xd;
    &quot;userName&quot;: &quot;${dbusername}&quot;,&#xd;
    &quot;password&quot;: &quot;${dbusername}&quot;,&#xd;
    &quot;minimumPool&quot;: 1,&#xd;
    &quot;maximumPool&quot;: 10,&#xd;
    &quot;queryTimeout&quot;: 1000,&#xd;
    &quot;statusCheckDuration&quot;: 120,&#xd;
    &quot;groupNames&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
          <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${default_db_datasource_url}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1056488887">&quot;id&quot;:&quot;DATABASE_DS_2&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Voltdb Datasource" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;: &quot;DATABASE_DS_3&quot;,&#xd;
    &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
    &quot;groups&quot;: null,&#xd;
    &quot;name&quot;: &quot;VoltDB Datasource&quot;,&#xd;
    &quot;connectionUrl&quot;: &quot;jdbc:voltdb://${voltserverip}:${voltserverport}&quot;,&#xd;
    &quot;userName&quot;: &quot;${voltuser}&quot;,&#xd;
    &quot;password&quot;: &quot;${voltuser}&quot;,&#xd;
    &quot;minimumPool&quot;: 1,&#xd;
    &quot;maximumPool&quot;: 10,&#xd;
    &quot;queryTimeout&quot;: 1000,&#xd;
    &quot;statusCheckDuration&quot;: 120,&#xd;
    &quot;groupNames&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
          <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${default_db_datasource_url}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1056488856">&quot;id&quot;:&quot;DATABASE_DS_3&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Server Group" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
        &quot;id&quot;: &quot;Server_Group_11111111&quot;,&#xd;
        &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
        &quot;groups&quot;: &quot;GROUP_1&quot;,&#xd;
        &quot;name&quot;: &quot;DefaultGroup&quot;,&#xd;
        &quot;sessionDataSourceId&quot;: &quot;DATABASE_DS_2&quot;,&#xd;
        &quot;serverInstanceIds&quot;: [&#xd;
            &quot;Server_Instance_11111111&quot;&#xd;
        ],&#xd;
        &quot;serverGroupType&quot;: &quot;PCC&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
          <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${server_group_url}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-361795601">&quot;id&quot;:&quot;Server_Group_11111111</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Server Instance" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
        &quot;id&quot;: &quot;Server_Instance_11111111&quot;,&#xd;
        &quot;name&quot;: &quot;pcc&quot;,&#xd;
        &quot;description&quot;: &quot;PCC 720 Server Instance created successfully&quot;,&#xd;
        &quot;snmpUrl&quot;: &quot;0.0.0.0:1161&quot;,&#xd;
        &quot;restApiUrl&quot;: &quot;192.168.2.133:9000&quot;,&#xd;
        &quot;diameterEnabled&quot;: true,&#xd;
        &quot;diameterUrl&quot;: &quot;192.168.2.133:3868&quot;,&#xd;
        &quot;diameterOriginHost&quot;: &quot;netvertex.elitecore.com&quot;,&#xd;
        &quot;diameterOriginRealm&quot;: &quot;elitecore.com&quot;,&#xd;
        &quot;radiusEnabled&quot;: true,&#xd;
        &quot;radiusUrl&quot;: &quot;192.168.2.133:2821&quot;,&#xd;
        &quot;emailAgentId&quot;: null,&#xd;
        &quot;smsAgentId&quot;: null,&#xd;
        &quot;serverGroupId&quot;: &quot;Server_Group_11111111&quot;,&#xd;
        &quot;offlineRncService&quot;: null&#xd;
    }</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
          <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${server_instance_url}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="424591015">&quot;id&quot;:&quot;Server_Instance_11111111&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Network Information" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;Network_info_1111111&quot;,&#xd;
  &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
  &quot;groups&quot;: &quot;GROUP_1&quot;,&#xd;
  &quot;name&quot;: &quot;Japan&quot;,&#xd;
  &quot;mcc&quot;: 411,&#xd;
  &quot;mnc&quot;: 111,&#xd;
  &quot;technology&quot;: &quot;GSM&quot;,&#xd;
  &quot;countryId&quot;: &quot;111&quot;,&#xd;
  &quot;operatorId&quot;: &quot;101&quot;,&#xd;
  &quot;brandId&quot;: &quot;101&quot;,&#xd;
  &quot;groupNames&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
          <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${network_url}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2098400676">&quot;id&quot;:&quot;Network_info_1111111&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Diameter Gx GW Profile" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;Diameter_GWx_Profile_11111111&quot;,&#xd;
  &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
  &quot;groups&quot;: &quot;GROUP_1&quot;,&#xd;
  &quot;name&quot;: &quot;Diameter_Gx_Gw_Profile&quot;,&#xd;
  &quot;description&quot;: &quot;Created by JMeter&quot;,&#xd;
  &quot;gatewayType&quot;: &quot;ACCESS_GATEWAY&quot;,&#xd;
  &quot;vendorId&quot;: &quot;999999999999&quot;,&#xd;
  &quot;firmware&quot;: null,&#xd;
  &quot;usageReportingType&quot;: &quot;NON_CUMULATIVE&quot;,&#xd;
  &quot;revalidationMode&quot;: &quot;ServerInitiated&quot;,&#xd;
  &quot;timeout&quot;: 3000,&#xd;
  &quot;gxApplicationId&quot;: &quot;10415:16777238&quot;,&#xd;
  &quot;gyApplicationId&quot;: &quot;10415:4&quot;,&#xd;
  &quot;rxApplicationId&quot;: &quot;10415:16777236&quot;,&#xd;
  &quot;s9ApplicationId&quot;: &quot;10415:16777267&quot;,&#xd;
  &quot;syApplicationId&quot;: &quot;10415:16777302&quot;,&#xd;
  &quot;dwInterval&quot;: 60,&#xd;
  &quot;supportedVendorList&quot;: null,&#xd;
  &quot;supportedStandard&quot;: &quot;RELEASE_9&quot;,&#xd;
  &quot;chargingRuleInstallMode&quot;: &quot;GROUPED&quot;,&#xd;
  &quot;sessionCleanUpCER&quot;: false,&#xd;
  &quot;sessionCleanUpDPR&quot;: false,&#xd;
  &quot;cerAvps&quot;: null,&#xd;
  &quot;dprAvps&quot;: null,&#xd;
  &quot;dwrAvps&quot;: null,&#xd;
  &quot;socketReceiveBufferSize&quot;: -1,&#xd;
  &quot;sendDPRCloseEvent&quot;: false,&#xd;
  &quot;socketSendBufferSize&quot;: -1,&#xd;
  &quot;tcpNagleAlgorithm&quot;: true,&#xd;
  &quot;initConnectionDuration&quot;: 0,&#xd;
  &quot;groovyScriptDatas&quot;: [],&#xd;
  &quot;umStandard&quot;: &quot;TGPPR9&quot;,&#xd;
  &quot;sessionLookUpKey&quot;: &quot;CS.SessionIPv4, CS.SessionIPv6&quot;,&#xd;
  &quot;diameterGwProfilePCCRuleMappings&quot;: [],&#xd;
  &quot;vendorData&quot;: {&#xd;
    &quot;id&quot;: &quot;999999999999&quot;,&#xd;
    &quot;name&quot;: &quot;Other&quot;,&#xd;
    &quot;description&quot;: &quot;Other&quot;&#xd;
  },&#xd;
  &quot;pccToGWGxPacketMappings&quot;: [],&#xd;
  &quot;gwToPccGxPacketMappings&quot;: [],&#xd;
  &quot;pccToGWGyPacketMappings&quot;: [],&#xd;
  &quot;gwToPccGyPacketMappings&quot;: [],&#xd;
  &quot;pccToGWRxPacketMappings&quot;: [],&#xd;
  &quot;gwToPccRxPacketMappings&quot;: [],&#xd;
  &quot;groupNames&quot;: &quot;DefaultGroup&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
          <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${diameter_gw_profile_url}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="5368720">&quot;id&quot;:&quot;Diameter_GWx_Profile_11111111&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Diameter Gx GW" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
        &quot;id&quot;: &quot;Diameter_GWx_11111111&quot;,&#xd;
        &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
        &quot;groups&quot;: &quot;1&quot;,&#xd;
        &quot;name&quot;: &quot;Diameter_GWx&quot;,&#xd;
        &quot;description&quot;: &quot;Created by JMeter&quot;,&#xd;
        &quot;policyEnforcementMethod&quot;: &quot;STANDARD&quot;,&#xd;
        &quot;connectionURL&quot;: null,&#xd;
        &quot;hostIdentity&quot;: &quot;gx.elite.com&quot;,&#xd;
        &quot;realm&quot;: &quot;elite.com&quot;,&#xd;
        &quot;localAddress&quot;: null,&#xd;
        &quot;alternateHostId&quot;: null,&#xd;
        &quot;diameterGatewayProfileId&quot;: &quot;Diameter_GWx_Profile_11111111&quot;,&#xd;
        &quot;requestTimeout&quot;: 3000,&#xd;
        &quot;retransmissionCount&quot;: 3,&#xd;
        &quot;groupNames&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
          <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${diameter_gw_url}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-766588218">&quot;id&quot;:&quot;Diameter_GWx_11111111&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create SPR" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
        &quot;id&quot;: &quot;Default_SPR_11111111&quot;,&#xd;
        &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
        &quot;groups&quot;: &quot;GROUP_1&quot;,&#xd;
        &quot;name&quot;: &quot;SPR&quot;,&#xd;
        &quot;description&quot;: &quot;Created by JMeter&quot;,&#xd;
        &quot;alternateIdField&quot;: &quot;IMSI&quot;,&#xd;
        &quot;batchSize&quot;: 1,&#xd;
        &quot;databaseId&quot;: &quot;DATABASE_DS_3&quot;,&#xd;
        &quot;spInterfaceId&quot;: null,&#xd;
        &quot;groupNames&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
          <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${spr_url}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1380941555">&quot;id&quot;:&quot;Default_SPR_11111111&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DDF" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;: &quot;DDF_TABLE_1&quot;,&#xd;
    &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
    &quot;groups&quot;: &quot;GROUP_1&quot;,&#xd;
    &quot;stripPrefixes&quot;: null,&#xd;
    &quot;ddfSprRelDatas&quot;: [],&#xd;
    &quot;defaultSprDataId&quot;: &quot;Default_SPR_11111111&quot;,&#xd;
    &quot;groupNames&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
          <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${ddf_url}</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2038583816">&quot;id&quot;:&quot;DDF_TABLE_1&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DB CDR Driver" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
        &quot;id&quot;: &quot;DBCDR_Driver_11111111&quot;,&#xd;
        &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
        &quot;groups&quot;: &quot;GROUP_1&quot;,&#xd;
        &quot;name&quot;: &quot;DBCDR_Driver&quot;,&#xd;
        &quot;description&quot;: &quot;Created by JMeter&quot;,&#xd;
        &quot;driverType&quot;: &quot;DB_CDR_DRIVER&quot;,&#xd;
        &quot;csvDriverData&quot;: null,&#xd;
        &quot;dbCdrDriverData&quot;: {&#xd;
            &quot;maxQueryTimeoutCount&quot;: 100,&#xd;
            &quot;batchUpdate&quot;: &quot;false&quot;,&#xd;
            &quot;batchSize&quot;: 500,&#xd;
            &quot;batchUpdateInterval&quot;: 1,&#xd;
            &quot;batchUpdateQueryTimeout&quot;: 10,&#xd;
            &quot;tableName&quot;: &quot;TBLCDR&quot;,&#xd;
            &quot;identityField&quot;: &quot;CDRID&quot;,&#xd;
            &quot;sequenceName&quot;: &quot;SEQ_CDR&quot;,&#xd;
            &quot;storeAllCdr&quot;: &quot;false&quot;,&#xd;
            &quot;timeStampFieldName&quot;: &quot;TIMESTAMP&quot;,&#xd;
            &quot;reportingType&quot;: &quot;UM&quot;,&#xd;
            &quot;sessionIdFieldName&quot;: &quot;SESSIONID&quot;,&#xd;
            &quot;createDateFieldName&quot;: &quot;CREATEDATE&quot;,&#xd;
            &quot;lastModifiedDateFieldName&quot;: &quot;LASTMODIFIEDDATE&quot;,&#xd;
            &quot;inputOctetsFieldName&quot;: &quot;INPUTOCTETS&quot;,&#xd;
            &quot;outputOctetsFieldName&quot;: &quot;OUTPUTOCTETS&quot;,&#xd;
            &quot;totalOctetsFieldName&quot;: &quot;TOTALOCTETS&quot;,&#xd;
            &quot;usageTimeFieldName&quot;: &quot;USAGETIME&quot;,&#xd;
            &quot;usageKeyFieldName&quot;: &quot;MONITORINGKEY&quot;,&#xd;
            &quot;dbCdrDriverFieldMappingDataList&quot;: [&#xd;
                {&#xd;
                    &quot;pcrfKey&quot;: &quot;CS.MSISDN&quot;,&#xd;
                    &quot;dbField&quot;: &quot;USERNAME&quot;,&#xd;
                    &quot;dataType&quot;: &quot;0&quot;,&#xd;
                    &quot;defaultValue&quot;: null&#xd;
                }&#xd;
            ],&#xd;
            &quot;databaseId&quot;: &quot;DATABASE_DS_2&quot;&#xd;
        },&#xd;
        &quot;groupNames&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
          <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${db_cdr_url}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="339931524">&quot;id&quot;:&quot;DBCDR_Driver_11111111&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Charging CSV Driver" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
        &quot;id&quot;: &quot;Charging_CDR_11111111&quot;,&#xd;
        &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
        &quot;groups&quot;: &quot;GROUP_1&quot;,&#xd;
        &quot;name&quot;: &quot;Charging_CDR&quot;,&#xd;
        &quot;description&quot;: &quot;Created by JMeter&quot;,&#xd;
        &quot;driverType&quot;: &quot;CSV_DRIVER&quot;,&#xd;
        &quot;csvDriverData&quot;: {&#xd;
            &#xd;
            &quot;header&quot;: &quot;false&quot;,&#xd;
            &quot;delimiter&quot;: &quot;,&quot;,&#xd;
            &quot;timeStampFormat&quot;: &quot;EEE dd MMM,yyyy,hh:mm:ss aaa&quot;,&#xd;
            &quot;fileName&quot;: &quot;CDRs.csv&quot;,&#xd;
            &quot;fileLocation&quot;: &quot;data/csvfiles&quot;,&#xd;
            &quot;prefixFileName&quot;: null,&#xd;
            &quot;defaultFolderName&quot;: null,&#xd;
            &quot;folderName&quot;: null,&#xd;
            &quot;sequenceRange&quot;: null,&#xd;
            &quot;sequencePosition&quot;: &quot;SUFFIX&quot;,&#xd;
            &quot;sequenceGlobalization&quot;: &quot;false&quot;,&#xd;
            &quot;allocatingProtocol&quot;: &quot;LOCAL&quot;,&#xd;
            &quot;address&quot;: &quot;127.0.0.1:22&quot;,&#xd;
            &quot;remoteFileLocation&quot;: null,&#xd;
            &quot;userName&quot;: null,&#xd;
            &quot;archiveLocation&quot;: &quot;data/csvfiles/archive&quot;,&#xd;
            &quot;failOverTime&quot;: 3,&#xd;
            &quot;reportingType&quot;: &quot;CHARGING_CDR&quot;,&#xd;
            &quot;timeBoundary&quot;: null,&#xd;
            &quot;sizeBasedRollingUnit&quot;: null,&#xd;
            &quot;timeBasedRollingUnit&quot;: null,&#xd;
            &quot;recordBasedRollingUnit&quot;: null,&#xd;
            &quot;csvDriverFieldMappingDataList&quot;: [&#xd;
                {&#xd;
            &#xd;
                    &quot;headerField&quot;: &quot;MSISDN&quot;,&#xd;
                    &quot;pcrfKey&quot;: &quot;CS.MSISDN&quot;,&#xd;
                    &quot;orderNo&quot;: 1&#xd;
                }&#xd;
            ],&#xd;
            &quot;csvDriverStripMappingDataList&quot;: [],&#xd;
            &quot;postOperation&quot;: &quot;DELETE&quot;&#xd;
        },&#xd;
        &quot;dbCdrDriverData&quot;: null,&#xd;
        &quot;groupNames&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
          <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${csv_cdr_url}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="14717171">&quot;id&quot;:&quot;Charging_CDR_11111111&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Field Mapping in Session Configuration" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;id&quot;:&quot;SESSION_CONFIG_1&quot;,&#xd;
	&quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
	&quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
	&quot;batchMode&quot;:1,&#xd;
	&quot;batchSize&quot;:null,&#xd;
	&quot;queryTimeout&quot;:null,&#xd;
	&quot;sessionConfigurationFieldMappingDatas&quot;:[&#xd;
	{&#xd;
	&quot;id&quot;:&quot;Location.Area_11111111&quot;,&#xd;
	&quot;referringAttribute&quot;:&quot;Location.Area&quot;,&#xd;
	&quot;fieldName&quot;:&quot;PARAM1&quot;,&#xd;
	&quot;dataType&quot;:0&#xd;
	},&#xd;
	&#xd;
	{&#xd;
	&quot;id&quot;:&quot;Sub.Email_11111111&quot;,&#xd;
	 &quot;referringAttribute&quot;:&quot;Sub.Email&quot;,&#xd;
	&quot;fieldName&quot;:&quot;PARAM2&quot;,&#xd;
	 &quot;dataType&quot;:0&#xd;
	 },&#xd;
&#xd;
	 {&#xd;
	&quot;id&quot;:&quot;Sub.Phone_11111111&quot;,&#xd;
	&quot;referringAttribute&quot;:&quot;Sub.Phone&quot;,&#xd;
	&quot;fieldName&quot;:&quot;PARAM3&quot;,&#xd;
	&quot;dataType&quot;:0&#xd;
	},&#xd;
	&#xd;
	{&#xd;
	&quot;id&quot;:&quot;GatewayType_11111111&quot;,&#xd;
	 &quot;referringAttribute&quot;:&quot;GatewayType&quot;,&#xd;
	&quot;fieldName&quot;:&quot;PARAM4&quot;,&#xd;
	 &quot;dataType&quot;:0&#xd;
	 },&#xd;
&#xd;
	{&#xd;
	&quot;id&quot;:&quot;UserName_11111111&quot;,&#xd;
	 &quot;referringAttribute&quot;:&quot;CS.UserName&quot;,&#xd;
	&quot;fieldName&quot;:&quot;PARAM5&quot;,&#xd;
	 &quot;dataType&quot;:0&#xd;
	 }&#xd;
 ],&#xd;
&quot;databaseId&quot;:&quot;DATABASE_DS_2&quot;,&#xd;
&quot;groupNames&quot;:null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
          <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${session_url}</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1722026920">&quot;id&quot;:&quot;SESSION_CONFIG_1&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create PCC Service Policy" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;Global_PCRF_Service_Policy_11111111&quot;,&#xd;
  &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
  &quot;name&quot;: &quot;Global_PCRF_Service_Policy&quot;,&#xd;
  &quot;description&quot;: &quot;Created by JMeter&quot;,&#xd;
  &quot;ruleset&quot;: &quot;GatewayType=\&quot;Diameter\&quot; AND NOT (CS.MSISDN IN (\&quot;1111111111\&quot; , \&quot;1111111112\&quot; , \&quot;1111111135\&quot; , \&quot;1111111136\&quot; , \&quot;1111111172\&quot; , \&quot;1111111173\&quot; , \&quot;1111111174\&quot; , \&quot;1111111183\&quot; , \&quot;1111111184\&quot; , \&quot;1111111185\&quot; , \&quot;1111111011\&quot; , \&quot;1111111012\&quot;))&quot;,&#xd;
  &quot;action&quot;: &quot;PROCESS_REQUEST&quot;,&#xd;
  &quot;subscriberLookupOn&quot;: &quot;SUBSCRIBER_IDENTITY&quot;,&#xd;
  &quot;identityAttribute&quot;: &quot;CS.MSISDN&quot;,&#xd;
  &quot;unknownUserAction&quot;: &quot;REJECT_UNKNOWN_USER&quot;,&#xd;
  &quot;unknownUserPkgId&quot;: null,&#xd;
  &quot;syGatewayId&quot;: null,&#xd;
  &quot;syMode&quot;: &quot;PULL&quot;,&#xd;
  &quot;policyCdrDriverId&quot;: null,&#xd;
  &quot;chargingCdrDriverId&quot;: &quot;Charging_CDR_11111111&quot;&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
          <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${pcc_service_policy}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-459918808">&quot;id&quot;:&quot;Global_PCRF_Service_Policy_11111111&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Restart NetVertex Server" enabled="true"/>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="NV Restart " enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="-1227702913">WorkBench</stringProp>
              <stringProp name="-1829425330">Automation_plan_6622</stringProp>
              <stringProp name="18059174">Common Functions</stringProp>
              <stringProp name="-424943767">NV Restart </stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Restart Tomcat Server" enabled="true"/>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Tomcat Restart " enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="-1227702913">WorkBench</stringProp>
              <stringProp name="-1829425330">Automation_plan_6622</stringProp>
              <stringProp name="18059174">Common Functions</stringProp>
              <stringProp name="-2031720627">Tomcat Restart </stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time to Start Tomcat" enabled="true">
          <stringProp name="TestPlan.comments">Tool will wait for 90 Seconds</stringProp>
          <stringProp name="SimpleTimer.TIMEOUT">90000</stringProp>
        </com.computaris.jmeter.ext.timer.SimpleTimer>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">300</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="Truncate in Oracle" enabled="false">
        <stringProp name="TestPlan.comments">To Clear </stringProp>
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1476949438000</longProp>
        <longProp name="ThreadGroup.end_time">1476949438000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </SetupThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Truncate TBLM_ALTERNATE_IDENTITY" enabled="true">
          <stringProp name="dataSource">DB</stringProp>
          <stringProp name="query">TRUNCATE TABLE TBLM_ALTERNATE_IDENTITY</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Callable Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Truncate TBLM_MONETARY_BALANCE" enabled="true">
          <stringProp name="dataSource">DB</stringProp>
          <stringProp name="query">TRUNCATE TABLE TBLM_MONETARY_BALANCE</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Callable Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Truncate TBLT_SUB_SESSION" enabled="true">
          <stringProp name="dataSource">DB</stringProp>
          <stringProp name="query">TRUNCATE TABLE TBLT_SUB_SESSION</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Callable Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Truncate TBLT_SESSION" enabled="true">
          <stringProp name="dataSource">DB</stringProp>
          <stringProp name="query">TRUNCATE TABLE TBLT_SESSION</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Callable Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Truncate CRBN" enabled="true">
          <stringProp name="dataSource">DB</stringProp>
          <stringProp name="query">update tblm_charging_rule_base_name set status=&apos;DELETED&apos;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="TestPlan.comments">Data, Addon, Topup, Emergency, Promotional</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Truncate TBLM_PACKAGE" enabled="true">
          <stringProp name="dataSource">DB</stringProp>
          <stringProp name="query">update tblm_package set status=&apos;DELETED&apos;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="TestPlan.comments">Data, Addon, Topup, Emergency, Promotional</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Truncate TBLM_IMS_PACKAGE" enabled="true">
          <stringProp name="dataSource">DB</stringProp>
          <stringProp name="query">update TBLM_IMS_PACKAGE set status=&apos;DELETED&apos;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Truncate TBLM_PCC_RULE" enabled="true">
          <stringProp name="dataSource">DB</stringProp>
          <stringProp name="query">update TBLM_PCC_RULE set status=&apos;DELETED&apos; where SCOPE=&apos;GLOBAL&apos;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Truncate in VoltDB" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1525859942000</longProp>
        <longProp name="ThreadGroup.end_time">1525859942000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">To clear</stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Truncate TBLM_SUBSCRIBER" enabled="true">
          <stringProp name="dataSource">volt</stringProp>
          <stringProp name="query">truncate table tblm_subscriber</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Truncate TBLT_SUBSCRIPTION" enabled="true">
          <stringProp name="dataSource">volt</stringProp>
          <stringProp name="query">TRUNCATE TABLE TBLT_SUBSCRIPTION</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Truncate TBLT_USAGE" enabled="true">
          <stringProp name="dataSource">volt</stringProp>
          <stringProp name="query">TRUNCATE TABLE TBLT_USAGE</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="RTC_9001" enabled="false">
        <stringProp name="TestPlan.comments">RTC_01 | Verify Subscriber Provisioning Web Service</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1462792026000</longProp>
        <longProp name="ThreadGroup.end_time">1462792026000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="RTC_9001" enabled="true">
          <stringProp name="TestPlan.comments"> Verify Subscriber Provisioning Web Service</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="identity" elementType="Argument">
                <stringProp name="Argument.name">identity</stringProp>
                <stringProp name="Argument.value">9111111101</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="new_identity" elementType="Argument">
                <stringProp name="Argument.name">new_identity</stringProp>
                <stringProp name="Argument.value">9111111102</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="identity_2" elementType="Argument">
                <stringProp name="Argument.name">identity_2</stringProp>
                <stringProp name="Argument.value">9111111103</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subscriber_package" elementType="Argument">
                <stringProp name="Argument.name">subscriber_package</stringProp>
                <stringProp name="Argument.value">RTC_9001_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ims_package" elementType="Argument">
                <stringProp name="Argument.name">ims_package</stringProp>
                <stringProp name="Argument.value">RTC_9001_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="tomcatlogs" elementType="Argument">
                <stringProp name="Argument.name">tomcatlogs</stringProp>
                <stringProp name="Argument.value">tomcat_9001</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">RTC_9001</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Pre Processing" enabled="true"/>
          <hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start of RTC_9001" enabled="true"/>
            <hashTree/>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Packages and Reload" enabled="true"/>
            <hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Pcap and Logs" enabled="false"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture PD Log" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="1033451790">Capture PD log </stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create DataPackage" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;&lt;/id&gt;&#xd;
            &lt;name&gt;RTC_9001_BASE&lt;/name&gt;&#xd;
            &lt;description&gt;Created by Jmeter&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriod&gt;30&lt;/validityPeriod&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;USAGE_METERING_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles&gt;&#xd;
                &lt;quota-Profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;balance-level&gt;HSQ&lt;/balance-level&gt;&#xd;
                    &lt;description&gt;Created by Jmeter&lt;/description&gt;&#xd;
                    &lt;quota-profile-name&gt;QUOTA_9001_BASE&lt;/quota-profile-name&gt;&#xd;
                    &lt;quota-profile-details&gt;&#xd;
                        &lt;quota-profile-detail&gt;&#xd;
                            &lt;aggregation-key&gt;BILLING_CYCLE&lt;/aggregation-key&gt;&#xd;
                            &lt;dataServiceType&gt;&#xd;
                                &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                            &lt;/dataServiceType&gt;&#xd;
                            &lt;download-unit&gt;MB&lt;/download-unit&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;time-unit&gt;DAY&lt;/time-unit&gt;&#xd;
                            &lt;total&gt;1&lt;/total&gt;&#xd;
                            &lt;total-unit&gt;GB&lt;/total-unit&gt;&#xd;
                            &lt;upload-unit&gt;MB&lt;/upload-unit&gt;&#xd;
                        &lt;/quota-profile-detail&gt;&#xd;
                        &lt;quota-profile-detail&gt;&#xd;
                            &lt;aggregation-key&gt;BILLING_CYCLE&lt;/aggregation-key&gt;&#xd;
                            &lt;dataServiceType&gt;&#xd;
                                &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                            &lt;/dataServiceType&gt;&#xd;
                            &lt;download-unit&gt;MB&lt;/download-unit&gt;&#xd;
                            &lt;fup-level&gt;1&lt;/fup-level&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;time-unit&gt;DAY&lt;/time-unit&gt;&#xd;
                            &lt;total&gt;2&lt;/total&gt;&#xd;
                            &lt;total-unit&gt;GB&lt;/total-unit&gt;&#xd;
                            &lt;upload-unit&gt;MB&lt;/upload-unit&gt;&#xd;
                        &lt;/quota-profile-detail&gt;&#xd;
                        &lt;quota-profile-detail&gt;&#xd;
                            &lt;aggregation-key&gt;BILLING_CYCLE&lt;/aggregation-key&gt;&#xd;
                            &lt;dataServiceType&gt;&#xd;
                                &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                            &lt;/dataServiceType&gt;&#xd;
                            &lt;download-unit&gt;MB&lt;/download-unit&gt;&#xd;
                            &lt;fup-level&gt;2&lt;/fup-level&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;time-unit&gt;DAY&lt;/time-unit&gt;&#xd;
                            &lt;total-unit&gt;MB&lt;/total-unit&gt;&#xd;
                            &lt;upload-unit&gt;MB&lt;/upload-unit&gt;&#xd;
                        &lt;/quota-profile-detail&gt;&#xd;
                    &lt;/quota-profile-details&gt;&#xd;
                    &lt;renewal-interval-unit&gt;MONTH&lt;/renewal-interval-unit&gt;&#xd;
                    &lt;usage-presence&gt;1&lt;/usage-presence&gt;&#xd;
                &lt;/quota-Profile&gt;&#xd;
            &lt;/quota-profiles&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by Jmeter&lt;/description&gt;&#xd;
                    &lt;name&gt;QoS_9001_BASE&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;HSQ_9001_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;HSQ_9001_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;200&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;1&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;128&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;128&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;FUP1_9001_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;FUP1_9001_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;128&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Kbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;128&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Kbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;200&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;2&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;64&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;64&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;FUP2_9001_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;FUP2_9001_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;64&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Kbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;64&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Kbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;200&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;QUOTA_9001_BASE&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
            &lt;currency&gt;USD&lt;/currency&gt;&#xd;
            &lt;rate-cards/&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/xml</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD : Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD : Policy -Reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsAddSubscribers" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsAddSubscribers&gt;           
         &lt;subscriberProfile&gt;              
            &lt;entry&gt;                
               &lt;key&gt;USERNAME&lt;/key&gt;                
               &lt;value&gt;${identity}&lt;/value&gt;
            &lt;/entry&gt;             
                &lt;entry&gt;
                  &lt;key&gt;IMSI&lt;/key&gt;
                  &lt;value&gt;${identity}&lt;/value&gt;
               &lt;/entry&gt;
            &lt;packageName&gt;${subscriber_package}&lt;/packageName&gt;           
            &lt;subscriberIdentity&gt;${identity}&lt;/subscriberIdentity&gt;
         &lt;/subscriberProfile&gt;
         &lt;subscriberProfile&gt;              
            &lt;entry&gt;                
               &lt;key&gt;USERNAME&lt;/key&gt;                
               &lt;value&gt;${identity_2}&lt;/value&gt;
            &lt;/entry&gt;             
              &lt;entry&gt;
                  &lt;key&gt;IMSI&lt;/key&gt;
                  &lt;value&gt;${identity_2}&lt;/value&gt;
               &lt;/entry&gt;
            &lt;packageName&gt;${subscriber_package}&lt;/packageName&gt;         
            &lt;subscriberIdentity&gt;${identity_2}&lt;/subscriberIdentity&gt;
         &lt;/subscriberProfile&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;          
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsAddSubscribers&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
                <stringProp name="-1620156334">&lt;responseMessage&gt;Total Subcriber Profiles added: 2&lt;/responseMessage&gt;</stringProp>
                <stringProp name="1087852535">&lt;subscriberProfile&gt;&lt;entry&gt;&lt;key&gt;${identity}&lt;/key&gt;&lt;value&gt;SUCCESS&lt;/value&gt;&lt;/entry&gt;&lt;/subscriberProfile&gt;</stringProp>
                <stringProp name="-15772700">&lt;subscriberProfile&gt;&lt;entry&gt;&lt;key&gt;${identity_2}&lt;/key&gt;&lt;value&gt;SUCCESS&lt;/value&gt;&lt;/entry&gt;&lt;/subscriberProfile&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Operation using Subscriber Identity" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">100</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsUpdateSubscriberProfile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsUpdateSubscriberProfile&gt;
	&lt;!--Optional:--&gt;
         &lt;subscriberProfile&gt;
            &lt;!--Zero or more repetitions:--&gt;
            &lt;entry&gt;
                  &lt;key&gt;USERNAME&lt;/key&gt;
                  &lt;value&gt;${identity}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUSTOMER_TYPE&lt;/key&gt;
                  &lt;value&gt;Postpaid&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;STATUS&lt;/key&gt;
                  &lt;value&gt;ACTIVE&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;BILLING_DATE&lt;/key&gt;
                  &lt;value&gt;30&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;AREA&lt;/key&gt;
                  &lt;value&gt;CG Road&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CITY&lt;/key&gt;
                  &lt;value&gt;Ahmedabad&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM1&lt;/key&gt;
                  &lt;value&gt;123&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM2&lt;/key&gt;
                  &lt;value&gt;456&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM3&lt;/key&gt;
                  &lt;value&gt;789&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM4&lt;/key&gt;
                  &lt;value&gt;654&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM5&lt;/key&gt;
                  &lt;value&gt;6576&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ZONE&lt;/key&gt;
                  &lt;value&gt;West&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COUNTRY&lt;/key&gt;
                  &lt;value&gt;INDIA&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ROLE&lt;/key&gt;
                  &lt;value&gt;Manager&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COMPANY&lt;/key&gt;
                  &lt;value&gt;Infosys&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;DEPARTMENT&lt;/key&gt;
                  &lt;value&gt;CSM&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ARPU&lt;/key&gt;
                  &lt;value&gt;65&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CADRE&lt;/key&gt;
                  &lt;value&gt;M2&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EMAIL&lt;/key&gt;
                  &lt;value&gt;radhika.sheladia@elitecore.com&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PHONE&lt;/key&gt;
                  &lt;value&gt;9475487512&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;SIP_URL&lt;/key&gt;
                  &lt;value&gt;65465&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUI&lt;/key&gt;
                  &lt;value&gt;3545&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMSI&lt;/key&gt;
                  &lt;value&gt;${identity}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;MSISDN&lt;/key&gt;
                  &lt;value&gt;${identity}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;MAC&lt;/key&gt;
                  &lt;value&gt;sda:00:sad2:&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EUI64&lt;/key&gt;
                  &lt;value&gt;543121&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;MODIFIED_EUI64&lt;/key&gt;
                  &lt;value&gt;687654&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ENCRYPTION_TYPE&lt;/key&gt;
                  &lt;value&gt;16&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ESN&lt;/key&gt;
                  &lt;value&gt;52222224&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;MEID&lt;/key&gt;
                  &lt;value&gt;354454&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARENT_ID&lt;/key&gt;
                  &lt;value&gt;687654&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;GROUP_NAME&lt;/key&gt;
                  &lt;value&gt;Gujarat&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMEI&lt;/key&gt;
                  &lt;value&gt;68765435413574&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;SUBSCRIBER_LEVEL_METERING&lt;/key&gt;
                  &lt;value&gt;ENABLE&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD_CHECK&lt;/key&gt;
                  &lt;value&gt;TRUE&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;SY_INTERFACE&lt;/key&gt;
                  &lt;value&gt;TRUE&lt;/value&gt;
               &lt;/entry&gt;
         &lt;/subscriberProfile&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberID&gt;${identity}&lt;/subscriberID&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;updateAction&gt;0&lt;/updateAction&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsUpdateSubscriberProfile&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">action=0</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsGetSubscriberProfileByID" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetSubscriberProfileByID&gt;
         &lt;subscriberID&gt;${identity}&lt;/subscriberID&gt;
         &lt;alternateID&gt;&lt;/alternateID&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsGetSubscriberProfileByID&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                <stringProp name="1231365099">&lt;key&gt;SUBSCRIBER_IDENTITY&lt;/key&gt;&lt;value&gt;${identity}&lt;/value&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsDeleteSubscriberProfile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsDeleteSubscriberProfile&gt;
         &lt;subscriberID&gt;${identity}&lt;/subscriberID&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsDeleteSubscriberProfile&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsGetSubscriberProfileByID" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetSubscriberProfileByID&gt;
         &lt;subscriberID&gt;${identity}&lt;/subscriberID&gt;
         &lt;alternateID&gt;&lt;/alternateID&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsGetSubscriberProfileByID&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1055867741">&lt;responseCode&gt;404&lt;/responseCode&gt;&lt;responseMessage&gt;Subscriber Not found&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsRestoreSubscriber" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsRestoreSubscriber&gt;
         &lt;subscriberID&gt;${identity}&lt;/subscriberID&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;param1&gt;&lt;/param1&gt;
         &lt;param2&gt;&lt;/param2&gt;
      &lt;/sub:wsRestoreSubscriber&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsMigrateSubscriber" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsMigrateSubscriber&gt;
         &lt;!--Optional:--&gt;
         &lt;currentSubscriberIdentity&gt;${identity}&lt;/currentSubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;newSubscriberIdentity&gt;${new_identity}&lt;/newSubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;param1&gt;?&lt;/param1&gt;
         &lt;!--Optional:--&gt;
         &lt;param2&gt;?&lt;/param2&gt;
      &lt;/sub:wsMigrateSubscriber&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsGetSubscriberProfileByID" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetSubscriberProfileByID&gt;
         &lt;subscriberID&gt;${new_identity}&lt;/subscriberID&gt;
         &lt;alternateID&gt;&lt;/alternateID&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsGetSubscriberProfileByID&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                <stringProp name="-1524561652">&lt;key&gt;SUBSCRIBER_IDENTITY&lt;/key&gt;&lt;value&gt;${new_identity}&lt;/value&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsDeleteSubscriberProfile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsDeleteSubscriberProfile&gt;
         &lt;subscriberID&gt;${new_identity}&lt;/subscriberID&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsDeleteSubscriberProfile&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsPurgeSubscriber" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsPurgeSubscriber&gt;
         &lt;subscriberID&gt;${new_identity}&lt;/subscriberID&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;param1&gt;&lt;/param1&gt;
         &lt;param2&gt;&lt;/param2&gt;
      &lt;/sub:wsPurgeSubscriber&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsRestoreSubscriber" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsRestoreSubscriber&gt;
         &lt;subscriberID&gt;${new_identity}&lt;/subscriberID&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;param1&gt;&lt;/param1&gt;
         &lt;param2&gt;&lt;/param2&gt;
      &lt;/sub:wsRestoreSubscriber&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-403348603">&lt;responseCode&gt;404&lt;/responseCode&gt;&lt;responseMessage&gt;NOT FOUND&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsGetSubscriberProfileByID" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetSubscriberProfileByID&gt;
         &lt;subscriberID&gt;${new_identity}&lt;/subscriberID&gt;
         &lt;alternateID&gt;&lt;/alternateID&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsGetSubscriberProfileByID&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1055867741">&lt;responseCode&gt;404&lt;/responseCode&gt;&lt;responseMessage&gt;Subscriber Not found&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Operation using Alternate Identity" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">100</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsUpdateSubscriberProfile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsUpdateSubscriberProfile&gt;
	&lt;!--Optional:--&gt;
         &lt;subscriberProfile&gt;
            &lt;!--Zero or more repetitions:--&gt;
            &lt;entry&gt;
                  &lt;key&gt;USERNAME&lt;/key&gt;
                  &lt;value&gt;${identity_2}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUSTOMER_TYPE&lt;/key&gt;
                  &lt;value&gt;Postpaid&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;STATUS&lt;/key&gt;
                  &lt;value&gt;ACTIVE&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;BILLING_DATE&lt;/key&gt;
                  &lt;value&gt;30&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;AREA&lt;/key&gt;
                  &lt;value&gt;CG Road&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CITY&lt;/key&gt;
                  &lt;value&gt;Ahmedabad&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM1&lt;/key&gt;
                  &lt;value&gt;123456&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM2&lt;/key&gt;
                  &lt;value&gt;123456&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM3&lt;/key&gt;
                  &lt;value&gt;123456&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM4&lt;/key&gt;
                  &lt;value&gt;123456&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM5&lt;/key&gt;
                  &lt;value&gt;123456&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ZONE&lt;/key&gt;
                  &lt;value&gt;West&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COUNTRY&lt;/key&gt;
                  &lt;value&gt;INDIA&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ROLE&lt;/key&gt;
                  &lt;value&gt;Manager&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COMPANY&lt;/key&gt;
                  &lt;value&gt;Elitecore&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;DEPARTMENT&lt;/key&gt;
                  &lt;value&gt;CSM&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ARPU&lt;/key&gt;
                  &lt;value&gt;65&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CADRE&lt;/key&gt;
                  &lt;value&gt;M2&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EMAIL&lt;/key&gt;
                  &lt;value&gt;radhika.patel@elitecore.com&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PHONE&lt;/key&gt;
                  &lt;value&gt;9475487512&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;SIP_URL&lt;/key&gt;
                  &lt;value&gt;123456&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUI&lt;/key&gt;
                  &lt;value&gt;123456&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMSI&lt;/key&gt;
                  &lt;value&gt;${identity_2}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;MSISDN&lt;/key&gt;
                  &lt;value&gt;${identity_2}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;MAC&lt;/key&gt;
                  &lt;value&gt;sda:00:sad2:1&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EUI64&lt;/key&gt;
                  &lt;value&gt;123456&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;MODIFIED_EUI64&lt;/key&gt;
                  &lt;value&gt;123456&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ENCRYPTION_TYPE&lt;/key&gt;
                  &lt;value&gt;16&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ESN&lt;/key&gt;
                  &lt;value&gt;123456&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;MEID&lt;/key&gt;
                  &lt;value&gt;354454&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARENT_ID&lt;/key&gt;
                  &lt;value&gt;687654&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;GROUP_NAME&lt;/key&gt;
                  &lt;value&gt;Gujarat&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMEI&lt;/key&gt;
                  &lt;value&gt;1234567890&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;SUBSCRIBER_LEVEL_METERING&lt;/key&gt;
                  &lt;value&gt;ENABLE&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD_CHECK&lt;/key&gt;
                  &lt;value&gt;FALSE&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;SY_INTERFACE&lt;/key&gt;
                  &lt;value&gt;FALSE&lt;/value&gt;
               &lt;/entry&gt;
         &lt;/subscriberProfile&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberID&gt;&lt;/subscriberID&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;${identity_2}&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;updateAction&gt;0&lt;/updateAction&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsUpdateSubscriberProfile&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">action=0</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsGetSubscriberProfileByID" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetSubscriberProfileByID&gt;
         &lt;subscriberID&gt;&lt;/subscriberID&gt;
         &lt;alternateID&gt;${identity_2}&lt;/alternateID&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsGetSubscriberProfileByID&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                <stringProp name="-438749672">&lt;key&gt;SUBSCRIBER_IDENTITY&lt;/key&gt;&lt;value&gt;${identity_2}&lt;/value&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsDeleteSubscriberProfile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsDeleteSubscriberProfile&gt;
         &lt;subscriberID&gt;&lt;/subscriberID&gt;
         &lt;alternateId&gt;${identity_2}&lt;/alternateId&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsDeleteSubscriberProfile&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsGetSubscriberProfileByID" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetSubscriberProfileByID&gt;
         &lt;subscriberID&gt;&lt;/subscriberID&gt;
         &lt;alternateID&gt;${identity_2}&lt;/alternateID&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsGetSubscriberProfileByID&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1055867741">&lt;responseCode&gt;404&lt;/responseCode&gt;&lt;responseMessage&gt;Subscriber Not found&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsRestoreSubscriber" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsRestoreSubscriber&gt;
         &lt;subscriberID&gt;&lt;/subscriberID&gt;
         &lt;alternateId&gt;${identity_2}&lt;/alternateId&gt;
         &lt;param1&gt;&lt;/param1&gt;
         &lt;param2&gt;&lt;/param2&gt;
      &lt;/sub:wsRestoreSubscriber&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsGetSubscriberProfileByID" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetSubscriberProfileByID&gt;
         &lt;subscriberID&gt;&lt;/subscriberID&gt;
         &lt;alternateID&gt;${identity_2}&lt;/alternateID&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsGetSubscriberProfileByID&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1304125707">responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                <stringProp name="-438749672">&lt;key&gt;SUBSCRIBER_IDENTITY&lt;/key&gt;&lt;value&gt;${identity_2}&lt;/value&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsDeleteSubscriberProfile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsDeleteSubscriberProfile&gt;
         &lt;subscriberID&gt;&lt;/subscriberID&gt;
         &lt;alternateId&gt;${identity_2}&lt;/alternateId&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsDeleteSubscriberProfile&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsPurgeSubscriber" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsPurgeSubscriber&gt;
         &lt;subscriberID&gt;&lt;/subscriberID&gt;
         &lt;alternateId&gt;${identity_2}&lt;/alternateId&gt;
         &lt;param1&gt;&lt;/param1&gt;
         &lt;param2&gt;&lt;/param2&gt;
      &lt;/sub:wsPurgeSubscriber&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsRestoreSubscriber" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsRestoreSubscriber&gt;
         &lt;subscriberID&gt;&lt;/subscriberID&gt;
         &lt;alternateId&gt;${identity_2}&lt;/alternateId&gt;
         &lt;param1&gt;&lt;/param1&gt;
         &lt;param2&gt;&lt;/param2&gt;
      &lt;/sub:wsRestoreSubscriber&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1074218656">&lt;responseCode&gt;404&lt;/responseCode&gt;&lt;responseMessage&gt;NOT FOUND. Reason: Unable to restore subscriber profile. Reason: subscriber identity not found for alternate Id: ${identity_2}&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsGetSubscriberProfileByID" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetSubscriberProfileByID&gt;
         &lt;subscriberID&gt;&lt;/subscriberID&gt;
         &lt;alternateID&gt;${identity_2}&lt;/alternateID&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsGetSubscriberProfileByID&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="740909986">&lt;responseCode&gt;404&lt;/responseCode&gt;&lt;responseMessage&gt;NOT FOUND Reason: Unable to search subscriber profile. Reason: Subscriber Identity not found&lt;/responseMessage&gt;&lt;/return&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Post Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop PD logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop logs" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-592019242">Stop PD log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="End of RTC_9001" enabled="true"/>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="RTC_9002" enabled="false">
        <stringProp name="TestPlan.comments">RTC_9002 | WSDL | Verify &apos;wsListUsageMonitoringInformation&apos; and &apos;wsGetBalance&apos; Web Services</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1462792026000</longProp>
        <longProp name="ThreadGroup.end_time">1462792026000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="RTC_9002" enabled="true">
          <stringProp name="TestPlan.comments">RTC_9002 | Verify &apos;wsListUsageMonitoringInformation&apos; and &apos;wsGetBalance&apos; Web Services</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriberidentity" elementType="Argument">
                <stringProp name="Argument.name">subscriberidentity</stringProp>
                <stringProp name="Argument.value">9111111102</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapfilename" elementType="Argument">
                <stringProp name="Argument.name">pcapfilename</stringProp>
                <stringProp name="Argument.value">RTC_9002</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="logfilename" elementType="Argument">
                <stringProp name="Argument.name">logfilename</stringProp>
                <stringProp name="Argument.value">RTC_9002_Log</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">WSDL-RTC_9002</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage" elementType="Argument">
                <stringProp name="Argument.name">datapackage</stringProp>
                <stringProp name="Argument.value">RTC_9002_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="tomcatlogs" elementType="Argument">
                <stringProp name="Argument.name">tomcatlogs</stringProp>
                <stringProp name="Argument.value">tomcat_9002</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="quota_profile" elementType="Argument">
                <stringProp name="Argument.name">quota_profile</stringProp>
                <stringProp name="Argument.value">QUOTA_9002_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="service_name" elementType="Argument">
                <stringProp name="Argument.name">service_name</stringProp>
                <stringProp name="Argument.value">All-Service</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Pre Processing" enabled="true"/>
          <hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start of RTC_9002" enabled="true"/>
            <hashTree/>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Packages and Reload" enabled="true"/>
            <hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Pcap and Logs" enabled="false"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture PD Log" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="1033451790">Capture PD log </stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create DataPackage" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;&lt;/id&gt;&#xd;
            &lt;name&gt;RTC_9002_BASE&lt;/name&gt;&#xd;
            &lt;description&gt;Created by Jmeter&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriod&gt;30&lt;/validityPeriod&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;USAGE_METERING_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles&gt;&#xd;
                &lt;quota-Profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;balance-level&gt;HSQ&lt;/balance-level&gt;&#xd;
                    &lt;description&gt;Created by Jmeter&lt;/description&gt;&#xd;
                    &lt;quota-profile-name&gt;QUOTA_9002_BASE&lt;/quota-profile-name&gt;&#xd;
                    &lt;quota-profile-details&gt;&#xd;
                        &lt;quota-profile-detail&gt;&#xd;
                            &lt;aggregation-key&gt;BILLING_CYCLE&lt;/aggregation-key&gt;&#xd;
                            &lt;dataServiceType&gt;&#xd;
                                &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                            &lt;/dataServiceType&gt;&#xd;
                            &lt;download-unit&gt;MB&lt;/download-unit&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;time-unit&gt;DAY&lt;/time-unit&gt;&#xd;
                            &lt;total&gt;1&lt;/total&gt;&#xd;
                            &lt;total-unit&gt;GB&lt;/total-unit&gt;&#xd;
                            &lt;upload-unit&gt;MB&lt;/upload-unit&gt;&#xd;
                        &lt;/quota-profile-detail&gt;&#xd;
                        &lt;quota-profile-detail&gt;&#xd;
                            &lt;aggregation-key&gt;BILLING_CYCLE&lt;/aggregation-key&gt;&#xd;
                            &lt;dataServiceType&gt;&#xd;
                                &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                            &lt;/dataServiceType&gt;&#xd;
                            &lt;download-unit&gt;MB&lt;/download-unit&gt;&#xd;
                            &lt;fup-level&gt;1&lt;/fup-level&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;time-unit&gt;DAY&lt;/time-unit&gt;&#xd;
                            &lt;total&gt;2&lt;/total&gt;&#xd;
                            &lt;total-unit&gt;GB&lt;/total-unit&gt;&#xd;
                            &lt;upload-unit&gt;MB&lt;/upload-unit&gt;&#xd;
                        &lt;/quota-profile-detail&gt;&#xd;
                        &lt;quota-profile-detail&gt;&#xd;
                            &lt;aggregation-key&gt;BILLING_CYCLE&lt;/aggregation-key&gt;&#xd;
                            &lt;dataServiceType&gt;&#xd;
                                &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                            &lt;/dataServiceType&gt;&#xd;
                            &lt;download-unit&gt;MB&lt;/download-unit&gt;&#xd;
                            &lt;fup-level&gt;2&lt;/fup-level&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;time-unit&gt;DAY&lt;/time-unit&gt;&#xd;
                            &lt;total-unit&gt;MB&lt;/total-unit&gt;&#xd;
                            &lt;upload-unit&gt;MB&lt;/upload-unit&gt;&#xd;
                        &lt;/quota-profile-detail&gt;&#xd;
                    &lt;/quota-profile-details&gt;&#xd;
                    &lt;renewal-interval-unit&gt;MONTH&lt;/renewal-interval-unit&gt;&#xd;
                    &lt;usage-presence&gt;1&lt;/usage-presence&gt;&#xd;
                &lt;/quota-Profile&gt;&#xd;
            &lt;/quota-profiles&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by Jmeter&lt;/description&gt;&#xd;
                    &lt;name&gt;QoS_9002_BASE&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;HSQ_9002_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;HSQ_9002_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;200&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;1&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;128&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;128&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;FUP1_9002_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;FUP1_9002_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;128&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Kbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;128&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Kbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;200&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;2&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;64&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;64&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;FUP2_9002_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;FUP2_9002_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;64&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Kbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;64&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Kbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;200&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;QUOTA_9002_BASE&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
            &lt;currency&gt;USD&lt;/currency&gt;&#xd;
            &lt;rate-cards/&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/xml</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD : Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD : Policy -Reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsAddSubscriber" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsAddSubscriber&gt;
       &lt;subscriberProfile&gt;                          
            &lt;entry&gt;                
               &lt;key&gt;USERNAME&lt;/key&gt;                
               &lt;value&gt;${subscriberidentity}&lt;/value&gt;
            &lt;/entry&gt;             
               &lt;entry&gt;
                  &lt;key&gt;IMSI&lt;/key&gt;
                  &lt;value&gt;${subscriberidentity}&lt;/value&gt;
               &lt;/entry&gt;
            &lt;packageName&gt;${datapackage}&lt;/packageName&gt;       
            &lt;subscriberIdentity&gt;${subscriberidentity}&lt;/subscriberIdentity&gt;
         &lt;/subscriberProfile&gt; 
         &lt;parameter1&gt;&lt;/parameter1&gt;          
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsAddSubscriber&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Operation of wsListUsageMonitoringInformation " enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">100</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsListUsageMonitoringInformation without any Parameters" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriptionService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsListUsageMonitoringInformation&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;packageId&gt;&lt;/packageId&gt;
         &lt;!--Optional:--&gt;
         &lt;packageName&gt;&lt;/packageName&gt;
         &lt;!--Optional:--&gt;
         &lt;quotaProfileId&gt;&lt;/quotaProfileId&gt;
         &lt;!--Optional:--&gt;
         &lt;quotaProfileName&gt;&lt;/quotaProfileName&gt;
         &lt;!--Optional:--&gt;
         &lt;serviceId&gt;&lt;/serviceId&gt;
         &lt;!--Optional:--&gt;
         &lt;serviceName&gt;&lt;/serviceName&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsListUsageMonitoringInformation&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-569682372">&lt;responseCode&gt;401&lt;/responseCode&gt;</stringProp>
                <stringProp name="-215776295">&lt;responseMessage&gt;INPUT PARAMETER MISSING. Reason: Identity parameter missing&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify wsListUsageMonitoringInformation using Subscriber Identity" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriptionService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsListUsageMonitoringInformation&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;packageId&gt;&lt;/packageId&gt;
         &lt;!--Optional:--&gt;
         &lt;packageName&gt;${datapackage}&lt;/packageName&gt;
         &lt;!--Optional:--&gt;
         &lt;quotaProfileId&gt;&lt;/quotaProfileId&gt;
         &lt;!--Optional:--&gt;
         &lt;quotaProfileName&gt;&lt;/quotaProfileName&gt;
         &lt;!--Optional:--&gt;
         &lt;serviceId&gt;&lt;/serviceId&gt;
         &lt;!--Optional:--&gt;
         &lt;serviceName&gt;&lt;/serviceName&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsListUsageMonitoringInformation&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Usage Found for Data" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                <stringProp name="1256987959">&lt;billingCycleUsage&gt;&lt;downloadOctets&gt;0&lt;/downloadOctets&gt;&lt;timeInSeconds&gt;0&lt;/timeInSeconds&gt;&lt;totalOctets&gt;0&lt;/totalOctets&gt;&lt;uploadOctets&gt;0&lt;/uploadOctets&gt;&lt;/billingCycleUsage&gt;&lt;customUsage&gt;&lt;downloadOctets&gt;0&lt;/downloadOctets&gt;&lt;timeInSeconds&gt;0&lt;/timeInSeconds&gt;&lt;totalOctets&gt;0&lt;/totalOctets&gt;&lt;uploadOctets&gt;0&lt;/uploadOctets&gt;&lt;/customUsage&gt;&lt;dailyUsage&gt;&lt;downloadOctets&gt;0&lt;/downloadOctets&gt;&lt;timeInSeconds&gt;0&lt;/timeInSeconds&gt;&lt;totalOctets&gt;0&lt;/totalOctets&gt;&lt;uploadOctets&gt;0&lt;/uploadOctets&gt;&lt;/dailyUsage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify wsListUsageMonitoringInformation using Alternate Identity" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriptionService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsListUsageMonitoringInformation&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;${subscriberidentity}&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;packageId&gt;&lt;/packageId&gt;
         &lt;!--Optional:--&gt;
         &lt;packageName&gt;${datapackage}&lt;/packageName&gt;
         &lt;!--Optional:--&gt;
         &lt;quotaProfileId&gt;&lt;/quotaProfileId&gt;
         &lt;!--Optional:--&gt;
         &lt;quotaProfileName&gt;&lt;/quotaProfileName&gt;
         &lt;!--Optional:--&gt;
         &lt;serviceId&gt;&lt;/serviceId&gt;
         &lt;!--Optional:--&gt;
         &lt;serviceName&gt;&lt;/serviceName&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsListUsageMonitoringInformation&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Usage Found for Data" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                <stringProp name="1256987959">&lt;billingCycleUsage&gt;&lt;downloadOctets&gt;0&lt;/downloadOctets&gt;&lt;timeInSeconds&gt;0&lt;/timeInSeconds&gt;&lt;totalOctets&gt;0&lt;/totalOctets&gt;&lt;uploadOctets&gt;0&lt;/uploadOctets&gt;&lt;/billingCycleUsage&gt;&lt;customUsage&gt;&lt;downloadOctets&gt;0&lt;/downloadOctets&gt;&lt;timeInSeconds&gt;0&lt;/timeInSeconds&gt;&lt;totalOctets&gt;0&lt;/totalOctets&gt;&lt;uploadOctets&gt;0&lt;/uploadOctets&gt;&lt;/customUsage&gt;&lt;dailyUsage&gt;&lt;downloadOctets&gt;0&lt;/downloadOctets&gt;&lt;timeInSeconds&gt;0&lt;/timeInSeconds&gt;&lt;totalOctets&gt;0&lt;/totalOctets&gt;&lt;uploadOctets&gt;0&lt;/uploadOctets&gt;&lt;/dailyUsage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify wsListUsageMonitoringInformation for Quota Profile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriptionService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsListUsageMonitoringInformation&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;packageId&gt;&lt;/packageId&gt;
         &lt;!--Optional:--&gt;
         &lt;packageName&gt;${datapackage}&lt;/packageName&gt;
         &lt;!--Optional:--&gt;
         &lt;quotaProfileId&gt;&lt;/quotaProfileId&gt;
         &lt;!--Optional:--&gt;
         &lt;quotaProfileName&gt;${quota_profile}&lt;/quotaProfileName&gt;
         &lt;!--Optional:--&gt;
         &lt;serviceId&gt;&lt;/serviceId&gt;
         &lt;!--Optional:--&gt;
         &lt;serviceName&gt;&lt;/serviceName&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsListUsageMonitoringInformation&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Usage Found for Data" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                <stringProp name="1256987959">&lt;billingCycleUsage&gt;&lt;downloadOctets&gt;0&lt;/downloadOctets&gt;&lt;timeInSeconds&gt;0&lt;/timeInSeconds&gt;&lt;totalOctets&gt;0&lt;/totalOctets&gt;&lt;uploadOctets&gt;0&lt;/uploadOctets&gt;&lt;/billingCycleUsage&gt;&lt;customUsage&gt;&lt;downloadOctets&gt;0&lt;/downloadOctets&gt;&lt;timeInSeconds&gt;0&lt;/timeInSeconds&gt;&lt;totalOctets&gt;0&lt;/totalOctets&gt;&lt;uploadOctets&gt;0&lt;/uploadOctets&gt;&lt;/customUsage&gt;&lt;dailyUsage&gt;&lt;downloadOctets&gt;0&lt;/downloadOctets&gt;&lt;timeInSeconds&gt;0&lt;/timeInSeconds&gt;&lt;totalOctets&gt;0&lt;/totalOctets&gt;&lt;uploadOctets&gt;0&lt;/uploadOctets&gt;&lt;/dailyUsage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify wsListUsageMonitoringInformation for Service" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriptionService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsListUsageMonitoringInformation&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;packageId&gt;&lt;/packageId&gt;
         &lt;!--Optional:--&gt;
         &lt;packageName&gt;${datapackage}&lt;/packageName&gt;
         &lt;!--Optional:--&gt;
         &lt;quotaProfileId&gt;&lt;/quotaProfileId&gt;
         &lt;!--Optional:--&gt;
         &lt;quotaProfileName&gt;${quota_profile}&lt;/quotaProfileName&gt;
         &lt;!--Optional:--&gt;
         &lt;serviceId&gt;&lt;/serviceId&gt;
         &lt;!--Optional:--&gt;
         &lt;serviceName&gt;${service_name}&lt;/serviceName&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsListUsageMonitoringInformation&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Usage Found for Data" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                <stringProp name="1256987959">&lt;billingCycleUsage&gt;&lt;downloadOctets&gt;0&lt;/downloadOctets&gt;&lt;timeInSeconds&gt;0&lt;/timeInSeconds&gt;&lt;totalOctets&gt;0&lt;/totalOctets&gt;&lt;uploadOctets&gt;0&lt;/uploadOctets&gt;&lt;/billingCycleUsage&gt;&lt;customUsage&gt;&lt;downloadOctets&gt;0&lt;/downloadOctets&gt;&lt;timeInSeconds&gt;0&lt;/timeInSeconds&gt;&lt;totalOctets&gt;0&lt;/totalOctets&gt;&lt;uploadOctets&gt;0&lt;/uploadOctets&gt;&lt;/customUsage&gt;&lt;dailyUsage&gt;&lt;downloadOctets&gt;0&lt;/downloadOctets&gt;&lt;timeInSeconds&gt;0&lt;/timeInSeconds&gt;&lt;totalOctets&gt;0&lt;/totalOctets&gt;&lt;uploadOctets&gt;0&lt;/uploadOctets&gt;&lt;/dailyUsage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Operation of wsGetBalance" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">100</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsGetBalance without any Parameters" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriptionService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetBalance&gt;
         &lt;subscriberId&gt;&lt;/subscriberId&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;packageId&gt;&lt;/packageId&gt;
         &lt;packageName&gt;&lt;/packageName&gt;
         &lt;subscriptionId&gt;&lt;/subscriptionId&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsGetBalance&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-569682372">&lt;responseCode&gt;401&lt;/responseCode&gt;</stringProp>
                <stringProp name="-215776295">&lt;responseMessage&gt;INPUT PARAMETER MISSING. Reason: Identity parameter missing&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsGetBalance using Subscriber Identity" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriptionService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetBalance&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;packageId&gt;&lt;/packageId&gt;
         &lt;packageName&gt;&lt;/packageName&gt;
         &lt;subscriptionId&gt;&lt;/subscriptionId&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsGetBalance&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings"/>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsGetBalance using Alternate Identity" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriptionService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetBalance&gt;
         &lt;subscriberId&gt;&lt;/subscriberId&gt;
         &lt;alternateId&gt;${subscriberidentity}&lt;/alternateId&gt;
         &lt;packageId&gt;&lt;/packageId&gt;
         &lt;packageName&gt;&lt;/packageName&gt;
         &lt;subscriptionId&gt;&lt;/subscriptionId&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsGetBalance&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings"/>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsGetBalance using Subscriber Identity and Package Name" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriptionService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetBalance&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;packageId&gt;&lt;/packageId&gt;
         &lt;packageName&gt;${datapackage}&lt;/packageName&gt;
         &lt;subscriptionId&gt;&lt;/subscriptionId&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsGetBalance&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                <stringProp name="971623036">&lt;packageName&gt;RTC_9002_BASE&lt;/packageName&gt;&lt;packageType&gt;BASE&lt;/packageType&gt;&lt;quotaProfileBalances&gt;&lt;allServiceBalance&gt;&lt;aggregationKey&gt;Billing Cycle&lt;/aggregationKey&gt;&lt;balance&gt;&lt;downloadOctets&gt;999999999999999999&lt;/downloadOctets&gt;&lt;time&gt;999999999999999999&lt;/time&gt;&lt;totalOctets&gt;1073741824&lt;/totalOctets&gt;&lt;uploadOctets&gt;999999999999999999&lt;/uploadOctets&gt;&lt;/balance&gt;&lt;curretUsage&gt;&lt;downloadOctets&gt;0&lt;/downloadOctets&gt;&lt;time&gt;0&lt;/time&gt;&lt;totalOctets&gt;0&lt;/totalOctets&gt;&lt;uploadOctets&gt;0&lt;/uploadOctets&gt;&lt;/curretUsage&gt;&lt;HSQLimit&gt;&lt;downloadOctets&gt;999999999999999999&lt;/downloadOctets&gt;&lt;time&gt;999999999999999999&lt;/time&gt;&lt;totalOctets&gt;1073741824&lt;/totalOctets&gt;&lt;uploadOctets&gt;999999999999999999&lt;/uploadOctets&gt;&lt;/HSQLimit&gt;&lt;serviceId&gt;DATA_SERVICE_TYPE_1&lt;/serviceId&gt;&lt;serviceName&gt;All-Service&lt;/serviceName&gt;&lt;/allServiceBalance&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsGetBalance using Alternate Identity and Package Name" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriptionService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetBalance&gt;
         &lt;subscriberId&gt;&lt;/subscriberId&gt;
         &lt;alternateId&gt;${subscriberidentity}&lt;/alternateId&gt;
         &lt;packageId&gt;&lt;/packageId&gt;
         &lt;packageName&gt;${datapackage}&lt;/packageName&gt;
         &lt;subscriptionId&gt;&lt;/subscriptionId&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsGetBalance&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                <stringProp name="971623036">&lt;packageName&gt;RTC_9002_BASE&lt;/packageName&gt;&lt;packageType&gt;BASE&lt;/packageType&gt;&lt;quotaProfileBalances&gt;&lt;allServiceBalance&gt;&lt;aggregationKey&gt;Billing Cycle&lt;/aggregationKey&gt;&lt;balance&gt;&lt;downloadOctets&gt;999999999999999999&lt;/downloadOctets&gt;&lt;time&gt;999999999999999999&lt;/time&gt;&lt;totalOctets&gt;1073741824&lt;/totalOctets&gt;&lt;uploadOctets&gt;999999999999999999&lt;/uploadOctets&gt;&lt;/balance&gt;&lt;curretUsage&gt;&lt;downloadOctets&gt;0&lt;/downloadOctets&gt;&lt;time&gt;0&lt;/time&gt;&lt;totalOctets&gt;0&lt;/totalOctets&gt;&lt;uploadOctets&gt;0&lt;/uploadOctets&gt;&lt;/curretUsage&gt;&lt;HSQLimit&gt;&lt;downloadOctets&gt;999999999999999999&lt;/downloadOctets&gt;&lt;time&gt;999999999999999999&lt;/time&gt;&lt;totalOctets&gt;1073741824&lt;/totalOctets&gt;&lt;uploadOctets&gt;999999999999999999&lt;/uploadOctets&gt;&lt;/HSQLimit&gt;&lt;serviceId&gt;DATA_SERVICE_TYPE_1&lt;/serviceId&gt;&lt;serviceName&gt;All-Service&lt;/serviceName&gt;&lt;/allServiceBalance&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Post Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop PD logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop logs" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-592019242">Stop PD log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="End of RTC_9002" enabled="true"/>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Module Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="RTC_9003" enabled="false">
        <stringProp name="TestPlan.comments">RTC_9003 | WSDL | Verify &apos;wsChangePackage&apos; Web Service</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1462792026000</longProp>
        <longProp name="ThreadGroup.end_time">1462792026000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="RTC_9003" enabled="true">
          <stringProp name="TestPlan.comments">RTC_9003 | Verify &apos;wsChangePackage&apos; Web Service</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriberidentity" elementType="Argument">
                <stringProp name="Argument.name">subscriberidentity</stringProp>
                <stringProp name="Argument.value">9111111103</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapfilename" elementType="Argument">
                <stringProp name="Argument.name">pcapfilename</stringProp>
                <stringProp name="Argument.value">RTC_9003</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="logfilename" elementType="Argument">
                <stringProp name="Argument.name">logfilename</stringProp>
                <stringProp name="Argument.value">RTC_9003_Log</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">WSDL-RTC_9003</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage" elementType="Argument">
                <stringProp name="Argument.name">datapackage</stringProp>
                <stringProp name="Argument.value">RTC_9003_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage_2" elementType="Argument">
                <stringProp name="Argument.name">datapackage_2</stringProp>
                <stringProp name="Argument.value">RTC_9004_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imspackage" elementType="Argument">
                <stringProp name="Argument.name">imspackage</stringProp>
                <stringProp name="Argument.value">RTC_9003_IMS</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imspackage_2" elementType="Argument">
                <stringProp name="Argument.name">imspackage_2</stringProp>
                <stringProp name="Argument.value">RTC_9004_IMS</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="tomcatlogs" elementType="Argument">
                <stringProp name="Argument.name">tomcatlogs</stringProp>
                <stringProp name="Argument.value">tomcat_9003</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Pre Processing" enabled="true"/>
          <hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start of RTC_9003" enabled="true"/>
            <hashTree/>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Packages and Reload" enabled="true"/>
            <hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Pcap and Logs" enabled="false"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture PD Log" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="1033451790">Capture PD log </stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create DataPackage RTC_9003_BASE" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;&lt;/id&gt;&#xd;
            &lt;name&gt;RTC_9003_BASE&lt;/name&gt;&#xd;
            &lt;description&gt;Created by Jmeter&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriod&gt;30&lt;/validityPeriod&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;USAGE_METERING_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles&gt;&#xd;
                &lt;quota-Profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;balance-level&gt;HSQ&lt;/balance-level&gt;&#xd;
                    &lt;description&gt;Created by Jmeter&lt;/description&gt;&#xd;
                    &lt;quota-profile-name&gt;QUOTA_9003_BASE&lt;/quota-profile-name&gt;&#xd;
                    &lt;quota-profile-details&gt;&#xd;
                        &lt;quota-profile-detail&gt;&#xd;
                            &lt;aggregation-key&gt;BILLING_CYCLE&lt;/aggregation-key&gt;&#xd;
                            &lt;dataServiceType&gt;&#xd;
                                &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                            &lt;/dataServiceType&gt;&#xd;
                            &lt;download-unit&gt;MB&lt;/download-unit&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;time-unit&gt;DAY&lt;/time-unit&gt;&#xd;
                            &lt;total&gt;1&lt;/total&gt;&#xd;
                            &lt;total-unit&gt;GB&lt;/total-unit&gt;&#xd;
                            &lt;upload-unit&gt;MB&lt;/upload-unit&gt;&#xd;
                        &lt;/quota-profile-detail&gt;&#xd;
                        &lt;quota-profile-detail&gt;&#xd;
                            &lt;aggregation-key&gt;BILLING_CYCLE&lt;/aggregation-key&gt;&#xd;
                            &lt;dataServiceType&gt;&#xd;
                                &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                            &lt;/dataServiceType&gt;&#xd;
                            &lt;download-unit&gt;MB&lt;/download-unit&gt;&#xd;
                            &lt;fup-level&gt;1&lt;/fup-level&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;time-unit&gt;DAY&lt;/time-unit&gt;&#xd;
                            &lt;total&gt;2&lt;/total&gt;&#xd;
                            &lt;total-unit&gt;GB&lt;/total-unit&gt;&#xd;
                            &lt;upload-unit&gt;MB&lt;/upload-unit&gt;&#xd;
                        &lt;/quota-profile-detail&gt;&#xd;
                        &lt;quota-profile-detail&gt;&#xd;
                            &lt;aggregation-key&gt;BILLING_CYCLE&lt;/aggregation-key&gt;&#xd;
                            &lt;dataServiceType&gt;&#xd;
                                &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                            &lt;/dataServiceType&gt;&#xd;
                            &lt;download-unit&gt;MB&lt;/download-unit&gt;&#xd;
                            &lt;fup-level&gt;2&lt;/fup-level&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;time-unit&gt;DAY&lt;/time-unit&gt;&#xd;
                            &lt;total-unit&gt;MB&lt;/total-unit&gt;&#xd;
                            &lt;upload-unit&gt;MB&lt;/upload-unit&gt;&#xd;
                        &lt;/quota-profile-detail&gt;&#xd;
                    &lt;/quota-profile-details&gt;&#xd;
                    &lt;renewal-interval-unit&gt;MONTH&lt;/renewal-interval-unit&gt;&#xd;
                    &lt;usage-presence&gt;1&lt;/usage-presence&gt;&#xd;
                &lt;/quota-Profile&gt;&#xd;
            &lt;/quota-profiles&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by Jmeter&lt;/description&gt;&#xd;
                    &lt;name&gt;QoS_9003_BASE&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;HSQ_9003_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;HSQ_9003_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;200&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;1&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;128&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;128&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;FUP1_9003_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;FUP1_9003_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;128&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Kbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;128&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Kbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;200&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;2&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;64&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;64&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;FUP2_9003_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;FUP2_9003_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;64&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Kbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;64&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Kbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;200&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;QUOTA_9003_BASE&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
            &lt;currency&gt;USD&lt;/currency&gt;&#xd;
            &lt;rate-cards/&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/xml</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create DataPackage RTC_9004_BASE" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;4f872866-07f9-4dc4-814d-d8e1fcfdfe2a&lt;/id&gt;&#xd;
            &lt;name&gt;RTC_9004_BASE&lt;/name&gt;&#xd;
            &lt;description&gt;Created by Jmeter&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriod&gt;30&lt;/validityPeriod&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;USAGE_METERING_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles&gt;&#xd;
                &lt;quota-Profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;7e4dee34-0a00-4fd2-ae24-730788cafed5&lt;/id&gt;&#xd;
                    &lt;balance-level&gt;HSQ&lt;/balance-level&gt;&#xd;
                    &lt;description&gt;Created by Jmeter&lt;/description&gt;&#xd;
                    &lt;quota-profile-name&gt;RTC_9004_QUOTA2&lt;/quota-profile-name&gt;&#xd;
                    &lt;quota-profile-details&gt;&#xd;
                        &lt;quota-profile-detail&gt;&#xd;
                            &lt;aggregation-key&gt;BILLING_CYCLE&lt;/aggregation-key&gt;&#xd;
                            &lt;dataServiceType&gt;&#xd;
                                &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                            &lt;/dataServiceType&gt;&#xd;
                            &lt;download-unit&gt;MB&lt;/download-unit&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;id&gt;a1bf75ad-c484-43cb-a533-058f1b0116b3&lt;/id&gt;&#xd;
                            &lt;time-unit&gt;DAY&lt;/time-unit&gt;&#xd;
                            &lt;total&gt;100&lt;/total&gt;&#xd;
                            &lt;total-unit&gt;GB&lt;/total-unit&gt;&#xd;
                            &lt;upload-unit&gt;MB&lt;/upload-unit&gt;&#xd;
                        &lt;/quota-profile-detail&gt;&#xd;
                    &lt;/quota-profile-details&gt;&#xd;
                    &lt;renewal-interval-unit&gt;MONTH&lt;/renewal-interval-unit&gt;&#xd;
                    &lt;usage-presence&gt;1&lt;/usage-presence&gt;&#xd;
                &lt;/quota-Profile&gt;&#xd;
                &lt;quota-Profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;51017ce9-4f44-488b-b455-22ba2fdff148&lt;/id&gt;&#xd;
                    &lt;balance-level&gt;HSQ&lt;/balance-level&gt;&#xd;
                    &lt;description&gt;Created by Jmeter&lt;/description&gt;&#xd;
                    &lt;quota-profile-name&gt;QUOTA_9004_BASE&lt;/quota-profile-name&gt;&#xd;
                    &lt;quota-profile-details&gt;&#xd;
                        &lt;quota-profile-detail&gt;&#xd;
                            &lt;aggregation-key&gt;BILLING_CYCLE&lt;/aggregation-key&gt;&#xd;
                            &lt;dataServiceType&gt;&#xd;
                                &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                            &lt;/dataServiceType&gt;&#xd;
                            &lt;download-unit&gt;MB&lt;/download-unit&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;id&gt;824cc867-673a-4b52-96a5-d9725bfb6b99&lt;/id&gt;&#xd;
                            &lt;time-unit&gt;DAY&lt;/time-unit&gt;&#xd;
                            &lt;total&gt;1&lt;/total&gt;&#xd;
                            &lt;total-unit&gt;GB&lt;/total-unit&gt;&#xd;
                            &lt;upload-unit&gt;MB&lt;/upload-unit&gt;&#xd;
                        &lt;/quota-profile-detail&gt;&#xd;
                        &lt;quota-profile-detail&gt;&#xd;
                            &lt;aggregation-key&gt;BILLING_CYCLE&lt;/aggregation-key&gt;&#xd;
                            &lt;dataServiceType&gt;&#xd;
                                &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                            &lt;/dataServiceType&gt;&#xd;
                            &lt;download-unit&gt;MB&lt;/download-unit&gt;&#xd;
                            &lt;fup-level&gt;1&lt;/fup-level&gt;&#xd;
                            &lt;id&gt;6744b0b2-9366-4cfe-a29e-69585603d936&lt;/id&gt;&#xd;
                            &lt;time-unit&gt;DAY&lt;/time-unit&gt;&#xd;
                            &lt;total&gt;2&lt;/total&gt;&#xd;
                            &lt;total-unit&gt;GB&lt;/total-unit&gt;&#xd;
                            &lt;upload-unit&gt;MB&lt;/upload-unit&gt;&#xd;
                        &lt;/quota-profile-detail&gt;&#xd;
                        &lt;quota-profile-detail&gt;&#xd;
                            &lt;aggregation-key&gt;BILLING_CYCLE&lt;/aggregation-key&gt;&#xd;
                            &lt;dataServiceType&gt;&#xd;
                                &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                            &lt;/dataServiceType&gt;&#xd;
                            &lt;download-unit&gt;MB&lt;/download-unit&gt;&#xd;
                            &lt;fup-level&gt;2&lt;/fup-level&gt;&#xd;
                            &lt;id&gt;214b4b42-0051-488c-98b5-1a5bf561cb4a&lt;/id&gt;&#xd;
                            &lt;time-unit&gt;DAY&lt;/time-unit&gt;&#xd;
                            &lt;total-unit&gt;MB&lt;/total-unit&gt;&#xd;
                            &lt;upload-unit&gt;MB&lt;/upload-unit&gt;&#xd;
                        &lt;/quota-profile-detail&gt;&#xd;
                    &lt;/quota-profile-details&gt;&#xd;
                    &lt;renewal-interval-unit&gt;MONTH&lt;/renewal-interval-unit&gt;&#xd;
                    &lt;usage-presence&gt;1&lt;/usage-presence&gt;&#xd;
                &lt;/quota-Profile&gt;&#xd;
            &lt;/quota-profiles&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;e4c5f800-5556-4e54-9949-da6ff2cdb69d&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by Jmeter&lt;/description&gt;&#xd;
                    &lt;name&gt;QoS_9004_BASE&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;64e0fd78-77aa-4776-86e2-be195effb77f&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;45d66cd3-3ba1-49eb-8e2b-b732af747ba4&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;HSQ_9004_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;HSQ_9004_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;200&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;fcfde69b-02d9-4181-8c22-f67fb15d392f&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;5f9a035f-72ea-4bd7-aa06-3df29e3e29f5&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;1&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;6c74e93e-0546-4e26-adc2-5c4608accfbb&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;128&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;128&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;d8e430a3-fedb-4afe-9e08-5e7904ec4bf9&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;FUP1_9004_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;FUP1_9004_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;128&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Kbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;128&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Kbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;200&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;b902511b-5ed6-45dc-ba3f-663e62ea52d4&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;bbdea6ed-8798-4421-8be8-7427cd2a0bdc&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;2&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;7ca28c5f-bdc8-4939-aa84-5e314d1e10e6&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;64&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;64&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;5e74a216-deae-4d14-90a2-5be5b262d7a2&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;FUP2_9004_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;FUP2_9004_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;64&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Kbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;64&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Kbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;200&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;323e6e51-99a3-496f-85ab-7cc7b1549ce0&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;5ec6e8c7-937c-4607-8305-9d246023734e&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;51017ce9-4f44-488b-b455-22ba2fdff148&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;QUOTA_9004_BASE&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;7b29cf42-478b-4e3b-88aa-6f1ae11682da&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin on 05/11/2018 17:00:59&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_9004_QOS&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;2&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;77597dd2-a527-4de1-8141-24f6078cf2b1&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;b06d3c35-cd13-42aa-aa22-1f9d555d0dd3&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;RTC_9004_HSQ&lt;/name&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;RTC_9004_HSQ&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;100&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;0b74aec1-117d-4c6f-85bc-b9a743fcd801&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;edb32a34-830f-4dfd-a27e-5e1decb4ba12&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;7e4dee34-0a00-4fd2-ae24-730788cafed5&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;RTC_9004_QUOTA2&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
            &lt;currency&gt;USD&lt;/currency&gt;&#xd;
            &lt;rate-cards/&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/xml</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create IMS Pacakge RTC_9003_IMS" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;ims-pkg-container&gt;&#xd;
    &lt;imsPkgDatas&gt;&#xd;
        &lt;imsPkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;&lt;/id&gt;&#xd;
            &lt;description&gt;Created by Jmeter&lt;/description&gt;&#xd;
            &lt;imsPkgServiceDatas&gt;&#xd;
                &lt;imsPkgServiceData&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;action&gt;ACCEPT&lt;/action&gt;&#xd;
                    &lt;imsPkgPCCAttributes/&gt;&#xd;
                    &lt;mediaTypeData&gt;&#xd;
                        &lt;id&gt;MEDIA_TYPE_1&lt;/id&gt;&#xd;
                        &lt;name&gt;AUDIO&lt;/name&gt;&#xd;
                    &lt;/mediaTypeData&gt;&#xd;
                    &lt;name&gt;RTC_9003_AUDIO&lt;/name&gt;&#xd;
                &lt;/imsPkgServiceData&gt;&#xd;
            &lt;/imsPkgServiceDatas&gt;&#xd;
            &lt;name&gt;RTC_9003_IMS&lt;/name&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
        &lt;/imsPkgData&gt;&#xd;
    &lt;/imsPkgDatas&gt;&#xd;
&lt;/ims-pkg-container&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_ims_package_url}?${replace}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/xml</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create IMS Pacakge RTC_9004_IMS" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;ims-pkg-container&gt;&#xd;
    &lt;imsPkgDatas&gt;&#xd;
        &lt;imsPkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;&lt;/id&gt;&#xd;
            &lt;description&gt;Created by Jmeter&lt;/description&gt;&#xd;
            &lt;imsPkgServiceDatas&gt;&#xd;
                &lt;imsPkgServiceData&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;action&gt;ACCEPT&lt;/action&gt;&#xd;
                    &lt;imsPkgPCCAttributes/&gt;&#xd;
                    &lt;mediaTypeData&gt;&#xd;
                        &lt;id&gt;MEDIA_TYPE_1&lt;/id&gt;&#xd;
                        &lt;name&gt;AUDIO&lt;/name&gt;&#xd;
                    &lt;/mediaTypeData&gt;&#xd;
                    &lt;name&gt;RTC_9004_AUDIO&lt;/name&gt;&#xd;
                &lt;/imsPkgServiceData&gt;&#xd;
            &lt;/imsPkgServiceDatas&gt;&#xd;
            &lt;name&gt;RTC_9004_IMS&lt;/name&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
        &lt;/imsPkgData&gt;&#xd;
    &lt;/imsPkgDatas&gt;&#xd;
&lt;/ims-pkg-container&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_ims_package_url}?${replace}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/xml</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD : Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD : Policy -Reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsAddSubscriber" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsAddSubscriber&gt;
       &lt;subscriberProfile&gt;                          
            &lt;entry&gt;                
               &lt;key&gt;USERNAME&lt;/key&gt;                
               &lt;value&gt;${subscriberidentity}&lt;/value&gt;
            &lt;/entry&gt;             
               &lt;entry&gt;
                  &lt;key&gt;IMSI&lt;/key&gt;
                  &lt;value&gt;${subscriberidentity}&lt;/value&gt;
               &lt;/entry&gt;
            &lt;packageName&gt;${datapackage}&lt;/packageName&gt;        
            &lt;subscriberIdentity&gt;${subscriberidentity}&lt;/subscriberIdentity&gt;
         &lt;/subscriberProfile&gt; 
         &lt;parameter1&gt;&lt;/parameter1&gt;          
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsAddSubscriber&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Operation of wsChangePackage on Base Package" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">100</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="401 : wsChangePackage without any Parameters" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsChangePackage&gt;          
         &lt;subscriberID&gt; &lt;/subscriberID&gt;          
         &lt;alternateID&gt; &lt;/alternateID&gt;          
         &lt;currentPackageName&gt; &lt;/currentPackageName&gt;          
         &lt;newPackageName&gt; &lt;/newPackageName&gt;          
         &lt;packageType&gt; &lt;/packageType&gt;          
         &lt;updateAction&gt; &lt;/updateAction&gt;          
         &lt;parameter1&gt; &lt;/parameter1&gt;          
         &lt;parameter2&gt; &lt;/parameter2&gt;
         &lt;parameter3&gt; &lt;/parameter3&gt;
      &lt;/sub:wsChangePackage&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-569682372">&lt;responseCode&gt;401&lt;/responseCode&gt;</stringProp>
                <stringProp name="-1905903794">&lt;responseMessage&gt;INPUT PARAMETER MISSING. Reason: New package name must be provided&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="404 : wsChangePackage with Subscriber Identity and unknown Package" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsChangePackage&gt;          
         &lt;subscriberID&gt;${subscriberidentity}&lt;/subscriberID&gt;          
         &lt;alternateID&gt;&lt;/alternateID&gt;          
         &lt;currentPackageName&gt;&lt;/currentPackageName&gt;          
         &lt;newPackageName&gt;unknownpackage&lt;/newPackageName&gt;          
         &lt;packageType&gt;&lt;/packageType&gt;          
         &lt;updateAction&gt;&lt;/updateAction&gt;          
         &lt;parameter1&gt; &lt;/parameter1&gt;          
         &lt;parameter2&gt; &lt;/parameter2&gt;
         &lt;parameter3&gt; &lt;/parameter3&gt;
      &lt;/sub:wsChangePackage&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2101284903">&lt;responseCode&gt;404&lt;/responseCode&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="404 : wsChangePackage with Alternate Identity and unknown Package" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsChangePackage&gt;          
         &lt;subscriberID&gt;&lt;/subscriberID&gt;          
         &lt;alternateID&gt;${subscriberidentity}&lt;/alternateID&gt;          
         &lt;currentPackageName&gt;&lt;/currentPackageName&gt;          
         &lt;newPackageName&gt;unknownpackage&lt;/newPackageName&gt;          
         &lt;packageType&gt;&lt;/packageType&gt;          
         &lt;updateAction&gt;&lt;/updateAction&gt;          
         &lt;parameter1&gt; &lt;/parameter1&gt;          
         &lt;parameter2&gt; &lt;/parameter2&gt;
         &lt;parameter3&gt; &lt;/parameter3&gt;
      &lt;/sub:wsChangePackage&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2101284903">&lt;responseCode&gt;404&lt;/responseCode&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="401 : wsChangePackage with Subscriber Identity and current Package" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsChangePackage&gt;          
         &lt;subscriberID&gt;${subscriberidentity}&lt;/subscriberID&gt;          
         &lt;alternateID&gt; &lt;/alternateID&gt;          
         &lt;currentPackageName&gt;${datapackage}&lt;/currentPackageName&gt;          
         &lt;newPackageName&gt;&lt;/newPackageName&gt;          
         &lt;packageType&gt;&lt;/packageType&gt;          
         &lt;updateAction&gt;&lt;/updateAction&gt;          
         &lt;parameter1&gt; &lt;/parameter1&gt;          
         &lt;parameter2&gt; &lt;/parameter2&gt;
         &lt;parameter3&gt; &lt;/parameter3&gt;
      &lt;/sub:wsChangePackage&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-569682372">&lt;responseCode&gt;401&lt;/responseCode&gt;</stringProp>
                <stringProp name="-1905903794">&lt;responseMessage&gt;INPUT PARAMETER MISSING. Reason: New package name must be provided&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsChangePackage with Subscriber Identity , current and new Package (same)" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsChangePackage&gt;          
         &lt;subscriberID&gt;&lt;/subscriberID&gt;          
         &lt;alternateID&gt;${subscriberidentity}&lt;/alternateID&gt;          
         &lt;currentPackageName&gt;${datapackage}&lt;/currentPackageName&gt;          
         &lt;newPackageName&gt;${datapackage}&lt;/newPackageName&gt;          
         &lt;packageType&gt;DATA&lt;/packageType&gt;          
         &lt;updateAction&gt;&lt;/updateAction&gt;          
         &lt;parameter1&gt; &lt;/parameter1&gt;          
         &lt;parameter2&gt; &lt;/parameter2&gt;
         &lt;parameter3&gt; &lt;/parameter3&gt;
      &lt;/sub:wsChangePackage&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1934996511">&lt;responseCode&gt;200&lt;/responseCode&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsChangePackage with Subscriber Identity and new Package" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsChangePackage&gt;          
         &lt;subscriberID&gt;&lt;/subscriberID&gt;          
         &lt;alternateID&gt;${subscriberidentity}&lt;/alternateID&gt;          
         &lt;currentPackageName&gt;${datapackage}&lt;/currentPackageName&gt;          
         &lt;newPackageName&gt;${datapackage_2}&lt;/newPackageName&gt;          
         &lt;packageType&gt;DATA&lt;/packageType&gt;          
         &lt;updateAction&gt;&lt;/updateAction&gt;          
         &lt;parameter1&gt; &lt;/parameter1&gt;          
         &lt;parameter2&gt; &lt;/parameter2&gt;
         &lt;parameter3&gt; &lt;/parameter3&gt;
      &lt;/sub:wsChangePackage&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1934996511">&lt;responseCode&gt;200&lt;/responseCode&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsChangePackage with Subscriber Identity with update action" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsChangePackage&gt;          
         &lt;subscriberID&gt;&lt;/subscriberID&gt;          
         &lt;alternateID&gt;${subscriberidentity}&lt;/alternateID&gt;          
         &lt;currentPackageName&gt;${datapackage_2}&lt;/currentPackageName&gt;          
         &lt;newPackageName&gt;${datapackage}&lt;/newPackageName&gt;          
         &lt;packageType&gt;DATA&lt;/packageType&gt;          
         &lt;updateAction&gt;1&lt;/updateAction&gt;          
         &lt;parameter1&gt; &lt;/parameter1&gt;          
         &lt;parameter2&gt; &lt;/parameter2&gt;
         &lt;parameter3&gt; &lt;/parameter3&gt;
      &lt;/sub:wsChangePackage&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1934996511">&lt;responseCode&gt;200&lt;/responseCode&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Operation of wsChangePackage on IMS Package" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">100</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsChangePackage with Subscriber Identity , current and new Package (same)" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsChangePackage&gt;          
         &lt;subscriberID&gt;&lt;/subscriberID&gt;          
         &lt;alternateID&gt;${subscriberidentity}&lt;/alternateID&gt;          
         &lt;currentPackageName&gt;&lt;/currentPackageName&gt;          
         &lt;newPackageName&gt;${imspackage}&lt;/newPackageName&gt;          
         &lt;packageType&gt;IMS&lt;/packageType&gt;          
         &lt;updateAction&gt;&lt;/updateAction&gt;          
         &lt;parameter1&gt; &lt;/parameter1&gt;          
         &lt;parameter2&gt; &lt;/parameter2&gt;
         &lt;parameter3&gt; &lt;/parameter3&gt;
      &lt;/sub:wsChangePackage&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1934996511">&lt;responseCode&gt;200&lt;/responseCode&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsChangePackage with Subscriber Identity and new Package" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsChangePackage&gt;          
         &lt;subscriberID&gt;&lt;/subscriberID&gt;          
         &lt;alternateID&gt;${subscriberidentity}&lt;/alternateID&gt;          
         &lt;currentPackageName&gt;${imspackage}&lt;/currentPackageName&gt;          
         &lt;newPackageName&gt;${imspackage_2}&lt;/newPackageName&gt;          
         &lt;packageType&gt;IMS&lt;/packageType&gt;          
         &lt;updateAction&gt;&lt;/updateAction&gt;          
         &lt;parameter1&gt; &lt;/parameter1&gt;          
         &lt;parameter2&gt; &lt;/parameter2&gt;
         &lt;parameter3&gt; &lt;/parameter3&gt;
      &lt;/sub:wsChangePackage&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1934996511">&lt;responseCode&gt;200&lt;/responseCode&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsChangePackage with Subscriber Identity with update action" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsChangePackage&gt;          
         &lt;subscriberID&gt;&lt;/subscriberID&gt;          
         &lt;alternateID&gt;${subscriberidentity}&lt;/alternateID&gt;          
         &lt;currentPackageName&gt;${imspackage_2}&lt;/currentPackageName&gt;          
         &lt;newPackageName&gt;${imspackage}&lt;/newPackageName&gt;          
         &lt;packageType&gt;IMS&lt;/packageType&gt;          
         &lt;updateAction&gt;1&lt;/updateAction&gt;          
         &lt;parameter1&gt; &lt;/parameter1&gt;          
         &lt;parameter2&gt; &lt;/parameter2&gt;
         &lt;parameter3&gt; &lt;/parameter3&gt;
      &lt;/sub:wsChangePackage&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1934996511">&lt;responseCode&gt;200&lt;/responseCode&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Post Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop PD logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop logs" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-592019242">Stop PD log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="End of RTC_9003" enabled="true"/>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Module Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="RTC_9004" enabled="true">
        <stringProp name="TestPlan.comments">RTC_04 | Verify Add Monetary Balance Rest API</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1462792026000</longProp>
        <longProp name="ThreadGroup.end_time">1462792026000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="RTC_9004" enabled="true">
          <stringProp name="TestPlan.comments"> Verify Add Monetary Balance Web Service</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="identity" elementType="Argument">
                <stringProp name="Argument.name">identity</stringProp>
                <stringProp name="Argument.value">9111111104</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subscriber_package" elementType="Argument">
                <stringProp name="Argument.name">subscriber_package</stringProp>
                <stringProp name="Argument.value">RTC_9004_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ims_package" elementType="Argument">
                <stringProp name="Argument.name">ims_package</stringProp>
                <stringProp name="Argument.value">RTC_9004_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="tomcatlogs" elementType="Argument">
                <stringProp name="Argument.name">tomcatlogs</stringProp>
                <stringProp name="Argument.value">tomcat_9004</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">RTC_9004</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Pre Processing" enabled="true"/>
          <hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start of RTC_9001" enabled="true"/>
            <hashTree/>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Packages and Reload" enabled="true"/>
            <hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Pcap and Logs" enabled="false"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture PD Log" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="1033451790">Capture PD log </stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create DataPackage" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;RTC_2001_GY_BASE_111111111&lt;/id&gt;&#xd;
            &lt;name&gt;RTC_2001_GY_BASE&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 02/27/2018 11:43:20&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriod&gt;30&lt;/validityPeriod&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;RnC_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin on 02/27/2018 11:44:57&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_2001_pcc_profile&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules/&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;100&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;RTC_2001_Quota_profile&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
            &lt;rncProfileDatas&gt;&#xd;
                &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                &lt;id&gt;&lt;/id&gt;&#xd;
                &lt;balanceLevel&gt;HSQ&lt;/balanceLevel&gt;&#xd;
                &lt;description&gt;Created by admin on 02/27/2018 11:43:39&lt;/description&gt;&#xd;
                &lt;name&gt;RTC_2001_Quota_profile&lt;/name&gt;&#xd;
                &lt;quotaType&gt;VOLUME&lt;/quotaType&gt;&#xd;
                &lt;renewal-interval-unit&gt;MONTH&lt;/renewal-interval-unit&gt;&#xd;
                &lt;rncProfileDetailDatas&gt;&#xd;
                    &lt;balanceUnit&gt;MB&lt;/balanceUnit&gt;&#xd;
                    &lt;dataServiceType&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                    &lt;/dataServiceType&gt;&#xd;
                    &lt;fupLevel&gt;0&lt;/fupLevel&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;pulseTimeUnit&gt;SECOND&lt;/pulseTimeUnit&gt;&#xd;
                    &lt;pulseVolumeUnit&gt;MB&lt;/pulseVolumeUnit&gt;&#xd;
                    &lt;rateUnit&gt;TIME&lt;/rateUnit&gt;&#xd;
                    &lt;ratingGroupData&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;RATING_GROUP_1&lt;/id&gt;&#xd;
                        &lt;name&gt;Default_Rating_Group&lt;/name&gt;&#xd;
                    &lt;/ratingGroupData&gt;&#xd;
                    &lt;timeBalanceUnit&gt;SECOND&lt;/timeBalanceUnit&gt;&#xd;
                    &lt;timeLimitUnit&gt;SECOND&lt;/timeLimitUnit&gt;&#xd;
                    &lt;usageLimitUnit&gt;MB&lt;/usageLimitUnit&gt;&#xd;
                &lt;/rncProfileDetailDatas&gt;&#xd;
                &lt;unitType&gt;TOTAL&lt;/unitType&gt;&#xd;
            &lt;/rncProfileDatas&gt;&#xd;
            &lt;currency&gt;USD&lt;/currency&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/xml</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD : Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD : Policy -Reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsAddSubscribers" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsAddSubscribers&gt;           
         &lt;subscriberProfile&gt;              
            &lt;entry&gt;                
               &lt;key&gt;USERNAME&lt;/key&gt;                
               &lt;value&gt;${identity}&lt;/value&gt;
            &lt;/entry&gt;             
                &lt;entry&gt;
                  &lt;key&gt;IMSI&lt;/key&gt;
                  &lt;value&gt;${identity}&lt;/value&gt;
               &lt;/entry&gt;
            &lt;packageName&gt;${subscriber_package}&lt;/packageName&gt;           
            &lt;subscriberIdentity&gt;${identity}&lt;/subscriberIdentity&gt;
         &lt;/subscriberProfile&gt;
         &lt;subscriberProfile&gt;              
            &lt;entry&gt;                
               &lt;key&gt;USERNAME&lt;/key&gt;                
               &lt;value&gt;${identity_2}&lt;/value&gt;
            &lt;/entry&gt;             
              &lt;entry&gt;
                  &lt;key&gt;IMSI&lt;/key&gt;
                  &lt;value&gt;${identity_2}&lt;/value&gt;
               &lt;/entry&gt;
            &lt;packageName&gt;${subscriber_package}&lt;/packageName&gt;         
            &lt;subscriberIdentity&gt;${identity_2}&lt;/subscriberIdentity&gt;
         &lt;/subscriberProfile&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;          
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsAddSubscribers&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
                <stringProp name="-1620156334">&lt;responseMessage&gt;Total Subcriber Profiles added: 2&lt;/responseMessage&gt;</stringProp>
                <stringProp name="1087852535">&lt;subscriberProfile&gt;&lt;entry&gt;&lt;key&gt;${identity}&lt;/key&gt;&lt;value&gt;SUCCESS&lt;/value&gt;&lt;/entry&gt;&lt;/subscriberProfile&gt;</stringProp>
                <stringProp name="-15772700">&lt;subscriberProfile&gt;&lt;entry&gt;&lt;key&gt;${identity_2}&lt;/key&gt;&lt;value&gt;SUCCESS&lt;/value&gt;&lt;/entry&gt;&lt;/subscriberProfile&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Operation using Subscriber Identity" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">100</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsUpdateSubscriberProfile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsUpdateSubscriberProfile&gt;
	&lt;!--Optional:--&gt;
         &lt;subscriberProfile&gt;
            &lt;!--Zero or more repetitions:--&gt;
            &lt;entry&gt;
                  &lt;key&gt;USERNAME&lt;/key&gt;
                  &lt;value&gt;${identity}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUSTOMER_TYPE&lt;/key&gt;
                  &lt;value&gt;Postpaid&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;STATUS&lt;/key&gt;
                  &lt;value&gt;ACTIVE&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;BILLING_DATE&lt;/key&gt;
                  &lt;value&gt;30&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;AREA&lt;/key&gt;
                  &lt;value&gt;CG Road&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CITY&lt;/key&gt;
                  &lt;value&gt;Ahmedabad&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM1&lt;/key&gt;
                  &lt;value&gt;123&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM2&lt;/key&gt;
                  &lt;value&gt;456&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM3&lt;/key&gt;
                  &lt;value&gt;789&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM4&lt;/key&gt;
                  &lt;value&gt;654&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM5&lt;/key&gt;
                  &lt;value&gt;6576&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ZONE&lt;/key&gt;
                  &lt;value&gt;West&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COUNTRY&lt;/key&gt;
                  &lt;value&gt;INDIA&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ROLE&lt;/key&gt;
                  &lt;value&gt;Manager&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COMPANY&lt;/key&gt;
                  &lt;value&gt;Infosys&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;DEPARTMENT&lt;/key&gt;
                  &lt;value&gt;CSM&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ARPU&lt;/key&gt;
                  &lt;value&gt;65&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CADRE&lt;/key&gt;
                  &lt;value&gt;M2&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EMAIL&lt;/key&gt;
                  &lt;value&gt;radhika.sheladia@elitecore.com&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PHONE&lt;/key&gt;
                  &lt;value&gt;9475487512&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;SIP_URL&lt;/key&gt;
                  &lt;value&gt;65465&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUI&lt;/key&gt;
                  &lt;value&gt;3545&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMSI&lt;/key&gt;
                  &lt;value&gt;${identity}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;MSISDN&lt;/key&gt;
                  &lt;value&gt;${identity}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;MAC&lt;/key&gt;
                  &lt;value&gt;sda:00:sad2:&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EUI64&lt;/key&gt;
                  &lt;value&gt;543121&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;MODIFIED_EUI64&lt;/key&gt;
                  &lt;value&gt;687654&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ENCRYPTION_TYPE&lt;/key&gt;
                  &lt;value&gt;16&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ESN&lt;/key&gt;
                  &lt;value&gt;52222224&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;MEID&lt;/key&gt;
                  &lt;value&gt;354454&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARENT_ID&lt;/key&gt;
                  &lt;value&gt;687654&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;GROUP_NAME&lt;/key&gt;
                  &lt;value&gt;Gujarat&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMEI&lt;/key&gt;
                  &lt;value&gt;68765435413574&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;SUBSCRIBER_LEVEL_METERING&lt;/key&gt;
                  &lt;value&gt;ENABLE&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD_CHECK&lt;/key&gt;
                  &lt;value&gt;TRUE&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;SY_INTERFACE&lt;/key&gt;
                  &lt;value&gt;TRUE&lt;/value&gt;
               &lt;/entry&gt;
         &lt;/subscriberProfile&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberID&gt;${identity}&lt;/subscriberID&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;updateAction&gt;0&lt;/updateAction&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsUpdateSubscriberProfile&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">action=0</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsGetSubscriberProfileByID" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetSubscriberProfileByID&gt;
         &lt;subscriberID&gt;${identity}&lt;/subscriberID&gt;
         &lt;alternateID&gt;&lt;/alternateID&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsGetSubscriberProfileByID&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                <stringProp name="1231365099">&lt;key&gt;SUBSCRIBER_IDENTITY&lt;/key&gt;&lt;value&gt;${identity}&lt;/value&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsDeleteSubscriberProfile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsDeleteSubscriberProfile&gt;
         &lt;subscriberID&gt;${identity}&lt;/subscriberID&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsDeleteSubscriberProfile&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsGetSubscriberProfileByID" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetSubscriberProfileByID&gt;
         &lt;subscriberID&gt;${identity}&lt;/subscriberID&gt;
         &lt;alternateID&gt;&lt;/alternateID&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsGetSubscriberProfileByID&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1055867741">&lt;responseCode&gt;404&lt;/responseCode&gt;&lt;responseMessage&gt;Subscriber Not found&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsRestoreSubscriber" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsRestoreSubscriber&gt;
         &lt;subscriberID&gt;${identity}&lt;/subscriberID&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;param1&gt;&lt;/param1&gt;
         &lt;param2&gt;&lt;/param2&gt;
      &lt;/sub:wsRestoreSubscriber&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsMigrateSubscriber" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsMigrateSubscriber&gt;
         &lt;!--Optional:--&gt;
         &lt;currentSubscriberIdentity&gt;${identity}&lt;/currentSubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;newSubscriberIdentity&gt;${new_identity}&lt;/newSubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;param1&gt;?&lt;/param1&gt;
         &lt;!--Optional:--&gt;
         &lt;param2&gt;?&lt;/param2&gt;
      &lt;/sub:wsMigrateSubscriber&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsGetSubscriberProfileByID" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetSubscriberProfileByID&gt;
         &lt;subscriberID&gt;${new_identity}&lt;/subscriberID&gt;
         &lt;alternateID&gt;&lt;/alternateID&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsGetSubscriberProfileByID&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                <stringProp name="-1524561652">&lt;key&gt;SUBSCRIBER_IDENTITY&lt;/key&gt;&lt;value&gt;${new_identity}&lt;/value&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsDeleteSubscriberProfile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsDeleteSubscriberProfile&gt;
         &lt;subscriberID&gt;${new_identity}&lt;/subscriberID&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsDeleteSubscriberProfile&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsPurgeSubscriber" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsPurgeSubscriber&gt;
         &lt;subscriberID&gt;${new_identity}&lt;/subscriberID&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;param1&gt;&lt;/param1&gt;
         &lt;param2&gt;&lt;/param2&gt;
      &lt;/sub:wsPurgeSubscriber&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsRestoreSubscriber" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsRestoreSubscriber&gt;
         &lt;subscriberID&gt;${new_identity}&lt;/subscriberID&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;param1&gt;&lt;/param1&gt;
         &lt;param2&gt;&lt;/param2&gt;
      &lt;/sub:wsRestoreSubscriber&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-403348603">&lt;responseCode&gt;404&lt;/responseCode&gt;&lt;responseMessage&gt;NOT FOUND&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsGetSubscriberProfileByID" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetSubscriberProfileByID&gt;
         &lt;subscriberID&gt;${new_identity}&lt;/subscriberID&gt;
         &lt;alternateID&gt;&lt;/alternateID&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsGetSubscriberProfileByID&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1055867741">&lt;responseCode&gt;404&lt;/responseCode&gt;&lt;responseMessage&gt;Subscriber Not found&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Operation using Alternate Identity" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">100</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsUpdateSubscriberProfile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsUpdateSubscriberProfile&gt;
	&lt;!--Optional:--&gt;
         &lt;subscriberProfile&gt;
            &lt;!--Zero or more repetitions:--&gt;
            &lt;entry&gt;
                  &lt;key&gt;USERNAME&lt;/key&gt;
                  &lt;value&gt;${identity_2}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUSTOMER_TYPE&lt;/key&gt;
                  &lt;value&gt;Postpaid&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;STATUS&lt;/key&gt;
                  &lt;value&gt;ACTIVE&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;BILLING_DATE&lt;/key&gt;
                  &lt;value&gt;30&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;AREA&lt;/key&gt;
                  &lt;value&gt;CG Road&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CITY&lt;/key&gt;
                  &lt;value&gt;Ahmedabad&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM1&lt;/key&gt;
                  &lt;value&gt;123456&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM2&lt;/key&gt;
                  &lt;value&gt;123456&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM3&lt;/key&gt;
                  &lt;value&gt;123456&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM4&lt;/key&gt;
                  &lt;value&gt;123456&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM5&lt;/key&gt;
                  &lt;value&gt;123456&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ZONE&lt;/key&gt;
                  &lt;value&gt;West&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COUNTRY&lt;/key&gt;
                  &lt;value&gt;INDIA&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ROLE&lt;/key&gt;
                  &lt;value&gt;Manager&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COMPANY&lt;/key&gt;
                  &lt;value&gt;Elitecore&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;DEPARTMENT&lt;/key&gt;
                  &lt;value&gt;CSM&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ARPU&lt;/key&gt;
                  &lt;value&gt;65&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CADRE&lt;/key&gt;
                  &lt;value&gt;M2&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EMAIL&lt;/key&gt;
                  &lt;value&gt;radhika.patel@elitecore.com&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PHONE&lt;/key&gt;
                  &lt;value&gt;9475487512&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;SIP_URL&lt;/key&gt;
                  &lt;value&gt;123456&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUI&lt;/key&gt;
                  &lt;value&gt;123456&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMSI&lt;/key&gt;
                  &lt;value&gt;${identity_2}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;MSISDN&lt;/key&gt;
                  &lt;value&gt;${identity_2}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;MAC&lt;/key&gt;
                  &lt;value&gt;sda:00:sad2:1&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EUI64&lt;/key&gt;
                  &lt;value&gt;123456&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;MODIFIED_EUI64&lt;/key&gt;
                  &lt;value&gt;123456&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ENCRYPTION_TYPE&lt;/key&gt;
                  &lt;value&gt;16&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ESN&lt;/key&gt;
                  &lt;value&gt;123456&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;MEID&lt;/key&gt;
                  &lt;value&gt;354454&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARENT_ID&lt;/key&gt;
                  &lt;value&gt;687654&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;GROUP_NAME&lt;/key&gt;
                  &lt;value&gt;Gujarat&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMEI&lt;/key&gt;
                  &lt;value&gt;1234567890&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;SUBSCRIBER_LEVEL_METERING&lt;/key&gt;
                  &lt;value&gt;ENABLE&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD_CHECK&lt;/key&gt;
                  &lt;value&gt;FALSE&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;SY_INTERFACE&lt;/key&gt;
                  &lt;value&gt;FALSE&lt;/value&gt;
               &lt;/entry&gt;
         &lt;/subscriberProfile&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberID&gt;&lt;/subscriberID&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;${identity_2}&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;updateAction&gt;0&lt;/updateAction&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsUpdateSubscriberProfile&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION">action=0</stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsGetSubscriberProfileByID" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetSubscriberProfileByID&gt;
         &lt;subscriberID&gt;&lt;/subscriberID&gt;
         &lt;alternateID&gt;${identity_2}&lt;/alternateID&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsGetSubscriberProfileByID&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                <stringProp name="-438749672">&lt;key&gt;SUBSCRIBER_IDENTITY&lt;/key&gt;&lt;value&gt;${identity_2}&lt;/value&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsDeleteSubscriberProfile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsDeleteSubscriberProfile&gt;
         &lt;subscriberID&gt;&lt;/subscriberID&gt;
         &lt;alternateId&gt;${identity_2}&lt;/alternateId&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsDeleteSubscriberProfile&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsGetSubscriberProfileByID" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetSubscriberProfileByID&gt;
         &lt;subscriberID&gt;&lt;/subscriberID&gt;
         &lt;alternateID&gt;${identity_2}&lt;/alternateID&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsGetSubscriberProfileByID&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1055867741">&lt;responseCode&gt;404&lt;/responseCode&gt;&lt;responseMessage&gt;Subscriber Not found&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsRestoreSubscriber" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsRestoreSubscriber&gt;
         &lt;subscriberID&gt;&lt;/subscriberID&gt;
         &lt;alternateId&gt;${identity_2}&lt;/alternateId&gt;
         &lt;param1&gt;&lt;/param1&gt;
         &lt;param2&gt;&lt;/param2&gt;
      &lt;/sub:wsRestoreSubscriber&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsGetSubscriberProfileByID" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetSubscriberProfileByID&gt;
         &lt;subscriberID&gt;&lt;/subscriberID&gt;
         &lt;alternateID&gt;${identity_2}&lt;/alternateID&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsGetSubscriberProfileByID&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1304125707">responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                <stringProp name="-438749672">&lt;key&gt;SUBSCRIBER_IDENTITY&lt;/key&gt;&lt;value&gt;${identity_2}&lt;/value&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsDeleteSubscriberProfile" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsDeleteSubscriberProfile&gt;
         &lt;subscriberID&gt;&lt;/subscriberID&gt;
         &lt;alternateId&gt;${identity_2}&lt;/alternateId&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsDeleteSubscriberProfile&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsPurgeSubscriber" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsPurgeSubscriber&gt;
         &lt;subscriberID&gt;&lt;/subscriberID&gt;
         &lt;alternateId&gt;${identity_2}&lt;/alternateId&gt;
         &lt;param1&gt;&lt;/param1&gt;
         &lt;param2&gt;&lt;/param2&gt;
      &lt;/sub:wsPurgeSubscriber&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsRestoreSubscriber" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsRestoreSubscriber&gt;
         &lt;subscriberID&gt;&lt;/subscriberID&gt;
         &lt;alternateId&gt;${identity_2}&lt;/alternateId&gt;
         &lt;param1&gt;&lt;/param1&gt;
         &lt;param2&gt;&lt;/param2&gt;
      &lt;/sub:wsRestoreSubscriber&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1074218656">&lt;responseCode&gt;404&lt;/responseCode&gt;&lt;responseMessage&gt;NOT FOUND. Reason: Unable to restore subscriber profile. Reason: subscriber identity not found for alternate Id: ${identity_2}&lt;/responseMessage&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="wsGetSubscriberProfileByID" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetSubscriberProfileByID&gt;
         &lt;subscriberID&gt;&lt;/subscriberID&gt;
         &lt;alternateID&gt;${identity_2}&lt;/alternateID&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsGetSubscriberProfileByID&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="740909986">&lt;responseCode&gt;404&lt;/responseCode&gt;&lt;responseMessage&gt;NOT FOUND Reason: Unable to search subscriber profile. Reason: Subscriber Identity not found&lt;/responseMessage&gt;&lt;/return&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Post Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop PD logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop logs" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-592019242">Stop PD log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Module Controller" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="End of RTC_9001" enabled="true"/>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="com.computaris.jmeter.visualizers.gui.DiameterDispatcherVizualizer" testclass="ResultCollector" testname="Diameter Messages" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>false</time>
            <latency>false</latency>
            <timestamp>false</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <stringProp name="TestPlan.comments">	</stringProp>
      </ResultCollector>
      <hashTree/>
      <JSR223Listener guiclass="TestBeanGUI" testclass="JSR223Listener" testname="Test-Rail Push Result JSR223 Listener" enabled="false">
        <stringProp name="TestPlan.comments">This Listener will Push Pass/Fail Result to Test Rail</stringProp>
        <stringProp name="cacheKey"></stringProp>
        <stringProp name="filename"></stringProp>
        <stringProp name="parameters">${test_run_id} ${test_case_id}</stringProp>
        <stringProp name="script">import java.util.HashMap;
import java.util.Map;
import org.json.simple.JSONObject;
import org.apache.jorphan.logging.LoggingManager;
import com.gurock.testrail.APIClient;
import org.apache.jmeter.samplers.*;
import org.apache.jmeter.assertions.*;

		
APIClient client = new APIClient(&quot;http://192.168.2.138/csmqa/&quot;);
client.setUser(&quot;nirav.modhiya@elitecore.com&quot;);
client.setPassword(&quot;elitecore&quot;);	

LoggingManager.getLoggerForClass().info(&quot;JSON Object To Be Sent Is : &quot;+ args);
// Here STATUS 1 is for &apos;Passed&apos; and &apos;5&apos; is for &apos;Failed&apos;
String STATUS_ID = &quot;status_id&quot;;
//Validations on results

Map data = new HashMap();
LoggingManager.getLoggerForClass().info(&quot;SampleResult.isStopThread : &quot;+ sampleResult.isStopThread()); 
LoggingManager.getLoggerForClass().info(&quot;SampleResult.isSuccessful : &quot;+ sampleResult.isSuccessful()); 

int status = 1;
// 1) This will be executed when all the samplers are executed succesffully.
String commit = &quot;All the Steps are executed Successfully&quot;
// 1) End

// 2) Exectuion failed on Sampler. i.e. Sampler ERROR &amp; Test Thread is stopped.
if(sampleResult.isStopThread()) {
	status = 5;
	Sampler sampler = ctx.getCurrentSampler();
	commit = &quot;\n&quot; + sampler.getName() + &quot; execution failed&quot;;
// 2) End
	
} else {
// 3) Execution failed on Assertion. i.e. Assertion failed / multiple Assertion failed.
	Sampler sampler = ctx.getCurrentSampler();
	String name = sampler.getName();

	if(name.equals(&quot;end sampler&quot;)){
		status = 1;
	} else if (sampleResult.isSuccessful() == false) {
		status = 5;

		if(sampleResult.getAssertionResults() == null || sampleResult.getAssertionResults().size() == 0) {
			commit = &quot;Execution failed of: &quot; + &quot;\n Thread Name: &quot; + sampler.getThreadName() + &quot;\n Sampler Name: &quot; + sampler.getName();
			LoggingManager.getLoggerForClass().info(&quot;SampleResult.isSuccessful : &quot;+ sampleResult.isSuccessful());
		} else {
			commit = &quot;Execution failed of: &quot; + &quot;\n Thread Name: &quot; + sampler.getThreadName() + &quot;\n Sampler Name: &quot; + sampler.getName() + &quot; on following Assertion:&quot;;
			for (AssertionResult assertionResult : sampleResult.getAssertionResults()) {
	
				if(assertionResult.isFailure() || assertionResult.isError()) {
commit = commit + &quot;\n Assertion Name: &quot; + assertionResult.getName() + &quot;\n Assertion Failure Message: &quot; + assertionResult.getFailureMessage();
				}
			}
		}
	} else {
		return;
	}
}
// 3) End

// Null Check for Elapsed Time.
String elapsedTime = vars.get(&quot;elapsed_time&quot;);
if (elapsedTime == null) {
	LoggingManager.getLoggerForClass().error(&quot;&lt;&lt; Elapsed Time is not defined in Global Variable Definition &gt;&gt;&quot;);
	return;
} else {
LoggingManager.getLoggerForClass().info(&quot;elapsed time is: &quot; + elapsedTime);
}

// Null Check for Checked Version.
String checkedVersion = vars.get(&quot;checked_version&quot;);
if (checkedVersion == null) {
	LoggingManager.getLoggerForClass().error(&quot;&lt;&lt; Checked Version is not defined in Global Variable Definition &gt;&gt;&quot;);
	return;
} else {
LoggingManager.getLoggerForClass().info(&quot;Checked Version is: &quot; + checkedVersion);
}

// Null Check for Checked Revision.
String checkedRevision = vars.get(&quot;checked_revision&quot;);
if (checkedRevision == null) {
	LoggingManager.getLoggerForClass().error(&quot;&lt;&lt; Checked Revision is not defined in Global Variable Definition &gt;&gt;&quot;);
	return;
} else {
LoggingManager.getLoggerForClass().info(&quot;Checked Revision is: &quot; + checkedRevision);
}

// Null Check for Test Run ID.
String testRunId = vars.get(&quot;test_run_id&quot;);
if (testRunId == null) {
	LoggingManager.getLoggerForClass().error(&quot;&lt;&lt; Test Run ID is not defined in Global Variable Definition &gt;&gt;&quot;);
	return;
} else {
LoggingManager.getLoggerForClass().info(&quot;Test Run ID is: &quot; + testRunId);
}

// Null Check for Test Case ID.
String testCaseId = vars.get(&quot;test_case_id&quot;);
if (testCaseId == null) {
	LoggingManager.getLoggerForClass().error(&quot;&lt;&lt; Test Case ID is not defined in TTS Parameterized Configuration &gt;&gt;&quot;);
	return;
} else {
LoggingManager.getLoggerForClass().info(&quot;Test Case ID is: &quot; + testCaseId);
}

data.put(STATUS_ID, status);
data.put(&quot;comment&quot;, commit);
// Elapsed time is in Minutes
data.put(&quot;elapsed&quot;, new Integer(elapsedTime));
data.put(&quot;custom_version&quot;, new Integer(checkedVersion));
data.put(&quot;custom_revision&quot;, new Integer(checkedRevision));
LoggingManager.getLoggerForClass().info(&quot;Add_result_for_case/&quot;+args[0]+&quot;/&quot;+args[1]);
JSONObject r = (JSONObject) client.sendPost(&quot;Add_result_for_case/&quot;+args[0]+&quot;/&quot;+args[1], data);
LoggingManager.getLoggerForClass().info(&quot;JSON Object To Be Sent Is : &quot;+ r);</stringProp>
        <stringProp name="scriptLanguage">groovy</stringProp>
      </JSR223Listener>
      <hashTree/>
      <PostThreadGroup guiclass="PostThreadGroupGui" testclass="PostThreadGroup" testname="tearDown Thread Group" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1473851955000</longProp>
        <longProp name="ThreadGroup.end_time">1473851955000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </PostThreadGroup>
      <hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop Pcap" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Teardown_Stop PCAP On Server" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill  ${PcapPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill -9 `ps -ef | grep -w &apos;tcpdump&apos; | awk &apos;{print $2}&apos;`</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.modifiers.DiameterLoad guiclass="com.computaris.jmeter.modifiers.gui.DiameterLoadGui" testclass="com.computaris.jmeter.modifiers.DiameterLoad" testname="TTS Load Variable" enabled="true">
              <stringProp name="DiameterLoaddefault"></stringProp>
              <stringProp name="DiameterLoadrefname">PcapPID</stringProp>
              <stringProp name="DiameterLoadvalue">PcapPID</stringProp>
              <boolProp name="DiameterLoadtolerant">false</boolProp>
            </com.computaris.jmeter.modifiers.DiameterLoad>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop NV log" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Teardown_StopNV logs" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill ${LogPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill -9 `ps -ef | grep -w &apos;tail&apos; | awk &apos;{print $2}&apos;`</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.modifiers.DiameterLoad guiclass="com.computaris.jmeter.modifiers.gui.DiameterLoadGui" testclass="com.computaris.jmeter.modifiers.DiameterLoad" testname="TTS Load Variable" enabled="true">
              <stringProp name="DiameterLoaddefault"></stringProp>
              <stringProp name="DiameterLoadrefname">LogPID</stringProp>
              <stringProp name="DiameterLoadvalue">LogPID</stringProp>
              <boolProp name="DiameterLoadtolerant">false</boolProp>
            </com.computaris.jmeter.modifiers.DiameterLoad>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Common Functions" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1454995107000</longProp>
        <longProp name="ThreadGroup.end_time">1454995107000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture PCAP" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Start Pcap" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>mkdir -p ${logpath}/${pcapdir}</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>nohup  /usr/sbin/tcpdump -s 0 -i any port ${diameterport} or ${syport} -w ${logpath}/${pcapdir}/${pcapdir}.pcap  &amp; echo $!</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>mkdir -p ${logpath}/${pcapdir}</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>nohup  /usr/sbin/tcpdump -s 0 -i any port ${diameterport} or ${syport} -w ${logpath}/${pcapdir}/${pcapdir}.pcap  &amp; echo $!</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.extractor.DiameterStore guiclass="com.computaris.jmeter.extractor.gui.DiameterStoreGui" testclass="com.computaris.jmeter.extractor.DiameterStore" testname="Store PID of Tcpdump Command " enabled="true">
              <stringProp name="DiameterStoredefault"></stringProp>
              <stringProp name="DiameterStorerefname">PcapPID</stringProp>
              <stringProp name="DiameterStorevalue">${__telnetSSHGetResultLineByRegex(2,^\d+$)}</stringProp>
              <boolProp name="DiameterStoretolerant">true</boolProp>
            </com.computaris.jmeter.extractor.DiameterStore>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop Pcap" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Stop PCAP On Server" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill  ${PcapPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill  ${PcapPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.modifiers.DiameterLoad guiclass="com.computaris.jmeter.modifiers.gui.DiameterLoadGui" testclass="com.computaris.jmeter.modifiers.DiameterLoad" testname="TTS Load Variable" enabled="true">
              <stringProp name="DiameterLoaddefault"></stringProp>
              <stringProp name="DiameterLoadrefname">PcapPID</stringProp>
              <stringProp name="DiameterLoadvalue">PcapPID</stringProp>
              <boolProp name="DiameterLoadtolerant">false</boolProp>
            </com.computaris.jmeter.modifiers.DiameterLoad>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture log " enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Start NV logs" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>mkdir -p ${logpath}/${pcapdir}</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>nohup tail -f ${nvhome}/logs/*&gt;${logpath}/${pcapdir}/${pcapdir}-server.log &amp; echo $!</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>mkdir -p ${logpath}/${pcapdir}</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>nohup tail -f ${nvhome}/logs/*&gt;${logpath}/${pcapdir}/${pcapdir}-server.log &amp; echo $!</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.extractor.DiameterStore guiclass="com.computaris.jmeter.extractor.gui.DiameterStoreGui" testclass="com.computaris.jmeter.extractor.DiameterStore" testname="Store PID of log Command" enabled="true">
              <stringProp name="DiameterStoredefault"></stringProp>
              <stringProp name="DiameterStorerefname">LogPID</stringProp>
              <stringProp name="DiameterStorevalue">${__telnetSSHGetResultLineByRegex(2,^\d+$)}</stringProp>
              <boolProp name="DiameterStoretolerant">true</boolProp>
            </com.computaris.jmeter.extractor.DiameterStore>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture PD log " enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Start PD logs" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>nohup tail -f ${nvhome}/logs/netvertex-server-${serverinstancename}.log&gt;/opt/${logpath}/${pcapdir}/${logfilename}.log &amp; echo $!</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>mkdir -p ${logpath}/${pcapdir}</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>nohup tail -f ${pdhome}/logs/*&gt;${logpath}/${pcapdir}/${pcapdir}-policy-designer.log &amp; echo $!</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.extractor.DiameterStore guiclass="com.computaris.jmeter.extractor.gui.DiameterStoreGui" testclass="com.computaris.jmeter.extractor.DiameterStore" testname="Store PID of log Command" enabled="true">
              <stringProp name="DiameterStoredefault"></stringProp>
              <stringProp name="DiameterStorerefname">PDPID</stringProp>
              <stringProp name="DiameterStorevalue">${__telnetSSHGetResultLineByRegex(2,^\d+$)}</stringProp>
              <boolProp name="DiameterStoretolerant">true</boolProp>
            </com.computaris.jmeter.extractor.DiameterStore>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop NV log" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="StopNV logs" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill ${LogPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill ${LogPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.modifiers.DiameterLoad guiclass="com.computaris.jmeter.modifiers.gui.DiameterLoadGui" testclass="com.computaris.jmeter.modifiers.DiameterLoad" testname="TTS Load Variable" enabled="true">
              <stringProp name="DiameterLoaddefault"></stringProp>
              <stringProp name="DiameterLoadrefname">LogPID</stringProp>
              <stringProp name="DiameterLoadvalue">LogPID</stringProp>
              <boolProp name="DiameterLoadtolerant">false</boolProp>
            </com.computaris.jmeter.modifiers.DiameterLoad>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop PD log" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="StopPD logs" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill ${LogPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill ${PDPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.modifiers.DiameterLoad guiclass="com.computaris.jmeter.modifiers.gui.DiameterLoadGui" testclass="com.computaris.jmeter.modifiers.DiameterLoad" testname="TTS Load Variable" enabled="true">
              <stringProp name="DiameterLoaddefault"></stringProp>
              <stringProp name="DiameterLoadrefname">PDPID</stringProp>
              <stringProp name="DiameterLoadvalue">PDPID</stringProp>
              <boolProp name="DiameterLoadtolerant">false</boolProp>
            </com.computaris.jmeter.modifiers.DiameterLoad>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="NV Restart " enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="NV Restart " enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;shutdown\ abort&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>3000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; sh netvertex.sh&quot;</__commandText>
                  <__timeout>20000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;shutdown\ abort&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>3000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; sh netvertex.sh&quot;</__commandText>
                  <__timeout>20000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Tomcat log " enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Start Tomcat logs" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>nohup tail -f ${nvhome}/logs/netvertex-server-${serverinstancename}.log&gt;/opt/${logpath}/${pcapdir}/${logfilename}.log &amp; echo $!</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>/bin/mkdir -p ${logpath}/${pcapdir}</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>nohup tail -f ${tomcat_home}/logs/catalina.out&gt;${logpath}/${pcapdir}/${tomcatlogs}.log &amp; echo $!</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.extractor.DiameterStore guiclass="com.computaris.jmeter.extractor.gui.DiameterStoreGui" testclass="com.computaris.jmeter.extractor.DiameterStore" testname="Store PID of log Command" enabled="true">
              <stringProp name="DiameterStoredefault"></stringProp>
              <stringProp name="DiameterStorerefname">TomcatLogPID</stringProp>
              <stringProp name="DiameterStorevalue">${__telnetSSHGetResultLineByRegex(2,^\d+$)}</stringProp>
              <boolProp name="DiameterStoretolerant">true</boolProp>
            </com.computaris.jmeter.extractor.DiameterStore>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop Tomcat log" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Stop Tomcat logs" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill ${LogPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill ${TomcatLogPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.modifiers.DiameterLoad guiclass="com.computaris.jmeter.modifiers.gui.DiameterLoadGui" testclass="com.computaris.jmeter.modifiers.DiameterLoad" testname="TTS Load Variable" enabled="true">
              <stringProp name="DiameterLoaddefault"></stringProp>
              <stringProp name="DiameterLoadrefname">TomcatLogPID</stringProp>
              <stringProp name="DiameterLoadvalue">TomcatLogPID</stringProp>
              <boolProp name="DiameterLoadtolerant">false</boolProp>
            </com.computaris.jmeter.modifiers.DiameterLoad>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="NV Restart (shut immediate)" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="NV Restart (shut immediate)" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - netvertex -c &quot;cd /home/netvertex/netvertex662/netvertex/bin; echo &quot;shutdown\ immediate&quot; | sh cli.sh&quot; ; sleep 5</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - netvertex -c &quot;cd /home/netvertex/netvertex662/netvertex/bin; sh netvertex.sh&quot;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;shutdown\ abort&quot; | sh cli.sh&quot; ; sleep 5</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; sh netvertex.sh&quot;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="show statistics usage" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="show statistics usage" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - netvertex -c &quot;cd /home/netvertex/netvertex662/netvertex/bin; echo &quot;show\ statistics\ usage&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;show\ statistics\ usage&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="clear statistics usage" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="clear statistics usage" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - netvertex -c &quot;cd /home/netvertex/netvertex662/netvertex/bin; echo &quot;clear\ statistics\ usage&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;clear\ statistics\ usage&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="show spr-cache Stats" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="show statistics cache spr-cache" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - netvertex -c &quot;cd /home/netvertex/netvertex662/netvertex/bin; echo &quot;show\ statistics\ usage&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;show\ statistics\ cache\ spr-cache&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="clear spr-cache Stats" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="clear statistics cache spr-cache" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - netvertex -c &quot;cd /home/netvertex/netvertex662/netvertex/bin; echo &quot;show\ statistics\ usage&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;clear\ statistics\ cache\ spr-cache&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="clear spr-cache" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="clear cache spr-cache -all" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - netvertex -c &quot;cd /home/netvertex/netvertex662/netvertex/bin; echo &quot;show\ statistics\ usage&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;clear\ cache\ spr-cache\ -all&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Tomcat Restart " enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Tomcat Restart " enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;shutdown\ abort&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; sh netvertex.sh&quot;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${tomcat_home}/bin; sh shutdown.sh&quot; ; sleep 3</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${tomcat_home}/bin; sh shutdown.sh&quot; ;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${tomcat_home}/bin; rm -rf ../work/*&quot; </__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${tomcat_home}/bin; sh startup.sh&quot; ; sleep 15</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Set spr.cache-enabled = true" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Set spr.cache-enabled = true" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;vi ${nvhome}/system/misc-config.properties&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/#spr.cache-enabled = true/spr.cache-enabled = true/g</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/spr.cache-enabled = false/spr.cache-enabled = true/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:x</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Set spr.cache-enabled = false" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Set spr.cache-enabled = false" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;vi ${nvhome}/system/misc-config.properties&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/#spr.cache-enabled = true/spr.cache-enabled = false/g</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/spr.cache-enabled = true/spr.cache-enabled = false/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:x</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="serverinitiated.destination-host = true" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="serverinitiated.destination-host = true" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;vi ${nvhome}/system/misc-config.properties&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/#serverinitiated.destination-host = true/serverinitiated.destination-host = true/g</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/serverinitiated.destination-host = false/serverinitiated.destination-host = true/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/#serverinitiated.destination-host = false/serverinitiated.destination-host = true/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/#serverinitiated.destination-host = true/serverinitiated.destination-host = true/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:x</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="serverinitiated.destination-host = false" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Set spr.cache-enabled = false" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;vi ${nvhome}/system/misc-config.properties&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/#serverinitiated.destination-host = true/serverinitiated.destination-host = false/g</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/serverinitiated.destination-host = true/serverinitiated.destination-host = false/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/#serverinitiated.destination-host = false/serverinitiated.destination-host = false/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:x</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="set -Drevalidationtime.delta=0" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="-Drevalidationtime.delta=0" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;vi ${nvhome}/bin/netvertex.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/server.gcInterval=86400000/server.gcInterval=86400000 -Drevalidationtime.delta=0/g</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/server.gcInterval=86400000 -Drevalidationtime.delta=0 -Drevalidationtime.delta=0/server.gcInterval=86400000 -Drevalidationtime.delta=0/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:x</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
        <hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="end sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">false</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PD: Reload Policy" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/policy/reload/policy</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Set session.cache-enabled = true" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Set session.cache-enabled = true" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;vi ${nvhome}/system/misc-config.properties&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/session.cache-enabled = false/session.cache-enabled = true/g</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/session.cache-enabled = true/session.cache-enabled = true/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:x</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Set session.cache-enabled = false" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Set session.cache-enabled = false" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;vi ${nvhome}/system/misc-config.properties&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/session.cache-enabled = false/session.cache-enabled = false/g</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/session.cache-enabled = true/session.cache-enabled = false/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:x</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="RConf" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Rconf" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;&apos;rconf&apos;&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>20000</__timeout>
                  <__waitFor>Server Configuration Successfully Reloaded for NetVertex</__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1770785172">Server Configuration Successfully Reloaded for NetVertex</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Verify PCRF Running" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Verify PCRF Running" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;&apos;services&apos;&quot; | sh cli.sh&quot; | grep PCRF</__commandText>
                  <__timeout>3000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1079530081">Running</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Verify OfflineRnC Running" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Verify OfflineRnC Running" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;&apos;services&apos;&quot; | sh cli.sh&quot; | grep OfflineRnC</__commandText>
                  <__timeout>3000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1079530081">Running</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Verify Diameter Running" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Verify Diameter Running" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;&apos;globallisteners&apos;&quot; | sh cli.sh&quot; | grep DIAMETER</__commandText>
                  <__timeout>3000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1079530081">Running</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Verify Radius Running" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Verify Radius Running" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;&apos;globallisteners&apos;&quot; | sh cli.sh&quot; | grep RADIUS</__commandText>
                  <__timeout>3000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1079530081">Running</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
