<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.0 r1840935">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Automation_PCC_72xx" enabled="true">
      <stringProp name="TestPlan.comments">Automation of PCC</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <kg.apc.jmeter.config.VariablesFromCSV guiclass="kg.apc.jmeter.config.VariablesFromCSVGui" testclass="kg.apc.jmeter.config.VariablesFromCSV" testname="Global Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
        <stringProp name="filename">global.variables</stringProp>
        <stringProp name="variablesPrefix"></stringProp>
        <stringProp name="delimiter">::</stringProp>
        <intProp name="skipLines">0</intProp>
        <boolProp name="storeSysProp">false</boolProp>
      </kg.apc.jmeter.config.VariablesFromCSV>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Mapping Variable" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="mapping_file_name" elementType="Argument">
            <stringProp name="Argument.name">mapping_file_name</stringProp>
            <stringProp name="Argument.value">PCRF_Sy_Mapping.csv</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <com.harshdev.rndjmeter.diameter.config.DiameterChannelConfig guiclass="com.harshdev.rndjmeter.diameter.config.gui.DiameterChannelConfigGui" testclass="com.harshdev.rndjmeter.diameter.config.DiameterChannelConfig" testname="Diameter Stack" enabled="true">
        <boolProp name="server-ce">true</boolProp>
        <boolProp name="send-ce">true</boolProp>
        <boolProp name="server-dw">true</boolProp>
        <boolProp name="server-dp">true</boolProp>
        <stringProp name="origin-host">${originhost}</stringProp>
        <stringProp name="origin-realm">${originrealm}</stringProp>
        <boolProp name="remote-conn">true</boolProp>
        <stringProp name="local-ip">0.0.0.0</stringProp>
        <stringProp name="local-port">3868</stringProp>
        <stringProp name="remote-ip">${serverip}</stringProp>
        <stringProp name="remote-port">${diameterport}</stringProp>
        <stringProp name="conn-timeout">300</stringProp>
      </com.harshdev.rndjmeter.diameter.config.DiameterChannelConfig>
      <hashTree/>
      <com.harshdev.rndjmeter.diameter.config.DiameterChannelConfig guiclass="com.harshdev.rndjmeter.diameter.config.gui.DiameterChannelConfigGui" testclass="com.harshdev.rndjmeter.diameter.config.DiameterChannelConfig" testname="Diameter Stack for Sy" enabled="true">
        <boolProp name="server-ce">true</boolProp>
        <boolProp name="send-ce">true</boolProp>
        <boolProp name="server-dw">true</boolProp>
        <boolProp name="server-dp">true</boolProp>
        <stringProp name="origin-host">${sy_origin_host}</stringProp>
        <stringProp name="origin-realm">${sy_origin_realm}</stringProp>
        <boolProp name="remote-conn">true</boolProp>
        <stringProp name="local-ip">0.0.0.0</stringProp>
        <stringProp name="local-port">3868</stringProp>
        <stringProp name="remote-ip">${serverip}</stringProp>
        <stringProp name="remote-port">${diameterport}</stringProp>
        <stringProp name="conn-timeout">300</stringProp>
      </com.harshdev.rndjmeter.diameter.config.DiameterChannelConfig>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
        <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
        <stringProp name="HTTPSampler.protocol">http</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="Content-Type" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="Authorization" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value">Basic YWRtaW46YWRtaW4=</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery">Select 1 from dual</stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">DB</stringProp>
        <stringProp name="dbUrl">jdbc:oracle:thin:@${dbserverip}:${dbserverport}/${dbserversid}</stringProp>
        <stringProp name="driver">oracle.jdbc.driver.OracleDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">${dbpassword}</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">${dbusername}</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sy-RTC_35" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Sy-RTC_35 | Sy | Verify Sy Counter Based Plan with PULL Mode with HSQ and Two Level FUP with PCC</stringProp>
      </ThreadGroup>
      <hashTree>
        <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="Sy-RTC_35" enabled="true">
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriber_id" elementType="Argument">
                <stringProp name="Argument.name">subscriber_id</stringProp>
                <stringProp name="Argument.value">1111111135</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">1111111135</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">1111111135</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">1111111135</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">1111111135</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="session_id" elementType="Argument">
                <stringProp name="Argument.name">session_id</stringProp>
                <stringProp name="Argument.value">1111111135_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="base_product_offer_1" elementType="Argument">
                <stringProp name="Argument.name">base_product_offer_1</stringProp>
                <stringProp name="Argument.value">RTC_35_BASE_PO</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="base_data_package_1" elementType="Argument">
                <stringProp name="Argument.name">base_data_package_1</stringProp>
                <stringProp name="Argument.value">RTC_35_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="counter_name" elementType="Argument">
                <stringProp name="Argument.name">counter_name</stringProp>
                <stringProp name="Argument.value">gold_qos</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">25172</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="id" elementType="Argument">
                <stringProp name="Argument.name">id</stringProp>
                <stringProp name="Argument.value">35</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="TestPlan.comments">Sy-RTC_35 | Sy | Verify Sy Counter Based Plan with PULL Mode with HSQ and Two Level FUP with PCC</stringProp>
        </kg.apc.jmeter.control.ParameterizedController>
        <hashTree>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Start of Sy-RTC_${id}" enabled="true">
            <boolProp name="WAITING">false</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_TIME"></stringProp>
            <stringProp name="LATENCY"></stringProp>
            <stringProp name="CONNECT"></stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Provide Link in Result" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true); 
f = new FileOutputStream(mapping_file_name, true); 
p = new PrintStream(f); 

// Write data to file 

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CleanUp" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="CleanUp" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="subscriber-id" elementType="Argument">
                    <stringProp name="Argument.name">subscriber-id</stringProp>
                    <stringProp name="Argument.value">${subscriber_id}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="product-offer-id" elementType="Argument">
                    <stringProp name="Argument.name">product-offer-id</stringProp>
                    <stringProp name="Argument.value">${base_product_offer_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="data-package-id" elementType="Argument">
                    <stringProp name="Argument.name">data-package-id</stringProp>
                    <stringProp name="Argument.value">${base_data_package_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="rnc-package-id" elementType="Argument">
                    <stringProp name="Argument.name">rnc-package-id</stringProp>
                    <stringProp name="Argument.value">${base_rnc_package_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="data-topup-id" elementType="Argument">
                    <stringProp name="Argument.name">data-topup-id</stringProp>
                    <stringProp name="Argument.value">${data_topup_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="email-template-id" elementType="Argument">
                    <stringProp name="Argument.name">email-template-id</stringProp>
                    <stringProp name="Argument.value">${email_template_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="sms-template-id" elementType="Argument">
                    <stringProp name="Argument.name">sms-template-id</stringProp>
                    <stringProp name="Argument.value">${sms_template_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">com.sterlite.netvertex.nvsampler.cleanup.sampler.CleanUpSampler</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Pre-Processing" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Data Package" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;${base_data_package_1}&lt;/id&gt;&#xd;
            &lt;name&gt;${base_data_package_1}&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriod&gt;30&lt;/validityPeriod&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;SY_COUNTER_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;${base_data_package_1}_QOS&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin&lt;/description&gt;&#xd;
                    &lt;name&gt;${base_data_package_1}_QOS&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;3&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;3&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;${base_data_package_1}_HSQ_PCC&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;${base_data_package_1}_HSQ_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;${base_data_package_1}_HSQ_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;gbrdlUnit&gt;Kbps&lt;/gbrdlUnit&gt;&#xd;
                                    &lt;mbrdl&gt;3&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;3&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;50&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;2&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;2&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;1&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;${base_data_package_1}_FUP1_PCC&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;${base_data_package_1}_FUP1_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;${base_data_package_1}_FUP1_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;gbrdlUnit&gt;Kbps&lt;/gbrdlUnit&gt;&#xd;
                                    &lt;mbrdl&gt;2&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;2&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;1&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;1&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;2&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;${base_data_package_1}_FUP2_PCC&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;${base_data_package_1}_FUP2_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;${base_data_package_1}_FUP2_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;gbrdlUnit&gt;Kbps&lt;/gbrdlUnit&gt;&#xd;
                                    &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;15&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;${base_data_package_1}_QUOTA&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;${base_data_package_1}_QUOTA&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles&gt;&#xd;
                &lt;sy-quota-Profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;${base_data_package_1}_QUOTA&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin&lt;/description&gt;&#xd;
                    &lt;name&gt;${base_data_package_1}_QUOTA&lt;/name&gt;&#xd;
                    &lt;syQuotaProfileDetailDatas&gt;&#xd;
                        &lt;counterName&gt;gold_qos&lt;/counterName&gt;&#xd;
                        &lt;counterPresent&gt;1&lt;/counterPresent&gt;&#xd;
                        &lt;dataServiceType&gt;&#xd;
                            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                            &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                            &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                        &lt;/dataServiceType&gt;&#xd;
                        &lt;fup1Value&gt;2&lt;/fup1Value&gt;&#xd;
                        &lt;fup2Value&gt;1&lt;/fup2Value&gt;&#xd;
                        &lt;hsqValue&gt;3&lt;/hsqValue&gt;&#xd;
                        &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;/syQuotaProfileDetailDatas&gt;&#xd;
                &lt;/sy-quota-Profile&gt;&#xd;
            &lt;/sy-quota-profiles&gt;&#xd;
            &lt;topUp-qos-multipliers/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/xml</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Reload Policy" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/policy/reload/policy</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Product Offer" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${base_product_offer_1}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${base_product_offer_1}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin&quot;,&#xd;
   &quot;type&quot;:&quot;BASE&quot;,&#xd;
   &quot;currency&quot;:&quot;${currency}&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${base_data_package_1}&quot;,&#xd;
   &quot;validityPeriod&quot;:null,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1401564903">&quot;id&quot;:&quot;${base_product_offer_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change to Product Offer Mode to TEST" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${base_product_offer_1}/updateMode.json?pkgMode=TEST</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1401564903">&quot;id&quot;:&quot;${base_product_offer_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Reload Policy" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/policy/reload/policy</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change to Product Offer Mode to LIVE" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${base_product_offer_1}/updateMode.json?pkgMode=LIVE</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1401564903">&quot;id&quot;:&quot;${base_product_offer_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Reload Policy" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/policy/reload/policy</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;subscriberProfile&quot;: [&#xd;
    {&#xd;
      &quot;entry&quot;: [&#xd;
        {&#xd;
          &quot;key&quot;: &quot;USERNAME&quot;,&#xd;
          &quot;value&quot;: &quot;${subscriber_id}&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PASSWORD&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;CUSTOMER_TYPE&quot;,&#xd;
          &quot;value&quot;: &quot;Prepaid&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;STATUS&quot;,&#xd;
          &quot;value&quot;: &quot;ACTIVE&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;BILLING_DATE&quot;,&#xd;
          &quot;value&quot;: &quot;15&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;AREA&quot;,&#xd;
          &quot;value&quot;: &quot;CG Road&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;CITY&quot;,&#xd;
          &quot;value&quot;: &quot;Ahmedabad&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM1&quot;,&#xd;
          &quot;value&quot;: &quot;999&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM2&quot;,&#xd;
          &quot;value&quot;: &quot;888&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM3&quot;,&#xd;
          &quot;value&quot;: &quot;777&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM4&quot;,&#xd;
          &quot;value&quot;: &quot;666&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM5&quot;,&#xd;
          &quot;value&quot;: &quot;555&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ZONE&quot;,&#xd;
          &quot;value&quot;: &quot;West&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;COUNTRY&quot;,&#xd;
          &quot;value&quot;: &quot;INDIA&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ROLE&quot;,&#xd;
          &quot;value&quot;: &quot;Manager&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;COMPANY&quot;,&#xd;
          &quot;value&quot;: &quot;Elitecore&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;DEPARTMENT&quot;,&#xd;
          &quot;value&quot;: &quot;CSM&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ARPU&quot;,&#xd;
          &quot;value&quot;: &quot;22&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;CADRE&quot;,&#xd;
          &quot;value&quot;: &quot;M2&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;EMAIL&quot;,&#xd;
          &quot;value&quot;: &quot;radhika.sheladia@elitecore.com&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PHONE&quot;,&#xd;
          &quot;value&quot;: &quot;987584689&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;SIP_URL&quot;,&#xd;
          &quot;value&quot;: &quot;458796&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;CUI&quot;,&#xd;
          &quot;value&quot;: &quot;458896&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;IMSI&quot;,&#xd;
          &quot;value&quot;: &quot;${subscriber_id}&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;MSISDN&quot;,&#xd;
          &quot;value&quot;: &quot;${subscriber_id}&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;MAC&quot;,&#xd;
          &quot;value&quot;: &quot;sda:00:sad2:&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;EUI64&quot;,&#xd;
          &quot;value&quot;: &quot;543121&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;MODIFIED_EUI64&quot;,&#xd;
          &quot;value&quot;: &quot;687654&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ENCRYPTION_TYPE&quot;,&#xd;
          &quot;value&quot;: &quot;16&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ESN&quot;,&#xd;
          &quot;value&quot;: &quot;52222224&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;MEID&quot;,&#xd;
          &quot;value&quot;: &quot;354454&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARENT_ID&quot;,&#xd;
          &quot;value&quot;: &quot;687654&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;GROUP_NAME&quot;,&#xd;
          &quot;value&quot;: &quot;any_group&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;IMEI&quot;,&#xd;
          &quot;value&quot;: &quot;68765435413574&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;SUBSCRIBER_LEVEL_METERING&quot;,&#xd;
          &quot;value&quot;: &quot;ENABLE&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PASSWORD_CHECK&quot;,&#xd;
          &quot;value&quot;: &quot;TRUE&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;SY_INTERFACE&quot;,&#xd;
          &quot;value&quot;: &quot;TRUE&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;productOffer&quot;: &quot;${base_product_offer_1}&quot;,&#xd;
      &quot;subscriberIdentity&quot;: &quot;${subscriber_id}&quot;,&#xd;
      &quot;creditLimit&quot;:&quot;&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/subscriberProvisioning/addSubscribers</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1319337236">&quot;responseCode&quot;:200,&quot;responseMessage&quot;:&quot;Total Subcriber Profiles added: 1&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-I Processing for HSQ" enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.OpenChannelSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.OpenChannelSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.OpenChannelSample" testname="Open Sy Gateway Connection" enabled="true">
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.OpenChannelSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-I" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;0:439&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;10415:1032&quot;,&quot;val&quot;:&quot;1001&quot;}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Sy-SLR-SLA with Counter 3 for HSQ" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">SL</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;3&quot;}]},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;10415:2904&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;}]},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_req(0:263)}&quot;}]</stringProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;10415:2904&quot;,&quot;val&quot;:&quot;0&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">false</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-I - HSQ" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-I</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-U Processing for HSQ " enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-U - HSQ" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;2&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;2&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;33&quot;}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Sy-SLR-SLA with Counter 3 for HSQ" enabled="true">
              <stringProp name="wait-time">3000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">SL</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;3&quot;}]},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;10415:2904&quot;,&quot;val&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;}]},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_req(0:263)}&quot;}]</stringProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-U - HSQ" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-U - HSQ</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-U Processing for FUP1 " enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-U - HSQ to FUP1" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;2&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;33&quot;}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Sy-SLR-SLA with Counter 2 for FUP" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">SL</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;2&quot;}]},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;10415:2904&quot;,&quot;val&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;}]},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_req(0:263)}&quot;}]</stringProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-U - HSQ to FUP1" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-U - HSQ to FUP1</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-U Processing for FUP1 " enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-U - FUP1" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;2&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;4&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;33&quot;}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Sy-SLR-SLA with Counter 2 for FUP" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">SL</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;2&quot;}]},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;10415:2904&quot;,&quot;val&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;}]},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_req(0:263)}&quot;}]</stringProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-U - FUP1" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-U - FUP1</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-U Processing for FUP2 " enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-U - FUP1 to FUP2" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;2&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;5&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;33&quot;}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Sy-SLR-SLA with Counter 1 for FUP2" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">SL</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;1&quot;}]},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;10415:2904&quot;,&quot;val&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;}]},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_req(0:263)}&quot;}]</stringProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-U - FUP2" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-U - FUP1 to FUP2</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-U Processing for FUP2 " enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-U - FUP2" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;2&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;33&quot;}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Sy-SLR-SLA with Counter 1 for FUP2" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">SL</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;1&quot;}]},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;10415:2904&quot;,&quot;val&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;}]},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_req(0:263)}&quot;}]</stringProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-U - FUP2" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-U - FUP2</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-T Processing" enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-T" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;7&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;0:439&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;10415:1032&quot;,&quot;val&quot;:&quot;1001&quot;},{&quot;id&quot;:&quot;0:295&quot;,&quot;val&quot;:&quot;1&quot;}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Sy-STR-STA" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">ST</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;}]},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_req(0:263)}&quot;}]</stringProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-T" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-T</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.CloseChannelSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.CloseChannelSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.CloseChannelSample" testname="Close Sy Gateway Connection" enabled="true">
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
              <boolProp name="CLOSE_GRACEFULLY">true</boolProp>
            </com.harshdev.rndjmeter.diameter.sampler.CloseChannelSample>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="End of RTC_${id}" enabled="true">
            <boolProp name="WAITING">false</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_TIME"></stringProp>
            <stringProp name="LATENCY"></stringProp>
            <stringProp name="CONNECT"></stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sy-RTC_36" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Sy-RTC_36 | Sy | Verify Sy Counter Based Plan with PUSH Mode with HSQ and Two Level FUP with PCC </stringProp>
      </ThreadGroup>
      <hashTree>
        <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="Sy-RTC_36" enabled="true">
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriber_id" elementType="Argument">
                <stringProp name="Argument.name">subscriber_id</stringProp>
                <stringProp name="Argument.value">1111111136</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">1111111136</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">1111111136</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">1111111136</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">1111111136</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="session_id" elementType="Argument">
                <stringProp name="Argument.name">session_id</stringProp>
                <stringProp name="Argument.value">1111111136_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="base_product_offer_1" elementType="Argument">
                <stringProp name="Argument.name">base_product_offer_1</stringProp>
                <stringProp name="Argument.value">RTC_36_BASE_PO</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="base_data_package_1" elementType="Argument">
                <stringProp name="Argument.name">base_data_package_1</stringProp>
                <stringProp name="Argument.value">RTC_36_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="counter_name" elementType="Argument">
                <stringProp name="Argument.name">counter_name</stringProp>
                <stringProp name="Argument.value">gold_qos</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">25173</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="id" elementType="Argument">
                <stringProp name="Argument.name">id</stringProp>
                <stringProp name="Argument.value">36</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="TestPlan.comments">Sy-RTC_36 | Sy | Verify Sy Counter Based Plan with PUSH Mode with HSQ and Two Level FUP with PCC </stringProp>
        </kg.apc.jmeter.control.ParameterizedController>
        <hashTree>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Start of Sy-RTC_${id}" enabled="true">
            <boolProp name="WAITING">false</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_TIME"></stringProp>
            <stringProp name="LATENCY"></stringProp>
            <stringProp name="CONNECT"></stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Provide Link in Result" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true); 
f = new FileOutputStream(mapping_file_name, true); 
p = new PrintStream(f); 

// Write data to file 

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CleanUp" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="CleanUp" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="subscriber-id" elementType="Argument">
                    <stringProp name="Argument.name">subscriber-id</stringProp>
                    <stringProp name="Argument.value">${subscriber_id}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="product-offer-id" elementType="Argument">
                    <stringProp name="Argument.name">product-offer-id</stringProp>
                    <stringProp name="Argument.value">${base_product_offer_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="data-package-id" elementType="Argument">
                    <stringProp name="Argument.name">data-package-id</stringProp>
                    <stringProp name="Argument.value">${base_data_package_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="rnc-package-id" elementType="Argument">
                    <stringProp name="Argument.name">rnc-package-id</stringProp>
                    <stringProp name="Argument.value">${base_rnc_package_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="data-topup-id" elementType="Argument">
                    <stringProp name="Argument.name">data-topup-id</stringProp>
                    <stringProp name="Argument.value">${data_topup_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="email-template-id" elementType="Argument">
                    <stringProp name="Argument.name">email-template-id</stringProp>
                    <stringProp name="Argument.value">${email_template_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="sms-template-id" elementType="Argument">
                    <stringProp name="Argument.name">sms-template-id</stringProp>
                    <stringProp name="Argument.value">${sms_template_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">com.sterlite.netvertex.nvsampler.cleanup.sampler.CleanUpSampler</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Pre-Processing" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Data Package" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;${base_data_package_1}&lt;/id&gt;&#xd;
            &lt;name&gt;${base_data_package_1}&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriod&gt;30&lt;/validityPeriod&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;SY_COUNTER_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;${base_data_package_1}_QOS&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin&lt;/description&gt;&#xd;
                    &lt;name&gt;${base_data_package_1}_QOS&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;3&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;3&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;${base_data_package_1}_HSQ_PCC&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;${base_data_package_1}_HSQ_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;${base_data_package_1}_HSQ_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;gbrdlUnit&gt;Kbps&lt;/gbrdlUnit&gt;&#xd;
                                    &lt;mbrdl&gt;3&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;3&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;50&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;2&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;2&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;1&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;${base_data_package_1}_FUP1_PCC&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;${base_data_package_1}_FUP1_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;${base_data_package_1}_FUP1_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;gbrdlUnit&gt;Kbps&lt;/gbrdlUnit&gt;&#xd;
                                    &lt;mbrdl&gt;2&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;2&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;1&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;1&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;2&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;${base_data_package_1}_FUP2_PCC&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;${base_data_package_1}_FUP2_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;${base_data_package_1}_FUP2_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;gbrdlUnit&gt;Kbps&lt;/gbrdlUnit&gt;&#xd;
                                    &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;15&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;${base_data_package_1}_QUOTA&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;${base_data_package_1}_QUOTA&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles&gt;&#xd;
                &lt;sy-quota-Profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;${base_data_package_1}_QUOTA&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin&lt;/description&gt;&#xd;
                    &lt;name&gt;${base_data_package_1}_QUOTA&lt;/name&gt;&#xd;
                    &lt;syQuotaProfileDetailDatas&gt;&#xd;
                        &lt;counterName&gt;gold_qos&lt;/counterName&gt;&#xd;
                        &lt;counterPresent&gt;1&lt;/counterPresent&gt;&#xd;
                        &lt;dataServiceType&gt;&#xd;
                            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                            &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                            &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                        &lt;/dataServiceType&gt;&#xd;
                        &lt;fup1Value&gt;2&lt;/fup1Value&gt;&#xd;
                        &lt;fup2Value&gt;1&lt;/fup2Value&gt;&#xd;
                        &lt;hsqValue&gt;3&lt;/hsqValue&gt;&#xd;
                        &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;/syQuotaProfileDetailDatas&gt;&#xd;
                &lt;/sy-quota-Profile&gt;&#xd;
            &lt;/sy-quota-profiles&gt;&#xd;
            &lt;topUp-qos-multipliers/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/xml</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Reload Policy" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/policy/reload/policy</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Product Offer" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${base_product_offer_1}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${base_product_offer_1}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin&quot;,&#xd;
   &quot;type&quot;:&quot;BASE&quot;,&#xd;
   &quot;currency&quot;:&quot;${currency}&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${base_data_package_1}&quot;,&#xd;
   &quot;validityPeriod&quot;:null,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1401564903">&quot;id&quot;:&quot;${base_product_offer_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change to Product Offer Mode to TEST" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${base_product_offer_1}/updateMode.json?pkgMode=TEST</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1401564903">&quot;id&quot;:&quot;${base_product_offer_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Reload Policy" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/policy/reload/policy</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change to Product Offer Mode to LIVE" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${base_product_offer_1}/updateMode.json?pkgMode=LIVE</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1401564903">&quot;id&quot;:&quot;${base_product_offer_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Reload Policy" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/policy/reload/policy</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;subscriberProfile&quot;: [&#xd;
    {&#xd;
      &quot;entry&quot;: [&#xd;
        {&#xd;
          &quot;key&quot;: &quot;USERNAME&quot;,&#xd;
          &quot;value&quot;: &quot;${subscriber_id}&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PASSWORD&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;CUSTOMER_TYPE&quot;,&#xd;
          &quot;value&quot;: &quot;Prepaid&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;STATUS&quot;,&#xd;
          &quot;value&quot;: &quot;ACTIVE&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;BILLING_DATE&quot;,&#xd;
          &quot;value&quot;: &quot;15&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;AREA&quot;,&#xd;
          &quot;value&quot;: &quot;CG Road&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;CITY&quot;,&#xd;
          &quot;value&quot;: &quot;Ahmedabad&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM1&quot;,&#xd;
          &quot;value&quot;: &quot;999&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM2&quot;,&#xd;
          &quot;value&quot;: &quot;888&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM3&quot;,&#xd;
          &quot;value&quot;: &quot;777&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM4&quot;,&#xd;
          &quot;value&quot;: &quot;666&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM5&quot;,&#xd;
          &quot;value&quot;: &quot;555&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ZONE&quot;,&#xd;
          &quot;value&quot;: &quot;West&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;COUNTRY&quot;,&#xd;
          &quot;value&quot;: &quot;INDIA&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ROLE&quot;,&#xd;
          &quot;value&quot;: &quot;Manager&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;COMPANY&quot;,&#xd;
          &quot;value&quot;: &quot;Elitecore&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;DEPARTMENT&quot;,&#xd;
          &quot;value&quot;: &quot;CSM&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ARPU&quot;,&#xd;
          &quot;value&quot;: &quot;22&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;CADRE&quot;,&#xd;
          &quot;value&quot;: &quot;M2&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;EMAIL&quot;,&#xd;
          &quot;value&quot;: &quot;radhika.sheladia@elitecore.com&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PHONE&quot;,&#xd;
          &quot;value&quot;: &quot;987584689&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;SIP_URL&quot;,&#xd;
          &quot;value&quot;: &quot;458796&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;CUI&quot;,&#xd;
          &quot;value&quot;: &quot;458896&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;IMSI&quot;,&#xd;
          &quot;value&quot;: &quot;${subscriber_id}&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;MSISDN&quot;,&#xd;
          &quot;value&quot;: &quot;${subscriber_id}&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;MAC&quot;,&#xd;
          &quot;value&quot;: &quot;sda:00:sad2:&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;EUI64&quot;,&#xd;
          &quot;value&quot;: &quot;543121&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;MODIFIED_EUI64&quot;,&#xd;
          &quot;value&quot;: &quot;687654&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ENCRYPTION_TYPE&quot;,&#xd;
          &quot;value&quot;: &quot;16&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ESN&quot;,&#xd;
          &quot;value&quot;: &quot;52222224&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;MEID&quot;,&#xd;
          &quot;value&quot;: &quot;354454&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARENT_ID&quot;,&#xd;
          &quot;value&quot;: &quot;687654&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;GROUP_NAME&quot;,&#xd;
          &quot;value&quot;: &quot;any_group&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;IMEI&quot;,&#xd;
          &quot;value&quot;: &quot;68765435413574&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;SUBSCRIBER_LEVEL_METERING&quot;,&#xd;
          &quot;value&quot;: &quot;ENABLE&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PASSWORD_CHECK&quot;,&#xd;
          &quot;value&quot;: &quot;TRUE&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;SY_INTERFACE&quot;,&#xd;
          &quot;value&quot;: &quot;TRUE&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;productOffer&quot;: &quot;${base_product_offer_1}&quot;,&#xd;
      &quot;subscriberIdentity&quot;: &quot;${subscriber_id}&quot;,&#xd;
      &quot;creditLimit&quot;:&quot;&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/subscriberProvisioning/addSubscribers</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1319337236">&quot;responseCode&quot;:200,&quot;responseMessage&quot;:&quot;Total Subcriber Profiles added: 1&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-I Processing for HSQ" enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.OpenChannelSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.OpenChannelSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.OpenChannelSample" testname="Open Sy Gateway Connection" enabled="true">
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.OpenChannelSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-I" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;0:439&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;10415:1032&quot;,&quot;val&quot;:&quot;1001&quot;}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Sy-SLR-SLA with Counter 3 for HSQ" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">SL</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;3&quot;}]},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;10415:2904&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;}]},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_req(0:263)}&quot;}]</stringProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;10415:2904&quot;,&quot;val&quot;:&quot;0&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">false</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-I - HSQ" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-I</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;10415:1001&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:1003&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:1005&quot;,&quot;val&quot;:&quot;${base_data_package_1}_HSQ_PCC&quot;}]}]}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-U Processing for FUP1" enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-U - FUP1" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;2&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;2&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;33&quot;}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-U - FUP1" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-U - FUP1</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Sy-SNR-SNA with Counter 2 for FUP1" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_app_req(SY,0:263)}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;2&quot;}]},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]}]</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">SN</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Gx-RAR-RAA for FUP1 Installtion" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">RA</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:257&quot;,&quot;val&quot;:&quot;${jmeterip}&quot;}]</stringProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;10415:1002&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:1005&quot;,&quot;val&quot;:&quot;${__dia_smplr_app_res(Gx-CCA-U - FUP1,10415:1067,0,,10415:1066)}&quot;}]},{&quot;id&quot;:&quot;10415:1001&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:1003&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:1005&quot;,&quot;val&quot;:&quot;${base_data_package_1}_FUP1_PCC&quot;}]}]}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-U Processing for FUP2" enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-U - FUP2" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;2&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;33&quot;}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-U - FUP2" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-U - FUP2</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Sy-SNR-SNA with Counter 1 for FUP2" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_app_req(SY,0:263)}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;1&quot;}]},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]}]</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">SN</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Gx-RAR-RAA for FUP2 Installtion" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">RA</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:257&quot;,&quot;val&quot;:&quot;${jmeterip}&quot;}]</stringProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;10415:1002&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:1005&quot;,&quot;val&quot;:&quot;${__dia_smplr_app_res(Gx-CCA-U - FUP2,10415:1067,0,,10415:1066)}&quot;}]},{&quot;id&quot;:&quot;10415:1001&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:1003&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:1005&quot;,&quot;val&quot;:&quot;${base_data_package_1}_FUP2_PCC&quot;}]}]}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-T Processing" enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-T" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;4&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;0:439&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;10415:1032&quot;,&quot;val&quot;:&quot;1001&quot;},{&quot;id&quot;:&quot;0:295&quot;,&quot;val&quot;:&quot;1&quot;}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Sy-STR-STA" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">ST</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;}]},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_app_req(SY,0:263)}&quot;}]</stringProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-T" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-T</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.CloseChannelSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.CloseChannelSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.CloseChannelSample" testname="Close Sy Gateway Connection" enabled="true">
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
              <boolProp name="CLOSE_GRACEFULLY">true</boolProp>
            </com.harshdev.rndjmeter.diameter.sampler.CloseChannelSample>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="End of RTC_${id}" enabled="true">
            <boolProp name="WAITING">false</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_TIME"></stringProp>
            <stringProp name="LATENCY"></stringProp>
            <stringProp name="CONNECT"></stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sy-RTC_72" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Sy-RTC_72 | Sy | Verify Charging Rule Base Name functionality with HSQ + Two Level FUP plan for Sy Package with PULL mode without Dynamic PCC Rules</stringProp>
      </ThreadGroup>
      <hashTree>
        <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="Sy-RTC_72" enabled="true">
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriber_id" elementType="Argument">
                <stringProp name="Argument.name">subscriber_id</stringProp>
                <stringProp name="Argument.value">1111111172</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">1111111172</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">1111111172</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">1111111172</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">1111111172</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="session_id" elementType="Argument">
                <stringProp name="Argument.name">session_id</stringProp>
                <stringProp name="Argument.value">1111111172_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="base_product_offer_1" elementType="Argument">
                <stringProp name="Argument.name">base_product_offer_1</stringProp>
                <stringProp name="Argument.value">RTC_72_BASE_PO</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="base_data_package_1" elementType="Argument">
                <stringProp name="Argument.name">base_data_package_1</stringProp>
                <stringProp name="Argument.value">RTC_72_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_id_1" elementType="Argument">
                <stringProp name="Argument.name">crbn_id_1</stringProp>
                <stringProp name="Argument.value">CRBN_72_1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_id_2" elementType="Argument">
                <stringProp name="Argument.name">crbn_id_2</stringProp>
                <stringProp name="Argument.value">CRBN_72_2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_id_3" elementType="Argument">
                <stringProp name="Argument.name">crbn_id_3</stringProp>
                <stringProp name="Argument.value">CRBN_72_3</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="counter_all_name" elementType="Argument">
                <stringProp name="Argument.name">counter_all_name</stringProp>
                <stringProp name="Argument.value">gold_all</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="counter_http_name" elementType="Argument">
                <stringProp name="Argument.name">counter_http_name</stringProp>
                <stringProp name="Argument.value">gold_http</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">25174</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="id" elementType="Argument">
                <stringProp name="Argument.name">id</stringProp>
                <stringProp name="Argument.value">72</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="TestPlan.comments">Sy-RTC_72 | Sy | Verify Charging Rule Base Name functionality with HSQ + Two Level FUP plan for Sy Package with PULL mode without Dynamic PCC Rules</stringProp>
        </kg.apc.jmeter.control.ParameterizedController>
        <hashTree>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Start of Sy-RTC_${id}" enabled="true">
            <boolProp name="WAITING">false</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_TIME"></stringProp>
            <stringProp name="LATENCY"></stringProp>
            <stringProp name="CONNECT"></stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Provide Link in Result" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true); 
f = new FileOutputStream(mapping_file_name, true); 
p = new PrintStream(f); 

// Write data to file 

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CleanUp" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="CleanUp" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="subscriber-id" elementType="Argument">
                    <stringProp name="Argument.name">subscriber-id</stringProp>
                    <stringProp name="Argument.value">${subscriber_id}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="product-offer-id" elementType="Argument">
                    <stringProp name="Argument.name">product-offer-id</stringProp>
                    <stringProp name="Argument.value">${base_product_offer_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="data-package-id" elementType="Argument">
                    <stringProp name="Argument.name">data-package-id</stringProp>
                    <stringProp name="Argument.value">${base_data_package_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="rnc-package-id" elementType="Argument">
                    <stringProp name="Argument.name">rnc-package-id</stringProp>
                    <stringProp name="Argument.value">${base_rnc_package_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="data-topup-id" elementType="Argument">
                    <stringProp name="Argument.name">data-topup-id</stringProp>
                    <stringProp name="Argument.value">${data_topup_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="email-template-id" elementType="Argument">
                    <stringProp name="Argument.name">email-template-id</stringProp>
                    <stringProp name="Argument.value">${email_template_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="sms-template-id" elementType="Argument">
                    <stringProp name="Argument.name">sms-template-id</stringProp>
                    <stringProp name="Argument.value">${sms_template_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">com.sterlite.netvertex.nvsampler.cleanup.sampler.CleanUpSampler</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Pre-Processing" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create CRBN" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;global-charging-rule-base-name-container&gt;&#xd;
    &lt;chargingRuleBaseNameDatas&gt;&#xd;
        &lt;chargingRuleBaseNameData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;${crbn_id_1}&lt;/id&gt;&#xd;
            &lt;name&gt;${crbn_id_1}&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 01/05/2018 16:44:40&lt;/description&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                    &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;${crbn_id_1}_all&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;${crbn_id_1}_all&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_3&lt;/id&gt;&#xd;
                    &lt;name&gt;HTTP&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;${crbn_id_1}_http&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;${crbn_id_1}_http&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
        &lt;/chargingRuleBaseNameData&gt;&#xd;
        &lt;chargingRuleBaseNameData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;${crbn_id_2}&lt;/id&gt;&#xd;
            &lt;name&gt;${crbn_id_2}&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 01/05/2018 16:47:01&lt;/description&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                    &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;${crbn_id_2}_all&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;${crbn_id_2}_all&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_3&lt;/id&gt;&#xd;
                    &lt;name&gt;HTTP&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;${crbn_id_2}_http&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;${crbn_id_2}_http&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
        &lt;/chargingRuleBaseNameData&gt;&#xd;
        &lt;chargingRuleBaseNameData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;${crbn_id_3}&lt;/id&gt;&#xd;
            &lt;name&gt;${crbn_id_3}&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 01/05/2018 16:48:02&lt;/description&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                    &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;${crbn_id_3}_all&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;${crbn_id_3}_all&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_3&lt;/id&gt;&#xd;
                    &lt;name&gt;HTTP&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;${crbn_id_3}_http&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;${crbn_id_3}_http&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
        &lt;/chargingRuleBaseNameData&gt;&#xd;
    &lt;/chargingRuleBaseNameDatas&gt;&#xd;
&lt;/global-charging-rule-base-name-container&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_charging_rule_base_name_url}?${replace}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/xml</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Data Package" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;${base_data_package_1}&lt;/id&gt;&#xd;
            &lt;name&gt;${base_data_package_1}&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriod&gt;30&lt;/validityPeriod&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;SY_COUNTER_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;${base_data_package_1}_QOS&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin&lt;/description&gt;&#xd;
                    &lt;name&gt;${base_data_package_1}_QOS&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;1&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;1&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names&gt;&#xd;
                                &lt;charging-rule-base-name&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;name&gt;${crbn_id_1}&lt;/name&gt;&#xd;
                                &lt;/charging-rule-base-name&gt;&#xd;
                            &lt;/charging-rule-base-names&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules/&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;500&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;500&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names&gt;&#xd;
                                &lt;charging-rule-base-name&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;name&gt;${crbn_id_2}&lt;/name&gt;&#xd;
                                &lt;/charging-rule-base-name&gt;&#xd;
                            &lt;/charging-rule-base-names&gt;&#xd;
                            &lt;fup-level&gt;1&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules/&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;256&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;256&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names&gt;&#xd;
                                &lt;charging-rule-base-name&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;name&gt;${crbn_id_3}&lt;/name&gt;&#xd;
                                &lt;/charging-rule-base-name&gt;&#xd;
                            &lt;/charging-rule-base-names&gt;&#xd;
                            &lt;fup-level&gt;2&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules/&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;${base_data_package_1}_QUOTA&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;${base_data_package_1}_QUOTA&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles&gt;&#xd;
                &lt;sy-quota-Profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;${base_data_package_1}_QUOTA&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin&lt;/description&gt;&#xd;
                    &lt;name&gt;${base_data_package_1}_QUOTA&lt;/name&gt;&#xd;
                    &lt;syQuotaProfileDetailDatas&gt;&#xd;
                        &lt;counterName&gt;${counter_all_name}&lt;/counterName&gt;&#xd;
                        &lt;counterPresent&gt;1&lt;/counterPresent&gt;&#xd;
                        &lt;dataServiceType&gt;&#xd;
                            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                            &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                            &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                        &lt;/dataServiceType&gt;&#xd;
                        &lt;fup1Value&gt;1&lt;/fup1Value&gt;&#xd;
                        &lt;fup2Value&gt;0&lt;/fup2Value&gt;&#xd;
                        &lt;hsqValue&gt;2&lt;/hsqValue&gt;&#xd;
                        &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;/syQuotaProfileDetailDatas&gt;&#xd;
                    &lt;syQuotaProfileDetailDatas&gt;&#xd;
                        &lt;counterName&gt;${counter_http_name}&lt;/counterName&gt;&#xd;
                        &lt;counterPresent&gt;1&lt;/counterPresent&gt;&#xd;
                        &lt;dataServiceType&gt;&#xd;
                            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                            &lt;id&gt;DATA_SERVICE_TYPE_3&lt;/id&gt;&#xd;
                            &lt;name&gt;HTTP&lt;/name&gt;&#xd;
                        &lt;/dataServiceType&gt;&#xd;
                        &lt;fup1Value&gt;1&lt;/fup1Value&gt;&#xd;
                        &lt;fup2Value&gt;0&lt;/fup2Value&gt;&#xd;
                        &lt;hsqValue&gt;2&lt;/hsqValue&gt;&#xd;
                        &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;/syQuotaProfileDetailDatas&gt;&#xd;
                &lt;/sy-quota-Profile&gt;&#xd;
            &lt;/sy-quota-profiles&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/xml</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Reload Policy" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/policy/reload/policy</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Product Offer" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${base_product_offer_1}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${base_product_offer_1}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin&quot;,&#xd;
   &quot;type&quot;:&quot;BASE&quot;,&#xd;
   &quot;currency&quot;:&quot;${currency}&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${base_data_package_1}&quot;,&#xd;
   &quot;validityPeriod&quot;:null,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1401564903">&quot;id&quot;:&quot;${base_product_offer_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change to Product Offer Mode to TEST" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${base_product_offer_1}/updateMode.json?pkgMode=TEST</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1401564903">&quot;id&quot;:&quot;${base_product_offer_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Reload Policy" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/policy/reload/policy</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change to Product Offer Mode to LIVE" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${base_product_offer_1}/updateMode.json?pkgMode=LIVE</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1401564903">&quot;id&quot;:&quot;${base_product_offer_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Reload Policy" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/policy/reload/policy</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;subscriberProfile&quot;: [&#xd;
    {&#xd;
      &quot;entry&quot;: [&#xd;
        {&#xd;
          &quot;key&quot;: &quot;USERNAME&quot;,&#xd;
          &quot;value&quot;: &quot;${subscriber_id}&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PASSWORD&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;CUSTOMER_TYPE&quot;,&#xd;
          &quot;value&quot;: &quot;Prepaid&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;STATUS&quot;,&#xd;
          &quot;value&quot;: &quot;ACTIVE&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;BILLING_DATE&quot;,&#xd;
          &quot;value&quot;: &quot;15&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;AREA&quot;,&#xd;
          &quot;value&quot;: &quot;CG Road&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;CITY&quot;,&#xd;
          &quot;value&quot;: &quot;Ahmedabad&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM1&quot;,&#xd;
          &quot;value&quot;: &quot;999&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM2&quot;,&#xd;
          &quot;value&quot;: &quot;888&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM3&quot;,&#xd;
          &quot;value&quot;: &quot;777&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM4&quot;,&#xd;
          &quot;value&quot;: &quot;666&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM5&quot;,&#xd;
          &quot;value&quot;: &quot;555&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ZONE&quot;,&#xd;
          &quot;value&quot;: &quot;West&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;COUNTRY&quot;,&#xd;
          &quot;value&quot;: &quot;INDIA&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ROLE&quot;,&#xd;
          &quot;value&quot;: &quot;Manager&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;COMPANY&quot;,&#xd;
          &quot;value&quot;: &quot;Elitecore&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;DEPARTMENT&quot;,&#xd;
          &quot;value&quot;: &quot;CSM&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ARPU&quot;,&#xd;
          &quot;value&quot;: &quot;22&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;CADRE&quot;,&#xd;
          &quot;value&quot;: &quot;M2&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;EMAIL&quot;,&#xd;
          &quot;value&quot;: &quot;radhika.sheladia@elitecore.com&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PHONE&quot;,&#xd;
          &quot;value&quot;: &quot;987584689&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;SIP_URL&quot;,&#xd;
          &quot;value&quot;: &quot;458796&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;CUI&quot;,&#xd;
          &quot;value&quot;: &quot;458896&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;IMSI&quot;,&#xd;
          &quot;value&quot;: &quot;${subscriber_id}&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;MSISDN&quot;,&#xd;
          &quot;value&quot;: &quot;${subscriber_id}&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;MAC&quot;,&#xd;
          &quot;value&quot;: &quot;sda:00:sad2:&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;EUI64&quot;,&#xd;
          &quot;value&quot;: &quot;543121&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;MODIFIED_EUI64&quot;,&#xd;
          &quot;value&quot;: &quot;687654&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ENCRYPTION_TYPE&quot;,&#xd;
          &quot;value&quot;: &quot;16&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ESN&quot;,&#xd;
          &quot;value&quot;: &quot;52222224&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;MEID&quot;,&#xd;
          &quot;value&quot;: &quot;354454&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARENT_ID&quot;,&#xd;
          &quot;value&quot;: &quot;687654&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;GROUP_NAME&quot;,&#xd;
          &quot;value&quot;: &quot;any_group&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;IMEI&quot;,&#xd;
          &quot;value&quot;: &quot;68765435413574&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;SUBSCRIBER_LEVEL_METERING&quot;,&#xd;
          &quot;value&quot;: &quot;ENABLE&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PASSWORD_CHECK&quot;,&#xd;
          &quot;value&quot;: &quot;TRUE&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;SY_INTERFACE&quot;,&#xd;
          &quot;value&quot;: &quot;TRUE&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;productOffer&quot;: &quot;${base_product_offer_1}&quot;,&#xd;
      &quot;subscriberIdentity&quot;: &quot;${subscriber_id}&quot;,&#xd;
      &quot;creditLimit&quot;:&quot;&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/subscriberProvisioning/addSubscribers</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1319337236">&quot;responseCode&quot;:200,&quot;responseMessage&quot;:&quot;Total Subcriber Profiles added: 1&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-I Processing for HSQ" enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.OpenChannelSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.OpenChannelSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.OpenChannelSample" testname="Open Sy Gateway Connection" enabled="true">
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.OpenChannelSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-I" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;0:439&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;10415:1032&quot;,&quot;val&quot;:&quot;1001&quot;}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Sy-SLR-SLA with Counter 2 for HSQ" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">SL</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;10415:2904&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;}]},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_req(0:263)}&quot;},{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_all_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;2&quot;}]},{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_http_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;2&quot;}]}]</stringProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;10415:2904&quot;,&quot;val&quot;:&quot;0&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">false</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-I - HSQ" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-I</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-U Processing for FUP1 " enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-U - HSQ to FUP1" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;2&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;2&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;33&quot;},{&quot;id&quot;:&quot;10415:1067&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:1066&quot;,&quot;val&quot;:&quot;${__dia_last_app_res(GX,10415:1067,0,,10415:1066)}&quot;},{&quot;id&quot;:&quot;0:446&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:421&quot;,&quot;val&quot;:&quot;${__dia_last_app_res(GX,10415:1067,0,,0:431.0:421)}&quot;}]},{&quot;id&quot;:&quot;10415:1068&quot;,&quot;val&quot;:&quot;${__dia_last_app_res(GX,10415:1067,0,,10415:1068)}&quot;}]},{&quot;id&quot;:&quot;10415:1067&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:1066&quot;,&quot;val&quot;:&quot;${__dia_last_app_res(GX,10415:1067,1,,10415:1066)}&quot;},{&quot;id&quot;:&quot;10415:1068&quot;,&quot;val&quot;:&quot;${__dia_last_app_res(GX,10415:1067,1,,10415:1068)}&quot;},{&quot;id&quot;:&quot;0:446&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:421&quot;,&quot;val&quot;:&quot;${__dia_last_app_res(GX,10415:1067,1,,0:431.0:421)}&quot;}]}]}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Sy-SLR-SLA with Counter 1 for FUP1" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">SL</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;10415:2904&quot;,&quot;val&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;}]},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_req(0:263)}&quot;},{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_all_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;1&quot;}]},{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_http_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;1&quot;}]}]</stringProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-U - HSQ to FUP1" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-U - HSQ to FUP1</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-U Processing for FUP2" enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-U - FUP1 to FUP2" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;2&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;33&quot;},{&quot;id&quot;:&quot;10415:1067&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:1066&quot;,&quot;val&quot;:&quot;${__dia_last_app_res(GX,10415:1067,0,,10415:1066)}&quot;},{&quot;id&quot;:&quot;0:446&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:421&quot;,&quot;val&quot;:&quot;${__dia_last_app_res(GX,10415:1067,0,,0:431.0:421)}&quot;}]},{&quot;id&quot;:&quot;10415:1068&quot;,&quot;val&quot;:&quot;${__dia_last_app_res(GX,10415:1067,0,,10415:1068)}&quot;}]},{&quot;id&quot;:&quot;10415:1067&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:1066&quot;,&quot;val&quot;:&quot;${__dia_last_app_res(GX,10415:1067,1,,10415:1066)}&quot;},{&quot;id&quot;:&quot;0:446&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:421&quot;,&quot;val&quot;:&quot;${__dia_last_app_res(GX,10415:1067,1,,0:431.0:421)}&quot;}]},{&quot;id&quot;:&quot;10415:1068&quot;,&quot;val&quot;:&quot;${__dia_last_app_res(GX,10415:1067,1,,10415:1068)}&quot;}]}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Sy-SLR-SLA with Counter 0 for FUP2" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">SL</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;10415:2904&quot;,&quot;val&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;}]},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_req(0:263)}&quot;},{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_all_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_http_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;0&quot;}]}]</stringProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-U - FUP1 to FUP2" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-U - FUP1 to FUP2</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-T Processing" enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-T" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;4&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;0:439&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;10415:1032&quot;,&quot;val&quot;:&quot;1001&quot;},{&quot;id&quot;:&quot;0:295&quot;,&quot;val&quot;:&quot;1&quot;}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Sy-STR-STA" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">ST</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;}]},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_req(0:263)}&quot;}]</stringProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-T" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-T</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.CloseChannelSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.CloseChannelSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.CloseChannelSample" testname="Close Sy Gateway Connection" enabled="true">
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
              <boolProp name="CLOSE_GRACEFULLY">true</boolProp>
            </com.harshdev.rndjmeter.diameter.sampler.CloseChannelSample>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="End of RTC_${id}" enabled="true">
            <boolProp name="WAITING">false</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_TIME"></stringProp>
            <stringProp name="LATENCY"></stringProp>
            <stringProp name="CONNECT"></stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sy-RTC_73" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Sy-RTC_73 | Sy | Verify Sy Counter Based Plan with PULL Mode with HSQ and Two Level FUP without PCC</stringProp>
      </ThreadGroup>
      <hashTree>
        <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="Sy-RTC_73" enabled="true">
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriber_id" elementType="Argument">
                <stringProp name="Argument.name">subscriber_id</stringProp>
                <stringProp name="Argument.value">1111111173</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">1111111173</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">1111111173</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">1111111173</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">1111111173</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="session_id" elementType="Argument">
                <stringProp name="Argument.name">session_id</stringProp>
                <stringProp name="Argument.value">1111111173_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="base_product_offer_1" elementType="Argument">
                <stringProp name="Argument.name">base_product_offer_1</stringProp>
                <stringProp name="Argument.value">RTC_73_BASE_PO</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="base_data_package_1" elementType="Argument">
                <stringProp name="Argument.name">base_data_package_1</stringProp>
                <stringProp name="Argument.value">RTC_73_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="counter_name" elementType="Argument">
                <stringProp name="Argument.name">counter_name</stringProp>
                <stringProp name="Argument.value">gold_qos</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">25175</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="id" elementType="Argument">
                <stringProp name="Argument.name">id</stringProp>
                <stringProp name="Argument.value">73</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="TestPlan.comments">Sy-RTC_73 | Sy | Verify Sy Counter Based Plan with PULL Mode with HSQ and Two Level FUP without PCC </stringProp>
        </kg.apc.jmeter.control.ParameterizedController>
        <hashTree>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Start of Sy-RTC_${id}" enabled="true">
            <boolProp name="WAITING">false</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_TIME"></stringProp>
            <stringProp name="LATENCY"></stringProp>
            <stringProp name="CONNECT"></stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Provide Link in Result" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true); 
f = new FileOutputStream(mapping_file_name, true); 
p = new PrintStream(f); 

// Write data to file 

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CleanUp" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="CleanUp" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="subscriber-id" elementType="Argument">
                    <stringProp name="Argument.name">subscriber-id</stringProp>
                    <stringProp name="Argument.value">${subscriber_id}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="product-offer-id" elementType="Argument">
                    <stringProp name="Argument.name">product-offer-id</stringProp>
                    <stringProp name="Argument.value">${base_product_offer_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="data-package-id" elementType="Argument">
                    <stringProp name="Argument.name">data-package-id</stringProp>
                    <stringProp name="Argument.value">${base_data_package_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="rnc-package-id" elementType="Argument">
                    <stringProp name="Argument.name">rnc-package-id</stringProp>
                    <stringProp name="Argument.value">${base_rnc_package_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="data-topup-id" elementType="Argument">
                    <stringProp name="Argument.name">data-topup-id</stringProp>
                    <stringProp name="Argument.value">${data_topup_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="email-template-id" elementType="Argument">
                    <stringProp name="Argument.name">email-template-id</stringProp>
                    <stringProp name="Argument.value">${email_template_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="sms-template-id" elementType="Argument">
                    <stringProp name="Argument.name">sms-template-id</stringProp>
                    <stringProp name="Argument.value">${sms_template_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">com.sterlite.netvertex.nvsampler.cleanup.sampler.CleanUpSampler</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Pre-Processing" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Data Package" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;id&gt;${base_data_package_1}&lt;/id&gt;&#xd;
            &lt;name&gt;${base_data_package_1}&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriod&gt;30&lt;/validityPeriod&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;SY_COUNTER_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;id&gt;${base_data_package_1}_QOS&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin&lt;/description&gt;&#xd;
                    &lt;name&gt;${base_data_package_1}_QOS&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;3&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;3&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules/&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;2&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;2&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;1&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules/&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;1&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;1&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;2&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules/&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;${base_data_package_1}_QUOTA&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;${base_data_package_1}_QUOTA&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles&gt;&#xd;
                &lt;sy-quota-Profile&gt;&#xd;
                    &lt;id&gt;${base_data_package_1}_QUOTA&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin&lt;/description&gt;&#xd;
                    &lt;name&gt;${base_data_package_1}_QUOTA&lt;/name&gt;&#xd;
                    &lt;syQuotaProfileDetailDatas&gt;&#xd;
                        &lt;counterName&gt;gold_qos&lt;/counterName&gt;&#xd;
                        &lt;counterPresent&gt;1&lt;/counterPresent&gt;&#xd;
                        &lt;fup1Value&gt;2&lt;/fup1Value&gt;&#xd;
                        &lt;fup2Value&gt;1&lt;/fup2Value&gt;&#xd;
                        &lt;hsqValue&gt;3&lt;/hsqValue&gt;&#xd;
                        &lt;id&gt;&lt;/id&gt;&#xd;
                        &lt;dataServiceType&gt;&#xd;
                            &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                            &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                        &lt;/dataServiceType&gt;&#xd;
                    &lt;/syQuotaProfileDetailDatas&gt;&#xd;
                &lt;/sy-quota-Profile&gt;&#xd;
            &lt;/sy-quota-profiles&gt;&#xd;
            &lt;topUp-qos-multipliers/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/xml</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Reload Policy" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/policy/reload/policy</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Product Offer" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${base_product_offer_1}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${base_product_offer_1}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin&quot;,&#xd;
   &quot;type&quot;:&quot;BASE&quot;,&#xd;
   &quot;currency&quot;:&quot;${currency}&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${base_data_package_1}&quot;,&#xd;
   &quot;validityPeriod&quot;:null,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1401564903">&quot;id&quot;:&quot;${base_product_offer_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change to Product Offer Mode to TEST" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${base_product_offer_1}/updateMode.json?pkgMode=TEST</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1401564903">&quot;id&quot;:&quot;${base_product_offer_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Reload Policy" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/policy/reload/policy</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change to Product Offer Mode to LIVE" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${base_product_offer_1}/updateMode.json?pkgMode=LIVE</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1401564903">&quot;id&quot;:&quot;${base_product_offer_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Reload Policy" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/policy/reload/policy</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;subscriberProfile&quot;: [&#xd;
    {&#xd;
      &quot;entry&quot;: [&#xd;
        {&#xd;
          &quot;key&quot;: &quot;USERNAME&quot;,&#xd;
          &quot;value&quot;: &quot;${subscriber_id}&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PASSWORD&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;CUSTOMER_TYPE&quot;,&#xd;
          &quot;value&quot;: &quot;Prepaid&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;STATUS&quot;,&#xd;
          &quot;value&quot;: &quot;ACTIVE&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;BILLING_DATE&quot;,&#xd;
          &quot;value&quot;: &quot;15&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;AREA&quot;,&#xd;
          &quot;value&quot;: &quot;CG Road&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;CITY&quot;,&#xd;
          &quot;value&quot;: &quot;Ahmedabad&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM1&quot;,&#xd;
          &quot;value&quot;: &quot;999&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM2&quot;,&#xd;
          &quot;value&quot;: &quot;888&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM3&quot;,&#xd;
          &quot;value&quot;: &quot;777&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM4&quot;,&#xd;
          &quot;value&quot;: &quot;666&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM5&quot;,&#xd;
          &quot;value&quot;: &quot;555&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ZONE&quot;,&#xd;
          &quot;value&quot;: &quot;West&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;COUNTRY&quot;,&#xd;
          &quot;value&quot;: &quot;INDIA&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ROLE&quot;,&#xd;
          &quot;value&quot;: &quot;Manager&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;COMPANY&quot;,&#xd;
          &quot;value&quot;: &quot;Elitecore&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;DEPARTMENT&quot;,&#xd;
          &quot;value&quot;: &quot;CSM&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ARPU&quot;,&#xd;
          &quot;value&quot;: &quot;22&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;CADRE&quot;,&#xd;
          &quot;value&quot;: &quot;M2&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;EMAIL&quot;,&#xd;
          &quot;value&quot;: &quot;radhika.sheladia@elitecore.com&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PHONE&quot;,&#xd;
          &quot;value&quot;: &quot;987584689&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;SIP_URL&quot;,&#xd;
          &quot;value&quot;: &quot;458796&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;CUI&quot;,&#xd;
          &quot;value&quot;: &quot;458896&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;IMSI&quot;,&#xd;
          &quot;value&quot;: &quot;${subscriber_id}&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;MSISDN&quot;,&#xd;
          &quot;value&quot;: &quot;${subscriber_id}&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;MAC&quot;,&#xd;
          &quot;value&quot;: &quot;sda:00:sad2:&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;EUI64&quot;,&#xd;
          &quot;value&quot;: &quot;543121&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;MODIFIED_EUI64&quot;,&#xd;
          &quot;value&quot;: &quot;687654&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ENCRYPTION_TYPE&quot;,&#xd;
          &quot;value&quot;: &quot;16&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ESN&quot;,&#xd;
          &quot;value&quot;: &quot;52222224&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;MEID&quot;,&#xd;
          &quot;value&quot;: &quot;354454&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARENT_ID&quot;,&#xd;
          &quot;value&quot;: &quot;687654&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;GROUP_NAME&quot;,&#xd;
          &quot;value&quot;: &quot;any_group&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;IMEI&quot;,&#xd;
          &quot;value&quot;: &quot;68765435413574&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;SUBSCRIBER_LEVEL_METERING&quot;,&#xd;
          &quot;value&quot;: &quot;ENABLE&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PASSWORD_CHECK&quot;,&#xd;
          &quot;value&quot;: &quot;TRUE&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;SY_INTERFACE&quot;,&#xd;
          &quot;value&quot;: &quot;TRUE&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;productOffer&quot;: &quot;${base_product_offer_1}&quot;,&#xd;
      &quot;subscriberIdentity&quot;: &quot;${subscriber_id}&quot;,&#xd;
      &quot;creditLimit&quot;:&quot;&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/subscriberProvisioning/addSubscribers</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1319337236">&quot;responseCode&quot;:200,&quot;responseMessage&quot;:&quot;Total Subcriber Profiles added: 1&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-I Processing for HSQ" enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.OpenChannelSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.OpenChannelSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.OpenChannelSample" testname="Open Sy Gateway Connection" enabled="true">
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.OpenChannelSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-I" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;0:439&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;10415:1032&quot;,&quot;val&quot;:&quot;1001&quot;}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Sy-SLR-SLA with Counter 3 for HSQ" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">SL</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;3&quot;}]},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;10415:2904&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;}]},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_req(0:263)}&quot;}]</stringProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;10415:2904&quot;,&quot;val&quot;:&quot;0&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">false</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-I - HSQ" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-I</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-U Processing for HSQ " enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-U - HSQ" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;2&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;2&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;33&quot;}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Sy-SLR-SLA with Counter 3 for HSQ" enabled="true">
              <stringProp name="wait-time">3000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">SL</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;3&quot;}]},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;10415:2904&quot;,&quot;val&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;}]},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_req(0:263)}&quot;}]</stringProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-U - HSQ" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-U - HSQ</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-U Processing for FUP1 " enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-U - HSQ to FUP1" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;2&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;33&quot;}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Sy-SLR-SLA with Counter 2 for FUP" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">SL</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;2&quot;}]},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;10415:2904&quot;,&quot;val&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;}]},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_req(0:263)}&quot;}]</stringProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-U - HSQ to FUP1" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-U - HSQ to FUP1</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-U Processing for FUP1 " enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-U - FUP1" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;2&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;4&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;33&quot;}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Sy-SLR-SLA with Counter 2 for FUP" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">SL</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;2&quot;}]},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;10415:2904&quot;,&quot;val&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;}]},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_req(0:263)}&quot;}]</stringProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-U - FUP1" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-U - FUP1</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-U Processing for FUP2 " enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-U - FUP1 to FUP2" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;2&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;5&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;33&quot;}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Sy-SLR-SLA with Counter 1 for FUP2" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">SL</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;1&quot;}]},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;10415:2904&quot;,&quot;val&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;}]},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_req(0:263)}&quot;}]</stringProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-U - FUP2" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-U - FUP1 to FUP2</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-U Processing for FUP2 " enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-U - FUP2" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;2&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;6&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;33&quot;}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Sy-SLR-SLA with Counter 1 for FUP2" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">SL</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;1&quot;}]},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;10415:2904&quot;,&quot;val&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;}]},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_req(0:263)}&quot;}]</stringProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-U - FUP2" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-U - FUP2</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-T Processing" enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-T" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;7&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;0:439&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;10415:1032&quot;,&quot;val&quot;:&quot;1001&quot;},{&quot;id&quot;:&quot;0:295&quot;,&quot;val&quot;:&quot;1&quot;}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Sy-STR-STA" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">ST</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;}]},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_req(0:263)}&quot;}]</stringProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-T" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-T</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.CloseChannelSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.CloseChannelSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.CloseChannelSample" testname="Close Sy Gateway Connection" enabled="true">
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
              <boolProp name="CLOSE_GRACEFULLY">true</boolProp>
            </com.harshdev.rndjmeter.diameter.sampler.CloseChannelSample>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="End of RTC_${id}" enabled="true">
            <boolProp name="WAITING">false</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_TIME"></stringProp>
            <stringProp name="LATENCY"></stringProp>
            <stringProp name="CONNECT"></stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sy-RTC_74" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Sy-RTC_74 | Sy | Verify Sy Counter Based Plan with PUSH Mode with HSQ and Two Level FUP without PCC</stringProp>
      </ThreadGroup>
      <hashTree>
        <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="Sy-RTC_74" enabled="true">
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriber_id" elementType="Argument">
                <stringProp name="Argument.name">subscriber_id</stringProp>
                <stringProp name="Argument.value">1111111174</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">1111111174</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">1111111174</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">1111111174</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">1111111174</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="session_id" elementType="Argument">
                <stringProp name="Argument.name">session_id</stringProp>
                <stringProp name="Argument.value">1111111174_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="base_product_offer_1" elementType="Argument">
                <stringProp name="Argument.name">base_product_offer_1</stringProp>
                <stringProp name="Argument.value">RTC_74_BASE_PO</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="base_data_package_1" elementType="Argument">
                <stringProp name="Argument.name">base_data_package_1</stringProp>
                <stringProp name="Argument.value">RTC_74_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="counter_name" elementType="Argument">
                <stringProp name="Argument.name">counter_name</stringProp>
                <stringProp name="Argument.value">gold_qos</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">25176</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="id" elementType="Argument">
                <stringProp name="Argument.name">id</stringProp>
                <stringProp name="Argument.value">74</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="TestPlan.comments">Sy-RTC_74 | Sy | Verify Sy Counter Based Plan with PUSH Mode with HSQ and Two Level FUP without PCC</stringProp>
        </kg.apc.jmeter.control.ParameterizedController>
        <hashTree>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Start of Sy-RTC_${id}" enabled="true">
            <boolProp name="WAITING">false</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_TIME"></stringProp>
            <stringProp name="LATENCY"></stringProp>
            <stringProp name="CONNECT"></stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Provide Link in Result" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true); 
f = new FileOutputStream(mapping_file_name, true); 
p = new PrintStream(f); 

// Write data to file 

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CleanUp" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="CleanUp" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="subscriber-id" elementType="Argument">
                    <stringProp name="Argument.name">subscriber-id</stringProp>
                    <stringProp name="Argument.value">${subscriber_id}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="product-offer-id" elementType="Argument">
                    <stringProp name="Argument.name">product-offer-id</stringProp>
                    <stringProp name="Argument.value">${base_product_offer_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="data-package-id" elementType="Argument">
                    <stringProp name="Argument.name">data-package-id</stringProp>
                    <stringProp name="Argument.value">${base_data_package_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="rnc-package-id" elementType="Argument">
                    <stringProp name="Argument.name">rnc-package-id</stringProp>
                    <stringProp name="Argument.value">${base_rnc_package_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="data-topup-id" elementType="Argument">
                    <stringProp name="Argument.name">data-topup-id</stringProp>
                    <stringProp name="Argument.value">${data_topup_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="email-template-id" elementType="Argument">
                    <stringProp name="Argument.name">email-template-id</stringProp>
                    <stringProp name="Argument.value">${email_template_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="sms-template-id" elementType="Argument">
                    <stringProp name="Argument.name">sms-template-id</stringProp>
                    <stringProp name="Argument.value">${sms_template_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">com.sterlite.netvertex.nvsampler.cleanup.sampler.CleanUpSampler</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Pre-Processing" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Data Package" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;id&gt;${base_data_package_1}&lt;/id&gt;&#xd;
            &lt;name&gt;${base_data_package_1}&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriod&gt;30&lt;/validityPeriod&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;SY_COUNTER_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;id&gt;${base_data_package_1}_QOS&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin&lt;/description&gt;&#xd;
                    &lt;name&gt;${base_data_package_1}_QOS&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;3&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;3&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules/&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;2&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;2&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;1&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules/&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;1&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;1&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;2&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules/&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;${base_data_package_1}_QUOTA&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;${base_data_package_1}_QUOTA&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles&gt;&#xd;
                &lt;sy-quota-Profile&gt;&#xd;
                    &lt;id&gt;${base_data_package_1}_QUOTA&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin&lt;/description&gt;&#xd;
                    &lt;name&gt;${base_data_package_1}_QUOTA&lt;/name&gt;&#xd;
                    &lt;syQuotaProfileDetailDatas&gt;&#xd;
                        &lt;counterName&gt;gold_qos&lt;/counterName&gt;&#xd;
                        &lt;counterPresent&gt;1&lt;/counterPresent&gt;&#xd;
                        &lt;fup1Value&gt;2&lt;/fup1Value&gt;&#xd;
                        &lt;fup2Value&gt;1&lt;/fup2Value&gt;&#xd;
                        &lt;hsqValue&gt;3&lt;/hsqValue&gt;&#xd;
                        &lt;id&gt;&lt;/id&gt;&#xd;
                        &lt;dataServiceType&gt;&#xd;
                            &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                            &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                        &lt;/dataServiceType&gt;&#xd;
                    &lt;/syQuotaProfileDetailDatas&gt;&#xd;
                &lt;/sy-quota-Profile&gt;&#xd;
            &lt;/sy-quota-profiles&gt;&#xd;
            &lt;topUp-qos-multipliers/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/xml</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Reload Policy" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/policy/reload/policy</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Product Offer" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${base_product_offer_1}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${base_product_offer_1}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin&quot;,&#xd;
   &quot;type&quot;:&quot;BASE&quot;,&#xd;
   &quot;currency&quot;:&quot;${currency}&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${base_data_package_1}&quot;,&#xd;
   &quot;validityPeriod&quot;:null,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1401564903">&quot;id&quot;:&quot;${base_product_offer_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change to Product Offer Mode to TEST" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${base_product_offer_1}/updateMode.json?pkgMode=TEST</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1401564903">&quot;id&quot;:&quot;${base_product_offer_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Reload Policy" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/policy/reload/policy</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change to Product Offer Mode to LIVE" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${base_product_offer_1}/updateMode.json?pkgMode=LIVE</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1401564903">&quot;id&quot;:&quot;${base_product_offer_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Reload Policy" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/policy/reload/policy</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;subscriberProfile&quot;: [&#xd;
    {&#xd;
      &quot;entry&quot;: [&#xd;
        {&#xd;
          &quot;key&quot;: &quot;USERNAME&quot;,&#xd;
          &quot;value&quot;: &quot;${subscriber_id}&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PASSWORD&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;CUSTOMER_TYPE&quot;,&#xd;
          &quot;value&quot;: &quot;Prepaid&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;STATUS&quot;,&#xd;
          &quot;value&quot;: &quot;ACTIVE&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;BILLING_DATE&quot;,&#xd;
          &quot;value&quot;: &quot;15&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;AREA&quot;,&#xd;
          &quot;value&quot;: &quot;CG Road&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;CITY&quot;,&#xd;
          &quot;value&quot;: &quot;Ahmedabad&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM1&quot;,&#xd;
          &quot;value&quot;: &quot;999&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM2&quot;,&#xd;
          &quot;value&quot;: &quot;888&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM3&quot;,&#xd;
          &quot;value&quot;: &quot;777&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM4&quot;,&#xd;
          &quot;value&quot;: &quot;666&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM5&quot;,&#xd;
          &quot;value&quot;: &quot;555&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ZONE&quot;,&#xd;
          &quot;value&quot;: &quot;West&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;COUNTRY&quot;,&#xd;
          &quot;value&quot;: &quot;INDIA&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ROLE&quot;,&#xd;
          &quot;value&quot;: &quot;Manager&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;COMPANY&quot;,&#xd;
          &quot;value&quot;: &quot;Elitecore&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;DEPARTMENT&quot;,&#xd;
          &quot;value&quot;: &quot;CSM&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ARPU&quot;,&#xd;
          &quot;value&quot;: &quot;22&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;CADRE&quot;,&#xd;
          &quot;value&quot;: &quot;M2&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;EMAIL&quot;,&#xd;
          &quot;value&quot;: &quot;radhika.sheladia@elitecore.com&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PHONE&quot;,&#xd;
          &quot;value&quot;: &quot;987584689&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;SIP_URL&quot;,&#xd;
          &quot;value&quot;: &quot;458796&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;CUI&quot;,&#xd;
          &quot;value&quot;: &quot;458896&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;IMSI&quot;,&#xd;
          &quot;value&quot;: &quot;${subscriber_id}&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;MSISDN&quot;,&#xd;
          &quot;value&quot;: &quot;${subscriber_id}&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;MAC&quot;,&#xd;
          &quot;value&quot;: &quot;sda:00:sad2:&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;EUI64&quot;,&#xd;
          &quot;value&quot;: &quot;543121&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;MODIFIED_EUI64&quot;,&#xd;
          &quot;value&quot;: &quot;687654&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ENCRYPTION_TYPE&quot;,&#xd;
          &quot;value&quot;: &quot;16&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ESN&quot;,&#xd;
          &quot;value&quot;: &quot;52222224&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;MEID&quot;,&#xd;
          &quot;value&quot;: &quot;354454&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARENT_ID&quot;,&#xd;
          &quot;value&quot;: &quot;687654&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;GROUP_NAME&quot;,&#xd;
          &quot;value&quot;: &quot;any_group&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;IMEI&quot;,&#xd;
          &quot;value&quot;: &quot;68765435413574&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;SUBSCRIBER_LEVEL_METERING&quot;,&#xd;
          &quot;value&quot;: &quot;ENABLE&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PASSWORD_CHECK&quot;,&#xd;
          &quot;value&quot;: &quot;TRUE&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;SY_INTERFACE&quot;,&#xd;
          &quot;value&quot;: &quot;TRUE&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;productOffer&quot;: &quot;${base_product_offer_1}&quot;,&#xd;
      &quot;subscriberIdentity&quot;: &quot;${subscriber_id}&quot;,&#xd;
      &quot;creditLimit&quot;:&quot;&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/subscriberProvisioning/addSubscribers</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1319337236">&quot;responseCode&quot;:200,&quot;responseMessage&quot;:&quot;Total Subcriber Profiles added: 1&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-I Processing for HSQ" enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.OpenChannelSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.OpenChannelSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.OpenChannelSample" testname="Open Sy Gateway Connection" enabled="true">
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.OpenChannelSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-I" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;0:439&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;10415:1032&quot;,&quot;val&quot;:&quot;1001&quot;}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Sy-SLR-SLA with Counter 3 for HSQ" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">SL</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;3&quot;}]},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;10415:2904&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;}]},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_req(0:263)}&quot;}]</stringProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;10415:2904&quot;,&quot;val&quot;:&quot;0&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">false</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-I - HSQ" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-I</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-U Processing for FUP1" enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-U - FUP1" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;2&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;2&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;33&quot;}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-U - FUP1" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-U - FUP1</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Sy-SNR-SNA with Counter 2 for FUP1" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_app_req(SY,0:263)}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;2&quot;}]},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]}]</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">SN</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Gx-RAR-RAA for FUP1 Installtion" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">RA</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:257&quot;,&quot;val&quot;:&quot;${jmeterip}&quot;}]</stringProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:285&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;10415:1067&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:1066&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;10415:1068&quot;,&quot;val&quot;:&quot;${__dia_last_app_res(GX,10415:1067,0,,10415:1068)}&quot;}]}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-U Processing for FUP2" enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-U - FUP2" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;2&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;33&quot;}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-U - FUP2" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-U - FUP2</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Sy-SNR-SNA with Counter 1 for FUP2" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_app_req(SY,0:263)}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;1&quot;}]},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]}]</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">SN</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Gx-RAR-RAA for FUP2 Installtion" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">RA</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:257&quot;,&quot;val&quot;:&quot;${jmeterip}&quot;}]</stringProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:285&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;10415:1067&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:1066&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;10415:1068&quot;,&quot;val&quot;:&quot;${__dia_last_app_res(GX,10415:1067,0,,10415:1068)}&quot;}]}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-T Processing" enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-T" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;4&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;0:439&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;10415:1032&quot;,&quot;val&quot;:&quot;1001&quot;},{&quot;id&quot;:&quot;0:295&quot;,&quot;val&quot;:&quot;1&quot;}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Sy-STR-STA" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">ST</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;}]},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_app_req(SY,0:263)}&quot;}]</stringProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-T" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-T</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.CloseChannelSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.CloseChannelSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.CloseChannelSample" testname="Close Sy Gateway Connection" enabled="true">
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
              <boolProp name="CLOSE_GRACEFULLY">true</boolProp>
            </com.harshdev.rndjmeter.diameter.sampler.CloseChannelSample>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="End of RTC_${id}" enabled="true">
            <boolProp name="WAITING">false</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_TIME"></stringProp>
            <stringProp name="LATENCY"></stringProp>
            <stringProp name="CONNECT"></stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sy-RTC_83" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Sy-RTC_83 | Sy | Verify Charging Rule Base Name functionality with HSQ + Two Level FUP plan for Sy Package with PUSH mode without Dynamic PCC</stringProp>
      </ThreadGroup>
      <hashTree>
        <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="Sy-RTC_83" enabled="true">
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriber_id" elementType="Argument">
                <stringProp name="Argument.name">subscriber_id</stringProp>
                <stringProp name="Argument.value">1111111183</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">1111111183</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">1111111183</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">1111111183</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">1111111183</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="session_id" elementType="Argument">
                <stringProp name="Argument.name">session_id</stringProp>
                <stringProp name="Argument.value">1111111183_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="base_product_offer_1" elementType="Argument">
                <stringProp name="Argument.name">base_product_offer_1</stringProp>
                <stringProp name="Argument.value">RTC_83_BASE_PO</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="base_data_package_1" elementType="Argument">
                <stringProp name="Argument.name">base_data_package_1</stringProp>
                <stringProp name="Argument.value">RTC_83_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_id_1" elementType="Argument">
                <stringProp name="Argument.name">crbn_id_1</stringProp>
                <stringProp name="Argument.value">CRBN_83_1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_id_2" elementType="Argument">
                <stringProp name="Argument.name">crbn_id_2</stringProp>
                <stringProp name="Argument.value">CRBN_83_2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_id_3" elementType="Argument">
                <stringProp name="Argument.name">crbn_id_3</stringProp>
                <stringProp name="Argument.value">CRBN_83_3</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="counter_all_name" elementType="Argument">
                <stringProp name="Argument.name">counter_all_name</stringProp>
                <stringProp name="Argument.value">gold_all</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="counter_http_name" elementType="Argument">
                <stringProp name="Argument.name">counter_http_name</stringProp>
                <stringProp name="Argument.value">gold_http</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">25177</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="id" elementType="Argument">
                <stringProp name="Argument.name">id</stringProp>
                <stringProp name="Argument.value">83</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="TestPlan.comments">Sy-RTC_83 | Sy | Verify Charging Rule Base Name functionality with HSQ + Two Level FUP plan for Sy Package with PUSH mode without Dynamic PCC</stringProp>
        </kg.apc.jmeter.control.ParameterizedController>
        <hashTree>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Start of Sy-RTC_${id}" enabled="true">
            <boolProp name="WAITING">false</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_TIME"></stringProp>
            <stringProp name="LATENCY"></stringProp>
            <stringProp name="CONNECT"></stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Provide Link in Result" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true); 
f = new FileOutputStream(mapping_file_name, true); 
p = new PrintStream(f); 

// Write data to file 

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CleanUp" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="CleanUp" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="subscriber-id" elementType="Argument">
                    <stringProp name="Argument.name">subscriber-id</stringProp>
                    <stringProp name="Argument.value">${subscriber_id}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="product-offer-id" elementType="Argument">
                    <stringProp name="Argument.name">product-offer-id</stringProp>
                    <stringProp name="Argument.value">${base_product_offer_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="data-package-id" elementType="Argument">
                    <stringProp name="Argument.name">data-package-id</stringProp>
                    <stringProp name="Argument.value">${base_data_package_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="rnc-package-id" elementType="Argument">
                    <stringProp name="Argument.name">rnc-package-id</stringProp>
                    <stringProp name="Argument.value">${base_rnc_package_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="data-topup-id" elementType="Argument">
                    <stringProp name="Argument.name">data-topup-id</stringProp>
                    <stringProp name="Argument.value">${data_topup_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="email-template-id" elementType="Argument">
                    <stringProp name="Argument.name">email-template-id</stringProp>
                    <stringProp name="Argument.value">${email_template_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="sms-template-id" elementType="Argument">
                    <stringProp name="Argument.name">sms-template-id</stringProp>
                    <stringProp name="Argument.value">${sms_template_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">com.sterlite.netvertex.nvsampler.cleanup.sampler.CleanUpSampler</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Pre-Processing" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create CRBN" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;global-charging-rule-base-name-container&gt;&#xd;
    &lt;chargingRuleBaseNameDatas&gt;&#xd;
        &lt;chargingRuleBaseNameData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;${crbn_id_1}&lt;/id&gt;&#xd;
            &lt;name&gt;${crbn_id_1}&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 01/05/2018 16:44:40&lt;/description&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                    &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;${crbn_id_1}_all&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;${crbn_id_1}_all&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_3&lt;/id&gt;&#xd;
                    &lt;name&gt;HTTP&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;${crbn_id_1}_http&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;${crbn_id_1}_http&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
        &lt;/chargingRuleBaseNameData&gt;&#xd;
        &lt;chargingRuleBaseNameData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;${crbn_id_2}&lt;/id&gt;&#xd;
            &lt;name&gt;${crbn_id_2}&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 01/05/2018 16:47:01&lt;/description&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                    &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;${crbn_id_2}_all&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;${crbn_id_2}_all&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_3&lt;/id&gt;&#xd;
                    &lt;name&gt;HTTP&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;${crbn_id_2}_http&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;${crbn_id_2}_http&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
        &lt;/chargingRuleBaseNameData&gt;&#xd;
        &lt;chargingRuleBaseNameData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;${crbn_id_3}&lt;/id&gt;&#xd;
            &lt;name&gt;${crbn_id_3}&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 01/05/2018 16:48:02&lt;/description&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                    &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;${crbn_id_3}_all&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;${crbn_id_3}_all&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_3&lt;/id&gt;&#xd;
                    &lt;name&gt;HTTP&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;${crbn_id_3}_http&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;${crbn_id_3}_http&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
        &lt;/chargingRuleBaseNameData&gt;&#xd;
    &lt;/chargingRuleBaseNameDatas&gt;&#xd;
&lt;/global-charging-rule-base-name-container&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_charging_rule_base_name_url}?${replace}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/xml</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Data Package" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;${base_data_package_1}&lt;/id&gt;&#xd;
            &lt;name&gt;${base_data_package_1}&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriod&gt;30&lt;/validityPeriod&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;SY_COUNTER_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;${base_data_package_1}_QOS&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin&lt;/description&gt;&#xd;
                    &lt;name&gt;${base_data_package_1}_QOS&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;1&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;1&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names&gt;&#xd;
                                &lt;charging-rule-base-name&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;name&gt;${crbn_id_1}&lt;/name&gt;&#xd;
                                &lt;/charging-rule-base-name&gt;&#xd;
                            &lt;/charging-rule-base-names&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules/&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;500&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;500&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names&gt;&#xd;
                                &lt;charging-rule-base-name&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;name&gt;${crbn_id_2}&lt;/name&gt;&#xd;
                                &lt;/charging-rule-base-name&gt;&#xd;
                            &lt;/charging-rule-base-names&gt;&#xd;
                            &lt;fup-level&gt;1&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules/&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;256&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;256&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names&gt;&#xd;
                                &lt;charging-rule-base-name&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;name&gt;${crbn_id_3}&lt;/name&gt;&#xd;
                                &lt;/charging-rule-base-name&gt;&#xd;
                            &lt;/charging-rule-base-names&gt;&#xd;
                            &lt;fup-level&gt;2&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules/&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;${base_data_package_1}_QUOTA&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;${base_data_package_1}_QUOTA&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles&gt;&#xd;
                &lt;sy-quota-Profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;${base_data_package_1}_QUOTA&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin&lt;/description&gt;&#xd;
                    &lt;name&gt;${base_data_package_1}_QUOTA&lt;/name&gt;&#xd;
                    &lt;syQuotaProfileDetailDatas&gt;&#xd;
                        &lt;counterName&gt;${counter_all_name}&lt;/counterName&gt;&#xd;
                        &lt;counterPresent&gt;1&lt;/counterPresent&gt;&#xd;
                        &lt;dataServiceType&gt;&#xd;
                            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                            &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                            &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                        &lt;/dataServiceType&gt;&#xd;
                        &lt;fup1Value&gt;1&lt;/fup1Value&gt;&#xd;
                        &lt;fup2Value&gt;0&lt;/fup2Value&gt;&#xd;
                        &lt;hsqValue&gt;2&lt;/hsqValue&gt;&#xd;
                        &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;/syQuotaProfileDetailDatas&gt;&#xd;
                    &lt;syQuotaProfileDetailDatas&gt;&#xd;
                        &lt;counterName&gt;${counter_http_name}&lt;/counterName&gt;&#xd;
                        &lt;counterPresent&gt;1&lt;/counterPresent&gt;&#xd;
                        &lt;dataServiceType&gt;&#xd;
                            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                            &lt;id&gt;DATA_SERVICE_TYPE_3&lt;/id&gt;&#xd;
                            &lt;name&gt;HTTP&lt;/name&gt;&#xd;
                        &lt;/dataServiceType&gt;&#xd;
                        &lt;fup1Value&gt;1&lt;/fup1Value&gt;&#xd;
                        &lt;fup2Value&gt;0&lt;/fup2Value&gt;&#xd;
                        &lt;hsqValue&gt;2&lt;/hsqValue&gt;&#xd;
                        &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;/syQuotaProfileDetailDatas&gt;&#xd;
                &lt;/sy-quota-Profile&gt;&#xd;
            &lt;/sy-quota-profiles&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/xml</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Reload Policy" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/policy/reload/policy</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Product Offer" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${base_product_offer_1}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${base_product_offer_1}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin&quot;,&#xd;
   &quot;type&quot;:&quot;BASE&quot;,&#xd;
   &quot;currency&quot;:&quot;${currency}&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${base_data_package_1}&quot;,&#xd;
   &quot;validityPeriod&quot;:null,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1401564903">&quot;id&quot;:&quot;${base_product_offer_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change to Product Offer Mode to TEST" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${base_product_offer_1}/updateMode.json?pkgMode=TEST</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1401564903">&quot;id&quot;:&quot;${base_product_offer_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Reload Policy" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/policy/reload/policy</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change to Product Offer Mode to LIVE" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${base_product_offer_1}/updateMode.json?pkgMode=LIVE</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1401564903">&quot;id&quot;:&quot;${base_product_offer_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Reload Policy" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/policy/reload/policy</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;subscriberProfile&quot;: [&#xd;
    {&#xd;
      &quot;entry&quot;: [&#xd;
        {&#xd;
          &quot;key&quot;: &quot;USERNAME&quot;,&#xd;
          &quot;value&quot;: &quot;${subscriber_id}&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PASSWORD&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;CUSTOMER_TYPE&quot;,&#xd;
          &quot;value&quot;: &quot;Prepaid&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;STATUS&quot;,&#xd;
          &quot;value&quot;: &quot;ACTIVE&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;BILLING_DATE&quot;,&#xd;
          &quot;value&quot;: &quot;15&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;AREA&quot;,&#xd;
          &quot;value&quot;: &quot;CG Road&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;CITY&quot;,&#xd;
          &quot;value&quot;: &quot;Ahmedabad&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM1&quot;,&#xd;
          &quot;value&quot;: &quot;999&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM2&quot;,&#xd;
          &quot;value&quot;: &quot;888&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM3&quot;,&#xd;
          &quot;value&quot;: &quot;777&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM4&quot;,&#xd;
          &quot;value&quot;: &quot;666&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM5&quot;,&#xd;
          &quot;value&quot;: &quot;555&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ZONE&quot;,&#xd;
          &quot;value&quot;: &quot;West&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;COUNTRY&quot;,&#xd;
          &quot;value&quot;: &quot;INDIA&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ROLE&quot;,&#xd;
          &quot;value&quot;: &quot;Manager&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;COMPANY&quot;,&#xd;
          &quot;value&quot;: &quot;Elitecore&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;DEPARTMENT&quot;,&#xd;
          &quot;value&quot;: &quot;CSM&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ARPU&quot;,&#xd;
          &quot;value&quot;: &quot;22&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;CADRE&quot;,&#xd;
          &quot;value&quot;: &quot;M2&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;EMAIL&quot;,&#xd;
          &quot;value&quot;: &quot;radhika.sheladia@elitecore.com&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PHONE&quot;,&#xd;
          &quot;value&quot;: &quot;987584689&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;SIP_URL&quot;,&#xd;
          &quot;value&quot;: &quot;458796&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;CUI&quot;,&#xd;
          &quot;value&quot;: &quot;458896&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;IMSI&quot;,&#xd;
          &quot;value&quot;: &quot;${subscriber_id}&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;MSISDN&quot;,&#xd;
          &quot;value&quot;: &quot;${subscriber_id}&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;MAC&quot;,&#xd;
          &quot;value&quot;: &quot;sda:00:sad2:&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;EUI64&quot;,&#xd;
          &quot;value&quot;: &quot;543121&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;MODIFIED_EUI64&quot;,&#xd;
          &quot;value&quot;: &quot;687654&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ENCRYPTION_TYPE&quot;,&#xd;
          &quot;value&quot;: &quot;16&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ESN&quot;,&#xd;
          &quot;value&quot;: &quot;52222224&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;MEID&quot;,&#xd;
          &quot;value&quot;: &quot;354454&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARENT_ID&quot;,&#xd;
          &quot;value&quot;: &quot;687654&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;GROUP_NAME&quot;,&#xd;
          &quot;value&quot;: &quot;any_group&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;IMEI&quot;,&#xd;
          &quot;value&quot;: &quot;68765435413574&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;SUBSCRIBER_LEVEL_METERING&quot;,&#xd;
          &quot;value&quot;: &quot;ENABLE&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PASSWORD_CHECK&quot;,&#xd;
          &quot;value&quot;: &quot;TRUE&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;SY_INTERFACE&quot;,&#xd;
          &quot;value&quot;: &quot;TRUE&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;productOffer&quot;: &quot;${base_product_offer_1}&quot;,&#xd;
      &quot;subscriberIdentity&quot;: &quot;${subscriber_id}&quot;,&#xd;
      &quot;creditLimit&quot;:&quot;&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/subscriberProvisioning/addSubscribers</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1319337236">&quot;responseCode&quot;:200,&quot;responseMessage&quot;:&quot;Total Subcriber Profiles added: 1&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-I Processing for HSQ" enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.OpenChannelSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.OpenChannelSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.OpenChannelSample" testname="Open Sy Gateway Connection" enabled="true">
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.OpenChannelSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-I" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;0:439&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;10415:1032&quot;,&quot;val&quot;:&quot;1001&quot;}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Sy-SLR-SLA with Counter 2 for HSQ" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">SL</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;10415:2904&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;}]},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_req(0:263)}&quot;},{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_all_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;2&quot;}]},{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_http_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;2&quot;}]}]</stringProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;10415:2904&quot;,&quot;val&quot;:&quot;0&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">false</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-I - HSQ" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-I</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-U Processing for FUP1" enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-U - FUP1" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;2&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;2&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;33&quot;}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-U - FUP1" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-U - FUP1</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Sy-SNR-SNA with Counter 1 for FUP1" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_app_req(SY,0:263)}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]},{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_all_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;1&quot;}]},{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_http_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;1&quot;}]}]</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">SN</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Gx-RAR-RAA for FUP1 Installtion" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">RA</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:257&quot;,&quot;val&quot;:&quot;${jmeterip}&quot;}]</stringProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:285&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;10415:1001&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:1004&quot;,&quot;val&quot;:&quot;${crbn_id_2}&quot;}]},{&quot;id&quot;:&quot;10415:1002&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:1004&quot;,&quot;val&quot;:&quot;${crbn_id_1}&quot;}]}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-U Processing for FUP2" enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-U - FUP2" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;2&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;33&quot;}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-U - FUP2" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-U - FUP2</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Sy-SNR-SNA with Counter 0 for FUP2" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_app_req(SY,0:263)}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]},{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_all_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_http_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;0&quot;}]}]</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">SN</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Gx-RAR-RAA for FUP2 Installtion" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">RA</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:257&quot;,&quot;val&quot;:&quot;${jmeterip}&quot;}]</stringProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:285&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;10415:1001&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:1004&quot;,&quot;val&quot;:&quot;${crbn_id_3}&quot;}]},{&quot;id&quot;:&quot;10415:1002&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:1004&quot;,&quot;val&quot;:&quot;${crbn_id_2}&quot;}]}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-T Processing" enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-T" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;4&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;0:439&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;10415:1032&quot;,&quot;val&quot;:&quot;1001&quot;},{&quot;id&quot;:&quot;0:295&quot;,&quot;val&quot;:&quot;1&quot;}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Sy-STR-STA" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">ST</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;}]},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_app_req(SY,0:263)}&quot;}]</stringProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-T" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-T</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.CloseChannelSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.CloseChannelSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.CloseChannelSample" testname="Close Sy Gateway Connection" enabled="true">
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
              <boolProp name="CLOSE_GRACEFULLY">true</boolProp>
            </com.harshdev.rndjmeter.diameter.sampler.CloseChannelSample>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sy-RTC_84" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Sy-RTC_84 | Sy | Verify Charging Rule Base Name functionality with HSQ + Two Level FUP plan for Sy Package with PULL mode with Dynamic PCC Rules</stringProp>
      </ThreadGroup>
      <hashTree>
        <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="Sy-RTC_84" enabled="true">
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriber_id" elementType="Argument">
                <stringProp name="Argument.name">subscriber_id</stringProp>
                <stringProp name="Argument.value">1111111184</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">1111111184</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">1111111184</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">1111111184</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">1111111184</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="session_id" elementType="Argument">
                <stringProp name="Argument.name">session_id</stringProp>
                <stringProp name="Argument.value">1111111184_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="base_product_offer_1" elementType="Argument">
                <stringProp name="Argument.name">base_product_offer_1</stringProp>
                <stringProp name="Argument.value">RTC_84_BASE_PO</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="base_data_package_1" elementType="Argument">
                <stringProp name="Argument.name">base_data_package_1</stringProp>
                <stringProp name="Argument.value">RTC_84_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_id_1" elementType="Argument">
                <stringProp name="Argument.name">crbn_id_1</stringProp>
                <stringProp name="Argument.value">CRBN_84_1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_id_2" elementType="Argument">
                <stringProp name="Argument.name">crbn_id_2</stringProp>
                <stringProp name="Argument.value">CRBN_84_2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_id_3" elementType="Argument">
                <stringProp name="Argument.name">crbn_id_3</stringProp>
                <stringProp name="Argument.value">CRBN_84_3</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="counter_all_name" elementType="Argument">
                <stringProp name="Argument.name">counter_all_name</stringProp>
                <stringProp name="Argument.value">gold_all</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="counter_http_name" elementType="Argument">
                <stringProp name="Argument.name">counter_http_name</stringProp>
                <stringProp name="Argument.value">gold_http</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">25178</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="id" elementType="Argument">
                <stringProp name="Argument.name">id</stringProp>
                <stringProp name="Argument.value">84</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="TestPlan.comments">Sy-RTC_84 | Sy | Verify Charging Rule Base Name functionality with HSQ + Two Level FUP plan for Sy Package with PULL mode with Dynamic PCC Rules</stringProp>
        </kg.apc.jmeter.control.ParameterizedController>
        <hashTree>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Start of Sy-RTC_${id}" enabled="true">
            <boolProp name="WAITING">false</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_TIME"></stringProp>
            <stringProp name="LATENCY"></stringProp>
            <stringProp name="CONNECT"></stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Provide Link in Result" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true); 
f = new FileOutputStream(mapping_file_name, true); 
p = new PrintStream(f); 

// Write data to file 

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CleanUp" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="CleanUp" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="subscriber-id" elementType="Argument">
                    <stringProp name="Argument.name">subscriber-id</stringProp>
                    <stringProp name="Argument.value">${subscriber_id}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="product-offer-id" elementType="Argument">
                    <stringProp name="Argument.name">product-offer-id</stringProp>
                    <stringProp name="Argument.value">${base_product_offer_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="data-package-id" elementType="Argument">
                    <stringProp name="Argument.name">data-package-id</stringProp>
                    <stringProp name="Argument.value">${base_data_package_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="rnc-package-id" elementType="Argument">
                    <stringProp name="Argument.name">rnc-package-id</stringProp>
                    <stringProp name="Argument.value">${base_rnc_package_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="data-topup-id" elementType="Argument">
                    <stringProp name="Argument.name">data-topup-id</stringProp>
                    <stringProp name="Argument.value">${data_topup_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="email-template-id" elementType="Argument">
                    <stringProp name="Argument.name">email-template-id</stringProp>
                    <stringProp name="Argument.value">${email_template_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="sms-template-id" elementType="Argument">
                    <stringProp name="Argument.name">sms-template-id</stringProp>
                    <stringProp name="Argument.value">${sms_template_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">com.sterlite.netvertex.nvsampler.cleanup.sampler.CleanUpSampler</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Pre-Processing" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create CRBN" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;global-charging-rule-base-name-container&gt;&#xd;
    &lt;chargingRuleBaseNameDatas&gt;&#xd;
        &lt;chargingRuleBaseNameData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;${crbn_id_1}&lt;/id&gt;&#xd;
            &lt;name&gt;${crbn_id_1}&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 01/05/2018 16:44:40&lt;/description&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                    &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;${crbn_id_1}_all&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;${crbn_id_1}_all&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_3&lt;/id&gt;&#xd;
                    &lt;name&gt;HTTP&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;${crbn_id_1}_http&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;${crbn_id_1}_http&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
        &lt;/chargingRuleBaseNameData&gt;&#xd;
        &lt;chargingRuleBaseNameData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;${crbn_id_2}&lt;/id&gt;&#xd;
            &lt;name&gt;${crbn_id_2}&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 01/05/2018 16:47:01&lt;/description&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                    &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;${crbn_id_2}_all&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;${crbn_id_2}_all&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_3&lt;/id&gt;&#xd;
                    &lt;name&gt;HTTP&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;${crbn_id_2}_http&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;${crbn_id_2}_http&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
        &lt;/chargingRuleBaseNameData&gt;&#xd;
        &lt;chargingRuleBaseNameData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;${crbn_id_3}&lt;/id&gt;&#xd;
            &lt;name&gt;${crbn_id_3}&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 01/05/2018 16:48:02&lt;/description&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                    &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;${crbn_id_3}_all&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;${crbn_id_3}_all&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_3&lt;/id&gt;&#xd;
                    &lt;name&gt;HTTP&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;${crbn_id_3}_http&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;${crbn_id_3}_http&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
        &lt;/chargingRuleBaseNameData&gt;&#xd;
    &lt;/chargingRuleBaseNameDatas&gt;&#xd;
&lt;/global-charging-rule-base-name-container&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_charging_rule_base_name_url}?${replace}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/xml</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Data Package" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;${base_data_package_1}&lt;/id&gt;&#xd;
            &lt;name&gt;${base_data_package_1}&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriod&gt;30&lt;/validityPeriod&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;SY_COUNTER_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;${base_data_package_1}_QOS&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin&lt;/description&gt;&#xd;
                    &lt;name&gt;${base_data_package_1}_QOS&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;1&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;1&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names&gt;&#xd;
                                &lt;charging-rule-base-name&gt;&#xd;
                                    &lt;id&gt;${crbn_id_1}&lt;/id&gt;&#xd;
                                    &lt;name&gt;${crbn_id_1}&lt;/name&gt;&#xd;
                                &lt;/charging-rule-base-name&gt;&#xd;
                            &lt;/charging-rule-base-names&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;${base_data_package_1}_HSQ_PCC&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;${base_data_package_1}_HSQ_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;${base_data_package_1}_HSQ_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;512&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;512&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names&gt;&#xd;
                                &lt;charging-rule-base-name&gt;&#xd;
                                    &lt;id&gt;${crbn_id_2}&lt;/id&gt;&#xd;
                                    &lt;name&gt;${crbn_id_2}&lt;/name&gt;&#xd;
                                &lt;/charging-rule-base-name&gt;&#xd;
                            &lt;/charging-rule-base-names&gt;&#xd;
                            &lt;fup-level&gt;1&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;${base_data_package_1}_FUP_PCC&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;${base_data_package_1}_FUP_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;${base_data_package_1}_FUP_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;512&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Kbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;512&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Kbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;256&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;256&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names&gt;&#xd;
                                &lt;charging-rule-base-name&gt;&#xd;
                                    &lt;id&gt;${crbn_id_3}&lt;/id&gt;&#xd;
                                    &lt;name&gt;${crbn_id_3}&lt;/name&gt;&#xd;
                                &lt;/charging-rule-base-name&gt;&#xd;
                            &lt;/charging-rule-base-names&gt;&#xd;
                            &lt;fup-level&gt;2&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;${base_data_package_1}_FUP2_PCC&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;${base_data_package_1}_FUP2_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;${base_data_package_1}_FUP2_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;256&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Kbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;256&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Kbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;${base_data_package_1}_CRBN&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;${base_data_package_1}_CRBN&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles&gt;&#xd;
                &lt;sy-quota-Profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;${base_data_package_1}_CRBN&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin&lt;/description&gt;&#xd;
                    &lt;name&gt;${base_data_package_1}_CRBN&lt;/name&gt;&#xd;
                    &lt;syQuotaProfileDetailDatas&gt;&#xd;
                        &lt;counterName&gt;${counter_all_name}&lt;/counterName&gt;&#xd;
                        &lt;counterPresent&gt;1&lt;/counterPresent&gt;&#xd;
                        &lt;dataServiceType&gt;&#xd;
                            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                            &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                            &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                        &lt;/dataServiceType&gt;&#xd;
                        &lt;fup1Value&gt;1&lt;/fup1Value&gt;&#xd;
                        &lt;fup2Value&gt;0&lt;/fup2Value&gt;&#xd;
                        &lt;hsqValue&gt;2&lt;/hsqValue&gt;&#xd;
                        &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;/syQuotaProfileDetailDatas&gt;&#xd;
                    &lt;syQuotaProfileDetailDatas&gt;&#xd;
                        &lt;counterName&gt;${counter_http_name}&lt;/counterName&gt;&#xd;
                        &lt;counterPresent&gt;1&lt;/counterPresent&gt;&#xd;
                        &lt;dataServiceType&gt;&#xd;
                            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                            &lt;id&gt;DATA_SERVICE_TYPE_3&lt;/id&gt;&#xd;
                            &lt;name&gt;HTTP&lt;/name&gt;&#xd;
                        &lt;/dataServiceType&gt;&#xd;
                        &lt;fup1Value&gt;1&lt;/fup1Value&gt;&#xd;
                        &lt;fup2Value&gt;0&lt;/fup2Value&gt;&#xd;
                        &lt;hsqValue&gt;2&lt;/hsqValue&gt;&#xd;
                        &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;/syQuotaProfileDetailDatas&gt;&#xd;
                &lt;/sy-quota-Profile&gt;&#xd;
            &lt;/sy-quota-profiles&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/xml</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Reload Policy" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/policy/reload/policy</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Product Offer" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${base_product_offer_1}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${base_product_offer_1}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin&quot;,&#xd;
   &quot;type&quot;:&quot;BASE&quot;,&#xd;
   &quot;currency&quot;:&quot;${currency}&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${base_data_package_1}&quot;,&#xd;
   &quot;validityPeriod&quot;:null,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1401564903">&quot;id&quot;:&quot;${base_product_offer_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change to Product Offer Mode to TEST" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${base_product_offer_1}/updateMode.json?pkgMode=TEST</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1401564903">&quot;id&quot;:&quot;${base_product_offer_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Reload Policy" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/policy/reload/policy</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change to Product Offer Mode to LIVE" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${base_product_offer_1}/updateMode.json?pkgMode=LIVE</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1401564903">&quot;id&quot;:&quot;${base_product_offer_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Reload Policy" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/policy/reload/policy</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;subscriberProfile&quot;: [&#xd;
    {&#xd;
      &quot;entry&quot;: [&#xd;
        {&#xd;
          &quot;key&quot;: &quot;USERNAME&quot;,&#xd;
          &quot;value&quot;: &quot;${subscriber_id}&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PASSWORD&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;CUSTOMER_TYPE&quot;,&#xd;
          &quot;value&quot;: &quot;Prepaid&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;STATUS&quot;,&#xd;
          &quot;value&quot;: &quot;ACTIVE&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;BILLING_DATE&quot;,&#xd;
          &quot;value&quot;: &quot;15&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;AREA&quot;,&#xd;
          &quot;value&quot;: &quot;CG Road&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;CITY&quot;,&#xd;
          &quot;value&quot;: &quot;Ahmedabad&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM1&quot;,&#xd;
          &quot;value&quot;: &quot;999&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM2&quot;,&#xd;
          &quot;value&quot;: &quot;888&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM3&quot;,&#xd;
          &quot;value&quot;: &quot;777&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM4&quot;,&#xd;
          &quot;value&quot;: &quot;666&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM5&quot;,&#xd;
          &quot;value&quot;: &quot;555&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ZONE&quot;,&#xd;
          &quot;value&quot;: &quot;West&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;COUNTRY&quot;,&#xd;
          &quot;value&quot;: &quot;INDIA&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ROLE&quot;,&#xd;
          &quot;value&quot;: &quot;Manager&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;COMPANY&quot;,&#xd;
          &quot;value&quot;: &quot;Elitecore&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;DEPARTMENT&quot;,&#xd;
          &quot;value&quot;: &quot;CSM&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ARPU&quot;,&#xd;
          &quot;value&quot;: &quot;22&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;CADRE&quot;,&#xd;
          &quot;value&quot;: &quot;M2&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;EMAIL&quot;,&#xd;
          &quot;value&quot;: &quot;radhika.sheladia@elitecore.com&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PHONE&quot;,&#xd;
          &quot;value&quot;: &quot;987584689&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;SIP_URL&quot;,&#xd;
          &quot;value&quot;: &quot;458796&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;CUI&quot;,&#xd;
          &quot;value&quot;: &quot;458896&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;IMSI&quot;,&#xd;
          &quot;value&quot;: &quot;${subscriber_id}&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;MSISDN&quot;,&#xd;
          &quot;value&quot;: &quot;${subscriber_id}&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;MAC&quot;,&#xd;
          &quot;value&quot;: &quot;sda:00:sad2:&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;EUI64&quot;,&#xd;
          &quot;value&quot;: &quot;543121&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;MODIFIED_EUI64&quot;,&#xd;
          &quot;value&quot;: &quot;687654&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ENCRYPTION_TYPE&quot;,&#xd;
          &quot;value&quot;: &quot;16&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ESN&quot;,&#xd;
          &quot;value&quot;: &quot;52222224&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;MEID&quot;,&#xd;
          &quot;value&quot;: &quot;354454&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARENT_ID&quot;,&#xd;
          &quot;value&quot;: &quot;687654&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;GROUP_NAME&quot;,&#xd;
          &quot;value&quot;: &quot;any_group&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;IMEI&quot;,&#xd;
          &quot;value&quot;: &quot;68765435413574&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;SUBSCRIBER_LEVEL_METERING&quot;,&#xd;
          &quot;value&quot;: &quot;ENABLE&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PASSWORD_CHECK&quot;,&#xd;
          &quot;value&quot;: &quot;TRUE&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;SY_INTERFACE&quot;,&#xd;
          &quot;value&quot;: &quot;TRUE&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;productOffer&quot;: &quot;${base_product_offer_1}&quot;,&#xd;
      &quot;subscriberIdentity&quot;: &quot;${subscriber_id}&quot;,&#xd;
      &quot;creditLimit&quot;:&quot;&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/subscriberProvisioning/addSubscribers</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1319337236">&quot;responseCode&quot;:200,&quot;responseMessage&quot;:&quot;Total Subcriber Profiles added: 1&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-I Processing for HSQ" enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.OpenChannelSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.OpenChannelSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.OpenChannelSample" testname="Open Sy Gateway Connection" enabled="true">
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.OpenChannelSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-I" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;0:439&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;10415:1032&quot;,&quot;val&quot;:&quot;1001&quot;}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Sy-SLR-SLA with Counter 2 for HSQ" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">SL</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;10415:2904&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;}]},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_req(0:263)}&quot;},{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_all_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;2&quot;}]},{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_http_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;2&quot;}]}]</stringProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;10415:2904&quot;,&quot;val&quot;:&quot;0&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">false</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-I - HSQ" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-I</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-U Processing for FUP1 " enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-U - HSQ to FUP1" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;2&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;2&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;33&quot;},{&quot;id&quot;:&quot;10415:1067&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:1066&quot;,&quot;val&quot;:&quot;${__dia_last_app_res(GX,10415:1067,0,,10415:1066)}&quot;},{&quot;id&quot;:&quot;0:446&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:421&quot;,&quot;val&quot;:&quot;${__dia_last_app_res(GX,10415:1067,0,,0:431.0:421)}&quot;}]},{&quot;id&quot;:&quot;10415:1068&quot;,&quot;val&quot;:&quot;1&quot;}]},{&quot;id&quot;:&quot;10415:1067&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:1066&quot;,&quot;val&quot;:&quot;${__dia_last_app_res(GX,10415:1067,1,,10415:1066)}&quot;},{&quot;id&quot;:&quot;0:446&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:421&quot;,&quot;val&quot;:&quot;${__dia_last_app_res(GX,10415:1067,1,,0:431.0:421)}&quot;}]},{&quot;id&quot;:&quot;10415:1068&quot;,&quot;val&quot;:&quot;${__dia_last_app_res(GX,10415:1067,1,,10415:1068)}&quot;}]}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Sy-SLR-SLA with Counter 1 for FUP1" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">SL</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;10415:2904&quot;,&quot;val&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;}]},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_req(0:263)}&quot;},{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_all_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;1&quot;}]},{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_http_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;1&quot;}]}]</stringProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-U - HSQ to FUP1" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-U - HSQ to FUP1</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-U Processing for FUP2" enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-U - FUP1 to FUP2" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;2&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;33&quot;},{&quot;id&quot;:&quot;10415:1067&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:1066&quot;,&quot;val&quot;:&quot;${__dia_last_app_res(GX,10415:1067,0,,10415:1066)}&quot;},{&quot;id&quot;:&quot;0:446&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:421&quot;,&quot;val&quot;:&quot;${__dia_last_app_res(GX,10415:1067,0,,0:431.0:421)}&quot;}]},{&quot;id&quot;:&quot;10415:1068&quot;,&quot;val&quot;:&quot;${__dia_last_app_res(GX,10415:1067,0,,10415:1068)}&quot;}]},{&quot;id&quot;:&quot;10415:1067&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:1066&quot;,&quot;val&quot;:&quot;${__dia_last_app_res(GX,10415:1067,1,,10415:1066)}&quot;},{&quot;id&quot;:&quot;0:446&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:421&quot;,&quot;val&quot;:&quot;${__dia_last_app_res(GX,10415:1067,1,,0:431.0:421)}&quot;}]},{&quot;id&quot;:&quot;10415:1068&quot;,&quot;val&quot;:&quot;${__dia_last_app_res(GX,10415:1067,1,,10415:1068)}&quot;}]}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Sy-SLR-SLA with Counter 0 for FUP2" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">SL</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;10415:2904&quot;,&quot;val&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;}]},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_req(0:263)}&quot;},{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_all_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_http_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;0&quot;}]}]</stringProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-U - FUP1 to FUP2" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-U - FUP1 to FUP2</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-T Processing" enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-T" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;4&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;0:439&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;10415:1032&quot;,&quot;val&quot;:&quot;1001&quot;},{&quot;id&quot;:&quot;0:295&quot;,&quot;val&quot;:&quot;1&quot;}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Sy-STR-STA" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">ST</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;}]},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_req(0:263)}&quot;}]</stringProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-T" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-T</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.CloseChannelSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.CloseChannelSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.CloseChannelSample" testname="Close Sy Gateway Connection" enabled="true">
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
              <boolProp name="CLOSE_GRACEFULLY">true</boolProp>
            </com.harshdev.rndjmeter.diameter.sampler.CloseChannelSample>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="End of RTC_${id}" enabled="true">
            <boolProp name="WAITING">false</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_TIME"></stringProp>
            <stringProp name="LATENCY"></stringProp>
            <stringProp name="CONNECT"></stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sy-RTC_85" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Sy-RTC_85 | Sy | Verify Charging Rule Base Name functionality with HSQ + Two Level FUP plan for Sy Package with PUSH mode with Dynamic PCC Rules</stringProp>
      </ThreadGroup>
      <hashTree>
        <kg.apc.jmeter.control.ParameterizedController guiclass="kg.apc.jmeter.control.ParameterizedControllerGui" testclass="kg.apc.jmeter.control.ParameterizedController" testname="Sy-RTC_85" enabled="true">
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriber_id" elementType="Argument">
                <stringProp name="Argument.name">subscriber_id</stringProp>
                <stringProp name="Argument.value">1111111185</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">1111111185</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">1111111185</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">1111111185</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">1111111185</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="session_id" elementType="Argument">
                <stringProp name="Argument.name">session_id</stringProp>
                <stringProp name="Argument.value">1111111185_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="base_product_offer_1" elementType="Argument">
                <stringProp name="Argument.name">base_product_offer_1</stringProp>
                <stringProp name="Argument.value">RTC_85_BASE_PO</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="base_data_package_1" elementType="Argument">
                <stringProp name="Argument.name">base_data_package_1</stringProp>
                <stringProp name="Argument.value">RTC_85_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_id_1" elementType="Argument">
                <stringProp name="Argument.name">crbn_id_1</stringProp>
                <stringProp name="Argument.value">CRBN_85_1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_id_2" elementType="Argument">
                <stringProp name="Argument.name">crbn_id_2</stringProp>
                <stringProp name="Argument.value">CRBN_85_2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_id_3" elementType="Argument">
                <stringProp name="Argument.name">crbn_id_3</stringProp>
                <stringProp name="Argument.value">CRBN_85_3</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="counter_all_name" elementType="Argument">
                <stringProp name="Argument.name">counter_all_name</stringProp>
                <stringProp name="Argument.value">gold_all</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="counter_http_name" elementType="Argument">
                <stringProp name="Argument.name">counter_http_name</stringProp>
                <stringProp name="Argument.value">gold_http</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">25179</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="id" elementType="Argument">
                <stringProp name="Argument.name">id</stringProp>
                <stringProp name="Argument.value">85</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="TestPlan.comments">Sy-RTC_85 | Sy | Verify Charging Rule Base Name functionality with HSQ + Two Level FUP plan for Sy Package with PUSH mode with Dynamic PCC Rules</stringProp>
        </kg.apc.jmeter.control.ParameterizedController>
        <hashTree>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Start of Sy-RTC_${id}" enabled="true">
            <boolProp name="WAITING">false</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_TIME"></stringProp>
            <stringProp name="LATENCY"></stringProp>
            <stringProp name="CONNECT"></stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Provide Link in Result" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true); 
f = new FileOutputStream(mapping_file_name, true); 
p = new PrintStream(f); 

// Write data to file 

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CleanUp" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="CleanUp" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="subscriber-id" elementType="Argument">
                    <stringProp name="Argument.name">subscriber-id</stringProp>
                    <stringProp name="Argument.value">${subscriber_id}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="product-offer-id" elementType="Argument">
                    <stringProp name="Argument.name">product-offer-id</stringProp>
                    <stringProp name="Argument.value">${base_product_offer_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="data-package-id" elementType="Argument">
                    <stringProp name="Argument.name">data-package-id</stringProp>
                    <stringProp name="Argument.value">${base_data_package_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="rnc-package-id" elementType="Argument">
                    <stringProp name="Argument.name">rnc-package-id</stringProp>
                    <stringProp name="Argument.value">${base_rnc_package_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="data-topup-id" elementType="Argument">
                    <stringProp name="Argument.name">data-topup-id</stringProp>
                    <stringProp name="Argument.value">${data_topup_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="email-template-id" elementType="Argument">
                    <stringProp name="Argument.name">email-template-id</stringProp>
                    <stringProp name="Argument.value">${email_template_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="sms-template-id" elementType="Argument">
                    <stringProp name="Argument.name">sms-template-id</stringProp>
                    <stringProp name="Argument.value">${sms_template_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">com.sterlite.netvertex.nvsampler.cleanup.sampler.CleanUpSampler</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Pre-Processing" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create CRBN" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;global-charging-rule-base-name-container&gt;&#xd;
    &lt;chargingRuleBaseNameDatas&gt;&#xd;
        &lt;chargingRuleBaseNameData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;${crbn_id_1}&lt;/id&gt;&#xd;
            &lt;name&gt;${crbn_id_1}&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 01/05/2018 16:44:40&lt;/description&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                    &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;${crbn_id_1}_all&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;${crbn_id_1}_all&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_3&lt;/id&gt;&#xd;
                    &lt;name&gt;HTTP&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;${crbn_id_1}_http&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;${crbn_id_1}_http&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
        &lt;/chargingRuleBaseNameData&gt;&#xd;
        &lt;chargingRuleBaseNameData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;${crbn_id_2}&lt;/id&gt;&#xd;
            &lt;name&gt;${crbn_id_2}&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 01/05/2018 16:47:01&lt;/description&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                    &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;${crbn_id_2}_all&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;${crbn_id_2}_all&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_3&lt;/id&gt;&#xd;
                    &lt;name&gt;HTTP&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;${crbn_id_2}_http&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;${crbn_id_2}_http&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
        &lt;/chargingRuleBaseNameData&gt;&#xd;
        &lt;chargingRuleBaseNameData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;${crbn_id_3}&lt;/id&gt;&#xd;
            &lt;name&gt;${crbn_id_3}&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 01/05/2018 16:48:02&lt;/description&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                    &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;${crbn_id_3}_all&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;${crbn_id_3}_all&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_3&lt;/id&gt;&#xd;
                    &lt;name&gt;HTTP&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;${crbn_id_3}_http&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;${crbn_id_3}_http&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
        &lt;/chargingRuleBaseNameData&gt;&#xd;
    &lt;/chargingRuleBaseNameDatas&gt;&#xd;
&lt;/global-charging-rule-base-name-container&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_charging_rule_base_name_url}?${replace}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/xml</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Data Package" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;${base_data_package_1}&lt;/id&gt;&#xd;
            &lt;name&gt;${base_data_package_1}&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriod&gt;30&lt;/validityPeriod&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;SY_COUNTER_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;${base_data_package_1}_QOS&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin&lt;/description&gt;&#xd;
                    &lt;name&gt;${base_data_package_1}_QOS&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;1&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;1&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names&gt;&#xd;
                                &lt;charging-rule-base-name&gt;&#xd;
                                    &lt;id&gt;${crbn_id_1}&lt;/id&gt;&#xd;
                                    &lt;name&gt;${crbn_id_1}&lt;/name&gt;&#xd;
                                &lt;/charging-rule-base-name&gt;&#xd;
                            &lt;/charging-rule-base-names&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;${base_data_package_1}_HSQ_PCC&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;${base_data_package_1}_HSQ_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;${base_data_package_1}_HSQ_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;512&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;512&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names&gt;&#xd;
                                &lt;charging-rule-base-name&gt;&#xd;
                                    &lt;id&gt;${crbn_id_2}&lt;/id&gt;&#xd;
                                    &lt;name&gt;${crbn_id_2}&lt;/name&gt;&#xd;
                                &lt;/charging-rule-base-name&gt;&#xd;
                            &lt;/charging-rule-base-names&gt;&#xd;
                            &lt;fup-level&gt;1&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;${base_data_package_1}_FUP_PCC&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;${base_data_package_1}_FUP_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;${base_data_package_1}_FUP_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;512&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Kbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;512&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Kbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;256&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;256&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names&gt;&#xd;
                                &lt;charging-rule-base-name&gt;&#xd;
                                    &lt;id&gt;${crbn_id_3}&lt;/id&gt;&#xd;
                                    &lt;name&gt;${crbn_id_3}&lt;/name&gt;&#xd;
                                &lt;/charging-rule-base-name&gt;&#xd;
                            &lt;/charging-rule-base-names&gt;&#xd;
                            &lt;fup-level&gt;2&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;${base_data_package_1}_FUP2_PCC&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;${base_data_package_1}_FUP2_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;${base_data_package_1}_FUP2_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;256&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Kbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;256&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Kbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;${base_data_package_1}_CRBN&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;${base_data_package_1}_CRBN&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles&gt;&#xd;
                &lt;sy-quota-Profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;${base_data_package_1}_CRBN&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin&lt;/description&gt;&#xd;
                    &lt;name&gt;${base_data_package_1}_CRBN&lt;/name&gt;&#xd;
                    &lt;syQuotaProfileDetailDatas&gt;&#xd;
                        &lt;counterName&gt;${counter_all_name}&lt;/counterName&gt;&#xd;
                        &lt;counterPresent&gt;1&lt;/counterPresent&gt;&#xd;
                        &lt;dataServiceType&gt;&#xd;
                            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                            &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                            &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                        &lt;/dataServiceType&gt;&#xd;
                        &lt;fup1Value&gt;1&lt;/fup1Value&gt;&#xd;
                        &lt;fup2Value&gt;0&lt;/fup2Value&gt;&#xd;
                        &lt;hsqValue&gt;2&lt;/hsqValue&gt;&#xd;
                        &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;/syQuotaProfileDetailDatas&gt;&#xd;
                    &lt;syQuotaProfileDetailDatas&gt;&#xd;
                        &lt;counterName&gt;${counter_http_name}&lt;/counterName&gt;&#xd;
                        &lt;counterPresent&gt;1&lt;/counterPresent&gt;&#xd;
                        &lt;dataServiceType&gt;&#xd;
                            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                            &lt;id&gt;DATA_SERVICE_TYPE_3&lt;/id&gt;&#xd;
                            &lt;name&gt;HTTP&lt;/name&gt;&#xd;
                        &lt;/dataServiceType&gt;&#xd;
                        &lt;fup1Value&gt;1&lt;/fup1Value&gt;&#xd;
                        &lt;fup2Value&gt;0&lt;/fup2Value&gt;&#xd;
                        &lt;hsqValue&gt;2&lt;/hsqValue&gt;&#xd;
                        &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;/syQuotaProfileDetailDatas&gt;&#xd;
                &lt;/sy-quota-Profile&gt;&#xd;
            &lt;/sy-quota-profiles&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/xml</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Reload Policy" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/policy/reload/policy</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Product Offer" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${base_product_offer_1}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${base_product_offer_1}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin&quot;,&#xd;
   &quot;type&quot;:&quot;BASE&quot;,&#xd;
   &quot;currency&quot;:&quot;${currency}&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${base_data_package_1}&quot;,&#xd;
   &quot;validityPeriod&quot;:null,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1401564903">&quot;id&quot;:&quot;${base_product_offer_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change to Product Offer Mode to TEST" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${base_product_offer_1}/updateMode.json?pkgMode=TEST</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1401564903">&quot;id&quot;:&quot;${base_product_offer_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Reload Policy" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/policy/reload/policy</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change to Product Offer Mode to LIVE" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${base_product_offer_1}/updateMode.json?pkgMode=LIVE</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1401564903">&quot;id&quot;:&quot;${base_product_offer_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Reload Policy" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/policy/reload/policy</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;subscriberProfile&quot;: [&#xd;
    {&#xd;
      &quot;entry&quot;: [&#xd;
        {&#xd;
          &quot;key&quot;: &quot;USERNAME&quot;,&#xd;
          &quot;value&quot;: &quot;${subscriber_id}&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PASSWORD&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;CUSTOMER_TYPE&quot;,&#xd;
          &quot;value&quot;: &quot;Prepaid&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;STATUS&quot;,&#xd;
          &quot;value&quot;: &quot;ACTIVE&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;BILLING_DATE&quot;,&#xd;
          &quot;value&quot;: &quot;15&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;AREA&quot;,&#xd;
          &quot;value&quot;: &quot;CG Road&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;CITY&quot;,&#xd;
          &quot;value&quot;: &quot;Ahmedabad&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM1&quot;,&#xd;
          &quot;value&quot;: &quot;999&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM2&quot;,&#xd;
          &quot;value&quot;: &quot;888&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM3&quot;,&#xd;
          &quot;value&quot;: &quot;777&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM4&quot;,&#xd;
          &quot;value&quot;: &quot;666&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARAM5&quot;,&#xd;
          &quot;value&quot;: &quot;555&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ZONE&quot;,&#xd;
          &quot;value&quot;: &quot;West&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;COUNTRY&quot;,&#xd;
          &quot;value&quot;: &quot;INDIA&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ROLE&quot;,&#xd;
          &quot;value&quot;: &quot;Manager&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;COMPANY&quot;,&#xd;
          &quot;value&quot;: &quot;Elitecore&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;DEPARTMENT&quot;,&#xd;
          &quot;value&quot;: &quot;CSM&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ARPU&quot;,&#xd;
          &quot;value&quot;: &quot;22&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;CADRE&quot;,&#xd;
          &quot;value&quot;: &quot;M2&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;EMAIL&quot;,&#xd;
          &quot;value&quot;: &quot;radhika.sheladia@elitecore.com&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PHONE&quot;,&#xd;
          &quot;value&quot;: &quot;987584689&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;SIP_URL&quot;,&#xd;
          &quot;value&quot;: &quot;458796&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;CUI&quot;,&#xd;
          &quot;value&quot;: &quot;458896&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;IMSI&quot;,&#xd;
          &quot;value&quot;: &quot;${subscriber_id}&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;MSISDN&quot;,&#xd;
          &quot;value&quot;: &quot;${subscriber_id}&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;MAC&quot;,&#xd;
          &quot;value&quot;: &quot;sda:00:sad2:&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;EUI64&quot;,&#xd;
          &quot;value&quot;: &quot;543121&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;MODIFIED_EUI64&quot;,&#xd;
          &quot;value&quot;: &quot;687654&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ENCRYPTION_TYPE&quot;,&#xd;
          &quot;value&quot;: &quot;16&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ESN&quot;,&#xd;
          &quot;value&quot;: &quot;52222224&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;MEID&quot;,&#xd;
          &quot;value&quot;: &quot;354454&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PARENT_ID&quot;,&#xd;
          &quot;value&quot;: &quot;687654&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;GROUP_NAME&quot;,&#xd;
          &quot;value&quot;: &quot;any_group&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;IMEI&quot;,&#xd;
          &quot;value&quot;: &quot;68765435413574&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;SUBSCRIBER_LEVEL_METERING&quot;,&#xd;
          &quot;value&quot;: &quot;ENABLE&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;PASSWORD_CHECK&quot;,&#xd;
          &quot;value&quot;: &quot;TRUE&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;SY_INTERFACE&quot;,&#xd;
          &quot;value&quot;: &quot;TRUE&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;productOffer&quot;: &quot;${base_product_offer_1}&quot;,&#xd;
      &quot;subscriberIdentity&quot;: &quot;${subscriber_id}&quot;,&#xd;
      &quot;creditLimit&quot;:&quot;&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/subscriberProvisioning/addSubscribers</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1319337236">&quot;responseCode&quot;:200,&quot;responseMessage&quot;:&quot;Total Subcriber Profiles added: 1&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-I Processing for HSQ" enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.OpenChannelSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.OpenChannelSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.OpenChannelSample" testname="Open Sy Gateway Connection" enabled="true">
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.OpenChannelSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-I" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;1&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;0:439&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;10415:1032&quot;,&quot;val&quot;:&quot;1001&quot;}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Sy-SLR-SLA with Counter 2 for HSQ" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">SL</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;10415:2904&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;}]},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;26&quot;},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_req(0:263)}&quot;},{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_all_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;2&quot;}]},{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_http_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;2&quot;}]}]</stringProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;10415:2904&quot;,&quot;val&quot;:&quot;0&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">false</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-I - HSQ" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-I</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-U Processing for FUP1" enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-U - FUP1" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;2&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;2&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;33&quot;}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-U - FUP1" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-U - FUP1</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Sy-SNR-SNA with Counter 1 for FUP1" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_app_req(SY,0:263)}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]},{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_all_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;1&quot;}]},{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_http_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;1&quot;}]}]</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">SN</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Gx-RAR-RAA for FUP1 Installtion" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">RA</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:257&quot;,&quot;val&quot;:&quot;${jmeterip}&quot;}]</stringProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:285&quot;,&quot;val&quot;:&quot;0&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">false</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-U Processing for FUP2" enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-U - FUP2" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;2&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;10415:1006&quot;,&quot;val&quot;:&quot;33&quot;}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-U - FUP2" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-U - FUP2</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Sy-SNR-SNA with Counter 0 for FUP2" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_app_req(SY,0:263)}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]},{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_all_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;10415:2903&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;10415:2901&quot;,&quot;val&quot;:&quot;${counter_http_name}&quot;},{&quot;id&quot;:&quot;10415:2902&quot;,&quot;val&quot;:&quot;0&quot;}]}]</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">SN</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Gx-RAR-RAA for FUP2 Installtion" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">RA</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:257&quot;,&quot;val&quot;:&quot;${jmeterip}&quot;}]</stringProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:285&quot;,&quot;val&quot;:&quot;0&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">false</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CCR-T Processing" enabled="true"/>
          <hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.SendDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample" testname="Gx-CCR-T" enabled="true">
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;},{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${session_id}&quot;},{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${originhost}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${originrealm}&quot;},{&quot;id&quot;:&quot;0:283&quot;,&quot;val&quot;:&quot;${destinationrealm}&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777238&quot;},{&quot;id&quot;:&quot;0:416&quot;,&quot;val&quot;:&quot;3&quot;},{&quot;id&quot;:&quot;0:415&quot;,&quot;val&quot;:&quot;4&quot;},{&quot;id&quot;:&quot;0:293&quot;,&quot;val&quot;:&quot;${destinationhost}&quot;},{&quot;id&quot;:&quot;0:278&quot;,&quot;val&quot;:&quot;154154&quot;},{&quot;id&quot;:&quot;0:439&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;10415:1032&quot;,&quot;val&quot;:&quot;1001&quot;},{&quot;id&quot;:&quot;0:295&quot;,&quot;val&quot;:&quot;1&quot;}]</stringProp>
              <boolProp name="wait-for-response">false</boolProp>
              <stringProp name="retry-count">3</stringProp>
              <stringProp name="command-code">CC</stringProp>
              <objProp>
                <name>app-id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$20">GX</value>
              </objProp>
              <boolProp name="proxy-bit">true</boolProp>
              <boolProp name="re-transmitted-bit">false</boolProp>
              <stringProp name="channel-name">Diameter Stack</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.SendDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterRequestSamplerGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample" testname="Sy-STR-STA" enabled="true">
              <stringProp name="wait-time">1000</stringProp>
              <boolProp name="send-response">true</boolProp>
              <stringProp name="Command-Code">ST</stringProp>
              <objProp>
                <name>App Id</name>
                <value class="com.harshdev.rndjmeter.diameter.util.ApplicationIdentifier$33">SY</value>
              </objProp>
              <stringProp name="attribute">[{&quot;id&quot;:&quot;0:264&quot;,&quot;val&quot;:&quot;${sy_origin_host}&quot;},{&quot;id&quot;:&quot;0:296&quot;,&quot;val&quot;:&quot;${sy_origin_realm}&quot;},{&quot;id&quot;:&quot;0:443&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:450&quot;,&quot;val&quot;:&quot;0&quot;},{&quot;id&quot;:&quot;0:444&quot;,&quot;val&quot;:&quot;${subscriber_id}&quot;}]},{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;},{&quot;id&quot;:&quot;0:260&quot;,&quot;sub-attribut&quot;:[{&quot;id&quot;:&quot;0:266&quot;,&quot;val&quot;:&quot;10415&quot;},{&quot;id&quot;:&quot;0:258&quot;,&quot;val&quot;:&quot;16777302&quot;}]},{&quot;id&quot;:&quot;0:263&quot;,&quot;val&quot;:&quot;${__dia_last_req(0:263)}&quot;}]</stringProp>
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterRequestSample>
            <hashTree/>
            <com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.WaitForDiameterResponseSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample" testname="Gx-CCA-T" enabled="true">
              <stringProp name="Diameter Send Request Sampler Name">Gx-CCR-T</stringProp>
              <boolProp name="wait-for-response">true</boolProp>
              <stringProp name="retry-count">3</stringProp>
            </com.harshdev.rndjmeter.diameter.sampler.WaitForDiameterResponseSample>
            <hashTree>
              <com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion guiclass="com.harshdev.rndjmeter.diameter.assertion.gui.DiameterPacketAssertionGui" testclass="com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion" testname="Diameter Packet Assertion" enabled="true">
                <stringProp name="attribute">[{&quot;id&quot;:&quot;0:268&quot;,&quot;val&quot;:&quot;2001&quot;}]</stringProp>
                <boolProp name="add-mandatory-att-auto">true</boolProp>
              </com.harshdev.rndjmeter.diameter.assertion.DiameterPacketAssertion>
              <hashTree/>
            </hashTree>
            <com.harshdev.rndjmeter.diameter.sampler.CloseChannelSample guiclass="com.harshdev.rndjmeter.diameter.sampler.gui.CloseChannelSampleGui" testclass="com.harshdev.rndjmeter.diameter.sampler.CloseChannelSample" testname="Close Sy Gateway Connection" enabled="true">
              <stringProp name="channel-name">Diameter Stack for Sy</stringProp>
              <boolProp name="CLOSE_GRACEFULLY">true</boolProp>
            </com.harshdev.rndjmeter.diameter.sampler.CloseChannelSample>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="End of RTC_${id}" enabled="true">
            <boolProp name="WAITING">false</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_TIME"></stringProp>
            <stringProp name="LATENCY"></stringProp>
            <stringProp name="CONNECT"></stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <PostThreadGroup guiclass="PostThreadGroupGui" testclass="PostThreadGroup" testname="tearDown Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </PostThreadGroup>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
