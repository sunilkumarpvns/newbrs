<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.1" jmeter="3.1 r1770033">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Automation_plan_6622" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Global Variable Definition" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="originhost" elementType="Argument">
            <stringProp name="Argument.name">originhost</stringProp>
            <stringProp name="Argument.value">gx.elite.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Origin Host of Gx Gateway</stringProp>
          </elementProp>
          <elementProp name="originrealm" elementType="Argument">
            <stringProp name="Argument.name">originrealm</stringProp>
            <stringProp name="Argument.value">elite.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Origin Realm of Gx Gateway</stringProp>
          </elementProp>
          <elementProp name="destinationhost" elementType="Argument">
            <stringProp name="Argument.name">destinationhost</stringProp>
            <stringProp name="Argument.value">netvertex.elitecore.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="destinationrealm" elementType="Argument">
            <stringProp name="Argument.name">destinationrealm</stringProp>
            <stringProp name="Argument.value">elitecore.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="serverip" elementType="Argument">
            <stringProp name="Argument.name">serverip</stringProp>
            <stringProp name="Argument.value">192.168.11.199</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="smserverport" elementType="Argument">
            <stringProp name="Argument.name">smserverport</stringProp>
            <stringProp name="Argument.value">7001</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**Tomcat Startup port on which SM and PD will be displayed</stringProp>
          </elementProp>
          <elementProp name="smshutdownport" elementType="Argument">
            <stringProp name="Argument.name">smshutdownport</stringProp>
            <stringProp name="Argument.value">5782</stringProp>
            <stringProp name="Argument.desc">**Tomcat Shutdown port</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="diameterport" elementType="Argument">
            <stringProp name="Argument.name">diameterport</stringProp>
            <stringProp name="Argument.value">3868</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**change it after manual configuration</stringProp>
          </elementProp>
          <elementProp name="smcontextpath" elementType="Argument">
            <stringProp name="Argument.name">smcontextpath</stringProp>
            <stringProp name="Argument.value">netvertexsm</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**sm+username</stringProp>
          </elementProp>
          <elementProp name="smapplicationname" elementType="Argument">
            <stringProp name="Argument.name">smapplicationname</stringProp>
            <stringProp name="Argument.value">sm</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pdcontextpath" elementType="Argument">
            <stringProp name="Argument.name">pdcontextpath</stringProp>
            <stringProp name="Argument.value">netvertexsm</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**pd+username</stringProp>
          </elementProp>
          <elementProp name="nvuser" elementType="Argument">
            <stringProp name="Argument.name">nvuser</stringProp>
            <stringProp name="Argument.value">trunk</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">** os username</stringProp>
          </elementProp>
          <elementProp name="nvhome" elementType="Argument">
            <stringProp name="Argument.name">nvhome</stringProp>
            <stringProp name="Argument.value">/home/trunk/server</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**Dont&apos; provide too long Name</stringProp>
          </elementProp>
          <elementProp name="pdhome" elementType="Argument">
            <stringProp name="Argument.name">pdhome</stringProp>
            <stringProp name="Argument.value">/home/trunk/netvertexsm/sm</stringProp>
            <stringProp name="Argument.desc">for PD logs</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="73_origin_host_primary" elementType="Argument">
            <stringProp name="Argument.name">73_origin_host_primary</stringProp>
            <stringProp name="Argument.value">23_gx.elite.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Do not change</stringProp>
          </elementProp>
          <elementProp name="73_origin_host_secondary" elementType="Argument">
            <stringProp name="Argument.name">73_origin_host_secondary</stringProp>
            <stringProp name="Argument.value">73_secondary.elitecore.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Do not change</stringProp>
          </elementProp>
          <elementProp name="73_origin_realm" elementType="Argument">
            <stringProp name="Argument.name">73_origin_realm</stringProp>
            <stringProp name="Argument.value">elitecore.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Do not change</stringProp>
          </elementProp>
          <elementProp name="origin_host_rx" elementType="Argument">
            <stringProp name="Argument.name">origin_host_rx</stringProp>
            <stringProp name="Argument.value">af.elite.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Do not change</stringProp>
          </elementProp>
          <elementProp name="origin_realm_rx" elementType="Argument">
            <stringProp name="Argument.name">origin_realm_rx</stringProp>
            <stringProp name="Argument.value">elite.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Do not change</stringProp>
          </elementProp>
          <elementProp name="origin_host" elementType="Argument">
            <stringProp name="Argument.name">origin_host</stringProp>
            <stringProp name="Argument.value">gx.elite.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="origin_realm" elementType="Argument">
            <stringProp name="Argument.name">origin_realm</stringProp>
            <stringProp name="Argument.value">elite.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="destination_realm" elementType="Argument">
            <stringProp name="Argument.name">destination_realm</stringProp>
            <stringProp name="Argument.value">elitecore.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="destination_host" elementType="Argument">
            <stringProp name="Argument.name">destination_host</stringProp>
            <stringProp name="Argument.value">netvertex.elitecore.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dbserverip" elementType="Argument">
            <stringProp name="Argument.name">dbserverip</stringProp>
            <stringProp name="Argument.value">192.168.11.199</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">*</stringProp>
          </elementProp>
          <elementProp name="dbserversid" elementType="Argument">
            <stringProp name="Argument.name">dbserversid</stringProp>
            <stringProp name="Argument.value">orcl12c</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">*Output of &apos;echo $ORACLE_SERVICE&apos;</stringProp>
          </elementProp>
          <elementProp name="dbserverport" elementType="Argument">
            <stringProp name="Argument.name">dbserverport</stringProp>
            <stringProp name="Argument.value">1521</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">*</stringProp>
          </elementProp>
          <elementProp name="dbusername" elementType="Argument">
            <stringProp name="Argument.name">dbusername</stringProp>
            <stringProp name="Argument.value">trunk</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**Provide DB Username with Prefix NETVERTEX</stringProp>
          </elementProp>
          <elementProp name="dbpassword" elementType="Argument">
            <stringProp name="Argument.name">dbpassword</stringProp>
            <stringProp name="Argument.value">trunk</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**Provide DB Password with Prefix NETVERTEX</stringProp>
          </elementProp>
          <elementProp name="serverinstancename" elementType="Argument">
            <stringProp name="Argument.name">serverinstancename</stringProp>
            <stringProp name="Argument.value">trunk</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**Dont&apos; provide too long Name</stringProp>
          </elementProp>
          <elementProp name="logpath" elementType="Argument">
            <stringProp name="Argument.name">logpath</stringProp>
            <stringProp name="Argument.value">trunk_build</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**Dont&apos; provide too long Name</stringProp>
          </elementProp>
          <elementProp name="rootpassword" elementType="Argument">
            <stringProp name="Argument.name">rootpassword</stringProp>
            <stringProp name="Argument.value">root#10</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">*</stringProp>
          </elementProp>
          <elementProp name="dbserverip_for_sp_interface" elementType="Argument">
            <stringProp name="Argument.name">dbserverip_for_sp_interface</stringProp>
            <stringProp name="Argument.value">192.168.11.199</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Do not change</stringProp>
          </elementProp>
          <elementProp name="sp_dbusername" elementType="Argument">
            <stringProp name="Argument.name">sp_dbusername</stringProp>
            <stringProp name="Argument.value">trunk</stringProp>
            <stringProp name="Argument.desc">**DB Username for SP Interface</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sp_dbpassword" elementType="Argument">
            <stringProp name="Argument.name">sp_dbpassword</stringProp>
            <stringProp name="Argument.value">trunk</stringProp>
            <stringProp name="Argument.desc">**DB Password for SP Interface</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="tomcat_home" elementType="Argument">
            <stringProp name="Argument.name">tomcat_home</stringProp>
            <stringProp name="Argument.value">/home/ngt70/netvertexsm</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**</stringProp>
          </elementProp>
          <elementProp name="sy_root_pwd" elementType="Argument">
            <stringProp name="Argument.name">sy_root_pwd</stringProp>
            <stringProp name="Argument.value">root#10</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">*</stringProp>
          </elementProp>
          <elementProp name="sy_serverip" elementType="Argument">
            <stringProp name="Argument.name">sy_serverip</stringProp>
            <stringProp name="Argument.value">192.168.11.199</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="syport" elementType="Argument">
            <stringProp name="Argument.name">syport</stringProp>
            <stringProp name="Argument.value">3782</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**</stringProp>
          </elementProp>
          <elementProp name="buildsourcefolder" elementType="Argument">
            <stringProp name="Argument.name">buildsourcefolder</stringProp>
            <stringProp name="Argument.value">/eliteaaa/share/netvertexbuilds/QA-Builds/6.8.2/6.8.2.2</stringProp>
            <stringProp name="Argument.desc">**Specifies path From where to take all binaries</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="oracleuserpath" elementType="Argument">
            <stringProp name="Argument.name">oracleuserpath</stringProp>
            <stringProp name="Argument.value">/home/oracle</stringProp>
            <stringProp name="Argument.desc">Oracle User&apos;s Home Directory</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="oraclehome" elementType="Argument">
            <stringProp name="Argument.name">oraclehome</stringProp>
            <stringProp name="Argument.value">/u01/app/oracle/product/12c/db_1</stringProp>
            <stringProp name="Argument.desc">*Output of &apos;echo $ORACLE_HOME&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="elapsed_time" elementType="Argument">
            <stringProp name="Argument.name">elapsed_time</stringProp>
            <stringProp name="Argument.value">120</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Elapsed Time is in Minutes</stringProp>
          </elementProp>
          <elementProp name="checked_version" elementType="Argument">
            <stringProp name="Argument.name">checked_version</stringProp>
            <stringProp name="Argument.value">12</stringProp>
            <stringProp name="Argument.desc">6.8.2.1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="checked_revision" elementType="Argument">
            <stringProp name="Argument.name">checked_revision</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**24284 was release version of 6.8.2.1</stringProp>
          </elementProp>
          <elementProp name="test_run_id" elementType="Argument">
            <stringProp name="Argument.name">test_run_id</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.desc">Test Run ID in Test Rail (e.g. R196)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rest_data_package_url" elementType="Argument">
            <stringProp name="Argument.name">rest_data_package_url</stringProp>
            <stringProp name="Argument.value">rest/restful/import/import/pkgs</stringProp>
            <stringProp name="Argument.desc">REST URL to create Data Pacakge</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rest_addon_package_url" elementType="Argument">
            <stringProp name="Argument.name">rest_addon_package_url</stringProp>
            <stringProp name="Argument.value">rest/restful/import/import/pkgs</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">REST URL to create Addon Pacakge</stringProp>
          </elementProp>
          <elementProp name="rest_ims_package_url" elementType="Argument">
            <stringProp name="Argument.name">rest_ims_package_url</stringProp>
            <stringProp name="Argument.value">rest/restful/import/import/imsPkgs</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">REST URL to create IMS Pacakge</stringProp>
          </elementProp>
          <elementProp name="rest_emergency_package_url" elementType="Argument">
            <stringProp name="Argument.name">rest_emergency_package_url</stringProp>
            <stringProp name="Argument.value">rest/restful/import/import/emergencyPkgs</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">REST URL to create Emergency Pacakge</stringProp>
          </elementProp>
          <elementProp name="rest_topup_package_url" elementType="Argument">
            <stringProp name="Argument.name">rest_topup_package_url</stringProp>
            <stringProp name="Argument.value">rest/restful/import/import/pkgs</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">REST URL to create Topup Pacakge</stringProp>
          </elementProp>
          <elementProp name="rest_global_pcc_url" elementType="Argument">
            <stringProp name="Argument.name">rest_global_pcc_url</stringProp>
            <stringProp name="Argument.value">rest/restful/import/import/globalPCCRules</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">REST URL to create Global PCC Rule</stringProp>
          </elementProp>
          <elementProp name="rest_promotional_package_url" elementType="Argument">
            <stringProp name="Argument.name">rest_promotional_package_url</stringProp>
            <stringProp name="Argument.value">rest/restful/import/import/promotionalPkgs</stringProp>
            <stringProp name="Argument.desc">*REST URL to create Promotional Package</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rest_charging_rule_base_name_url" elementType="Argument">
            <stringProp name="Argument.name">rest_charging_rule_base_name_url</stringProp>
            <stringProp name="Argument.value">rest/restful/import/import/chargingRuleBaseNames</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">*REST URL to create CRBN</stringProp>
          </elementProp>
          <elementProp name="rest_service_type_url" elementType="Argument">
            <stringProp name="Argument.name">rest_service_type_url</stringProp>
            <stringProp name="Argument.value">rest/restful/import/import/dataServiceTypes</stringProp>
            <stringProp name="Argument.desc">*REST_URL to create Service Type</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="replace" elementType="Argument">
            <stringProp name="Argument.name">replace</stringProp>
            <stringProp name="Argument.value">action=REPLACE</stringProp>
            <stringProp name="Argument.desc">Import Action with Replace</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="fail" elementType="Argument">
            <stringProp name="Argument.name">fail</stringProp>
            <stringProp name="Argument.value">action=FAIL</stringProp>
            <stringProp name="Argument.desc">Import Action with Fail</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="script_location" elementType="Argument">
            <stringProp name="Argument.name">script_location</stringProp>
            <stringProp name="Argument.value">/opt/scripts/6.8</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">*Location on server where script is kept</stringProp>
          </elementProp>
          <elementProp name="adminport" elementType="Argument">
            <stringProp name="Argument.name">adminport</stringProp>
            <stringProp name="Argument.value">3782</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**admin port to be configured in netvertex.sh file</stringProp>
          </elementProp>
          <elementProp name="jdbcvar" elementType="Argument">
            <stringProp name="Argument.name">jdbcvar</stringProp>
            <stringProp name="Argument.value">DB</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Jdbc connection variable bound to pool</stringProp>
          </elementProp>
          <elementProp name="sy_origin_host" elementType="Argument">
            <stringProp name="Argument.name">sy_origin_host</stringProp>
            <stringProp name="Argument.value">pocs.elitecore.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">configured in ocs_gateway</stringProp>
          </elementProp>
          <elementProp name="sy_origin_realm" elementType="Argument">
            <stringProp name="Argument.name">sy_origin_realm</stringProp>
            <stringProp name="Argument.value">elitecore.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">configured in ocs_gateway</stringProp>
          </elementProp>
          <elementProp name="jmeterip" elementType="Argument">
            <stringProp name="Argument.name">jmeterip</stringProp>
            <stringProp name="Argument.value">192.168.11.199</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">ip of server where jmeter is running</stringProp>
          </elementProp>
          <elementProp name="radiusport" elementType="Argument">
            <stringProp name="Argument.name">radiusport</stringProp>
            <stringProp name="Argument.value">2821</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**radius listener port</stringProp>
          </elementProp>
          <elementProp name="jmeterport" elementType="Argument">
            <stringProp name="Argument.name">jmeterport</stringProp>
            <stringProp name="Argument.value">3636</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Any free port can be used by jmeter</stringProp>
          </elementProp>
          <elementProp name="radiusshared" elementType="Argument">
            <stringProp name="Argument.name">radiusshared</stringProp>
            <stringProp name="Argument.value">secret</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">shared secret</stringProp>
          </elementProp>
          <elementProp name="nasip" elementType="Argument">
            <stringProp name="Argument.name">nasip</stringProp>
            <stringProp name="Argument.value">127.0.0.1 </stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">NAS-IP-ADDRESS (4)</stringProp>
          </elementProp>
          <elementProp name="nasport" elementType="Argument">
            <stringProp name="Argument.name">nasport</stringProp>
            <stringProp name="Argument.value">3589</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">NAS-PORT (5)</stringProp>
          </elementProp>
          <elementProp name="server_group_url" elementType="Argument">
            <stringProp name="Argument.name">server_group_url</stringProp>
            <stringProp name="Argument.value">servergroup/server-group.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="server_instance_url" elementType="Argument">
            <stringProp name="Argument.name">server_instance_url</stringProp>
            <stringProp name="Argument.value">serverinstance/server-instance.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="session_url" elementType="Argument">
            <stringProp name="Argument.name">session_url</stringProp>
            <stringProp name="Argument.value">sessionconfiguration/session-configuration/SESSION_CONFIG_1.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="diameter_gw_profile_url" elementType="Argument">
            <stringProp name="Argument.name">diameter_gw_profile_url</stringProp>
            <stringProp name="Argument.value">gatewayprofile/diameter-gateway-profile.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="diameter_gw_url" elementType="Argument">
            <stringProp name="Argument.name">diameter_gw_url</stringProp>
            <stringProp name="Argument.value">gateway/diameter-gateway.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="default_db_datasource_url" elementType="Argument">
            <stringProp name="Argument.name">default_db_datasource_url</stringProp>
            <stringProp name="Argument.value">database/database.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="spr_url" elementType="Argument">
            <stringProp name="Argument.name">spr_url</stringProp>
            <stringProp name="Argument.value">spr/spr.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sp_interface_url" elementType="Argument">
            <stringProp name="Argument.name">sp_interface_url</stringProp>
            <stringProp name="Argument.value">spinterface/db-sp-interface.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ddf_url" elementType="Argument">
            <stringProp name="Argument.name">ddf_url</stringProp>
            <stringProp name="Argument.value">ddf/ddf/DDF_TABLE_1.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="db_cdr_url" elementType="Argument">
            <stringProp name="Argument.name">db_cdr_url</stringProp>
            <stringProp name="Argument.value">driver/db-cdr-driver.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="csv_cdr_url" elementType="Argument">
            <stringProp name="Argument.name">csv_cdr_url</stringProp>
            <stringProp name="Argument.value">driver/csv-driver.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="device_url" elementType="Argument">
            <stringProp name="Argument.name">device_url</stringProp>
            <stringProp name="Argument.value">device/device.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="network_url" elementType="Argument">
            <stringProp name="Argument.name">network_url</stringProp>
            <stringProp name="Argument.value">network/network.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="region_url" elementType="Argument">
            <stringProp name="Argument.name">region_url</stringProp>
            <stringProp name="Argument.value">region/region.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="city_url" elementType="Argument">
            <stringProp name="Argument.name">city_url</stringProp>
            <stringProp name="Argument.value">city/city.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="area_url" elementType="Argument">
            <stringProp name="Argument.name">area_url</stringProp>
            <stringProp name="Argument.value">area/area.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pcc_service_policy" elementType="Argument">
            <stringProp name="Argument.name">pcc_service_policy</stringProp>
            <stringProp name="Argument.value">pccservicepolicy/pcc-service-policy.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="radius_gw_profile_url" elementType="Argument">
            <stringProp name="Argument.name">radius_gw_profile_url</stringProp>
            <stringProp name="Argument.value">gatewayprofile/radius-gateway-profile.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="radius_gw_url" elementType="Argument">
            <stringProp name="Argument.name">radius_gw_url</stringProp>
            <stringProp name="Argument.value">gateway/radius-gateway.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="packet_mapping_url" elementType="Argument">
            <stringProp name="Argument.name">packet_mapping_url</stringProp>
            <stringProp name="Argument.value">packetmapping/radius-packet-mapping.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="nasidentifier" elementType="Argument">
            <stringProp name="Argument.name">nasidentifier</stringProp>
            <stringProp name="Argument.value">netvertexfull.elitecore.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mapping_file_name" elementType="Argument">
            <stringProp name="Argument.name">mapping_file_name</stringProp>
            <stringProp name="Argument.value">PCC_Gy_Mapping.csv</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rnc_package_url" elementType="Argument">
            <stringProp name="Argument.name">rnc_package_url</stringProp>
            <stringProp name="Argument.value">rncpackage/rnc-package.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="monetary_rate_card_url" elementType="Argument">
            <stringProp name="Argument.name">monetary_rate_card_url</stringProp>
            <stringProp name="Argument.value">monetaryratecard/monetary-rate-card.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="non_monetary_rate_card_url" elementType="Argument">
            <stringProp name="Argument.name">non_monetary_rate_card_url</stringProp>
            <stringProp name="Argument.value">nonmonetaryratecard/non-monetary-rate-card.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rate_card_group_url" elementType="Argument">
            <stringProp name="Argument.name">rate_card_group_url</stringProp>
            <stringProp name="Argument.value">ratecardgroup/rate-card-group.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pd" elementType="Argument">
            <stringProp name="Argument.name">pd</stringProp>
            <stringProp name="Argument.value">pd</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="product_offer_url" elementType="Argument">
            <stringProp name="Argument.name">product_offer_url</stringProp>
            <stringProp name="Argument.value">productoffer/product-offer.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">User Defined Variables</stringProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Mapping Variable" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="mapping_file_name" elementType="Argument">
            <stringProp name="Argument.name">mapping_file_name</stringProp>
            <stringProp name="Argument.value">PCC_Diameter_Mapping.csv</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <kg.apc.jmeter.config.VariablesFromCSV guiclass="kg.apc.jmeter.config.VariablesFromCSVGui" testclass="kg.apc.jmeter.config.VariablesFromCSV" testname="Load Global Variable" enabled="true">
        <collectionProp name="Arguments.arguments"/>
        <stringProp name="filename">global.variables</stringProp>
        <stringProp name="variablesPrefix"></stringProp>
        <stringProp name="delimiter">::</stringProp>
        <intProp name="skipLines">0</intProp>
        <boolProp name="storeSysProp">false</boolProp>
      </kg.apc.jmeter.config.VariablesFromCSV>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="REST Default Parameters" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
        <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value">Basic YWRtaW46YWRtaW4=</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
      </HeaderManager>
      <hashTree/>
      <ConfigTestElement guiclass="com.computaris.jmeter.protocol.diameter.config.gui.DiameterConfigGui" testclass="ConfigTestElement" testname="Diameter Stack" enabled="true">
        <stringProp name="GxPCEFDiameterClient.server.0">${serverip}</stringProp>
        <stringProp name="GxPCEFDiameterClient.port.0">${diameterport}</stringProp>
        <stringProp name="GxPCEFDiameterClient.timeout.0">10000</stringProp>
        <stringProp name="GxPCEFDiameterClient.protocol.0">TCP</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.message">Capabilities-Exchange-Request</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.flagP">false</stringProp>
        <stringProp name="GxPCEFCERGxPCEFCERDiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.appID">16777238</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.0">Supported-Vendor-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.0">10415</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.1">Vendor-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.1">11</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.2">Origin-Host</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.2">${originhost}</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.3">Origin-Realm</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.3">${originrealm}</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.4">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.4">10.106.1.88</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.5">Vendor-Specific-Application-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.5">3</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.6">Acct-Application-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.6">0</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.7">Auth-Application-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.7">16777238</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.8">Vendor-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.8">10415</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.9">Product-Name</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.9">Jmeter</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.10">Origin-State-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.10">1094807040</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.11">Auth-Application-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.11">16777238</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.12">Acct-Application-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.12">4</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.13">Firmware-Revision</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.13">267</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpCounter">14</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.message">Disconnect-Peer-Request</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.flagP">false</stringProp>
        <stringProp name="GxPCEFDPRGxPCEFDPRDiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.avpData.0">${origin_host}</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.avpData.1">${originrealm}</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.avpName.2">Disconnect-Cause</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.avpData.2">2</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.avpCounter">3</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.message">Device-Watchdog-Answer</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.flagP">false</stringProp>
        <stringProp name="GxPCEFDWAGxPCEFDWADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpName.0">Result-Code</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpData.0">2001</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpName.1">Origin-Host</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpData.1">gx.elite.com</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpName.2">Origin-Realm</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpData.2">elite.com</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpName.3">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpData.3">10.106.1.142</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpName.4">Vendor-Id</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpData.4">10415</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpName.5">Product-Name</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpData.5">Jmeter</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpCounter">6</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.message">Re-Auth-Answer</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFRAAGxPCEFRAADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.appID">16777238</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.HBHID">${__diamGetHopId(var)}</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.ETEID">${__diamGetEndId(var)}</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpData.0">${origin_host}</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpData.1">${origin_realm}</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpData.2">10.106.1.142</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpData.4">Jmeter</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpName.5">Result-Code</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpData.5">2001</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpName.6">Session-Id</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpData.6">${sessionid}</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpCounter">7</stringProp>
        <stringProp name="GxPCEFASADiameterClient.message">Abort-Session-Answer</stringProp>
        <stringProp name="GxPCEFASADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFASAGxPCEFASADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFASADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFASADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFASADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFASADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpData.0"></stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpData.1"></stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpData.2"></stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpCounter">5</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.message">Cancel-Location-Answer</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFCLAGxPCEFCLADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpData.0"></stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpData.1"></stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpData.2"></stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpCounter">5</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.message">Insert-Subscriber-Data-Answer</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFIDAGxPCEFIDADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpData.0"></stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpData.1"></stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpData.2"></stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpCounter">5</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.message">Delete-Subscriber-Data-Answer</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFDSAGxPCEFDSADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpData.0"></stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpData.1"></stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpData.2"></stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpCounter">5</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.message">Reset-Answer</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFRSAGxPCEFRSADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpData.0"></stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpData.1"></stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpData.2"></stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpCounter">5</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.message">Registration-Termination-Answer</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFRTAGxPCEFRTADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpData.0"></stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpData.1"></stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpData.2"></stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpCounter">5</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.message">Push-Profile-Answer</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFPPAGxPCEFPPADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpData.0"></stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpData.1"></stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpData.2"></stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpCounter">5</stringProp>
        <stringProp name="GxPCEFSLADiameterClient.message">Spending-Limit-Answer</stringProp>
        <stringProp name="GxPCEFSLADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFSLAGxPCEFSLADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFSLADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFSLADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFSLADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFSLADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFSLADiameterClient.avpCounter">0</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.message">Session-Termination-Answer</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFSTAGxPCEFSTADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpData.0"></stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpData.1"></stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpData.2"></stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpCounter">5</stringProp>
        <boolProp name="GxPCEFDiameterClient.overrideStack">true</boolProp>
        <boolProp name="GxPCEFDiameterClient.disableAutomaticBgResponder">false</boolProp>
        <boolProp name="GxPCEFDiameterClient.enablePeerStateMachine">true</boolProp>
        <stringProp name="73_PCEF_primaryDiameterClient.server.0">${serverip}</stringProp>
        <stringProp name="73_PCEF_primaryDiameterClient.port.0">${diameterport}</stringProp>
        <stringProp name="73_PCEF_primaryDiameterClient.timeout.0">3000</stringProp>
        <stringProp name="73_PCEF_primaryDiameterClient.protocol.0">TCP</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.message">Capabilities-Exchange-Request</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.flagP">false</stringProp>
        <stringProp name="73_PCEF_primaryCER73_PCEF_primaryCERDiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.appID">16777238</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.0">Supported-Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.0">10415</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.1">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.1">${73_origin_host_primary}</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.2">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.2">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.3">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.3">10.106.1.88</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.4">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.4">11</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.5">Vendor-Specific-Application-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.5">3</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.6">Acct-Application-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.6">0</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.7">Auth-Application-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.7">16777238</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.8">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.8">10415</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.9">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.9">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.10">Origin-State-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.10">1094807040</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.11">Auth-Application-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.11">16777238</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.12">Acct-Application-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.12">0</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.13">Firmware-Revision</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.13">267</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpCounter">14</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.message">Disconnect-Peer-Request</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.flagP">false</stringProp>
        <stringProp name="73_PCEF_primaryDPR73_PCEF_primaryDPRDiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.avpData.0">${73_origin_host_primary}</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.avpData.1">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.avpName.2">Disconnect-Cause</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.avpData.2">2</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.avpCounter">3</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.message">Device-Watchdog-Answer</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.flagP">false</stringProp>
        <stringProp name="73_PCEF_primaryDWA73_PCEF_primaryDWADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpName.0">Result-Code</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpData.0">2001</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpName.1">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpData.1">${73_origin_host_primary}</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpName.2">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpData.2">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpName.3">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpData.3">127.0.0.1</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpName.4">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpData.4">0</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpName.5">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpData.5">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpCounter">6</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.message">Re-Auth-Answer</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primaryRAA73_PCEF_primaryRAADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpData.0">${73_origin_host_primary}</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpData.1">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpData.2">10.106.1.172</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.message">Abort-Session-Answer</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primaryASA73_PCEF_primaryASADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpData.0">${73_origin_host_primary}</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpData.1">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpData.2">10.106.1.172</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.message">Cancel-Location-Answer</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primaryCLA73_PCEF_primaryCLADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.message">Insert-Subscriber-Data-Answer</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primaryIDA73_PCEF_primaryIDADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.message">Delete-Subscriber-Data-Answer</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primaryDSA73_PCEF_primaryDSADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.message">Reset-Answer</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primaryRSA73_PCEF_primaryRSADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.message">Registration-Termination-Answer</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primaryRTA73_PCEF_primaryRTADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.message">Push-Profile-Answer</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primaryPPA73_PCEF_primaryPPADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_primarySLADiameterClient.message">Spending-Limit-Answer</stringProp>
        <stringProp name="73_PCEF_primarySLADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primarySLA73_PCEF_primarySLADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primarySLADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primarySLADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primarySLADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primarySLADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primarySLADiameterClient.avpCounter">0</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.message">Session-Termination-Answer</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primarySTA73_PCEF_primarySTADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpCounter">5</stringProp>
        <boolProp name="73_PCEF_primaryDiameterClient.overrideStack">true</boolProp>
        <boolProp name="73_PCEF_primaryDiameterClient.disableAutomaticBgResponder">false</boolProp>
        <boolProp name="73_PCEF_primaryDiameterClient.enablePeerStateMachine">true</boolProp>
        <stringProp name="73_PCEF_secondaryDiameterClient.server.0">${serverip}</stringProp>
        <stringProp name="73_PCEF_secondaryDiameterClient.port.0">${diameterport}</stringProp>
        <stringProp name="73_PCEF_secondaryDiameterClient.timeout.0">3000</stringProp>
        <stringProp name="73_PCEF_secondaryDiameterClient.protocol.0">TCP</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.message">Capabilities-Exchange-Request</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.flagP">false</stringProp>
        <stringProp name="73_PCEF_secondaryCER73_PCEF_secondaryCERDiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.appID">16777238</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.0">${73_origin_host_secondary}</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.1">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.2">10.106.1.172</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.3">Supported-Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.3">10415</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.4">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.4">11</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.5">Vendor-Specific-Application-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.5">3</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.6">Acct-Application-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.6">0</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.7">Auth-Application-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.7">16777238</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.8">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.8">10415</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.9">Origin-State-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.9">1094807040</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.10">Auth-Application-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.10">16777238</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.11">Acct-Application-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.11">0</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.12">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.12">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.13">Firmware-Revision</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.13">267</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpCounter">14</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.message">Disconnect-Peer-Request</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.flagP">false</stringProp>
        <stringProp name="73_PCEF_secondaryDPR73_PCEF_secondaryDPRDiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.avpData.0">${73_origin_host_secondary}</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.avpData.1">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.avpName.2">Disconnect-Cause</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.avpData.2">2</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.avpCounter">3</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.message">Device-Watchdog-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.flagP">false</stringProp>
        <stringProp name="73_PCEF_secondaryDWA73_PCEF_secondaryDWADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpName.0">Result-Code</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpData.0">2001</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpName.1">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpData.1">${73_origin_host_secondary}</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpName.2">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpData.2">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpName.3">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpData.3">10.106.1.172</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpName.4">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpData.4">0</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpName.5">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpData.5">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpCounter">6</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.message">Re-Auth-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondaryRAA73_PCEF_secondaryRAADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpData.0">${73_origin_host_secondary}</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpData.1">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpData.2">10.106.1.172</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.message">Abort-Session-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondaryASA73_PCEF_secondaryASADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpData.0">${73_origin_host_secondary}</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpData.1">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpData.2">10.106.1.172</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.message">Cancel-Location-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondaryCLA73_PCEF_secondaryCLADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.message">Insert-Subscriber-Data-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondaryIDA73_PCEF_secondaryIDADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.message">Delete-Subscriber-Data-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondaryDSA73_PCEF_secondaryDSADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.message">Reset-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondaryRSA73_PCEF_secondaryRSADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.message">Registration-Termination-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondaryRTA73_PCEF_secondaryRTADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.message">Push-Profile-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondaryPPA73_PCEF_secondaryPPADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_secondarySLADiameterClient.message">Spending-Limit-Answer</stringProp>
        <stringProp name="73_PCEF_secondarySLADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondarySLA73_PCEF_secondarySLADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondarySLADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondarySLADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondarySLADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondarySLADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondarySLADiameterClient.avpCounter">0</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.message">Session-Termination-Answer</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondarySTA73_PCEF_secondarySTADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpCounter">5</stringProp>
        <boolProp name="73_PCEF_secondaryDiameterClient.overrideStack">true</boolProp>
        <boolProp name="73_PCEF_secondaryDiameterClient.disableAutomaticBgResponder">false</boolProp>
        <boolProp name="73_PCEF_secondaryDiameterClient.enablePeerStateMachine">true</boolProp>
        <stringProp name="RxPCEFDiameterClient.server.0">${serverip}</stringProp>
        <stringProp name="RxPCEFDiameterClient.port.0">${diameterport}</stringProp>
        <stringProp name="RxPCEFDiameterClient.timeout.0">3000</stringProp>
        <stringProp name="RxPCEFDiameterClient.protocol.0">TCP</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.message">Capabilities-Exchange-Request</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.flagP">false</stringProp>
        <stringProp name="RxPCEFCERRxPCEFCERDiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.appID">16777236</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.0">Auth-Application-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.0">16777236</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.1">Acct-Application-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.1">0</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.2">Vendor-Specific-Application-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.2">3</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.3">Acct-Application-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.4">Auth-Application-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.4">16777236</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.5">Vendor-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.5">10415</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.6">Supported-Vendor-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.6">10415</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.7">Origin-Host</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.7">${origin_host_rx}</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.8">Origin-Realm</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.8">${origin_realm_rx}</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.9">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.9">10.106.1.172</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.10">Origin-State-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.10">1094807040</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.11">Vendor-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.11">11</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.12">Product-Name</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.12">Applicaion Function</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.13">Firmware-Revision</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.13">267</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpCounter">14</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.message">Disconnect-Peer-Request</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.flagP">false</stringProp>
        <stringProp name="RxPCEFDPRRxPCEFDPRDiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.avpData.0">${origin_host_rx}</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.avpData.1">${origin_realm_rx}</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.avpName.2">Disconnect-Cause</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.avpData.2">2</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.avpCounter">3</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.message">Device-Watchdog-Answer</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.flagP">false</stringProp>
        <stringProp name="RxPCEFDWARxPCEFDWADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpName.0">Result-Code</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpData.0">2001</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpName.1">Origin-Host</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpData.1">${origin_host_rx}</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpName.2">Origin-Realm</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpData.2">${origin_realm_rx}</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpName.3">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpData.3">127.0.0.1</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpName.4">Vendor-Id</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpData.4">0</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpName.5">Product-Name</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpData.5">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpCounter">6</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.message">Re-Auth-Answer</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFRAARxPCEFRAADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpData.0">${origin_host_rx}</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpData.1">${origin_realm_rx}</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpData.2">10.106.1.172</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpCounter">5</stringProp>
        <stringProp name="RxPCEFASADiameterClient.message">Abort-Session-Answer</stringProp>
        <stringProp name="RxPCEFASADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFASARxPCEFASADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFASADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFASADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFASADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFASADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpData.0">${origin_host_rx}</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpData.1">${origin_realm_rx}</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpData.2">10.106.1.172</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpName.5">Result-Code</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpData.5">2001</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpCounter">6</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.message">Cancel-Location-Answer</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFCLARxPCEFCLADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpData.0"></stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpData.1"></stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpData.2"></stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpCounter">5</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.message">Insert-Subscriber-Data-Answer</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFIDARxPCEFIDADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpData.0"></stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpData.1"></stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpData.2"></stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpCounter">5</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.message">Delete-Subscriber-Data-Answer</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFDSARxPCEFDSADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpData.0"></stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpData.1"></stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpData.2"></stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpCounter">5</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.message">Reset-Answer</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFRSARxPCEFRSADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpData.0"></stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpData.1"></stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpData.2"></stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpCounter">5</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.message">Registration-Termination-Answer</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFRTARxPCEFRTADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpData.0"></stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpData.1"></stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpData.2"></stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpCounter">5</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.message">Push-Profile-Answer</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFPPARxPCEFPPADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpData.0"></stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpData.1"></stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpData.2"></stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpCounter">5</stringProp>
        <stringProp name="RxPCEFSLADiameterClient.message">Spending-Limit-Answer</stringProp>
        <stringProp name="RxPCEFSLADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFSLARxPCEFSLADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFSLADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFSLADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFSLADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFSLADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFSLADiameterClient.avpCounter">0</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.message">Session-Termination-Answer</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFSTARxPCEFSTADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpData.0"></stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpData.1"></stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpData.2"></stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpCounter">5</stringProp>
        <boolProp name="RxPCEFDiameterClient.overrideStack">true</boolProp>
        <boolProp name="RxPCEFDiameterClient.disableAutomaticBgResponder">false</boolProp>
        <boolProp name="RxPCEFDiameterClient.enablePeerStateMachine">true</boolProp>
        <objProp>
          <name>DiameterClient.CONNECTION_IDS</name>
          <value class="java.util.ArrayList">
            <java.lang.String>GxPCEF</java.lang.String>
            <java.lang.String>73_PCEF_primary</java.lang.String>
            <java.lang.String>73_PCEF_secondary</java.lang.String>
            <java.lang.String>RxPCEF</java.lang.String>
          </value>
        </objProp>
      </ConfigTestElement>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery">Select 1 from dual</stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">DB</stringProp>
        <stringProp name="dbUrl">jdbc:oracle:thin:@${dbserverip}:${dbserverport}/${dbserversid}</stringProp>
        <stringProp name="driver">oracle.jdbc.driver.OracleDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">${dbpassword}</stringProp>
        <stringProp name="poolMax">10</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">${dbusername}</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Gx+Gy-RTC_5001" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">RTC_5001 | Gx+Gy | Volume | Verify Basic Call flow for Data Plan with configured Rate and Pulse</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Gx+Gy-RTC_5001" enabled="true">
          <stringProp name="TestPlan.comments">RTC_5001  | Gx+Gy | Volume | Verify Basic Call flow for Data Plan with configured Rate and Pulse</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriberidentity" elementType="Argument">
                <stringProp name="Argument.name">subscriberidentity</stringProp>
                <stringProp name="Argument.value">4111115001</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">4111115001</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">4111115001</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">4111115001</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage" elementType="Argument">
                <stringProp name="Argument.name">datapackage</stringProp>
                <stringProp name="Argument.value">RTC_5001_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">4111115001</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapfilename" elementType="Argument">
                <stringProp name="Argument.name">pcapfilename</stringProp>
                <stringProp name="Argument.value">RTC_5001</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="logfilename" elementType="Argument">
                <stringProp name="Argument.name">logfilename</stringProp>
                <stringProp name="Argument.value">RTC_5001_Log</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sessionid" elementType="Argument">
                <stringProp name="Argument.name">sessionid</stringProp>
                <stringProp name="Argument.value">4111115001_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">Gx+Gy-RTC_5001</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pccrulename" elementType="Argument">
                <stringProp name="Argument.name">pccrulename</stringProp>
                <stringProp name="Argument.value">RTC_5001_CARD_PCC_RULE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pccrulenamehex" elementType="Argument">
                <stringProp name="Argument.name">pccrulenamehex</stringProp>
                <stringProp name="Argument.value">5254435f353030315f434152445f5043435f52554c45</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">29161</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gysession" elementType="Argument">
                <stringProp name="Argument.name">gysession</stringProp>
                <stringProp name="Argument.value">4111115001_gy</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer" elementType="Argument">
                <stringProp name="Argument.name">productoffer</stringProp>
                <stringProp name="Argument.value">RTC_5001_PRODUCT_OFFER</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage_id" elementType="Argument">
                <stringProp name="Argument.name">datapackage_id</stringProp>
                <stringProp name="Argument.value">8c453a03-d876-4c7b-8fd9-1b97ed8aeb81</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer_id" elementType="Argument">
                <stringProp name="Argument.name">productoffer_id</stringProp>
                <stringProp name="Argument.value">RTC_5001_PO_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="monetaryrechargeplan" elementType="Argument">
                <stringProp name="Argument.name">monetaryrechargeplan</stringProp>
                <stringProp name="Argument.value">MRP</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start of RTC_5001" enabled="true"/>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true); 
f = new FileOutputStream(mapping_file_name, true); 
p = new PrintStream(f); 

// Write data to file 

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Cleanup" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Change product offer to deleted" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">update TBLM_PRODUCT_OFFER set PACKAGE_MODE = &apos;TEST&apos; where ID in (&apos;${productoffer_id}&apos;)
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Base Product Offer" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url_without_ext}/${productoffer_id}.json</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Change package status to deleted" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">UPDATE TBLM_PACKAGE SET STATUS=&apos;DELETED&apos; where ID IN (&apos;${datapackage_id}&apos;)
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete Balance" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLM_DATA_BALANCE WHERE SUBSCRIBER_ID=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete Monetary Balance" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLM_MONETARY_BALANCE WHERE SUBSCRIBER_ID=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Deleter Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsDeleteSubscriberProfile&gt;&#xd;
         &lt;subscriberID&gt;${subscriberidentity}&lt;/subscriberID&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsDeleteSubscriberProfile&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscriber_service}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Purge Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsPurgeSubscriber&gt;&#xd;
         &lt;subscriberID&gt;${subscriberidentity}&lt;/subscriberID&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;param1&gt;&lt;/param1&gt;&#xd;
         &lt;param2&gt;&lt;/param2&gt;&#xd;
      &lt;/sub:wsPurgeSubscriber&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscriber_service}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">100</stringProp>
          </ConstantTimer>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Pre Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Pcap and Logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872118812">Capture PCAP</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872996374">Capture log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture PD Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="1033451790">Capture PD log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create DataPackage" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;8c453a03-d876-4c7b-8fd9-1b97ed8aeb81&lt;/id&gt;&#xd;
            &lt;name&gt;RTC_5001_BASE&lt;/name&gt;&#xd;
            &lt;description&gt;Created by Jmeter&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriod&gt;30&lt;/validityPeriod&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;RnC_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;26238593-aaf8-47af-9140-01f958590df0&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by Jmeter&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_5001_CARD_PCC_RULE&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;2&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;2&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;2&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;0cb5aad7-80cc-4680-8ad6-74047eeae5ef&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;2&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;2&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;8e4e4fd1-9360-41de-831c-65f725e4e595&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;RTC_5001_CARD_PCC_RULE&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;RTC_5001_CARD_PCC_RULE&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;gbrdlUnit&gt;Kbps&lt;/gbrdlUnit&gt;&#xd;
                                    &lt;mbrdl&gt;2&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;2&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;b689e60f-c444-4368-a5d9-6b6cc9c091ea&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;190a78f4-6b3f-455a-8d5d-aa71419f84cc&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;rate-card-id&gt;bcce4709-37d4-4282-bbb7-8055d91af9ff&lt;/rate-card-id&gt;&#xd;
                    &lt;rate-card-name&gt;RTC_5001_RATE_CARD&lt;/rate-card-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
            &lt;rate-cards&gt;&#xd;
                &lt;rate-card&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;bcce4709-37d4-4282-bbb7-8055d91af9ff&lt;/id&gt;&#xd;
                    &lt;data-rate-card-versions&gt;&#xd;
                        &lt;data-rate-card-version&gt;&#xd;
                            &lt;data-rate-card-version-details&gt;&#xd;
                                &lt;data-rate-card-version-detail&gt;&#xd;
                                    &lt;id&gt;cc69163c-ae82-495b-9d64-155843092974&lt;/id&gt;&#xd;
                                    &lt;label-key-1&gt;Japan&lt;/label-key-1&gt;&#xd;
                                    &lt;label-key-2&gt;India&lt;/label-key-2&gt;&#xd;
                                    &lt;pulse-1&gt;1&lt;/pulse-1&gt;&#xd;
                                    &lt;rate-1&gt;1&lt;/rate-1&gt;&#xd;
                                    &lt;rate-type&gt;FLAT&lt;/rate-type&gt;&#xd;
				    &lt;revenueDetail&gt;&#xd;
				        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
				        &lt;id&gt;REVENUE_DETAIL1&lt;/id&gt;&#xd;
				        &lt;description&gt;Created by admin on 02/18/2019 05:30:47&lt;/description&gt;&#xd;
				        &lt;name&gt;REVENUE_DETAIL1&lt;/name&gt;&#xd;
				        &lt;revenueDetailId&gt;REVENUE_DETAIL1&lt;/revenueDetailId&gt;&#xd;
				    &lt;/revenueDetail&gt;&#xd;
                                &lt;/data-rate-card-version-detail&gt;&#xd;
                            &lt;/data-rate-card-version-details&gt;&#xd;
                            &lt;effective-from-date&gt;1524551974073&lt;/effective-from-date&gt;&#xd;
                            &lt;id&gt;4c95da74-9d43-40e5-8dc9-ae049b62bec4&lt;/id&gt;&#xd;
                            &lt;version-name&gt;1&lt;/version-name&gt;&#xd;
                        &lt;/data-rate-card-version&gt;&#xd;
                    &lt;/data-rate-card-versions&gt;&#xd;
                    &lt;description&gt;Created by Jmeter&lt;/description&gt;&#xd;
                    &lt;label-key-1&gt;Sub.NetworkCountry&lt;/label-key-1&gt;&#xd;
                    &lt;label-key-2&gt;Opr.NetworkCountry&lt;/label-key-2&gt;&#xd;
                    &lt;name&gt;RTC_5001_RATE_CARD&lt;/name&gt;&#xd;
                    &lt;pkgId&gt;8c453a03-d876-4c7b-8fd9-1b97ed8aeb81&lt;/pkgId&gt;&#xd;
                    &lt;pulse-unit&gt;MB&lt;/pulse-unit&gt;&#xd;
                    &lt;rate-unit&gt;MB&lt;/rate-unit&gt;&#xd;
                &lt;/rate-card&gt;&#xd;
            &lt;/rate-cards&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/xml</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Offer" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${productoffer_id}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${productoffer}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin on 05/23/2018 10:12:03&quot;,&#xd;
   &quot;type&quot;:&quot;BASE&quot;,&#xd;
   &quot;currency&quot;:&quot;${currency}&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${datapackage_id}&quot;,&#xd;
   &quot;validityPeriod&quot;:null,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Offer" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}.json</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To TEST Mode" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=TEST</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To LIVE Mode" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=LIVE</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Monetary Recharge Plan" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Truncate TBLM_RECHARGE_PLAN" enabled="true">
                <stringProp name="dataSource">DB</stringProp>
                <stringProp name="query">DELETE FROM TBLM_RECHARGE_PLAN WHERE NAME=&apos;${monetaryrechargeplan}_100&apos;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Callable Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Monetary Recharge Plan" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">  {&#xd;
    &quot;id&quot;: &quot;${monetaryrechargeplan}_100&quot;,&#xd;
    &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
    &quot;groups&quot;: &quot;GROUP_1&quot;,&#xd;
    &quot;price&quot;: 100,&#xd;
    &quot;amount&quot;: 100,&#xd;
    &quot;validity&quot;: 30,&#xd;
    &quot;validityPeriodUnit&quot;: &quot;DAY&quot;,&#xd;
    &quot;description&quot;: &quot;Created by admin on 09/12/2018 15:20:09&quot;,&#xd;
    &quot;name&quot;: &quot;${monetaryrechargeplan}_100&quot;,&#xd;
    &quot;packageMode&quot;: &quot;DESIGN&quot;,&#xd;
    &quot;groupNames&quot;: null&#xd;
  }&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${mon_rchg_plan_config_url}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1729771212">&quot;id&quot;:&quot;${monetaryrechargeplan}_100&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Monetary Recharge Plan" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/monetaryrechargeplan/monetary-recharge-plan/${monetaryrechargeplan}_100/updateMode.json?pkgMode=LIVE</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1729771212">&quot;id&quot;:&quot;${monetaryrechargeplan}_100&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Subscriber Provisioning Request" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsAddSubscriberProfile&gt;
         &lt;!--Optional:--&gt;
        &lt;subscriberProfile&gt;
               &lt;entry&gt;
                  &lt;key&gt;SUBSCRIBER_IDENTITY&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;USERNAME&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUSTOMER_TYPE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;STATUS&lt;/key&gt;
                  &lt;value&gt;Active&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMS_PACKAGE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EXPIRY_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;AREA&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CITY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM1&lt;/key&gt;
                  &lt;value&gt;24124&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM2&lt;/key&gt;
                  &lt;value&gt;abcd&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM3&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM4&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM5&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ZONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COUNTRY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;BIRTH_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ROLE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COMPANY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;DEPARTMENT&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ARPU&lt;/key&gt;
                  &lt;value&gt;0&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CADRE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EMAIL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PHONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;SIP_URL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUI&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMSI&lt;/key&gt;
                 &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;MSISDN&lt;/key&gt;
                 &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PRODUCT_OFFER&lt;/key&gt;
                 &lt;value&gt;${productoffer}&lt;/value&gt;
               &lt;/entry&gt;
            &lt;/subscriberProfile&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsAddSubscriberProfile&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Subscribe Monetary Recharge Plan" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
        &quot;subscriberId&quot;: &quot;${subscriberidentity}&quot;,&#xd;
        &quot;alternateId&quot;: &quot;&quot;,&#xd;
        &quot;cui&quot;: &quot;&quot;,&#xd;
        &quot;monetaryRechargePlanId&quot;: &quot;&quot;,&#xd;
        &quot;monetaryRechargePlanName&quot;: &quot;${monetaryrechargeplan}_100&quot;,&#xd;
        &quot;updateAction&quot;: &quot;0&quot;,&#xd;
        &quot;updateBalanceIndication&quot;: &quot;false&quot;,&#xd;
        &quot;price&quot;: &quot;&quot;&#xd;
        &#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
              <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/rest/restful/subscription/subscribeMonetaryRechargePlan?</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5001_CCR-I Gx" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-User-Location-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">0004F489008D3039</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">1</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">2</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpName.13">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.15">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.17">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">18</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Charging-Rule-Definition:Charging-Rule-Name:${pccrulenamehex}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5001_CCR-I Gy" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">40498</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">411111</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.4">2</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${__diamAVPValue(Charging-Rule-Install:Charging-Rule-Definition:Rating-Group,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Requested-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.6">1</stringProp>
            <stringProp name="DiameterSampler.avpName.7">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.7">10485760</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${gysession}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">4</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.13">1</stringProp>
            <stringProp name="DiameterSampler.avpName.14">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.16">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Event-Timestamp</stringProp>
            <stringProp name="DiameterSampler.avpData.17">2015-10-15 16:14:38 +0530</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.18">2</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.20">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.21">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.21">2</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.22">0</stringProp>
            <stringProp name="DiameterSampler.avpName.23">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.23">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.24">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.24">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">25</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">4</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Granted-Service-Unit:CC-Total-Octets:10485760</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Balance (100 Rs)" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriptionService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetMonetaryBalance&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;serviceId&gt;&lt;/serviceId&gt;          
         &lt;serviceName&gt;&lt;/serviceName&gt;          
         &lt;parameter1&gt; &lt;/parameter1&gt;          
         &lt;parameter2&gt; &lt;/parameter2&gt;
      &lt;/sub:wsGetMonetaryBalance&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Usage found" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                <stringProp name="-649071938">&lt;availBalance&gt;100.0&lt;/availBalance&gt;&lt;totalBalance&gt;100.0&lt;/totalBalance&gt;&lt;actualBalance&gt;90.0&lt;/actualBalance&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">this asseriton will check that usage of 25 mb is reported or not</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Usage found" enabled="true">
              <stringProp name="TestPlan.comments">this asseriton will check that usage of 25 mb is reported or not</stringProp>
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">//responseCode/text()=&apos;200&apos; and 
//responseMessage/text()=&apos;SUCCESS&apos; and
//monetaryBalanceData/availBalance/text()=&apos;100.0&apos; and
//monetaryBalanceData/totalBalance/text()=&apos;100.0&apos; and
//monetaryBalanceData/actualBalance/text()=&apos;90.0&apos;</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Get Session using Ws and DB" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </com.computaris.jmeter.ext.controls.ParameterizedController>
          <hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Subscriber&apos;s Gy Session" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SessionManagementService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ses=&quot;http://sessionmanagement.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;ses:wsGetSessionsBySubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;sessionType&gt;&lt;/sessionType&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/ses:wsGetSessionsBySubscriberIdentity&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <stringProp name="TestPlan.comments">Web Service Call to Get Session By Subscriberidentity</stringProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Get Session from DB" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">select CORE_SESSION_ID from TBLT_SESSION where SUBSCRIBER_IDENTITY = &apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1151354728">${sessionid}:Gx</stringProp>
                  <stringProp name="1350692784">${gysession}</stringProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">check if session id is present or not</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5001_CCR-U Gy (USU-92 MB)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">40498</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">411111</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${gysession}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">4</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">Reporting-Reason</stringProp>
            <stringProp name="DiameterSampler.avpData.21">0</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.22">${__diamAVPValue(Multiple-Services-Credit-Control:Rating-Group,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.23">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.23">1</stringProp>
            <stringProp name="DiameterSampler.avpName.24">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.24">96468992</stringProp>
            <stringProp name="DiameterSampler.avpName.25">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.25">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">26</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">4</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Granted-Service-Unit:CC-Total-Octets:8388608</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Balance(8 Rs)" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriptionService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetMonetaryBalance&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;serviceId&gt;&lt;/serviceId&gt;          
         &lt;serviceName&gt;&lt;/serviceName&gt;          
         &lt;parameter1&gt; &lt;/parameter1&gt;          
         &lt;parameter2&gt; &lt;/parameter2&gt;
      &lt;/sub:wsGetMonetaryBalance&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Usage found" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                <stringProp name="-94867732">&lt;availBalance&gt;8.0&lt;/availBalance&gt;&lt;totalBalance&gt;100.0&lt;/totalBalance&gt;&lt;actualBalance&gt;0.0&lt;/actualBalance&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">this asseriton will check that usage of 25 mb is reported or not</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Usage found" enabled="true">
              <stringProp name="TestPlan.comments">this asseriton will check that usage of 25 mb is reported or not</stringProp>
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">//responseCode/text()=&apos;200&apos; and 
//responseMessage/text()=&apos;SUCCESS&apos; and 
//monetaryBalanceData/availBalance=&apos;8.0&apos; and
//monetaryBalanceData/totalBalance=&apos;100.0&apos; and
//monetaryBalanceData/actualBalance=&apos;0.0&apos;</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5001_CCR-T Gy (USU-10MB)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">40498</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">411111</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${gysession}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">4</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.10">3</stringProp>
            <stringProp name="DiameterSampler.avpName.11">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.11">5</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.12">2</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.15">2</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">1</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1</stringProp>
            <stringProp name="DiameterSampler.avpName.18">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${__diamAVPValue(Multiple-Services-Credit-Control:Granted-Service-Unit:CC-Total-Octets,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Termination-Cause</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.21">0</stringProp>
            <stringProp name="DiameterSampler.avpCounter">22</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5001_CCR-T Gx" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-User-Location-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">0004F489008D3039</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.3">0</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">3</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">3</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.11">2</stringProp>
            <stringProp name="DiameterSampler.avpName.12">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">0</stringProp>
            <stringProp name="DiameterSampler.avpName.13">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.13">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Called-Station-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">internet</stringProp>
            <stringProp name="DiameterSampler.avpCounter">15</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">200[12]</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">true</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Subscriber&apos;s Session" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SessionManagementService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ses=&quot;http://sessionmanagement.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;ses:wsGetSessionsBySubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;sessionType&gt;&lt;/sessionType&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/ses:wsGetSessionsBySubscriberIdentity&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <stringProp name="TestPlan.comments">Subscriber&apos;s Session should not be fetched</stringProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2101284903">&lt;responseCode&gt;404&lt;/responseCode&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Balance(0 Rs)" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriptionService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetMonetaryBalance&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;serviceId&gt;&lt;/serviceId&gt;          
         &lt;serviceName&gt;&lt;/serviceName&gt;          
         &lt;parameter1&gt; &lt;/parameter1&gt;          
         &lt;parameter2&gt; &lt;/parameter2&gt;
      &lt;/sub:wsGetMonetaryBalance&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Usage found" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                <stringProp name="-850503180">&lt;availBalance&gt;0.0&lt;/availBalance&gt;&lt;totalBalance&gt;100.0&lt;/totalBalance&gt;&lt;actualBalance&gt;0.0&lt;/actualBalance&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">this asseriton will check that usage of 25 mb is reported or not</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Usage found" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">//responseCode/text()=&apos;200&apos; and 
//responseMessage/text()=&apos;SUCCESS&apos; and
//monetaryBalanceData/availBalance=&apos;0.0&apos; and
//monetaryBalanceData/totalBalance=&apos;100.0&apos; and
//monetaryBalanceData/actualBalance=&apos;0.0&apos;</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5001_CCR-I Gx (5003 Result)" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-User-Location-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">0004F489008D3039</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">1</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">2</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpName.13">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.15">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.17">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">18</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">5003</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Post Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop pcap and logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="stop Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-720136512">Stop Pcap</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop NV log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-632654166">Stop NV log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop PD log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-592019242">Stop PD log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="End of RTC_5001" enabled="true"/>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Module Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Gx+Gy-RTC_5003" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">RTC_5003 | Gx+Gy | Time | Verify Basic Call flow for Data Plan with configured Rate and Pulse</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Gx+Gy-RTC_5003" enabled="true">
          <stringProp name="TestPlan.comments">RTC_5003 | Gx+Gy | Time | Verify Basic Call flow for Data Plan with configured Rate and Pulse</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriberidentity" elementType="Argument">
                <stringProp name="Argument.name">subscriberidentity</stringProp>
                <stringProp name="Argument.value">4111115003</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">4111115003</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">4111115003</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">4111115003</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage" elementType="Argument">
                <stringProp name="Argument.name">datapackage</stringProp>
                <stringProp name="Argument.value">RTC_5003_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">4111115003</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapfilename" elementType="Argument">
                <stringProp name="Argument.name">pcapfilename</stringProp>
                <stringProp name="Argument.value">RTC_5003</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="logfilename" elementType="Argument">
                <stringProp name="Argument.name">logfilename</stringProp>
                <stringProp name="Argument.value">RTC_5003_Log</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sessionid" elementType="Argument">
                <stringProp name="Argument.name">sessionid</stringProp>
                <stringProp name="Argument.value">4111115003_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">Gx+Gy-RTC_5003</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pccrulename" elementType="Argument">
                <stringProp name="Argument.name">pccrulename</stringProp>
                <stringProp name="Argument.value">RTC_5003_CARD_PCC_RULE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pccrulenamehex" elementType="Argument">
                <stringProp name="Argument.name">pccrulenamehex</stringProp>
                <stringProp name="Argument.value">5254435f353030335f434152445f5043435f52554c45</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">29162</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gysession" elementType="Argument">
                <stringProp name="Argument.name">gysession</stringProp>
                <stringProp name="Argument.value">4111115003_gy</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer" elementType="Argument">
                <stringProp name="Argument.name">productoffer</stringProp>
                <stringProp name="Argument.value">RTC_5003_PRODUCT_OFFER</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage_id" elementType="Argument">
                <stringProp name="Argument.name">datapackage_id</stringProp>
                <stringProp name="Argument.value">RTC_5003_BASE_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer_id" elementType="Argument">
                <stringProp name="Argument.name">productoffer_id</stringProp>
                <stringProp name="Argument.value">RTC_5003_PO_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start of RTC_5003" enabled="true"/>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true); 
f = new FileOutputStream(mapping_file_name, true); 
p = new PrintStream(f); 

// Write data to file 

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Cleanup" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Change product offer to test" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">update TBLM_PRODUCT_OFFER set PACKAGE_MODE = &apos;TEST&apos; where ID in (&apos;${productoffer_id}&apos;)
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Base Product Offer" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url_without_ext}/${productoffer_id}.json</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Change package status to test" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">UPDATE TBLM_PACKAGE SET STATUS=&apos;TEST&apos; where ID IN (&apos;${datapackage_id}&apos;)
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Base Product Offer" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url_without_ext}/${productoffer_id}.json</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete Balance" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLM_DATA_BALANCE WHERE SUBSCRIBER_ID=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete Monetary Balance" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLM_MONETARY_BALANCE WHERE SUBSCRIBER_ID=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Deleter Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsDeleteSubscriberProfile&gt;&#xd;
         &lt;subscriberID&gt;${subscriberidentity}&lt;/subscriberID&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsDeleteSubscriberProfile&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscriber_service}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Purge Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsPurgeSubscriber&gt;&#xd;
         &lt;subscriberID&gt;${subscriberidentity}&lt;/subscriberID&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;param1&gt;&lt;/param1&gt;&#xd;
         &lt;param2&gt;&lt;/param2&gt;&#xd;
      &lt;/sub:wsPurgeSubscriber&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscriber_service}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Pre Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Pcap and Logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872118812">Capture PCAP</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872996374">Capture log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture PD Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="1033451790">Capture PD log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create DataPackage" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;RTC_5003_BASE_111111111&lt;/id&gt;&#xd;
            &lt;name&gt;RTC_5003_BASE&lt;/name&gt;&#xd;
            &lt;description&gt;Created by Jmeter&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriod&gt;30&lt;/validityPeriod&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;RnC_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by Jmeter&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_5003_QOS&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;2&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;2&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;2&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;RTC_5003_CARD_PCC_RULE&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;RTC_5003_CARD_PCC_RULE&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;2&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;2&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;rate-card-id&gt;&lt;/rate-card-id&gt;&#xd;
                    &lt;rate-card-name&gt;RTC_5003_RATE_CARD&lt;/rate-card-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
            &lt;rate-cards&gt;&#xd;
                &lt;rate-card&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;data-rate-card-versions&gt;&#xd;
                        &lt;data-rate-card-version&gt;&#xd;
                            &lt;data-rate-card-version-details&gt;&#xd;
                                &lt;data-rate-card-version-detail&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;label-key-1&gt;Japan&lt;/label-key-1&gt;&#xd;
                                    &lt;label-key-2&gt;India&lt;/label-key-2&gt;&#xd;
                                    &lt;pulse-1&gt;1&lt;/pulse-1&gt;&#xd;
                                    &lt;rate-1&gt;1&lt;/rate-1&gt;&#xd;
                                    &lt;rate-type&gt;FLAT&lt;/rate-type&gt;&#xd;
                                &lt;/data-rate-card-version-detail&gt;&#xd;
                            &lt;/data-rate-card-version-details&gt;&#xd;
                            &lt;effective-from-date&gt;1524551974073&lt;/effective-from-date&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;version-name&gt;1&lt;/version-name&gt;&#xd;
                        &lt;/data-rate-card-version&gt;&#xd;
                    &lt;/data-rate-card-versions&gt;&#xd;
                    &lt;description&gt;Created by Jmeter&lt;/description&gt;&#xd;
                    &lt;label-key-1&gt;Sub.NetworkCountry&lt;/label-key-1&gt;&#xd;
                    &lt;label-key-2&gt;Opr.NetworkCountry&lt;/label-key-2&gt;&#xd;
                    &lt;name&gt;RTC_5003_RATE_CARD&lt;/name&gt;&#xd;
                    &lt;pkgId&gt;RTC_5003_BASE_111111111&lt;/pkgId&gt;&#xd;
                    &lt;pulse-unit&gt;MINUTE&lt;/pulse-unit&gt;&#xd;
                    &lt;rate-unit&gt;MINUTE&lt;/rate-unit&gt;&#xd;
                &lt;/rate-card&gt;&#xd;
            &lt;/rate-cards&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/xml</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Offer" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${productoffer_id}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${productoffer}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin on 05/23/2018 10:12:03&quot;,&#xd;
   &quot;type&quot;:&quot;BASE&quot;,&#xd;
   &quot;currency&quot;:&quot;${currency}&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${datapackage_id}&quot;,&#xd;
   &quot;validityPeriod&quot;:null,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Offer" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}.json</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To TEST Mode" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=TEST</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To LIVE Mode" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=LIVE</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Subscriber Provisioning Request" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsAddSubscriberProfile&gt;
         &lt;!--Optional:--&gt;
        &lt;subscriberProfile&gt;
               &lt;entry&gt;
                  &lt;key&gt;SUBSCRIBER_IDENTITY&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;USERNAME&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUSTOMER_TYPE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;STATUS&lt;/key&gt;
                  &lt;value&gt;Active&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMS_PACKAGE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EXPIRY_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;AREA&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CITY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM1&lt;/key&gt;
                  &lt;value&gt;24124&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM2&lt;/key&gt;
                  &lt;value&gt;abcd&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM3&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM4&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM5&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ZONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COUNTRY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;BIRTH_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ROLE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COMPANY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;DEPARTMENT&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ARPU&lt;/key&gt;
                  &lt;value&gt;0&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CADRE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EMAIL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PHONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;SIP_URL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUI&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMSI&lt;/key&gt;
                 &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;MSISDN&lt;/key&gt;
                 &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PRODUCT_OFFER&lt;/key&gt;
                 &lt;value&gt;${productoffer}&lt;/value&gt;
               &lt;/entry&gt;
            &lt;/subscriberProfile&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsAddSubscriberProfile&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Add 30 Rs Monetory Balance" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriptionService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsAddMonetaryBalance&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;serviceId&gt;DATA&lt;/serviceId&gt;
         &lt;!--Optional:--&gt;
         &lt;serviceName&gt;&lt;/serviceName&gt;
         &lt;!--Optional:--&gt;
         &lt;totalBalance&gt;30&lt;/totalBalance&gt;
         &lt;!--Optional:--&gt;
         &lt;validFromDate&gt;${__longSum(${__time(,)},-6000,)}&lt;/validFromDate&gt;
         &lt;!--Optional:--&gt;
         &lt;validToDate&gt;${__longSum(${__time(,)},+600000,)}&lt;/validToDate&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsAddMonetaryBalance&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Balance Found" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                  <stringProp name="-39280544">&lt;serviceId&gt;DATA&lt;/serviceId&gt;&lt;serviceName&gt;Data&lt;/serviceName&gt;</stringProp>
                  <stringProp name="-379044786">&lt;availBalance&gt;30.0&lt;/availBalance&gt;&lt;totalBalance&gt;30.0&lt;/totalBalance&gt;&lt;actualBalance&gt;30.0&lt;/actualBalance&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="TestPlan.comments">this asseriton will check that usage of 25 mb is reported or not</stringProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5003_CCR-I Gx" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-User-Location-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">0004F489008D3039</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">1</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">2</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpName.13">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.15">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.17">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">18</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Charging-Rule-Definition:Charging-Rule-Name:${pccrulenamehex}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5003_CCR-I Gy (Will GRU - 600 SEC)" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">40498</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">411111</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.4">1</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${__diamAVPValue(Charging-Rule-Install:Charging-Rule-Definition:Rating-Group,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${gysession}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">4</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.11">1</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpName.13">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.13">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Event-Timestamp</stringProp>
            <stringProp name="DiameterSampler.avpData.15">2015-10-15 16:14:38 +0530</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.19">2</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.20">0</stringProp>
            <stringProp name="DiameterSampler.avpName.21">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.21">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">4</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Granted-Service-Unit:CC-Time:600</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Balance (30 Rs)" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriptionService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetMonetaryBalance&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;serviceId&gt;&lt;/serviceId&gt;          
         &lt;serviceName&gt;&lt;/serviceName&gt;          
         &lt;parameter1&gt; &lt;/parameter1&gt;          
         &lt;parameter2&gt; &lt;/parameter2&gt;
      &lt;/sub:wsGetMonetaryBalance&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Usage found" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                <stringProp name="29779439">&lt;availBalance&gt;30.0&lt;/availBalance&gt;&lt;totalBalance&gt;30.0&lt;/totalBalance&gt;&lt;actualBalance&gt;20.0&lt;/actualBalance&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">this asseriton will check that usage of 25 mb is reported or not</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Usage found" enabled="true">
              <stringProp name="TestPlan.comments">this asseriton will check that usage of 25 mb is reported or not</stringProp>
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">//responseCode/text()=&apos;200&apos; and 
//responseMessage/text()=&apos;SUCCESS&apos; and
//monetaryBalanceData/availBalance/text()=&apos;30.0&apos; and
//monetaryBalanceData/totalBalance/text()=&apos;30.0&apos; and
//monetaryBalanceData/actualBalance/text()=&apos;20.0&apos;</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Get Session using Ws and DB" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </com.computaris.jmeter.ext.controls.ParameterizedController>
          <hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Subscriber&apos;s Gy Session" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SessionManagementService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ses=&quot;http://sessionmanagement.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;ses:wsGetSessionsBySubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;sessionType&gt;&lt;/sessionType&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/ses:wsGetSessionsBySubscriberIdentity&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <stringProp name="TestPlan.comments">Web Service Call to Get Session By Subscriberidentity</stringProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Get Session from DB" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">select CORE_SESSION_ID from TBLT_SESSION where SUBSCRIBER_IDENTITY = &apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-334637418">4111115003_gx:Gx</stringProp>
                  <stringProp name="-1191864298">4111115003_gy</stringProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">check if session id is present or not</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5003_CCR-U Gy (USU-720 SEC)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">40498</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">411111</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${gysession}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">4</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Time</stringProp>
            <stringProp name="DiameterSampler.avpData.21">720</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpName.23">Reporting-Reason</stringProp>
            <stringProp name="DiameterSampler.avpData.23">0</stringProp>
            <stringProp name="DiameterSampler.avpName.24">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.24">${__diamAVPValue(Multiple-Services-Credit-Control:Rating-Group,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.25">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.25">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">26</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">4</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Granted-Service-Unit:CC-Time:600</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Time-Quota-Threshold:2880</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Balance (18 Rs)" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriptionService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetMonetaryBalance&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;serviceId&gt;&lt;/serviceId&gt;          
         &lt;serviceName&gt;&lt;/serviceName&gt;          
         &lt;parameter1&gt; &lt;/parameter1&gt;          
         &lt;parameter2&gt; &lt;/parameter2&gt;
      &lt;/sub:wsGetMonetaryBalance&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Usage found" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                <stringProp name="1732948315">&lt;availBalance&gt;18.0&lt;/availBalance&gt;&lt;totalBalance&gt;30.0&lt;/totalBalance&gt;&lt;actualBalance&gt;8.0&lt;/actualBalance&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">this asseriton will check that usage of 25 mb is reported or not</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Usage found" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">//responseCode/text()=&apos;200&apos; and 
//responseMessage/text()=&apos;SUCCESS&apos; and
//monetaryBalanceData/availBalance/text()=&apos;18.0&apos; and
//monetaryBalanceData/totalBalance/text()=&apos;30.0&apos; and
//monetaryBalanceData/actualBalance/text()=&apos;8.0&apos;</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5003_CCR-T Gy (USU-480 SEC)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">40498</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">411111</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${gysession}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">4</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.10">3</stringProp>
            <stringProp name="DiameterSampler.avpName.11">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.11">4</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.12">2</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.15">3</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">1</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.17">${__diamAVPValue(Multiple-Services-Credit-Control:Rating-Group,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.18">1</stringProp>
            <stringProp name="DiameterSampler.avpName.19">CC-Time</stringProp>
            <stringProp name="DiameterSampler.avpData.19">${__diamAVPValue(Multiple-Services-Credit-Control:Granted-Service-Unit:CC-Time,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Termination-Cause</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.21">1</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.22">0</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5003_CCR-T Gx" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-User-Location-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">0004F489008D3039</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.3">0</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">3</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">3</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.11">2</stringProp>
            <stringProp name="DiameterSampler.avpName.12">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">0</stringProp>
            <stringProp name="DiameterSampler.avpName.13">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.13">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Called-Station-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">internet</stringProp>
            <stringProp name="DiameterSampler.avpCounter">15</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">200[12]</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">true</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Balance (8 Rs)" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriptionService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetMonetaryBalance&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;serviceId&gt;&lt;/serviceId&gt;          
         &lt;serviceName&gt;&lt;/serviceName&gt;          
         &lt;parameter1&gt; &lt;/parameter1&gt;          
         &lt;parameter2&gt; &lt;/parameter2&gt;
      &lt;/sub:wsGetMonetaryBalance&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Usage found" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                <stringProp name="1707391330">&lt;availBalance&gt;8.0&lt;/availBalance&gt;&lt;totalBalance&gt;30.0&lt;/totalBalance&gt;&lt;actualBalance&gt;8.0&lt;/actualBalance&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">this asseriton will check that usage of 25 mb is reported or not</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Usage found" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">//responseCode/text()=&apos;200&apos; and 
//responseMessage/text()=&apos;SUCCESS&apos; and
//monetaryBalanceData/availBalance/text()=&apos;8.0&apos; and
//monetaryBalanceData/totalBalance/text()=&apos;30.0&apos; and
//monetaryBalanceData/actualBalance/text()=&apos;8.0&apos;</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
              <stringProp name="TestPlan.comments">this asseriton will check that usage of 25 mb is reported or not</stringProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Post Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop pcap and logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="stop Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-720136512">Stop Pcap</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop NV log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-632654166">Stop NV log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop PD log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-592019242">Stop PD log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="End of RTC_5003" enabled="true"/>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Module Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Gx+Gy-RTC_5004" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">RTC_5004 | Gx+Gy | Volume | Verify Basic Call flow for Data Plan with configured Different Rate Unit and Different Pulse Unit</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Gx+Gy-RTC_5004" enabled="true">
          <stringProp name="TestPlan.comments">RTC_5004 | Gx+Gy | Volume | Verify Basic Call flow for Data Plan with configured Different Rate Unit and Different Pulse Unit</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriberidentity" elementType="Argument">
                <stringProp name="Argument.name">subscriberidentity</stringProp>
                <stringProp name="Argument.value">4111115004</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">4111115004</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">4111115004</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">4111115004</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage" elementType="Argument">
                <stringProp name="Argument.name">datapackage</stringProp>
                <stringProp name="Argument.value">RTC_5004_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">4111115004</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapfilename" elementType="Argument">
                <stringProp name="Argument.name">pcapfilename</stringProp>
                <stringProp name="Argument.value">RTC_5004</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="logfilename" elementType="Argument">
                <stringProp name="Argument.name">logfilename</stringProp>
                <stringProp name="Argument.value">RTC_5004_Log</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sessionid" elementType="Argument">
                <stringProp name="Argument.name">sessionid</stringProp>
                <stringProp name="Argument.value">4111115004_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">Gx+Gy-RTC_5004</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pccrulename" elementType="Argument">
                <stringProp name="Argument.name">pccrulename</stringProp>
                <stringProp name="Argument.value">RTC_5004_CARD_PCC_RULE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pccrulenamehex" elementType="Argument">
                <stringProp name="Argument.name">pccrulenamehex</stringProp>
                <stringProp name="Argument.value">5254435f353030345f434152445f5043435f52554c45</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">29163</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gysession" elementType="Argument">
                <stringProp name="Argument.name">gysession</stringProp>
                <stringProp name="Argument.value">4111115004_gy</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer" elementType="Argument">
                <stringProp name="Argument.name">productoffer</stringProp>
                <stringProp name="Argument.value">RTC_5004_PRODUCT_OFFER</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage_id" elementType="Argument">
                <stringProp name="Argument.name">datapackage_id</stringProp>
                <stringProp name="Argument.value">RTC_5004_BASE_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer_id" elementType="Argument">
                <stringProp name="Argument.name">productoffer_id</stringProp>
                <stringProp name="Argument.value">RTC_5004_PO_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start of RTC_5004" enabled="true"/>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true); 
f = new FileOutputStream(mapping_file_name, true); 
p = new PrintStream(f); 

// Write data to file 

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Pre Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Pcap and Logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872118812">Capture PCAP</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872996374">Capture log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture PD Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="1033451790">Capture PD log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create DataPackage" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;RTC_5004_BASE_111111111&lt;/id&gt;&#xd;
            &lt;name&gt;RTC_5004_BASE&lt;/name&gt;&#xd;
            &lt;description&gt;Created by Jmeter&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriod&gt;30&lt;/validityPeriod&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;RnC_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by Jmeter&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_5004_QOS&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;2&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;2&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;2&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;2&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;2&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;RTC_5004_CARD_PCC_RULE&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;RTC_5004_CARD_PCC_RULE&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;2&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;2&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;rate-card-id&gt;&lt;/rate-card-id&gt;&#xd;
                    &lt;rate-card-name&gt;RTC_5004_RATE_CARD&lt;/rate-card-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
            &lt;rate-cards&gt;&#xd;
                &lt;rate-card&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;data-rate-card-versions&gt;&#xd;
                        &lt;data-rate-card-version&gt;&#xd;
                            &lt;data-rate-card-version-details&gt;&#xd;
                                &lt;data-rate-card-version-detail&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;label-key-1&gt;Japan&lt;/label-key-1&gt;&#xd;
                                    &lt;label-key-2&gt;India&lt;/label-key-2&gt;&#xd;
                                    &lt;pulse-1&gt;1000&lt;/pulse-1&gt;&#xd;
                                    &lt;rate-1&gt;1&lt;/rate-1&gt;&#xd;
                                    &lt;rate-type&gt;FLAT&lt;/rate-type&gt;&#xd;
                                &lt;/data-rate-card-version-detail&gt;&#xd;
                            &lt;/data-rate-card-version-details&gt;&#xd;
                            &lt;effective-from-date&gt;1524551974073&lt;/effective-from-date&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;version-name&gt;1&lt;/version-name&gt;&#xd;
                        &lt;/data-rate-card-version&gt;&#xd;
                    &lt;/data-rate-card-versions&gt;&#xd;
                    &lt;description&gt;Created by Jmeter&lt;/description&gt;&#xd;
                    &lt;label-key-1&gt;Sub.NetworkCountry&lt;/label-key-1&gt;&#xd;
                    &lt;label-key-2&gt;Opr.NetworkCountry&lt;/label-key-2&gt;&#xd;
                    &lt;name&gt;RTC_5004_RATE_CARD&lt;/name&gt;&#xd;
                    &lt;pkgId&gt;&lt;/pkgId&gt;&#xd;
                    &lt;pulse-unit&gt;MB&lt;/pulse-unit&gt;&#xd;
                    &lt;rate-unit&gt;GB&lt;/rate-unit&gt;&#xd;
                &lt;/rate-card&gt;&#xd;
            &lt;/rate-cards&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/xml</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Offer" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${productoffer_id}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${productoffer}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin on 05/23/2018 10:12:03&quot;,&#xd;
   &quot;type&quot;:&quot;BASE&quot;,&#xd;
   &quot;currency&quot;:&quot;${currency}&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${datapackage_id}&quot;,&#xd;
   &quot;validityPeriod&quot;:null,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Offer" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}.json</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To TEST Mode" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=TEST</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To LIVE Mode" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=LIVE</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Subscriber Provisioning Request" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsAddSubscriberProfile&gt;
         &lt;!--Optional:--&gt;
        &lt;subscriberProfile&gt;
               &lt;entry&gt;
                  &lt;key&gt;SUBSCRIBER_IDENTITY&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;USERNAME&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUSTOMER_TYPE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;STATUS&lt;/key&gt;
                  &lt;value&gt;Active&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMS_PACKAGE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EXPIRY_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;AREA&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CITY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM1&lt;/key&gt;
                  &lt;value&gt;24124&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM2&lt;/key&gt;
                  &lt;value&gt;abcd&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM3&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM4&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM5&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ZONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COUNTRY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;BIRTH_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ROLE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COMPANY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;DEPARTMENT&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ARPU&lt;/key&gt;
                  &lt;value&gt;0&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CADRE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EMAIL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PHONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;SIP_URL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUI&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMSI&lt;/key&gt;
                 &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;MSISDN&lt;/key&gt;
                 &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PRODUCT_OFFER&lt;/key&gt;
                 &lt;value&gt;${productoffer}&lt;/value&gt;
               &lt;/entry&gt;
            &lt;/subscriberProfile&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsAddSubscriberProfile&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Add 12 Rs Monetory Balance" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriptionService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsAddMonetaryBalance&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;serviceId&gt;DATA&lt;/serviceId&gt;
         &lt;!--Optional:--&gt;
         &lt;serviceName&gt;&lt;/serviceName&gt;
         &lt;!--Optional:--&gt;
         &lt;totalBalance&gt;12&lt;/totalBalance&gt;
         &lt;!--Optional:--&gt;
         &lt;validFromDate&gt;${__longSum(${__time(,)},-6000,)}&lt;/validFromDate&gt;
         &lt;!--Optional:--&gt;
         &lt;validToDate&gt;${__longSum(${__time(,)},+600000,)}&lt;/validToDate&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsAddMonetaryBalance&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Balance Found" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                  <stringProp name="-39280544">&lt;serviceId&gt;DATA&lt;/serviceId&gt;&lt;serviceName&gt;Data&lt;/serviceName&gt;</stringProp>
                  <stringProp name="1240210322">&lt;availBalance&gt;12.0&lt;/availBalance&gt;&lt;totalBalance&gt;12.0&lt;/totalBalance&gt;&lt;actualBalance&gt;12.0&lt;/actualBalance&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="TestPlan.comments">this asseriton will check that usage of 25 mb is reported or not</stringProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5004_CCR-I Gx" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-User-Location-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">0004F489008D3039</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">1</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">2</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpName.13">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.15">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.17">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">18</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Charging-Rule-Definition:Charging-Rule-Name:${pccrulenamehex}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5004_CCR-I Gy (GSU-400 MB)" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">40498</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">411111</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.4">1</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${__diamAVPValue(Charging-Rule-Install:Charging-Rule-Definition:Rating-Group,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${gysession}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">4</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.11">1</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpName.13">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.13">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Event-Timestamp</stringProp>
            <stringProp name="DiameterSampler.avpData.15">2015-10-15 16:14:38 +0530</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.19">2</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.20">0</stringProp>
            <stringProp name="DiameterSampler.avpName.21">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.21">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">4</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Total-Octets:419430400</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Balance (12 Rs)" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriptionService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetMonetaryBalance&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;serviceId&gt;&lt;/serviceId&gt;          
         &lt;serviceName&gt;&lt;/serviceName&gt;          
         &lt;parameter1&gt; &lt;/parameter1&gt;          
         &lt;parameter2&gt; &lt;/parameter2&gt;
      &lt;/sub:wsGetMonetaryBalance&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Usage found" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                <stringProp name="612058071">&lt;availBalance&gt;12.0&lt;/availBalance&gt;&lt;totalBalance&gt;12.0&lt;/totalBalance&gt;&lt;actualBalance&gt;11.609375&lt;/actualBalance&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">this asseriton will check that usage of 25 mb is reported or not</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Usage found" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">//responseCode/text()=&apos;200&apos; and 
//responseMessage/text()=&apos;SUCCESS&apos; and
//monetaryBalanceData/availBalance/text()=&apos;12.0&apos; and
//monetaryBalanceData/totalBalance/text()=&apos;12.0&apos; and
//monetaryBalanceData/actualBalance/text()=&apos;11.609375&apos;</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
              <stringProp name="TestPlan.comments">this asseriton will check that usage of 25 mb is reported or not</stringProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Get Session using Ws and DB" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </com.computaris.jmeter.ext.controls.ParameterizedController>
          <hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Subscriber&apos;s Gy Session" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SessionManagementService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ses=&quot;http://sessionmanagement.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;ses:wsGetSessionsBySubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;sessionType&gt;&lt;/sessionType&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/ses:wsGetSessionsBySubscriberIdentity&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <stringProp name="TestPlan.comments">Web Service Call to Get Session By Subscriberidentity</stringProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Get Session from DB" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">select CORE_SESSION_ID from TBLT_SESSION where SUBSCRIBER_IDENTITY = &apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1151354728">${sessionid}:Gx</stringProp>
                  <stringProp name="-1059810020">${gysession}:Gy</stringProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">check if session id is present or not</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5004_CCR-U Gy (USU-10000 MB)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">40498</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">411111</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${gysession}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">4</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">Reporting-Reason</stringProp>
            <stringProp name="DiameterSampler.avpData.21">0</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.22">${__diamAVPValue(Multiple-Services-Credit-Control:Rating-Group,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.23">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.23">1</stringProp>
            <stringProp name="DiameterSampler.avpName.24">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.24">10485760000</stringProp>
            <stringProp name="DiameterSampler.avpName.25">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.25">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">26</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">4</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Total-Octets:419430400</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Balance (2 Rs)" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriptionService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetMonetaryBalance&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;serviceId&gt;&lt;/serviceId&gt;          
         &lt;serviceName&gt;&lt;/serviceName&gt;          
         &lt;parameter1&gt; &lt;/parameter1&gt;          
         &lt;parameter2&gt; &lt;/parameter2&gt;
      &lt;/sub:wsGetMonetaryBalance&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Usage found" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                <stringProp name="-45739738">&lt;availBalance&gt;2.234375&lt;/availBalance&gt;&lt;totalBalance&gt;12.0&lt;/totalBalance&gt;&lt;actualBalance&gt;1.84375&lt;/actualBalance&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">this asseriton will check that usage of 25 mb is reported or not</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Usage found" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">//responseCode/text()=&apos;200&apos; and 
//responseMessage/text()=&apos;SUCCESS&apos; and
//monetaryBalanceData/availBalance/text()=&apos;2.234375&apos; and
//monetaryBalanceData/totalBalance/text()=&apos;12.0&apos; and
//monetaryBalanceData/actualBalance/text()=&apos;1.84375&apos;</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
              <stringProp name="TestPlan.comments">this asseriton will check that usage of 25 mb is reported or not</stringProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5004_CCR-T Gy (USU-2223 MB)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">40498</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">411111</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${gysession}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">4</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.10">3</stringProp>
            <stringProp name="DiameterSampler.avpName.11">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.11">5</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.12">2</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.15">2</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">1</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1</stringProp>
            <stringProp name="DiameterSampler.avpName.18">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.18">2330168888</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Termination-Cause</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.21">0</stringProp>
            <stringProp name="DiameterSampler.avpCounter">22</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Balance (0 Rs)" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriptionService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetMonetaryBalance&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;serviceId&gt;&lt;/serviceId&gt;          
         &lt;serviceName&gt;&lt;/serviceName&gt;          
         &lt;parameter1&gt; &lt;/parameter1&gt;          
         &lt;parameter2&gt; &lt;/parameter2&gt;
      &lt;/sub:wsGetMonetaryBalance&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Usage found" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                <stringProp name="-27838330">&lt;availBalance&gt;-0.695313&lt;/availBalance&gt;&lt;totalBalance&gt;12.0&lt;/totalBalance&gt;&lt;actualBalance&gt;-0.695313&lt;/actualBalance&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">this asseriton will check that usage of 25 mb is reported or not</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Usage found" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">//responseCode/text()=&apos;200&apos; and 
//responseMessage/text()=&apos;SUCCESS&apos; and
//monetaryBalanceData/availBalance/text()=&apos;-0.695313&apos; and
//monetaryBalanceData/totalBalance/text()=&apos;12.0&apos; and
//monetaryBalanceData/actualBalance/text()=&apos;-0.695313&apos;</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
              <stringProp name="TestPlan.comments">this asseriton will check that usage of 25 mb is reported or not</stringProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5004_CCR-T Gx" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-User-Location-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">0004F489008D3039</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.3">0</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">3</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">3</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.11">2</stringProp>
            <stringProp name="DiameterSampler.avpName.12">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">0</stringProp>
            <stringProp name="DiameterSampler.avpName.13">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.13">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Called-Station-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">internet</stringProp>
            <stringProp name="DiameterSampler.avpCounter">15</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">200[12]</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">true</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Subscriber&apos;s Session" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SessionManagementService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ses=&quot;http://sessionmanagement.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;ses:wsGetSessionsBySubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;sessionType&gt;&lt;/sessionType&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/ses:wsGetSessionsBySubscriberIdentity&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <stringProp name="TestPlan.comments">Subscriber&apos;s Session should not be fetched</stringProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2101284903">&lt;responseCode&gt;404&lt;/responseCode&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5004_CCR-I Gx (5003 Result)" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-User-Location-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">0004F489008D3039</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">1</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">2</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpName.13">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.15">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.17">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">18</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">5003</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Post Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop pcap and logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="stop Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-720136512">Stop Pcap</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop NV log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-632654166">Stop NV log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop PD log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-592019242">Stop PD log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="End of RTC_5004" enabled="true"/>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Module Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Gx+Gy-RTC_5005" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">RTC_5005 | Gx+Gy | Time | Verify Basic Call flow for Data Plan with configured Different Rate Unit and Different Pulse Unit</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Gx+Gy-RTC_5005" enabled="true">
          <stringProp name="TestPlan.comments">RTC_5005 | Gx+Gy | Time | Verify Basic Call flow for Data Plan with configured Different Rate Unit and Different Pulse Unit</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriberidentity" elementType="Argument">
                <stringProp name="Argument.name">subscriberidentity</stringProp>
                <stringProp name="Argument.value">4111115005</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">4111115005</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">4111115005</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">4111115005</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage" elementType="Argument">
                <stringProp name="Argument.name">datapackage</stringProp>
                <stringProp name="Argument.value">RTC_5005_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">4111115005</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapfilename" elementType="Argument">
                <stringProp name="Argument.name">pcapfilename</stringProp>
                <stringProp name="Argument.value">RTC_5005</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="logfilename" elementType="Argument">
                <stringProp name="Argument.name">logfilename</stringProp>
                <stringProp name="Argument.value">RTC_5005_Log</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sessionid" elementType="Argument">
                <stringProp name="Argument.name">sessionid</stringProp>
                <stringProp name="Argument.value">4111115005_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">Gx+Gy-RTC_5005</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pccrulename" elementType="Argument">
                <stringProp name="Argument.name">pccrulename</stringProp>
                <stringProp name="Argument.value">RTC_5005_CARD_PCC_RULE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pccrulenamehex" elementType="Argument">
                <stringProp name="Argument.name">pccrulenamehex</stringProp>
                <stringProp name="Argument.value">5254435f353030355f434152445f5043435f52554c45</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">29164</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gysession" elementType="Argument">
                <stringProp name="Argument.name">gysession</stringProp>
                <stringProp name="Argument.value">4111115005_gy</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer" elementType="Argument">
                <stringProp name="Argument.name">productoffer</stringProp>
                <stringProp name="Argument.value">RTC_5005_PRODUCT_OFFER</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage_id" elementType="Argument">
                <stringProp name="Argument.name">datapackage_id</stringProp>
                <stringProp name="Argument.value">85f923fd-0035-402f-9145-9ed9df4038da</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer_id" elementType="Argument">
                <stringProp name="Argument.name">productoffer_id</stringProp>
                <stringProp name="Argument.value">RTC_5005_PO_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start of RTC_5005" enabled="true"/>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true); 
f = new FileOutputStream(mapping_file_name, true); 
p = new PrintStream(f); 

// Write data to file 

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Pre Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Pcap and Logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872118812">Capture PCAP</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872996374">Capture log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture PD Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="1033451790">Capture PD log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create DataPackage" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;85f923fd-0035-402f-9145-9ed9df4038da&lt;/id&gt;&#xd;
            &lt;name&gt;RTC_5005_BASE&lt;/name&gt;&#xd;
            &lt;description&gt;Created by Jmeter&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriod&gt;30&lt;/validityPeriod&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;RnC_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;84c74dd9-b0ba-4a06-8c70-879fed727c56&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by Jmeter&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_5005_QOS&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;2&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;2&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;2&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;045f994b-079b-4d34-bb44-c2cc8ac58252&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;a7c055ad-e36c-48bf-b42e-740e9286d81e&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;RTC_5005_CARD_PCC_RULE&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;RTC_5005_CARD_PCC_RULE&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;gbrdlUnit&gt;Kbps&lt;/gbrdlUnit&gt;&#xd;
                                    &lt;mbrdl&gt;2&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;2&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;8b0369d5-08eb-4af0-a810-4571d189b881&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;126767ce-c3a9-4ae0-bce9-fc987acffdf4&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;rate-card-id&gt;d54931e4-760c-4018-b38a-9d392a929f88&lt;/rate-card-id&gt;&#xd;
                    &lt;rate-card-name&gt;RTC_5005_RATE_CARD&lt;/rate-card-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
            &lt;rate-cards&gt;&#xd;
                &lt;rate-card&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;d54931e4-760c-4018-b38a-9d392a929f88&lt;/id&gt;&#xd;
                    &lt;data-rate-card-versions&gt;&#xd;
                        &lt;data-rate-card-version&gt;&#xd;
                            &lt;data-rate-card-version-details&gt;&#xd;
                                &lt;data-rate-card-version-detail&gt;&#xd;
                                    &lt;id&gt;c1657e89-31ca-4efc-bc86-a933ed2366a2&lt;/id&gt;&#xd;
                                    &lt;label-key-1&gt;Japan&lt;/label-key-1&gt;&#xd;
                                    &lt;label-key-2&gt;India&lt;/label-key-2&gt;&#xd;
                                    &lt;pulse-1&gt;60&lt;/pulse-1&gt;&#xd;
                                    &lt;rate-1&gt;2&lt;/rate-1&gt;&#xd;
                                    &lt;rate-type&gt;FLAT&lt;/rate-type&gt;&#xd;
                                &lt;/data-rate-card-version-detail&gt;&#xd;
                            &lt;/data-rate-card-version-details&gt;&#xd;
                            &lt;effective-from-date&gt;1524551974073&lt;/effective-from-date&gt;&#xd;
                            &lt;id&gt;96797637-643f-4e48-804c-78b16ef2119f&lt;/id&gt;&#xd;
                            &lt;version-name&gt;1&lt;/version-name&gt;&#xd;
                        &lt;/data-rate-card-version&gt;&#xd;
                    &lt;/data-rate-card-versions&gt;&#xd;
                    &lt;description&gt;Created by Jmeter&lt;/description&gt;&#xd;
                    &lt;label-key-1&gt;Sub.NetworkCountry&lt;/label-key-1&gt;&#xd;
                    &lt;label-key-2&gt;Opr.NetworkCountry&lt;/label-key-2&gt;&#xd;
                    &lt;name&gt;RTC_5005_RATE_CARD&lt;/name&gt;&#xd;
                    &lt;pkgId&gt;85f923fd-0035-402f-9145-9ed9df4038da&lt;/pkgId&gt;&#xd;
                    &lt;pulse-unit&gt;MINUTE&lt;/pulse-unit&gt;&#xd;
                    &lt;rate-unit&gt;HOUR&lt;/rate-unit&gt;&#xd;
                &lt;/rate-card&gt;&#xd;
            &lt;/rate-cards&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/xml</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Offer" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${productoffer_id}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${productoffer}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin on 05/23/2018 10:12:03&quot;,&#xd;
   &quot;type&quot;:&quot;BASE&quot;,&#xd;
   &quot;currency&quot;:&quot;${currency}&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${datapackage_id}&quot;,&#xd;
   &quot;validityPeriod&quot;:null,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Offer" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}.json</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To TEST Mode" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=TEST</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To LIVE Mode" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=LIVE</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Subscriber Provisioning Request" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsAddSubscriberProfile&gt;
         &lt;!--Optional:--&gt;
        &lt;subscriberProfile&gt;
               &lt;entry&gt;
                  &lt;key&gt;SUBSCRIBER_IDENTITY&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;USERNAME&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUSTOMER_TYPE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;STATUS&lt;/key&gt;
                  &lt;value&gt;Active&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMS_PACKAGE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EXPIRY_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;AREA&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CITY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM1&lt;/key&gt;
                  &lt;value&gt;24124&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM2&lt;/key&gt;
                  &lt;value&gt;abcd&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM3&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM4&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM5&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ZONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COUNTRY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;BIRTH_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ROLE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COMPANY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;DEPARTMENT&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ARPU&lt;/key&gt;
                  &lt;value&gt;0&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CADRE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EMAIL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PHONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;SIP_URL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUI&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMSI&lt;/key&gt;
                 &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;MSISDN&lt;/key&gt;
                 &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PRODUCT_OFFER&lt;/key&gt;
                 &lt;value&gt;${productoffer}&lt;/value&gt;
               &lt;/entry&gt;
            &lt;/subscriberProfile&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsAddSubscriberProfile&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Add 40 Rs Monetory Balance" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriptionService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsAddMonetaryBalance&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;serviceId&gt;DATA&lt;/serviceId&gt;
         &lt;!--Optional:--&gt;
         &lt;serviceName&gt;&lt;/serviceName&gt;
         &lt;!--Optional:--&gt;
         &lt;totalBalance&gt;40&lt;/totalBalance&gt;
         &lt;!--Optional:--&gt;
         &lt;validFromDate&gt;${__longSum(${__time(,)},-6000,)}&lt;/validFromDate&gt;
         &lt;!--Optional:--&gt;
         &lt;validToDate&gt;${__longSum(${__time(,)},+600000,)}&lt;/validToDate&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsAddMonetaryBalance&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Balance Found" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                  <stringProp name="-39280544">&lt;serviceId&gt;DATA&lt;/serviceId&gt;&lt;serviceName&gt;Data&lt;/serviceName&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="TestPlan.comments">this asseriton will check that usage of 25 mb is reported or not</stringProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5005_CCR-I Gx" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-User-Location-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">0004F489008D3039</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">1</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">2</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpName.13">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.15">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.17">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">18</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Charging-Rule-Definition:Charging-Rule-Name:${pccrulenamehex}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5005_CCR-I Gy (Will GRU - 3600 SEC)" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">40498</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">411111</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.4">1</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${__diamAVPValue(Charging-Rule-Install:Charging-Rule-Definition:Rating-Group,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${gysession}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">4</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.11">1</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpName.13">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.13">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Event-Timestamp</stringProp>
            <stringProp name="DiameterSampler.avpData.15">2015-10-15 16:14:38 +0530</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.19">2</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.20">0</stringProp>
            <stringProp name="DiameterSampler.avpName.21">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.21">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">4</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Granted-Service-Unit:CC-Time:3600</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Balance (40 Rs)" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriptionService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetMonetaryBalance&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;serviceId&gt;&lt;/serviceId&gt;          
         &lt;serviceName&gt;&lt;/serviceName&gt;          
         &lt;parameter1&gt; &lt;/parameter1&gt;          
         &lt;parameter2&gt; &lt;/parameter2&gt;
      &lt;/sub:wsGetMonetaryBalance&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Usage found" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                <stringProp name="-547497418">&lt;availBalance&gt;40.0&lt;/availBalance&gt;&lt;totalBalance&gt;40.0&lt;/totalBalance&gt;&lt;actualBalance&gt;38.0&lt;/actualBalance&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">this asseriton will check that usage of 25 mb is reported or not</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Usage found" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">//responseCode/text()=&apos;200&apos; and 
//responseMessage/text()=&apos;SUCCESS&apos; and
//monetaryBalanceData/availBalance/text()=&apos;40.0&apos; and
//monetaryBalanceData/totalBalance/text()=&apos;40.0&apos; and
//monetaryBalanceData/actualBalance/text()=&apos;38.0&apos;</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Get Session using Ws and DB" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </com.computaris.jmeter.ext.controls.ParameterizedController>
          <hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Subscriber&apos;s Gy Session" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SessionManagementService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ses=&quot;http://sessionmanagement.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;ses:wsGetSessionsBySubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;sessionType&gt;&lt;/sessionType&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/ses:wsGetSessionsBySubscriberIdentity&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <stringProp name="TestPlan.comments">Web Service Call to Get Session By Subscriberidentity</stringProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Get Session from DB" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">select CORE_SESSION_ID from TBLT_SESSION where SUBSCRIBER_IDENTITY = &apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1440369944">4111115005_gx:Gx</stringProp>
                  <stringProp name="1440399736">4111115005_gy:Gy</stringProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">check if session id is present or not</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5005_CCR-U Gy (USU- 38000 SEC)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">40498</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">411111</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${gysession}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">4</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Time</stringProp>
            <stringProp name="DiameterSampler.avpData.21">38000</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpName.23">Reporting-Reason</stringProp>
            <stringProp name="DiameterSampler.avpData.23">0</stringProp>
            <stringProp name="DiameterSampler.avpName.24">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.24">${__diamAVPValue(Multiple-Services-Credit-Control:Rating-Group,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.25">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.25">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">26</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">3</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Time-Quota-Threshold:2880</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Balance (20 Rs)" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriptionService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetMonetaryBalance&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;serviceId&gt;&lt;/serviceId&gt;          
         &lt;serviceName&gt;&lt;/serviceName&gt;          
         &lt;parameter1&gt; &lt;/parameter1&gt;          
         &lt;parameter2&gt; &lt;/parameter2&gt;
      &lt;/sub:wsGetMonetaryBalance&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Usage found" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                <stringProp name="856427254">&lt;availBalance&gt;20.0&lt;/availBalance&gt;&lt;totalBalance&gt;40.0&lt;/totalBalance&gt;&lt;actualBalance&gt;18.0&lt;/actualBalance&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">this asseriton will check that usage of 25 mb is reported or not</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Usage found" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">//responseCode/text()=&apos;200&apos; and 
//responseMessage/text()=&apos;SUCCESS&apos; and
//monetaryBalanceData/availBalance/text()=&apos;20.0&apos; and
//monetaryBalanceData/totalBalance/text()=&apos;40.0&apos; and
//monetaryBalanceData/actualBalance/text()=&apos;18.0&apos;</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5005_CCR-T Gy (USU- 36000 SEC)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">40498</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">411111</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${gysession}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">4</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.10">3</stringProp>
            <stringProp name="DiameterSampler.avpName.11">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.11">4</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.12">2</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.15">3</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">1</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.17">${__diamAVPValue(Multiple-Services-Credit-Control:Rating-Group,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.18">1</stringProp>
            <stringProp name="DiameterSampler.avpName.19">CC-Time</stringProp>
            <stringProp name="DiameterSampler.avpData.19">36000</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Termination-Cause</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.21">1</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.22">0</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5005_CCR-T Gx" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-User-Location-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">0004F489008D3039</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.3">0</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">3</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">3</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.11">2</stringProp>
            <stringProp name="DiameterSampler.avpName.12">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">0</stringProp>
            <stringProp name="DiameterSampler.avpName.13">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.13">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Called-Station-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">internet</stringProp>
            <stringProp name="DiameterSampler.avpCounter">15</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">200[12]</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">true</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Subscriber&apos;s Session" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SessionManagementService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ses=&quot;http://sessionmanagement.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;ses:wsGetSessionsBySubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;sessionType&gt;&lt;/sessionType&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/ses:wsGetSessionsBySubscriberIdentity&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <stringProp name="TestPlan.comments">Subscriber&apos;s Session should not be fetched</stringProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2101284903">&lt;responseCode&gt;404&lt;/responseCode&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Balance (0 Rs)" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriptionService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetMonetaryBalance&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;serviceId&gt;&lt;/serviceId&gt;          
         &lt;serviceName&gt;&lt;/serviceName&gt;          
         &lt;parameter1&gt; &lt;/parameter1&gt;          
         &lt;parameter2&gt; &lt;/parameter2&gt;
      &lt;/sub:wsGetMonetaryBalance&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Usage found" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                <stringProp name="623220205">&lt;availBalance&gt;-2.0&lt;/availBalance&gt;&lt;totalBalance&gt;40.0&lt;/totalBalance&gt;&lt;actualBalance&gt;-2.0&lt;/actualBalance&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">this asseriton will check that usage of 25 mb is reported or not</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Usage found" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">//responseCode/text()=&apos;200&apos; and 
//responseMessage/text()=&apos;SUCCESS&apos; and
//monetaryBalanceData/availBalance/text()=&apos;-2.0&apos; and
//monetaryBalanceData/totalBalance/text()=&apos;40.0&apos; and
//monetaryBalanceData/actualBalance/text()=&apos;-2.0&apos;</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5005_CCR-I Gx" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-User-Location-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">0004F489008D3039</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">1</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">2</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpName.13">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.15">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.17">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">18</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="false">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">5003</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Post Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop pcap and logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="stop Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-720136512">Stop Pcap</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop NV log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-632654166">Stop NV log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop PD log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-592019242">Stop PD log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="End of RTC_5005" enabled="true"/>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Module Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Gx+Gy-RTC_5006" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">RTC_5006 | Gx+Gy | Time | Verify concurrency using Data Plan with configured Rate and Pulse</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Gx+Gy-RTC_5006" enabled="true">
          <stringProp name="TestPlan.comments">RTC_5006 | Gx+Gy | Time | Verify concurrency using Data Plan with configured Rate and Pulse</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriberidentity" elementType="Argument">
                <stringProp name="Argument.name">subscriberidentity</stringProp>
                <stringProp name="Argument.value">4111115006</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">4111115006</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">4111115006</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">4111115006</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage" elementType="Argument">
                <stringProp name="Argument.name">datapackage</stringProp>
                <stringProp name="Argument.value">RTC_5006_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">4111115006</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapfilename" elementType="Argument">
                <stringProp name="Argument.name">pcapfilename</stringProp>
                <stringProp name="Argument.value">RTC_5006</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="logfilename" elementType="Argument">
                <stringProp name="Argument.name">logfilename</stringProp>
                <stringProp name="Argument.value">RTC_5006_Log</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sessionid" elementType="Argument">
                <stringProp name="Argument.name">sessionid</stringProp>
                <stringProp name="Argument.value">4111115006_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">Gx+Gy-RTC_5006</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pccrulename" elementType="Argument">
                <stringProp name="Argument.name">pccrulename</stringProp>
                <stringProp name="Argument.value">RTC_5006_CARD_PCC_RULE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pccrulenamehex" elementType="Argument">
                <stringProp name="Argument.name">pccrulenamehex</stringProp>
                <stringProp name="Argument.value">5254435f353030365f434152445f5043435f52554c45</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">29165</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="gysession" elementType="Argument">
                <stringProp name="Argument.name">gysession</stringProp>
                <stringProp name="Argument.value">4111115006_gy</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer" elementType="Argument">
                <stringProp name="Argument.name">productoffer</stringProp>
                <stringProp name="Argument.value">RTC_5006_PRODUCT_OFFER</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage_id" elementType="Argument">
                <stringProp name="Argument.name">datapackage_id</stringProp>
                <stringProp name="Argument.value">RTC_5006_BASE_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer_id" elementType="Argument">
                <stringProp name="Argument.name">productoffer_id</stringProp>
                <stringProp name="Argument.value">RTC_5006_PO_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start of RTC_5006" enabled="true"/>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true); 
f = new FileOutputStream(mapping_file_name, true); 
p = new PrintStream(f); 

// Write data to file 

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Cleanup" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Change product offer to test" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">update TBLM_PRODUCT_OFFER set PACKAGE_MODE = &apos;TEST&apos; where ID in (&apos;${productoffer_id}&apos;)
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Base Product Offer" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url_without_ext}/${productoffer_id}.json</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Change package status to test" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">UPDATE TBLM_PACKAGE SET STATUS=&apos;TEST&apos; where ID IN (&apos;${datapackage_id}&apos;)
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Base Product Offer" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url_without_ext}/${productoffer_id}.json</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete Balance" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLM_DATA_BALANCE WHERE SUBSCRIBER_ID=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete Monetary Balance" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLM_MONETARY_BALANCE WHERE SUBSCRIBER_ID=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Deleter Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsDeleteSubscriberProfile&gt;&#xd;
         &lt;subscriberID&gt;${subscriberidentity}&lt;/subscriberID&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsDeleteSubscriberProfile&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscriber_service}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Purge Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsPurgeSubscriber&gt;&#xd;
         &lt;subscriberID&gt;${subscriberidentity}&lt;/subscriberID&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;param1&gt;&lt;/param1&gt;&#xd;
         &lt;param2&gt;&lt;/param2&gt;&#xd;
      &lt;/sub:wsPurgeSubscriber&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscriber_service}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Pre Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Pcap and Logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872118812">Capture PCAP</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872996374">Capture log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture PD Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="1033451790">Capture PD log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create DataPackage" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;RTC_5006_BASE_111111111&lt;/id&gt;&#xd;
            &lt;name&gt;RTC_5006_BASE&lt;/name&gt;&#xd;
            &lt;description&gt;Created by Jmeter&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriod&gt;30&lt;/validityPeriod&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;RnC_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by Jmeter&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_5006_QOS&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;2&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;2&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;2&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;RTC_5006_CARD_PCC_RULE&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;RTC_5006_CARD_PCC_RULE&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;2&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;2&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;rate-card-id&gt;&lt;/rate-card-id&gt;&#xd;
                    &lt;rate-card-name&gt;RTC_5006_RATE_CARD&lt;/rate-card-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
            &lt;rate-cards&gt;&#xd;
                &lt;rate-card&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;data-rate-card-versions&gt;&#xd;
                        &lt;data-rate-card-version&gt;&#xd;
                            &lt;data-rate-card-version-details&gt;&#xd;
                                &lt;data-rate-card-version-detail&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;label-key-1&gt;Japan&lt;/label-key-1&gt;&#xd;
                                    &lt;label-key-2&gt;India&lt;/label-key-2&gt;&#xd;
                                    &lt;pulse-1&gt;1&lt;/pulse-1&gt;&#xd;
                                    &lt;rate-1&gt;1&lt;/rate-1&gt;&#xd;
                                    &lt;rate-type&gt;FLAT&lt;/rate-type&gt;&#xd;
                                &lt;/data-rate-card-version-detail&gt;&#xd;
                            &lt;/data-rate-card-version-details&gt;&#xd;
                            &lt;effective-from-date&gt;1524551974073&lt;/effective-from-date&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;version-name&gt;1&lt;/version-name&gt;&#xd;
                        &lt;/data-rate-card-version&gt;&#xd;
                    &lt;/data-rate-card-versions&gt;&#xd;
                    &lt;description&gt;Created by Jmeter&lt;/description&gt;&#xd;
                    &lt;label-key-1&gt;Sub.NetworkCountry&lt;/label-key-1&gt;&#xd;
                    &lt;label-key-2&gt;Opr.NetworkCountry&lt;/label-key-2&gt;&#xd;
                    &lt;name&gt;RTC_5006_RATE_CARD&lt;/name&gt;&#xd;
                    &lt;pkgId&gt;&lt;/pkgId&gt;&#xd;
                    &lt;pulse-unit&gt;MINUTE&lt;/pulse-unit&gt;&#xd;
                    &lt;rate-unit&gt;MINUTE&lt;/rate-unit&gt;&#xd;
                &lt;/rate-card&gt;&#xd;
            &lt;/rate-cards&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/xml</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Offer" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${productoffer_id}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${productoffer}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin on 05/23/2018 10:12:03&quot;,&#xd;
   &quot;type&quot;:&quot;BASE&quot;,&#xd;
   &quot;currency&quot;:&quot;${currency}&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${datapackage_id}&quot;,&#xd;
   &quot;validityPeriod&quot;:null,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Offer" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}.json</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To TEST Mode" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=TEST</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To LIVE Mode" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=LIVE</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Subscriber Provisioning Request" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsAddSubscriberProfile&gt;
         &lt;!--Optional:--&gt;
        &lt;subscriberProfile&gt;
               &lt;entry&gt;
                  &lt;key&gt;SUBSCRIBER_IDENTITY&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;USERNAME&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUSTOMER_TYPE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;STATUS&lt;/key&gt;
                  &lt;value&gt;Active&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMS_PACKAGE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EXPIRY_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;AREA&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CITY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM1&lt;/key&gt;
                  &lt;value&gt;24124&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM2&lt;/key&gt;
                  &lt;value&gt;abcd&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM3&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM4&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM5&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ZONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COUNTRY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;BIRTH_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ROLE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COMPANY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;DEPARTMENT&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ARPU&lt;/key&gt;
                  &lt;value&gt;0&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CADRE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EMAIL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PHONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;SIP_URL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUI&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMSI&lt;/key&gt;
                 &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;MSISDN&lt;/key&gt;
                 &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PRODUCT_OFFER&lt;/key&gt;
                 &lt;value&gt;${productoffer}&lt;/value&gt;
               &lt;/entry&gt;
            &lt;/subscriberProfile&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsAddSubscriberProfile&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Add 30 Rs Monetory Balance" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriptionService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsAddMonetaryBalance&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;serviceId&gt;DATA&lt;/serviceId&gt;
         &lt;!--Optional:--&gt;
         &lt;serviceName&gt;&lt;/serviceName&gt;
         &lt;!--Optional:--&gt;
         &lt;totalBalance&gt;30&lt;/totalBalance&gt;
         &lt;!--Optional:--&gt;
         &lt;validFromDate&gt;${__longSum(${__time(,)},-6000,)}&lt;/validFromDate&gt;
         &lt;!--Optional:--&gt;
         &lt;validToDate&gt;${__longSum(${__time(,)},+600000,)}&lt;/validToDate&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsAddMonetaryBalance&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Balance Found" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                  <stringProp name="-39280544">&lt;serviceId&gt;DATA&lt;/serviceId&gt;&lt;serviceName&gt;Data&lt;/serviceName&gt;</stringProp>
                  <stringProp name="-379044786">&lt;availBalance&gt;30.0&lt;/availBalance&gt;&lt;totalBalance&gt;30.0&lt;/totalBalance&gt;&lt;actualBalance&gt;30.0&lt;/actualBalance&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="TestPlan.comments">this asseriton will check that usage of 25 mb is reported or not</stringProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5006_CCR-I Gx" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-User-Location-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">0004F489008D3039</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">1</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">2</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpName.13">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.15">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.17">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">18</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Charging-Rule-Definition:Charging-Rule-Name:${pccrulenamehex}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5006_CCR-I Gy (Will GRU - 600 SEC)" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">40498</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">411111</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.4">1</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${__diamAVPValue(Charging-Rule-Install:Charging-Rule-Definition:Rating-Group,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${gysession}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">4</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.11">1</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpName.13">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.13">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Event-Timestamp</stringProp>
            <stringProp name="DiameterSampler.avpData.15">2015-10-15 16:14:38 +0530</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.19">2</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.20">0</stringProp>
            <stringProp name="DiameterSampler.avpName.21">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.21">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">4</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Granted-Service-Unit:CC-Time:600</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Balance (30 Rs)" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriptionService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetMonetaryBalance&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;serviceId&gt;&lt;/serviceId&gt;          
         &lt;serviceName&gt;&lt;/serviceName&gt;          
         &lt;parameter1&gt; &lt;/parameter1&gt;          
         &lt;parameter2&gt; &lt;/parameter2&gt;
      &lt;/sub:wsGetMonetaryBalance&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Usage found" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                <stringProp name="29779439">&lt;availBalance&gt;30.0&lt;/availBalance&gt;&lt;totalBalance&gt;30.0&lt;/totalBalance&gt;&lt;actualBalance&gt;20.0&lt;/actualBalance&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">this asseriton will check that usage of 25 mb is reported or not</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Usage found" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">//responseCode/text()=&apos;200&apos; and 
//responseMessage/text()=&apos;SUCCESS&apos; and
//monetaryBalanceData/availBalance/text()=&apos;30.0&apos; and
//monetaryBalanceData/totalBalance/text()=&apos;30.0&apos; and
//monetaryBalanceData/actualBalance/text()=&apos;20.0&apos;</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Get Session using Ws and DB" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </com.computaris.jmeter.ext.controls.ParameterizedController>
          <hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Subscriber&apos;s Gy Session" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SessionManagementService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ses=&quot;http://sessionmanagement.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;ses:wsGetSessionsBySubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;sessionType&gt;&lt;/sessionType&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/ses:wsGetSessionsBySubscriberIdentity&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <stringProp name="TestPlan.comments">Web Service Call to Get Session By Subscriberidentity</stringProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Get Session from DB" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">select CORE_SESSION_ID from TBLT_SESSION where SUBSCRIBER_IDENTITY = &apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1967093671">4111115006_gx:Gx</stringProp>
                  <stringProp name="-1191774925">4111115006_gy</stringProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">check if session id is present or not</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5006_CCR-U Gy (USU - 600 SEC)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">40498</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">411111</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${gysession}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">4</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Time</stringProp>
            <stringProp name="DiameterSampler.avpData.21">600</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpName.23">Reporting-Reason</stringProp>
            <stringProp name="DiameterSampler.avpData.23">0</stringProp>
            <stringProp name="DiameterSampler.avpName.24">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.24">${__diamAVPValue(Multiple-Services-Credit-Control:Rating-Group,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.25">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.25">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">26</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">4</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Granted-Service-Unit:CC-Time:600</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Time-Quota-Threshold:2880</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Balance (20 Rs)" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriptionService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetMonetaryBalance&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;serviceId&gt;&lt;/serviceId&gt;          
         &lt;serviceName&gt;&lt;/serviceName&gt;          
         &lt;parameter1&gt; &lt;/parameter1&gt;          
         &lt;parameter2&gt; &lt;/parameter2&gt;
      &lt;/sub:wsGetMonetaryBalance&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Usage found" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                <stringProp name="-1415741873">&lt;availBalance&gt;20.0&lt;/availBalance&gt;&lt;totalBalance&gt;30.0&lt;/totalBalance&gt;&lt;actualBalance&gt;10.0&lt;/actualBalance&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">this asseriton will check that usage of 25 mb is reported or not</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Usage found" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">//responseCode/text()=&apos;200&apos; and 
//responseMessage/text()=&apos;SUCCESS&apos; and
//monetaryBalanceData/availBalance/text()=&apos;20.0&apos; and
//monetaryBalanceData/totalBalance/text()=&apos;30.0&apos; and
//monetaryBalanceData/actualBalance/text()=&apos;10.0&apos;</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5006_CCR-U Gy (USU - 600 SEC)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">40498</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">411111</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${gysession}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">4</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Time</stringProp>
            <stringProp name="DiameterSampler.avpData.21">600</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpName.23">Reporting-Reason</stringProp>
            <stringProp name="DiameterSampler.avpData.23">0</stringProp>
            <stringProp name="DiameterSampler.avpName.24">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.24">${__diamAVPValue(Multiple-Services-Credit-Control:Rating-Group,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.25">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.25">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">26</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">4</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Granted-Service-Unit:CC-Time:600</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Time-Quota-Threshold:2880</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Balance (10 Rs)" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriptionService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetMonetaryBalance&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;serviceId&gt;&lt;/serviceId&gt;          
         &lt;serviceName&gt;&lt;/serviceName&gt;          
         &lt;parameter1&gt; &lt;/parameter1&gt;          
         &lt;parameter2&gt; &lt;/parameter2&gt;
      &lt;/sub:wsGetMonetaryBalance&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Usage found" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                <stringProp name="982792011">&lt;availBalance&gt;10.0&lt;/availBalance&gt;&lt;totalBalance&gt;30.0&lt;/totalBalance&gt;&lt;actualBalance&gt;0.0&lt;/actualBalance&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">this asseriton will check that usage of 25 mb is reported or not</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Usage found" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">//responseCode/text()=&apos;200&apos; and 
//responseMessage/text()=&apos;SUCCESS&apos; and
//monetaryBalanceData/availBalance/text()=&apos;10.0&apos; and
//monetaryBalanceData/totalBalance/text()=&apos;30.0&apos; and
//monetaryBalanceData/actualBalance/text()=&apos;0.0&apos;</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5006_CCR-I Gy (Another User)" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">40498</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">411111</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.4">1</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.5">0</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.6">8111111108_gy</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">4</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.11">1</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpName.13">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.13">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Event-Timestamp</stringProp>
            <stringProp name="DiameterSampler.avpData.15">2015-10-15 16:14:38 +0530</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.19">2</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.20">0</stringProp>
            <stringProp name="DiameterSampler.avpName.21">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.21">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">4010</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5006_CCR-I Gy (Another User)" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">40498</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">411111</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.4">1</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.5">0</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.6">9111111109_gy</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">4</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.11">1</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpName.13">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.13">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Event-Timestamp</stringProp>
            <stringProp name="DiameterSampler.avpData.15">2015-10-15 16:14:38 +0530</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.19">2</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.20">0</stringProp>
            <stringProp name="DiameterSampler.avpName.21">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.21">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">4010</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5006_CCR-T Gy (USU-600 SEC)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">40498</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">411111</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${gysession}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">4</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.10">3</stringProp>
            <stringProp name="DiameterSampler.avpName.11">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.11">4</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.12">2</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.15">3</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">1</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.18">1</stringProp>
            <stringProp name="DiameterSampler.avpName.19">CC-Time</stringProp>
            <stringProp name="DiameterSampler.avpData.19">600</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Termination-Cause</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.21">1</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.22">0</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5006_CCR-T Gx" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-User-Location-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">0004F489008D3039</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.3">0</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">3</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">3</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.11">2</stringProp>
            <stringProp name="DiameterSampler.avpName.12">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">0</stringProp>
            <stringProp name="DiameterSampler.avpName.13">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.13">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Called-Station-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">internet</stringProp>
            <stringProp name="DiameterSampler.avpCounter">15</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">200[12]</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">true</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Subscriber&apos;s Session" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SessionManagementService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ses=&quot;http://sessionmanagement.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;ses:wsGetSessionsBySubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;sessionType&gt;&lt;/sessionType&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/ses:wsGetSessionsBySubscriberIdentity&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <stringProp name="TestPlan.comments">Subscriber&apos;s Session should not be fetched</stringProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2101284903">&lt;responseCode&gt;404&lt;/responseCode&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Post Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop pcap and logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="stop Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-720136512">Stop Pcap</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop NV log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-632654166">Stop NV log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop PD log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-592019242">Stop PD log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="End of RTC_5006" enabled="true"/>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Module Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Gx+Gy-RTC_5007" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">RTC_2019 | Gx+Gy | Volume |  Check and Verify Basic Diameter Gx and Gy Call Flow with addon for international roaming.</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Gx+Gy-RTC_5007" enabled="true">
          <stringProp name="TestPlan.comments">RTC_5007 | Gx+Gy | Volume | Check and Verify Basic Diameter Gx and Gy Call Flow with addon for international roaming.</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriberidentity" elementType="Argument">
                <stringProp name="Argument.name">subscriberidentity</stringProp>
                <stringProp name="Argument.value">2111115007</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">2111115007</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">2111115007</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">2111115007</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage" elementType="Argument">
                <stringProp name="Argument.name">datapackage</stringProp>
                <stringProp name="Argument.value">RTC_5007_GY_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">2111115007</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sessionid" elementType="Argument">
                <stringProp name="Argument.name">sessionid</stringProp>
                <stringProp name="Argument.value">2111115007_gy</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">Gx+Gy-RTC_5007</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">34657</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer" elementType="Argument">
                <stringProp name="Argument.name">productoffer</stringProp>
                <stringProp name="Argument.value">RTC_5007_PRODUCT_OFFER</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage_id" elementType="Argument">
                <stringProp name="Argument.name">datapackage_id</stringProp>
                <stringProp name="Argument.value">RTC_5007_GY_BASE_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer_id" elementType="Argument">
                <stringProp name="Argument.name">productoffer_id</stringProp>
                <stringProp name="Argument.value">RTC_5007_GY_PO_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="id" elementType="Argument">
                <stringProp name="Argument.name">id</stringProp>
                <stringProp name="Argument.value">5007</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="addon1_datapackage_id" elementType="Argument">
                <stringProp name="Argument.name">addon1_datapackage_id</stringProp>
                <stringProp name="Argument.value">RTC_5007_GY_ADDON1_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="addon1_datapackage" elementType="Argument">
                <stringProp name="Argument.name">addon1_datapackage</stringProp>
                <stringProp name="Argument.value">RTC_5007_GY_ADDON1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="addon1_productoffer" elementType="Argument">
                <stringProp name="Argument.name">addon1_productoffer</stringProp>
                <stringProp name="Argument.value">RTC_5007_PRODUCT_OFFER_ADDON1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="addon1_productoffer_id" elementType="Argument">
                <stringProp name="Argument.name">addon1_productoffer_id</stringProp>
                <stringProp name="Argument.value">RTC_5007_GY_PO_ADDON1_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Cleanup" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Change product offer mode to test" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">UPDATE TBLM_PRODUCT_OFFER SET PACKAGE_MODE=&apos;TEST&apos; where ID = &apos;${productoffer_id}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Base Product Offer" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url_without_ext}/${productoffer_id}.json</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="change package status to deleted" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">UPDATE TBLM_PACKAGE SET STATUS=&apos;DELETED&apos; where ID = &apos;RTC_${id}_GY_BASE_111111111&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="delete subscriber session" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLT_SESSION WHERE SUBSCRIBER_IDENTITY=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="delete subscription" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLT_SUBSCRIPTION WHERE SUBSCRIBER_ID=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="delete balance" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLM_MONETARY_BALANCE WHERE SUBSCRIBER_ID=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsDeleteSubscriberProfile&gt;&#xd;
         &lt;subscriberID&gt;${subscriberidentity}&lt;/subscriberID&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsDeleteSubscriberProfile&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscriber_service}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Purge Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsPurgeSubscriber&gt;&#xd;
         &lt;subscriberID&gt;${subscriberidentity}&lt;/subscriberID&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;param1&gt;&lt;/param1&gt;&#xd;
         &lt;param2&gt;&lt;/param2&gt;&#xd;
      &lt;/sub:wsPurgeSubscriber&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscriber_service}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Pre Processing" enabled="true"/>
          <hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start of RTC_5007" enabled="true"/>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true); 
f = new FileOutputStream(mapping_file_name, true); 
p = new PrintStream(f); 

// Write data to file 

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Pcap and Logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872118812">Capture PCAP</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872996374">Capture log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture PD Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="1033451790">Capture PD log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Base Product offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create DataPackage" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;${datapackage_id}&lt;/id&gt;&#xd;
            &lt;name&gt;RTC_${id}_GY_BASE&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 02/27/2018 11:43:20&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriod&gt;30&lt;/validityPeriod&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;RnC_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin on 02/27/2018 11:44:57&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_5007_pcc_profile&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules/&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;100&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;RTC_5007_Quota_profile&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
            &lt;rncProfileDatas&gt;&#xd;
                &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                &lt;id&gt;&lt;/id&gt;&#xd;
                &lt;balanceLevel&gt;HSQ&lt;/balanceLevel&gt;&#xd;
                &lt;description&gt;Created by admin on 02/27/2018 11:43:39&lt;/description&gt;&#xd;
                &lt;name&gt;RTC_5007_Quota_profile&lt;/name&gt;&#xd;
                &lt;quotaType&gt;VOLUME&lt;/quotaType&gt;&#xd;
                &lt;renewal-interval-unit&gt;MONTH&lt;/renewal-interval-unit&gt;&#xd;
                &lt;rncProfileDetailDatas&gt;&#xd;
                	&lt;balance&gt;&lt;/balance&gt;&#xd;
                    &lt;balanceUnit&gt;MB&lt;/balanceUnit&gt;&#xd;
                    &lt;dataServiceType&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                    &lt;/dataServiceType&gt;&#xd;
                    &lt;fupLevel&gt;0&lt;/fupLevel&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;pulseVolume&gt;10&lt;/pulseVolume&gt;&#xd;
                    &lt;rate&gt;1&lt;/rate&gt;&#xd;
                    &lt;pulseTimeUnit&gt;SECOND&lt;/pulseTimeUnit&gt;&#xd;
                    &lt;pulseVolumeUnit&gt;MB&lt;/pulseVolumeUnit&gt;&#xd;
                    &lt;rateUnit&gt;VOLUME&lt;/rateUnit&gt;&#xd;
                    &lt;ratingGroupData&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;RATING_GROUP_1&lt;/id&gt;&#xd;
                        &lt;name&gt;Default_Rating_Group&lt;/name&gt;&#xd;
                    &lt;/ratingGroupData&gt;&#xd;
                    &lt;timeBalanceUnit&gt;SECOND&lt;/timeBalanceUnit&gt;&#xd;
                    &lt;timeLimitUnit&gt;SECOND&lt;/timeLimitUnit&gt;&#xd;
                    &lt;usageLimitUnit&gt;MB&lt;/usageLimitUnit&gt;&#xd;
                &lt;/rncProfileDetailDatas&gt;&#xd;
                &lt;unitType&gt;TOTAL&lt;/unitType&gt;&#xd;
            &lt;/rncProfileDatas&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/xml</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Offer" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${productoffer_id}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${productoffer}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin on 05/23/2018 10:12:03&quot;,&#xd;
   &quot;type&quot;:&quot;BASE&quot;,&#xd;
   &quot;currency&quot;:&quot;${currency}&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${datapackage_id}&quot;,&#xd;
   &quot;validityPeriod&quot;:null,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                  <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">true</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Offer" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                  <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}.json</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To TEST Mode" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=TEST</stringProp>
                  <stringProp name="HTTPSampler.method">PUT</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree/>
                <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
                <hashTree>
                  <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                    <collectionProp name="ModuleController.node_path">
                      <stringProp name="-1227702913">WorkBench</stringProp>
                      <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                      <stringProp name="18059174">Common Functions</stringProp>
                      <stringProp name="-803016769">PD: Reload Policy</stringProp>
                    </collectionProp>
                  </ModuleController>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To LIVE Mode" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=LIVE</stringProp>
                  <stringProp name="HTTPSampler.method">PUT</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provision Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsAddSubscriber&gt;&#xd;
         &lt;subscriberProfile&gt;    &#xd;
         	  &lt;entry&gt;&#xd;
               &lt;key&gt;PAYG_INTL_DATA_ROAMING&lt;/key&gt;&#xd;
               &lt;value&gt;false&lt;/value&gt;&#xd;
            &lt;/entry&gt;&#xd;
            &lt;productOffer&gt;${productoffer}&lt;/productOffer&gt;&#xd;
            &lt;subscriberIdentity&gt;${subscriberidentity}&lt;/subscriberIdentity&gt;&#xd;
&#xd;
         &lt;/subscriberProfile&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsAddSubscriber&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscriber_service}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Add Monetory Balance 400" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriptionService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsAddMonetaryBalance&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${username}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;serviceId&gt;DATA&lt;/serviceId&gt;
         &lt;!--Optional:--&gt;
         &lt;serviceName&gt;&lt;/serviceName&gt;
         &lt;!--Optional:--&gt;
         &lt;totalBalance&gt;400&lt;/totalBalance&gt;
         &lt;!--Optional:--&gt;
         &lt;validFromDate&gt;${__longSum(${__time(,)},-6000,)}&lt;/validFromDate&gt;
         &lt;!--Optional:--&gt;
         &lt;validToDate&gt;${__longSum(${__time(,)},+600000,)}&lt;/validToDate&gt;
         
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsAddMonetaryBalance&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <stringProp name="TestPlan.comments">Web Service Call to Get Session By Subscriberidentity</stringProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5007_CCR-I Gx" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.0">4138</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">1</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">2</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpName.13">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.15">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.17">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">18</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">5003</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Subscriber&apos;s Session" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SessionManagementService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ses=&quot;http://sessionmanagement.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;ses:wsGetSessionsBySubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;sessionType&gt;&lt;/sessionType&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/ses:wsGetSessionsBySubscriberIdentity&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <stringProp name="TestPlan.comments">Subscriber&apos;s Session should not be fetched</stringProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2101284903">&lt;responseCode&gt;404&lt;/responseCode&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Post Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop pcap and logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="stop Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-720136512">Stop Pcap</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop NV log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-632654166">Stop NV log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop PD log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-592019242">Stop PD log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="End of RTC_5007" enabled="true"/>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Module Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Gx+Gy-RTC_5008" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">RTC_5008 | Gx+Gy | Volume |  Check and Verify Basic Diameter Gx and Gy Call Flow with addon for international roaming.</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Gx+Gy-RTC_5008" enabled="true">
          <stringProp name="TestPlan.comments">RTC_5008 | Gx+Gy | Volume | Check and Verify Basic Diameter Gx and Gy Call Flow with addon for international roaming.</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriberidentity" elementType="Argument">
                <stringProp name="Argument.name">subscriberidentity</stringProp>
                <stringProp name="Argument.value">2111115008</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">2111115008</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">2111115008</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">2111115008</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage" elementType="Argument">
                <stringProp name="Argument.name">datapackage</stringProp>
                <stringProp name="Argument.value">RTC_5008_GY_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">2111115008</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sessionid" elementType="Argument">
                <stringProp name="Argument.name">sessionid</stringProp>
                <stringProp name="Argument.value">2111115008_gy</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">Gx+Gy-RTC_5008</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">34658</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer" elementType="Argument">
                <stringProp name="Argument.name">productoffer</stringProp>
                <stringProp name="Argument.value">RTC_5008_PRODUCT_OFFER</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage_id" elementType="Argument">
                <stringProp name="Argument.name">datapackage_id</stringProp>
                <stringProp name="Argument.value">RTC_5008_GY_BASE_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer_id" elementType="Argument">
                <stringProp name="Argument.name">productoffer_id</stringProp>
                <stringProp name="Argument.value">RTC_5008_GY_PO_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="id" elementType="Argument">
                <stringProp name="Argument.name">id</stringProp>
                <stringProp name="Argument.value">5008</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="addon1_datapackage_id" elementType="Argument">
                <stringProp name="Argument.name">addon1_datapackage_id</stringProp>
                <stringProp name="Argument.value">RTC_5008_GY_ADDON1_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="addon1_datapackage" elementType="Argument">
                <stringProp name="Argument.name">addon1_datapackage</stringProp>
                <stringProp name="Argument.value">RTC_5008_GY_ADDON1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="addon1_productoffer" elementType="Argument">
                <stringProp name="Argument.name">addon1_productoffer</stringProp>
                <stringProp name="Argument.value">RTC_5008_PRODUCT_OFFER_ADDON1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="addon1_productoffer_id" elementType="Argument">
                <stringProp name="Argument.name">addon1_productoffer_id</stringProp>
                <stringProp name="Argument.value">RTC_5008_GY_PO_ADDON1_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pccrulenamehex" elementType="Argument">
                <stringProp name="Argument.name">pccrulenamehex</stringProp>
                <stringProp name="Argument.value">5254435f353030385f504343</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Cleanup" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Change product offer mode to test" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">UPDATE TBLM_PRODUCT_OFFER SET PACKAGE_MODE=&apos;TEST&apos; where ID = &apos;${productoffer_id}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Change addon1 product offer mode to test" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">UPDATE TBLM_PRODUCT_OFFER SET PACKAGE_MODE=&apos;TEST&apos; where ID = &apos;${addon1_productoffer_id}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Base Product Offer" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url_without_ext}/${productoffer_id}.json</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete AddOn1 Product Offer" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url_without_ext}/${addon1_productoffer_id}.json</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Ubsubscribe AddOn1 Subscription" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsChangeAddOnSubscription&gt;&#xd;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;updateAction&gt;&lt;/updateAction&gt;&#xd;
         &lt;addOnSubscriptionId&gt;&lt;/addOnSubscriptionId&gt;&#xd;
         &lt;subscriptionStatusValue&gt;5&lt;/subscriptionStatusValue&gt;&#xd;
         &lt;subscriptionStatusName&gt;&lt;/subscriptionStatusName&gt;&#xd;
         &lt;addOnName&gt;${addon1_datapackage}&lt;/addOnName&gt;&#xd;
         &lt;subscriptionOrder&gt;LATEST&lt;/subscriptionOrder&gt;&#xd;
         &lt;startTime&gt;&lt;/startTime&gt;&#xd;
         &lt;endTime&gt;&lt;/endTime&gt;&#xd;
         &lt;priority&gt;&lt;/priority&gt;&#xd;
         &lt;rejectReason&gt;As a Clean-up setep&lt;/rejectReason&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsChangeAddOnSubscription&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscription_service}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="change package status to deleted" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">UPDATE TBLM_PACKAGE SET STATUS=&apos;DELETED&apos; where ID IN (&apos;${datapackage_id}&apos;,&apos;${addon1_datapackage_id}&apos;,&apos;${addon2_datapackage_id}&apos;)

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="delete subscriber session" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLT_SESSION WHERE SUBSCRIBER_IDENTITY=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="delete subscription" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLT_SUBSCRIPTION WHERE SUBSCRIBER_ID=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="delete non monetary balance" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLM_DATA_BALANCE WHERE SUBSCRIBER_ID=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="delete balance" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLM_MONETARY_BALANCE WHERE SUBSCRIBER_ID=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsDeleteSubscriberProfile&gt;&#xd;
         &lt;subscriberID&gt;${subscriberidentity}&lt;/subscriberID&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsDeleteSubscriberProfile&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscriber_service}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Purge Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsPurgeSubscriber&gt;&#xd;
         &lt;subscriberID&gt;${subscriberidentity}&lt;/subscriberID&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;param1&gt;&lt;/param1&gt;&#xd;
         &lt;param2&gt;&lt;/param2&gt;&#xd;
      &lt;/sub:wsPurgeSubscriber&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscriber_service}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Pre Processing" enabled="true"/>
          <hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start of RTC_5008" enabled="true"/>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true); 
f = new FileOutputStream(mapping_file_name, true); 
p = new PrintStream(f); 

// Write data to file 

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Pcap and Logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872118812">Capture PCAP</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872996374">Capture log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture PD Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="1033451790">Capture PD log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Base Product offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create DataPackage" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;${datapackage_id}&lt;/id&gt;&#xd;
            &lt;name&gt;RTC_${id}_GY_BASE&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 02/27/2018 11:43:20&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriod&gt;30&lt;/validityPeriod&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;RnC_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin on 02/27/2018 11:44:57&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_5008_pcc_profile&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules/&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;100&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;RTC_5008_Quota_profile&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
            &lt;rncProfileDatas&gt;&#xd;
                &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                &lt;id&gt;&lt;/id&gt;&#xd;
                &lt;balanceLevel&gt;HSQ&lt;/balanceLevel&gt;&#xd;
                &lt;description&gt;Created by admin on 02/27/2018 11:43:39&lt;/description&gt;&#xd;
                &lt;name&gt;RTC_5008_Quota_profile&lt;/name&gt;&#xd;
                &lt;quotaType&gt;VOLUME&lt;/quotaType&gt;&#xd;
                &lt;renewal-interval-unit&gt;MONTH&lt;/renewal-interval-unit&gt;&#xd;
                &lt;rncProfileDetailDatas&gt;&#xd;
                	&lt;balance&gt;&lt;/balance&gt;&#xd;
                    &lt;balanceUnit&gt;MB&lt;/balanceUnit&gt;&#xd;
                    &lt;dataServiceType&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                    &lt;/dataServiceType&gt;&#xd;
                    &lt;fupLevel&gt;0&lt;/fupLevel&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;pulseVolume&gt;10&lt;/pulseVolume&gt;&#xd;
                    &lt;rate&gt;1&lt;/rate&gt;&#xd;
                    &lt;pulseTimeUnit&gt;SECOND&lt;/pulseTimeUnit&gt;&#xd;
                    &lt;pulseVolumeUnit&gt;MB&lt;/pulseVolumeUnit&gt;&#xd;
                    &lt;rateUnit&gt;VOLUME&lt;/rateUnit&gt;&#xd;
                    &lt;ratingGroupData&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;RATING_GROUP_1&lt;/id&gt;&#xd;
                        &lt;name&gt;Default_Rating_Group&lt;/name&gt;&#xd;
                    &lt;/ratingGroupData&gt;&#xd;
                    &lt;timeBalanceUnit&gt;SECOND&lt;/timeBalanceUnit&gt;&#xd;
                    &lt;timeLimitUnit&gt;SECOND&lt;/timeLimitUnit&gt;&#xd;
                    &lt;usageLimitUnit&gt;MB&lt;/usageLimitUnit&gt;&#xd;
                &lt;/rncProfileDetailDatas&gt;&#xd;
                &lt;unitType&gt;TOTAL&lt;/unitType&gt;&#xd;
            &lt;/rncProfileDatas&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/xml</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Offer" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${productoffer_id}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${productoffer}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin on 05/23/2018 10:12:03&quot;,&#xd;
   &quot;type&quot;:&quot;BASE&quot;,&#xd;
   &quot;currency&quot;:&quot;${currency}&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${datapackage_id}&quot;,&#xd;
   &quot;validityPeriod&quot;:null,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                  <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">true</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Offer" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                  <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}.json</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To TEST Mode" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=TEST</stringProp>
                  <stringProp name="HTTPSampler.method">PUT</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree/>
                <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
                <hashTree>
                  <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                    <collectionProp name="ModuleController.node_path">
                      <stringProp name="-1227702913">WorkBench</stringProp>
                      <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                      <stringProp name="18059174">Common Functions</stringProp>
                      <stringProp name="-803016769">PD: Reload Policy</stringProp>
                    </collectionProp>
                  </ModuleController>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To LIVE Mode" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=LIVE</stringProp>
                  <stringProp name="HTTPSampler.method">PUT</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Addon Product offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Addon DataPackage" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;RTC_5008_GY_ADDON1_111111111&lt;/id&gt;&#xd;
            &lt;name&gt;RTC_5008_GY_ADDON1&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 02/27/2018 11:43:20&lt;/description&gt;&#xd;
            &lt;type&gt;ADDON&lt;/type&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriod&gt;30&lt;/validityPeriod&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;true&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;RnC_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin on 02/27/2018 11:44:57&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_5008_pcc_profile&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;RTC_5008_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;RTC_5008_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;100&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;RTC_5008_Quota_profile&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;quota-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
            &lt;rncProfileDatas&gt;&#xd;
                &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                &lt;id&gt;&lt;/id&gt;&#xd;
                &lt;balanceLevel&gt;FUP2&lt;/balanceLevel&gt;&#xd;
                &lt;description&gt;Created by admin on 02/27/2018 11:43:39&lt;/description&gt;&#xd;
                &lt;name&gt;RTC_5008_Quota_profile&lt;/name&gt;&#xd;
                &lt;quotaType&gt;HYBRID&lt;/quotaType&gt;&#xd;
                &lt;renewal-interval-unit&gt;MONTH&lt;/renewal-interval-unit&gt;&#xd;
                &lt;rncProfileDetailDatas&gt;&#xd;
                    &lt;balance&gt;400&lt;/balance&gt;&#xd;
                    &lt;balanceUnit&gt;MB&lt;/balanceUnit&gt;&#xd;
                    &lt;dataServiceType&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                    &lt;/dataServiceType&gt;&#xd;
                    &lt;fupLevel&gt;0&lt;/fupLevel&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;pulseVolume&gt;20&lt;/pulseVolume&gt;&#xd;
                    &lt;pulseVolumeUnit&gt;MB&lt;/pulseVolumeUnit&gt;&#xd;
                    &lt;rateUnit&gt;VOLUME&lt;/rateUnit&gt;&#xd;
                    &lt;ratingGroupData&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;RATING_GROUP_1&lt;/id&gt;&#xd;
                        &lt;name&gt;Default_Rating_Group&lt;/name&gt;&#xd;
                    &lt;/ratingGroupData&gt;&#xd;
                    &lt;usageLimitUnit&gt;MB&lt;/usageLimitUnit&gt;&#xd;
                &lt;/rncProfileDetailDatas&gt;&#xd;
                &lt;unitType&gt;TOTAL&lt;/unitType&gt;&#xd;
            &lt;/rncProfileDatas&gt;&#xd;
            &lt;rate-cards/&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/xml</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Offer" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${addon1_productoffer_id}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${addon1_productoffer}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin on 05/23/2018 10:12:03&quot;,&#xd;
   &quot;type&quot;:&quot;ADDON&quot;,&#xd;
   &quot;currency&quot;:&quot;${currency}&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${addon1_datapackage_id}&quot;,&#xd;
   &quot;validityPeriod&quot;:30,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                  <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="411456392">&quot;id&quot;:&quot;${addon1_productoffer_id}&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">true</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Offer" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                  <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${addon1_productoffer_id}.json</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="411456392">&quot;id&quot;:&quot;${addon1_productoffer_id}&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To TEST Mode" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${addon1_productoffer_id}/updateMode.json?pkgMode=TEST</stringProp>
                  <stringProp name="HTTPSampler.method">PUT</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree/>
                <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
                <hashTree>
                  <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                    <collectionProp name="ModuleController.node_path">
                      <stringProp name="-1227702913">WorkBench</stringProp>
                      <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                      <stringProp name="18059174">Common Functions</stringProp>
                      <stringProp name="-803016769">PD: Reload Policy</stringProp>
                    </collectionProp>
                  </ModuleController>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To LIVE Mode" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${addon1_productoffer_id}/updateMode.json?pkgMode=LIVE</stringProp>
                  <stringProp name="HTTPSampler.method">PUT</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provision Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsAddSubscriber&gt;&#xd;
         &lt;subscriberProfile&gt;    &#xd;
         	  &lt;entry&gt;&#xd;
               &lt;key&gt;PAYG_INTL_DATA_ROAMING&lt;/key&gt;&#xd;
               &lt;value&gt;false&lt;/value&gt;&#xd;
            &lt;/entry&gt;&#xd;
            &lt;productOffer&gt;${productoffer}&lt;/productOffer&gt;&#xd;
            &lt;subscriberIdentity&gt;${subscriberidentity}&lt;/subscriberIdentity&gt;&#xd;
&#xd;
         &lt;/subscriberProfile&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsAddSubscriber&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscriber_service}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Add Monetory Balance" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriptionService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsAddMonetaryBalance&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${username}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;serviceId&gt;DATA&lt;/serviceId&gt;
         &lt;!--Optional:--&gt;
         &lt;serviceName&gt;&lt;/serviceName&gt;
         &lt;!--Optional:--&gt;
         &lt;totalBalance&gt;400&lt;/totalBalance&gt;
         &lt;!--Optional:--&gt;
         &lt;validFromDate&gt;${__longSum(${__time(,)},-6000,)}&lt;/validFromDate&gt;
         &lt;!--Optional:--&gt;
         &lt;validToDate&gt;${__longSum(${__time(,)},+600000,)}&lt;/validToDate&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsAddMonetaryBalance&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <stringProp name="TestPlan.comments">Web Service Call to Get Session By Subscriberidentity</stringProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Subscriber AddOn1" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsSubscribeAddOnProductOffer&gt;&#xd;
         &lt;parentId&gt;&lt;/parentId&gt;&#xd;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;updateAction&gt;&lt;/updateAction&gt;&#xd;
         &lt;cui&gt;&lt;/cui&gt;&#xd;
         &lt;addOnProductOfferId&gt;${addon1_productoffer_id}&lt;/addOnProductOfferId&gt;&#xd;
         &lt;addOnProductOfferName&gt;&lt;/addOnProductOfferName&gt;&#xd;
         &lt;subscriptionStatusValue&gt;&lt;/subscriptionStatusValue&gt;&#xd;
         &lt;subscriptionStatusName&gt;&lt;/subscriptionStatusName&gt;&#xd;
         &lt;startTime&gt;&lt;/startTime&gt;&#xd;
         &lt;endTime&gt;&lt;/endTime&gt;&#xd;
         &lt;priority&gt;&lt;/priority&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsSubscribeAddOnProductOffer&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscription_service}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5008_CCR-I Gx" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.0">4138</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">1</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">2</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpName.13">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.15">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.17">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">18</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">2</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Charging-Rule-Definition:Charging-Rule-Name:${pccrulenamehex}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5008_CCR-I Gy" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">413003</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">404093</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.4">1</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Requested-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.5">1</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.6">10</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.8">4</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpName.13">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.13">1</stringProp>
            <stringProp name="DiameterSampler.avpName.14">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Event-Timestamp</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2015-10-15 16:14:38 +0530</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.17">2</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.18">1</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.19">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.20">2</stringProp>
            <stringProp name="DiameterSampler.avpName.21">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.21">0</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.22">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.23">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.23">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">24</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">4</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Total-Octets:41943040</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Get Session using Ws and DB" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </com.computaris.jmeter.ext.controls.ParameterizedController>
          <hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Subscriber&apos;s Gy Session" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SessionManagementService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ses=&quot;http://sessionmanagement.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;ses:wsGetSessionsBySubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;sessionType&gt;&lt;/sessionType&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/ses:wsGetSessionsBySubscriberIdentity&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <stringProp name="TestPlan.comments">Web Service Call to Get Session By Subscriberidentity</stringProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5008_CCR-U Gy" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">413003</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">404093</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.21">377487360</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">4</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Total-Octets:41943040</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5008_CCR-T Gy" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">413003</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">404093</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">3</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.21">41943040</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-T Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5008_CCR-T Gx" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-User-Location-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">0004F489008D3039</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.3">0</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">3</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">3</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.11">2</stringProp>
            <stringProp name="DiameterSampler.avpName.12">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">0</stringProp>
            <stringProp name="DiameterSampler.avpName.13">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.13">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Called-Station-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">internet</stringProp>
            <stringProp name="DiameterSampler.avpCounter">15</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-T Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Subscriber&apos;s Session" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SessionManagementService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ses=&quot;http://sessionmanagement.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;ses:wsGetSessionsBySubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;sessionType&gt;&lt;/sessionType&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/ses:wsGetSessionsBySubscriberIdentity&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <stringProp name="TestPlan.comments">Subscriber&apos;s Session should not be fetched</stringProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2101284903">&lt;responseCode&gt;404&lt;/responseCode&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5008_CCR-I Gx" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.0">4138</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">1</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">2</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpName.13">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.15">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.17">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">18</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">5003</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Subscriber&apos;s Session" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SessionManagementService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ses=&quot;http://sessionmanagement.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;ses:wsGetSessionsBySubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;sessionType&gt;&lt;/sessionType&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/ses:wsGetSessionsBySubscriberIdentity&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <stringProp name="TestPlan.comments">Subscriber&apos;s Session should not be fetched</stringProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2101284903">&lt;responseCode&gt;404&lt;/responseCode&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Post Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop pcap and logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="stop Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-720136512">Stop Pcap</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop NV log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-632654166">Stop NV log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop PD log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-592019242">Stop PD log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="End of RTC_5008" enabled="true"/>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Module Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Gx+Gy-RTC_5009" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">RTC_5009 | Gx+Gy | Volume |  Check and Verify Basic Diameter Gx and Gy Call Flow with addon for international roaming.</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Gx+Gy-RTC_5009" enabled="true">
          <stringProp name="TestPlan.comments">RTC_2021 | Gx+Gy | Volume | Check and Verify Basic Diameter Gx and Gy Call Flow with addon for international roaming.</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriberidentity" elementType="Argument">
                <stringProp name="Argument.name">subscriberidentity</stringProp>
                <stringProp name="Argument.value">2111115009</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">2111115009</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">2111115009</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">2111115009</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage" elementType="Argument">
                <stringProp name="Argument.name">datapackage</stringProp>
                <stringProp name="Argument.value">RTC_5009_GY_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">2111115009</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sessionid" elementType="Argument">
                <stringProp name="Argument.name">sessionid</stringProp>
                <stringProp name="Argument.value">2111115009_gy</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">Gx+Gy-RTC_5009</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">34659</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer" elementType="Argument">
                <stringProp name="Argument.name">productoffer</stringProp>
                <stringProp name="Argument.value">RTC_5009_PRODUCT_OFFER</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage_id" elementType="Argument">
                <stringProp name="Argument.name">datapackage_id</stringProp>
                <stringProp name="Argument.value">RTC_5009_GY_BASE_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer_id" elementType="Argument">
                <stringProp name="Argument.name">productoffer_id</stringProp>
                <stringProp name="Argument.value">RTC_50091_GY_PO_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="id" elementType="Argument">
                <stringProp name="Argument.name">id</stringProp>
                <stringProp name="Argument.value">5009</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="addon1_datapackage_id" elementType="Argument">
                <stringProp name="Argument.name">addon1_datapackage_id</stringProp>
                <stringProp name="Argument.value">RTC_5009_GY_ADDON1_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="addon1_datapackage" elementType="Argument">
                <stringProp name="Argument.name">addon1_datapackage</stringProp>
                <stringProp name="Argument.value">RTC_5009_GY_ADDON1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="addon1_productoffer" elementType="Argument">
                <stringProp name="Argument.name">addon1_productoffer</stringProp>
                <stringProp name="Argument.value">RTC_5009_PRODUCT_OFFER_ADDON1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="addon1_productoffer_id" elementType="Argument">
                <stringProp name="Argument.name">addon1_productoffer_id</stringProp>
                <stringProp name="Argument.value">RTC_5009_GY_PO_ADDON1_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="future_time_in_millies" elementType="Argument">
                <stringProp name="Argument.name">future_time_in_millies</stringProp>
                <stringProp name="Argument.value">2082652200000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Cleanup" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Change product offer mode to test" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">UPDATE TBLM_PRODUCT_OFFER SET PACKAGE_MODE=&apos;TEST&apos; where ID = &apos;${productoffer_id}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Change addon1 product offer mode to test" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">UPDATE TBLM_PRODUCT_OFFER SET PACKAGE_MODE=&apos;TEST&apos; where ID = &apos;${addon1_productoffer_id}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Base Product Offer" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url_without_ext}/${productoffer_id}.json</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete AddOn1 Product Offer" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url_without_ext}/${addon1_productoffer_id}.json</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Ubsubscribe AddOn1 Subscription" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsChangeAddOnSubscription&gt;&#xd;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;updateAction&gt;&lt;/updateAction&gt;&#xd;
         &lt;addOnSubscriptionId&gt;&lt;/addOnSubscriptionId&gt;&#xd;
         &lt;subscriptionStatusValue&gt;5&lt;/subscriptionStatusValue&gt;&#xd;
         &lt;subscriptionStatusName&gt;&lt;/subscriptionStatusName&gt;&#xd;
         &lt;addOnName&gt;${addon1_datapackage}&lt;/addOnName&gt;&#xd;
         &lt;subscriptionOrder&gt;LATEST&lt;/subscriptionOrder&gt;&#xd;
         &lt;startTime&gt;&lt;/startTime&gt;&#xd;
         &lt;endTime&gt;&lt;/endTime&gt;&#xd;
         &lt;priority&gt;&lt;/priority&gt;&#xd;
         &lt;rejectReason&gt;As a Clean-up setep&lt;/rejectReason&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsChangeAddOnSubscription&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscription_service}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="change package status to deleted" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">UPDATE TBLM_PACKAGE SET STATUS=&apos;DELETED&apos; where ID IN (&apos;${datapackage_id}&apos;,&apos;${addon1_datapackage_id}&apos;,&apos;${addon2_datapackage_id}&apos;)

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="delete subscriber session" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLT_SESSION WHERE SUBSCRIBER_IDENTITY=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="delete subscription" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLT_SUBSCRIPTION WHERE SUBSCRIBER_ID=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="delete non monetary balance" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLM_DATA_BALANCE WHERE SUBSCRIBER_ID=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="delete balance" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLM_MONETARY_BALANCE WHERE SUBSCRIBER_ID=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsDeleteSubscriberProfile&gt;&#xd;
         &lt;subscriberID&gt;${subscriberidentity}&lt;/subscriberID&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsDeleteSubscriberProfile&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscriber_service}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Purge Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsPurgeSubscriber&gt;&#xd;
         &lt;subscriberID&gt;${subscriberidentity}&lt;/subscriberID&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;param1&gt;&lt;/param1&gt;&#xd;
         &lt;param2&gt;&lt;/param2&gt;&#xd;
      &lt;/sub:wsPurgeSubscriber&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscriber_service}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Pre Processing" enabled="true"/>
          <hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start of RTC_5009" enabled="true"/>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true); 
f = new FileOutputStream(mapping_file_name, true); 
p = new PrintStream(f); 

// Write data to file 

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Pcap and Logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872118812">Capture PCAP</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872996374">Capture log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture PD Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="1033451790">Capture PD log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Base Product offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create DataPackage" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;RTC_${id}_GY_BASE_111111111&lt;/id&gt;&#xd;
            &lt;name&gt;RTC_${id}_GY_BASE&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 02/27/2018 11:43:20&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriod&gt;30&lt;/validityPeriod&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;RnC_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin on 02/27/2018 11:44:57&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_5009_pcc_profile&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules/&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;100&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;RTC_5009_Quota_profile&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
            &lt;rncProfileDatas&gt;&#xd;
                &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                &lt;id&gt;&lt;/id&gt;&#xd;
                &lt;balanceLevel&gt;HSQ&lt;/balanceLevel&gt;&#xd;
                &lt;description&gt;Created by admin on 02/27/2018 11:43:39&lt;/description&gt;&#xd;
                &lt;name&gt;RTC_5009_Quota_profile&lt;/name&gt;&#xd;
                &lt;quotaType&gt;VOLUME&lt;/quotaType&gt;&#xd;
                &lt;renewal-interval-unit&gt;MONTH&lt;/renewal-interval-unit&gt;&#xd;
                &lt;rncProfileDetailDatas&gt;&#xd;
                	&lt;balance&gt;400&lt;/balance&gt;&#xd;
                    &lt;balanceUnit&gt;MB&lt;/balanceUnit&gt;&#xd;
                    &lt;dataServiceType&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                    &lt;/dataServiceType&gt;&#xd;
                    &lt;fupLevel&gt;0&lt;/fupLevel&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;pulseVolume&gt;20&lt;/pulseVolume&gt;&#xd;
&#xd;
                    &lt;pulseTimeUnit&gt;SECOND&lt;/pulseTimeUnit&gt;&#xd;
                    &lt;pulseVolumeUnit&gt;MB&lt;/pulseVolumeUnit&gt;&#xd;
                    &lt;rateUnit&gt;VOLUME&lt;/rateUnit&gt;&#xd;
                    &lt;ratingGroupData&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;RATING_GROUP_1&lt;/id&gt;&#xd;
                        &lt;name&gt;Default_Rating_Group&lt;/name&gt;&#xd;
                    &lt;/ratingGroupData&gt;&#xd;
                    &lt;timeBalanceUnit&gt;SECOND&lt;/timeBalanceUnit&gt;&#xd;
                    &lt;timeLimitUnit&gt;SECOND&lt;/timeLimitUnit&gt;&#xd;
                    &lt;usageLimitUnit&gt;MB&lt;/usageLimitUnit&gt;&#xd;
                &lt;/rncProfileDetailDatas&gt;&#xd;
                &lt;unitType&gt;TOTAL&lt;/unitType&gt;&#xd;
            &lt;/rncProfileDatas&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/xml</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Offer" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${productoffer_id}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${productoffer}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin on 05/23/2018 10:12:03&quot;,&#xd;
   &quot;type&quot;:&quot;BASE&quot;,&#xd;
   &quot;currency&quot;:&quot;${currency}&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${datapackage_id}&quot;,&#xd;
   &quot;validityPeriod&quot;:null,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                  <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">true</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Offer" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                  <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}.json</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To TEST Mode" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=TEST</stringProp>
                  <stringProp name="HTTPSampler.method">PUT</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree/>
                <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
                <hashTree>
                  <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                    <collectionProp name="ModuleController.node_path">
                      <stringProp name="-1227702913">WorkBench</stringProp>
                      <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                      <stringProp name="18059174">Common Functions</stringProp>
                      <stringProp name="-803016769">PD: Reload Policy</stringProp>
                    </collectionProp>
                  </ModuleController>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To LIVE Mode" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=LIVE</stringProp>
                  <stringProp name="HTTPSampler.method">PUT</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Addon Product offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Addon DataPackage" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;RTC_5009_GY_ADDON1_111111111&lt;/id&gt;&#xd;
            &lt;name&gt;RTC_5009_GY_ADDON1&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 02/27/2018 11:43:20&lt;/description&gt;&#xd;
            &lt;type&gt;ADDON&lt;/type&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriod&gt;30&lt;/validityPeriod&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;true&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;RnC_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin on 02/27/2018 11:44:57&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_5009_pcc_profile&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;RTC_5009_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;RTC_5009_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;100&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;RTC_5009_Quota_profile&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;quota-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
            &lt;rncProfileDatas&gt;&#xd;
                &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                &lt;id&gt;&lt;/id&gt;&#xd;
                &lt;balanceLevel&gt;FUP2&lt;/balanceLevel&gt;&#xd;
                &lt;description&gt;Created by admin on 02/27/2018 11:43:39&lt;/description&gt;&#xd;
                &lt;name&gt;RTC_5009_Quota_profile&lt;/name&gt;&#xd;
                &lt;quotaType&gt;HYBRID&lt;/quotaType&gt;&#xd;
                &lt;renewal-interval-unit&gt;MONTH&lt;/renewal-interval-unit&gt;&#xd;
                &lt;rncProfileDetailDatas&gt;&#xd;
                    &lt;balance&gt;400&lt;/balance&gt;&#xd;
                    &lt;balanceUnit&gt;MB&lt;/balanceUnit&gt;&#xd;
                    &lt;dataServiceType&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                    &lt;/dataServiceType&gt;&#xd;
                    &lt;fupLevel&gt;0&lt;/fupLevel&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;pulseVolume&gt;20&lt;/pulseVolume&gt;&#xd;
                    &lt;rate&gt;1&lt;/rate&gt;&#xd;
                    &lt;pulseVolumeUnit&gt;MB&lt;/pulseVolumeUnit&gt;&#xd;
                    &lt;rateUnit&gt;VOLUME&lt;/rateUnit&gt;&#xd;
                    &lt;ratingGroupData&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;RATING_GROUP_1&lt;/id&gt;&#xd;
                        &lt;name&gt;Default_Rating_Group&lt;/name&gt;&#xd;
                    &lt;/ratingGroupData&gt;&#xd;
                    &lt;usageLimitUnit&gt;MB&lt;/usageLimitUnit&gt;&#xd;
                &lt;/rncProfileDetailDatas&gt;&#xd;
                &lt;unitType&gt;TOTAL&lt;/unitType&gt;&#xd;
            &lt;/rncProfileDatas&gt;&#xd;
            &lt;rate-cards/&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/xml</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Offer" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${addon1_productoffer_id}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${addon1_productoffer}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin on 05/23/2018 10:12:03&quot;,&#xd;
   &quot;type&quot;:&quot;ADDON&quot;,&#xd;
   &quot;currency&quot;:&quot;${currency}&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${addon1_datapackage_id}&quot;,&#xd;
   &quot;validityPeriod&quot;:30,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                  <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="411456392">&quot;id&quot;:&quot;${addon1_productoffer_id}&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">true</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Offer" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                  <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${addon1_productoffer_id}.json</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="411456392">&quot;id&quot;:&quot;${addon1_productoffer_id}&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To TEST Mode" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${addon1_productoffer_id}/updateMode.json?pkgMode=TEST</stringProp>
                  <stringProp name="HTTPSampler.method">PUT</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree/>
                <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
                <hashTree>
                  <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                    <collectionProp name="ModuleController.node_path">
                      <stringProp name="-1227702913">WorkBench</stringProp>
                      <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                      <stringProp name="18059174">Common Functions</stringProp>
                      <stringProp name="-803016769">PD: Reload Policy</stringProp>
                    </collectionProp>
                  </ModuleController>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To LIVE Mode" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${addon1_productoffer_id}/updateMode.json?pkgMode=LIVE</stringProp>
                  <stringProp name="HTTPSampler.method">PUT</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provision Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsAddSubscriber&gt;&#xd;
         &lt;subscriberProfile&gt;    &#xd;
         	  &lt;entry&gt;&#xd;
               &lt;key&gt;PAYG_INTL_DATA_ROAMING&lt;/key&gt;&#xd;
               &lt;value&gt;false&lt;/value&gt;&#xd;
            &lt;/entry&gt;&#xd;
            &lt;productOffer&gt;${productoffer}&lt;/productOffer&gt;&#xd;
            &lt;subscriberIdentity&gt;${subscriberidentity}&lt;/subscriberIdentity&gt;&#xd;
&#xd;
         &lt;/subscriberProfile&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsAddSubscriber&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscriber_service}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Add Monetory Balance" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriptionService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsAddMonetaryBalance&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${username}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;serviceId&gt;DATA&lt;/serviceId&gt;
         &lt;!--Optional:--&gt;
         &lt;serviceName&gt;&lt;/serviceName&gt;
         &lt;!--Optional:--&gt;
         &lt;totalBalance&gt;400&lt;/totalBalance&gt;
         &lt;!--Optional:--&gt;
         &lt;validFromDate&gt;${__longSum(${__time(,)},-6000,)}&lt;/validFromDate&gt;
         &lt;!--Optional:--&gt;
         &lt;validToDate&gt;${__longSum(${__time(,)},+600000,)}&lt;/validToDate&gt;
         
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsAddMonetaryBalance&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <stringProp name="TestPlan.comments">Web Service Call to Get Session By Subscriberidentity</stringProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Subscriber AddOn1" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsSubscribeAddOnProductOffer&gt;&#xd;
         &lt;parentId&gt;&lt;/parentId&gt;&#xd;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;updateAction&gt;&lt;/updateAction&gt;&#xd;
         &lt;cui&gt;&lt;/cui&gt;&#xd;
         &lt;addOnProductOfferId&gt;${addon1_productoffer_id}&lt;/addOnProductOfferId&gt;&#xd;
         &lt;addOnProductOfferName&gt;&lt;/addOnProductOfferName&gt;&#xd;
         &lt;subscriptionStatusValue&gt;&lt;/subscriptionStatusValue&gt;&#xd;
         &lt;subscriptionStatusName&gt;&lt;/subscriptionStatusName&gt;&#xd;
         &lt;startTime&gt;&lt;/startTime&gt;&#xd;
         &lt;endTime&gt;&lt;/endTime&gt;&#xd;
         &lt;priority&gt;&lt;/priority&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsSubscribeAddOnProductOffer&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscription_service}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5009_CCR-I Gx" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.0">4138</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">1</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">2</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpName.13">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.15">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.17">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">18</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5009_CCR-I Gy" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">413003</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">404093</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.4">1</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Requested-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.5">1</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.6">10</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.8">4</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpName.13">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.13">1</stringProp>
            <stringProp name="DiameterSampler.avpName.14">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Event-Timestamp</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2015-10-15 16:14:38 +0530</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.17">2</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.18">1</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.19">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.20">2</stringProp>
            <stringProp name="DiameterSampler.avpName.21">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.21">0</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.22">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.23">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.23">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">24</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">4</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Total-Octets:41943040</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Get Session using Ws and DB" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </com.computaris.jmeter.ext.controls.ParameterizedController>
          <hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Subscriber&apos;s Gy Session" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SessionManagementService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ses=&quot;http://sessionmanagement.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;ses:wsGetSessionsBySubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;sessionType&gt;&lt;/sessionType&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/ses:wsGetSessionsBySubscriberIdentity&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <stringProp name="TestPlan.comments">Web Service Call to Get Session By Subscriberidentity</stringProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5009_CCR-U Gy" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">413003</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">404093</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.21">377487360</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">4</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Total-Octets:41943040</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5009_CCR-T Gy" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">413003</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">404093</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">3</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.21">41943040</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-T Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5009_CCR-T Gx" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-User-Location-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">0004F489008D3039</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.3">0</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">3</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">3</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.11">2</stringProp>
            <stringProp name="DiameterSampler.avpName.12">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">0</stringProp>
            <stringProp name="DiameterSampler.avpName.13">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.13">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Called-Station-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">internet</stringProp>
            <stringProp name="DiameterSampler.avpCounter">15</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-T Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Subscriber&apos;s Session" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SessionManagementService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ses=&quot;http://sessionmanagement.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;ses:wsGetSessionsBySubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;sessionType&gt;&lt;/sessionType&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/ses:wsGetSessionsBySubscriberIdentity&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <stringProp name="TestPlan.comments">Subscriber&apos;s Session should not be fetched</stringProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2101284903">&lt;responseCode&gt;404&lt;/responseCode&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5009_CCR-I Gx" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.0">4138</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">1</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">2</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpName.13">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.15">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.17">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">18</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">5003</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Subscriber&apos;s Session" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SessionManagementService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ses=&quot;http://sessionmanagement.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;ses:wsGetSessionsBySubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;sessionType&gt;&lt;/sessionType&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/ses:wsGetSessionsBySubscriberIdentity&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <stringProp name="TestPlan.comments">Subscriber&apos;s Session should not be fetched</stringProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2101284903">&lt;responseCode&gt;404&lt;/responseCode&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Post Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop pcap and logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="stop Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-720136512">Stop Pcap</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop NV log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-632654166">Stop NV log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop PD log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-592019242">Stop PD log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="End of RTC_5009" enabled="true"/>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Module Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Gx+Gy-RTC_5010" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">RTC_5010 | Gx+Gy | Volume | Verify that NetVertex is supporting three level fup plan in single session.</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Gx+Gy-RTC_5010" enabled="true">
          <stringProp name="TestPlan.comments">RTC_2023 | Gx+Gy | Volume | Check and Verify Basic Diameter Gx and Gy Call Flow with addon for international roaming.</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="id" elementType="Argument">
                <stringProp name="Argument.name">id</stringProp>
                <stringProp name="Argument.value">5010</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">60405</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">Gy-RTC_5010</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subscriberidentity" elementType="Argument">
                <stringProp name="Argument.name">subscriberidentity</stringProp>
                <stringProp name="Argument.value">2111115010</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">2111115010</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">2111115010</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">2111115010</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">2111115010</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sessionid_gx" elementType="Argument">
                <stringProp name="Argument.name">sessionid_gx</stringProp>
                <stringProp name="Argument.value">2111115010_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sessionid" elementType="Argument">
                <stringProp name="Argument.name">sessionid</stringProp>
                <stringProp name="Argument.value">2111115010_gy</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage" elementType="Argument">
                <stringProp name="Argument.name">datapackage</stringProp>
                <stringProp name="Argument.value">RTC_5010_GY_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage_id" elementType="Argument">
                <stringProp name="Argument.name">datapackage_id</stringProp>
                <stringProp name="Argument.value">RTC_5010_GY_BASE_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer" elementType="Argument">
                <stringProp name="Argument.name">productoffer</stringProp>
                <stringProp name="Argument.value">RTC_5010_GY_PO</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer_id" elementType="Argument">
                <stringProp name="Argument.name">productoffer_id</stringProp>
                <stringProp name="Argument.value">RTC_5010_GY_PO_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="framed-ip-address" elementType="Argument">
                <stringProp name="Argument.name">framed-ip-address</stringProp>
                <stringProp name="Argument.value">C0A81417</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Cleanup" enabled="false"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Change product offer mode to test" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">UPDATE TBLM_PRODUCT_OFFER SET PACKAGE_MODE=&apos;TEST&apos; where ID = &apos;${productoffer_id}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Base Product Offer" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url_without_ext}/${productoffer_id}.json</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="change package status to deleted" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">UPDATE TBLM_PACKAGE SET STATUS=&apos;DELETED&apos; where ID IN (&apos;${datapackage_id}&apos;)

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="delete subscriber session" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLT_SESSION WHERE SUBSCRIBER_IDENTITY=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="delete subscription" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLT_SUBSCRIPTION WHERE SUBSCRIBER_ID=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="delete non monetary balance" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLM_DATA_BALANCE WHERE SUBSCRIBER_ID=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="delete balance" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLM_MONETARY_BALANCE WHERE SUBSCRIBER_ID=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsDeleteSubscriberProfile&gt;&#xd;
         &lt;subscriberID&gt;${subscriberidentity}&lt;/subscriberID&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsDeleteSubscriberProfile&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscriber_service}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete Subscriber&apos;s Alternate Identity" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLM_ALTERNATE_IDENTITY WHERE SUBSCRIBER_ID=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Purge Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsPurgeSubscriber&gt;&#xd;
         &lt;subscriberID&gt;${subscriberidentity}&lt;/subscriberID&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;param1&gt;&lt;/param1&gt;&#xd;
         &lt;param2&gt;&lt;/param2&gt;&#xd;
      &lt;/sub:wsPurgeSubscriber&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscriber_service}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Clear active sessions for the Subscriber" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">UPDATE TBLM_PACKAGE SET STATUS=&apos;DELETED&apos; where ID IN (&apos;${datapackage_id}&apos;)

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Pre Processing" enabled="true"/>
          <hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start of RTC_5010" enabled="true"/>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true); 
f = new FileOutputStream(mapping_file_name, true); 
p = new PrintStream(f); 

// Write data to file 

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Pcap and Logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872118812">Capture PCAP</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872996374">Capture log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture PD Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="1033451790">Capture PD log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Base Product offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create DataPackage" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;RTC_${id}_GY_BASE_111111111&lt;/id&gt;&#xd;
            &lt;name&gt;RTC_${id}_GY_BASE&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 07/31/2018 15:40:12&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;RnC_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin on 07/31/2018 15:56:36&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_${id}_pcc_profile&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;2&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;2&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;HSQ_PCC_RULE&lt;/name&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;HSQ_PCC_RULE&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;2&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;2&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Static&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;1&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;FUP_PCC_RULE&lt;/name&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;FUP_PCC_RULE&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Static&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;2&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;512&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;512&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;FUP2_PCC_RULE&lt;/name&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;FUP2_PCC_RULE&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;512&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Kbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;512&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Kbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Static&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;RTC_${id}_Quota_profile&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;quota-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
            &lt;rncProfileDatas&gt;&#xd;
                &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                &lt;id&gt;&lt;/id&gt;&#xd;
                &lt;balanceLevel&gt;HSQ&lt;/balanceLevel&gt;&#xd;
                &lt;description&gt;Created by admin on 07/31/2018 15:54:29&lt;/description&gt;&#xd;
                &lt;name&gt;RTC_${id}_Quota_profile&lt;/name&gt;&#xd;
                &lt;quotaType&gt;VOLUME&lt;/quotaType&gt;&#xd;
                &lt;renewal-interval-unit&gt;MONTH&lt;/renewal-interval-unit&gt;&#xd;
                &lt;rncProfileDetailDatas&gt;&#xd;
                    &lt;balance&gt;1000&lt;/balance&gt;&#xd;
                    &lt;balanceUnit&gt;MB&lt;/balanceUnit&gt;&#xd;
                    &lt;dataServiceType&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                    &lt;/dataServiceType&gt;&#xd;
                    &lt;fupLevel&gt;0&lt;/fupLevel&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;pulseTimeUnit&gt;SECOND&lt;/pulseTimeUnit&gt;&#xd;
                    &lt;pulseVolume&gt;20&lt;/pulseVolume&gt;&#xd;
                    &lt;pulseVolumeUnit&gt;MB&lt;/pulseVolumeUnit&gt;&#xd;
                    &lt;rateUnit&gt;VOLUME&lt;/rateUnit&gt;&#xd;
                    &lt;ratingGroupData&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;RATING_GROUP_1&lt;/id&gt;&#xd;
                        &lt;name&gt;Default_Rating_Group&lt;/name&gt;&#xd;
                    &lt;/ratingGroupData&gt;&#xd;
                    &lt;timeBalanceUnit&gt;DAY&lt;/timeBalanceUnit&gt;&#xd;
                    &lt;timeLimitUnit&gt;SECOND&lt;/timeLimitUnit&gt;&#xd;
                    &lt;usageLimitUnit&gt;MB&lt;/usageLimitUnit&gt;&#xd;
                &lt;/rncProfileDetailDatas&gt;&#xd;
                &lt;rncProfileDetailDatas&gt;&#xd;
                    &lt;balance&gt;500&lt;/balance&gt;&#xd;
                    &lt;balanceUnit&gt;MB&lt;/balanceUnit&gt;&#xd;
                    &lt;dataServiceType&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                    &lt;/dataServiceType&gt;&#xd;
                    &lt;fupLevel&gt;1&lt;/fupLevel&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;pulseTimeUnit&gt;SECOND&lt;/pulseTimeUnit&gt;&#xd;
                    &lt;pulseVolume&gt;10&lt;/pulseVolume&gt;&#xd;
                    &lt;pulseVolumeUnit&gt;MB&lt;/pulseVolumeUnit&gt;&#xd;
                    &lt;rateUnit&gt;VOLUME&lt;/rateUnit&gt;&#xd;
                    &lt;ratingGroupData&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;RATING_GROUP_1&lt;/id&gt;&#xd;
                        &lt;name&gt;Default_Rating_Group&lt;/name&gt;&#xd;
                    &lt;/ratingGroupData&gt;&#xd;
                    &lt;timeBalanceUnit&gt;DAY&lt;/timeBalanceUnit&gt;&#xd;
                    &lt;timeLimitUnit&gt;SECOND&lt;/timeLimitUnit&gt;&#xd;
                    &lt;usageLimitUnit&gt;MB&lt;/usageLimitUnit&gt;&#xd;
                &lt;/rncProfileDetailDatas&gt;&#xd;
                &lt;rncProfileDetailDatas&gt;&#xd;
                    &lt;balance&gt;250&lt;/balance&gt;&#xd;
                    &lt;balanceUnit&gt;MB&lt;/balanceUnit&gt;&#xd;
                    &lt;dataServiceType&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                    &lt;/dataServiceType&gt;&#xd;
                    &lt;fupLevel&gt;2&lt;/fupLevel&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;pulseTimeUnit&gt;SECOND&lt;/pulseTimeUnit&gt;&#xd;
                    &lt;pulseVolume&gt;5&lt;/pulseVolume&gt;&#xd;
                    &lt;pulseVolumeUnit&gt;MB&lt;/pulseVolumeUnit&gt;&#xd;
                    &lt;rateUnit&gt;VOLUME&lt;/rateUnit&gt;&#xd;
                    &lt;ratingGroupData&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;RATING_GROUP_1&lt;/id&gt;&#xd;
                        &lt;name&gt;Default_Rating_Group&lt;/name&gt;&#xd;
                    &lt;/ratingGroupData&gt;&#xd;
                    &lt;timeBalanceUnit&gt;DAY&lt;/timeBalanceUnit&gt;&#xd;
                    &lt;timeLimitUnit&gt;SECOND&lt;/timeLimitUnit&gt;&#xd;
                    &lt;usageLimitUnit&gt;MB&lt;/usageLimitUnit&gt;&#xd;
                &lt;/rncProfileDetailDatas&gt;&#xd;
                &lt;unitType&gt;TOTAL&lt;/unitType&gt;&#xd;
            &lt;/rncProfileDatas&gt;&#xd;
            &lt;rate-cards/&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/xml</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Offer" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${productoffer_id}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${productoffer}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin on 05/23/2018 10:12:03&quot;,&#xd;
   &quot;type&quot;:&quot;BASE&quot;,&#xd;
   &quot;currency&quot;:&quot;${currency}&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${datapackage_id}&quot;,&#xd;
   &quot;validityPeriod&quot;:null,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                  <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">true</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To TEST Mode" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=TEST</stringProp>
                  <stringProp name="HTTPSampler.method">PUT</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">true</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
                <hashTree>
                  <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                    <collectionProp name="ModuleController.node_path">
                      <stringProp name="-1227702913">WorkBench</stringProp>
                      <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                      <stringProp name="18059174">Common Functions</stringProp>
                      <stringProp name="-803016769">PD: Reload Policy</stringProp>
                    </collectionProp>
                  </ModuleController>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To LIVE Mode" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=LIVE</stringProp>
                  <stringProp name="HTTPSampler.method">PUT</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">true</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Offer" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                  <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}.json</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provision Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsAddSubscriber&gt;&#xd;
         &lt;subscriberProfile&gt;    &#xd;
			&lt;entry&gt;&#xd;
			   &lt;key&gt;USERNAME&lt;/key&gt;&#xd;
			   &lt;value&gt;${username}&lt;/value&gt;&#xd;
			&lt;/entry&gt;&#xd;
			&lt;entry&gt;&#xd;
			   &lt;key&gt;PASSWORD&lt;/key&gt;&#xd;
			   &lt;value&gt;${username}&lt;/value&gt;&#xd;
			&lt;/entry&gt;&#xd;
			&lt;entry&gt;&#xd;
			   &lt;key&gt;STATUS&lt;/key&gt;&#xd;
			   &lt;value&gt;Active&lt;/value&gt;&#xd;
			&lt;/entry&gt;&#xd;
			&lt;entry&gt;&#xd;
			   &lt;key&gt;IMSI&lt;/key&gt;&#xd;
			  &lt;value&gt;${username}&lt;/value&gt;&#xd;
			&lt;/entry&gt;&#xd;
			&lt;entry&gt;&#xd;
			   &lt;key&gt;MSISDN&lt;/key&gt;&#xd;
			  &lt;value&gt;${username}&lt;/value&gt;&#xd;
			&lt;/entry&gt;&#xd;
            &lt;productOffer&gt;${productoffer}&lt;/productOffer&gt;&#xd;
            &lt;subscriberIdentity&gt;${subscriberidentity}&lt;/subscriberIdentity&gt;&#xd;
         &lt;/subscriberProfile&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsAddSubscriber&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscriber_service}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5010_CCR-I Gx" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Framed-IP-Address</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${framed-ip-address}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">1</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">2</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${sessionid_gx}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpName.13">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.15">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.17">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">18</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">2</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Charging-Rule-Name:4853515F5043435F52554C45</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5010_CCR-I Gy" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Framed-IP-Address</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${framed-ip-address}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.1">1</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Requested-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.2">1</stringProp>
            <stringProp name="DiameterSampler.avpName.3">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.3">10</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">1</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">1</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Event-Timestamp</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2015-10-15 16:14:38 +0530</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">2</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.15">1</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.16">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.17">2</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.18">0</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.19">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">21</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">5</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Total-Octets:104857600</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:83886080</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Get Session using Ws and Db" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </com.computaris.jmeter.ext.controls.ParameterizedController>
          <hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Subscriber&apos;s Gy Session" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SessionManagementService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ses=&quot;http://sessionmanagement.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;ses:wsGetSessionsBySubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;sessionType&gt;&lt;/sessionType&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/ses:wsGetSessionsBySubscriberIdentity&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <stringProp name="TestPlan.comments">Web Service Call to Get Session By Subscriberidentity</stringProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Get Session from DB" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">select CORE_SESSION_ID from TBLT_SESSION where SUBSCRIBER_IDENTITY = &apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1332258241">${sessionid}:Gy
</stringProp>
                  <stringProp name="1458757190">${sessionid_gx}:Gx
</stringProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">check if session id is present or not</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5010_CCR-U Gy (960Mb)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">413003</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">404093</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.21">1006632960</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">5</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Total-Octets:41943040</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:41943040</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5010_CCR-U Gy (40Mb)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">413003</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">404093</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.21">41943040</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">5</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Total-Octets:52428800</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:41943040</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Balance" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsGetNonMonitoryBalance&gt;&#xd;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;packageId&gt;${datapackage_id}&lt;/packageId&gt;&#xd;
         &lt;packageName&gt;&lt;/packageName&gt;&#xd;
         &lt;subscriptionId&gt;&lt;/subscriptionId&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsGetNonMonitoryBalance&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscription_service}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="check remaining balance" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/actual/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/remaining/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/actual/totalOctets[text()=&apos;524288000&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/remaining/totalOctets[text()=&apos;524288000&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level2&apos;]/billingCycleBalance/actual/totalOctets[text()=&apos;262144000&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level2&apos;]/billingCycleBalance/remaining/totalOctets[text()=&apos;262144000&apos;]</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="RTC_5010_RAR-RAA" enabled="true">
            <stringProp name="TestPlan.comments">As per configuration PCRF will send RAR after 1 minute</stringProp>
            <stringProp name="DiameterTimer.duration">500</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Re-Auth-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${sessionid_gx}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${username}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">5</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="RAR Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">false</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Re-Auth-Request</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID"></stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">false</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Session-Id</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">${sessionid_gx}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5010_CCR-U Gy (480Mb)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">413003</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">404093</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.21">503316480</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">5</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Total-Octets:20971520</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:20971520</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5010_CCR-U Gy (20Mb)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">413003</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">404093</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.21">20971520</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">5</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Total-Octets:26214400</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:20971520</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Balance" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsGetNonMonitoryBalance&gt;&#xd;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;packageId&gt;${datapackage_id}&lt;/packageId&gt;&#xd;
         &lt;packageName&gt;&lt;/packageName&gt;&#xd;
         &lt;subscriptionId&gt;&lt;/subscriptionId&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsGetNonMonitoryBalance&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscription_service}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="check remaining balance" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/actual/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/remaining/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/actual/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/remaining/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level2&apos;]/billingCycleBalance/actual/totalOctets[text()=&apos;262144000&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level2&apos;]/billingCycleBalance/remaining/totalOctets[text()=&apos;262144000&apos;]</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="RTC_5010_RAR-RAA" enabled="true">
            <stringProp name="TestPlan.comments">As per configuration PCRF will send RAR after 1 minute</stringProp>
            <stringProp name="DiameterTimer.duration">500</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Re-Auth-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${sessionid_gx}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${username}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">5</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="RAR Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">false</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Re-Auth-Request</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID"></stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">false</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Session-Id</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">${sessionid_gx}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5010_CCR-U Gy (240Mb)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">413003</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">404093</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.21">251658240</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">6</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Total-Octets:10485760</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:10485760</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
              <stringProp name="DiameterAssertion.avpName.5">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.5">Final-Unit-Indication:Final-Unit-Action:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.5">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.5"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5010_CCR-T Gy (10Mb)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">413003</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">404093</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">3</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.21">10485760</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-T Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Balance" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsGetNonMonitoryBalance&gt;&#xd;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;packageId&gt;${datapackage_id}&lt;/packageId&gt;&#xd;
         &lt;packageName&gt;&lt;/packageName&gt;&#xd;
         &lt;subscriptionId&gt;&lt;/subscriptionId&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsGetNonMonitoryBalance&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscription_service}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="check remaining balance" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/actual/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/remaining/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/actual/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/remaining/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level2&apos;]/billingCycleBalance/actual/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level2&apos;]/billingCycleBalance/remaining/totalOctets[text()=&apos;0&apos;]</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5010_CCR-T Gx" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-User-Location-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">0004F489008D3039</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.3">0</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid_gx}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">3</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">3</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.11">2</stringProp>
            <stringProp name="DiameterSampler.avpName.12">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">0</stringProp>
            <stringProp name="DiameterSampler.avpName.13">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.13">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Called-Station-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">internet</stringProp>
            <stringProp name="DiameterSampler.avpCounter">15</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-T Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Subscriber&apos;s Session" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SessionManagementService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ses=&quot;http://sessionmanagement.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;ses:wsGetSessionsBySubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;sessionType&gt;&lt;/sessionType&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/ses:wsGetSessionsBySubscriberIdentity&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <stringProp name="TestPlan.comments">Subscriber&apos;s Session should not be fetched</stringProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2101284903">&lt;responseCode&gt;404&lt;/responseCode&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Post Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop pcap and logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="stop Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-720136512">Stop Pcap</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop NV log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-632654166">Stop NV log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop PD log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-592019242">Stop PD log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="End of RTC_5010" enabled="true"/>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Module Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Gx+Gy-RTC_5011" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">RTC_5011| Gx+Gy | Volume | Verify that NetVertex is supporting three level fup plan in single session.</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Gx+Gy-RTC_5011" enabled="true">
          <stringProp name="TestPlan.comments">RTC_2024 | Gx+Gy | Volume | Check and Verify Basic Diameter Gx and Gy Call Flow with addon for international roaming.</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="id" elementType="Argument">
                <stringProp name="Argument.name">id</stringProp>
                <stringProp name="Argument.value">5011</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">60406</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">Gy-RTC_5011</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subscriberidentity" elementType="Argument">
                <stringProp name="Argument.name">subscriberidentity</stringProp>
                <stringProp name="Argument.value">2111115011</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">2111115011</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">2111115011</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">2111115011</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">2111115011</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sessionid_gx" elementType="Argument">
                <stringProp name="Argument.name">sessionid_gx</stringProp>
                <stringProp name="Argument.value">2111115010_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sessionid" elementType="Argument">
                <stringProp name="Argument.name">sessionid</stringProp>
                <stringProp name="Argument.value">2111115011_gy</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage" elementType="Argument">
                <stringProp name="Argument.name">datapackage</stringProp>
                <stringProp name="Argument.value">RTC_5011_GY_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage_id" elementType="Argument">
                <stringProp name="Argument.name">datapackage_id</stringProp>
                <stringProp name="Argument.value">RTC_5011_GY_BASE_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer" elementType="Argument">
                <stringProp name="Argument.name">productoffer</stringProp>
                <stringProp name="Argument.value">RTC_5011_GY_PO</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer_id" elementType="Argument">
                <stringProp name="Argument.name">productoffer_id</stringProp>
                <stringProp name="Argument.value">RTC_5011_GY_PO_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="framed-ip-address" elementType="Argument">
                <stringProp name="Argument.name">framed-ip-address</stringProp>
                <stringProp name="Argument.value">C0A81418</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Cleanup" enabled="false"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Change product offer mode to test" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">UPDATE TBLM_PRODUCT_OFFER SET PACKAGE_MODE=&apos;TEST&apos; where ID = &apos;${productoffer_id}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Base Product Offer" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url_without_ext}/${productoffer_id}.json</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="change package status to deleted" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">UPDATE TBLM_PACKAGE SET STATUS=&apos;DELETED&apos; where ID IN (&apos;${datapackage_id}&apos;)

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="delete subscriber session" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLT_SESSION WHERE SUBSCRIBER_IDENTITY=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="delete subscription" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLT_SUBSCRIPTION WHERE SUBSCRIBER_ID=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="delete non monetary balance" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLM_DATA_BALANCE WHERE SUBSCRIBER_ID=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="delete balance" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLM_MONETARY_BALANCE WHERE SUBSCRIBER_ID=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsDeleteSubscriberProfile&gt;&#xd;
         &lt;subscriberID&gt;${subscriberidentity}&lt;/subscriberID&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsDeleteSubscriberProfile&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscriber_service}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete Subscriber&apos;s Alternate Identity" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLM_ALTERNATE_IDENTITY WHERE SUBSCRIBER_ID=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Purge Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsPurgeSubscriber&gt;&#xd;
         &lt;subscriberID&gt;${subscriberidentity}&lt;/subscriberID&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;param1&gt;&lt;/param1&gt;&#xd;
         &lt;param2&gt;&lt;/param2&gt;&#xd;
      &lt;/sub:wsPurgeSubscriber&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscriber_service}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Clear active sessions for the Subscriber" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">UPDATE TBLM_PACKAGE SET STATUS=&apos;DELETED&apos; where ID IN (&apos;${datapackage_id}&apos;)

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Pre Processing" enabled="true"/>
          <hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start of RTC_5011" enabled="true"/>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true); 
f = new FileOutputStream(mapping_file_name, true); 
p = new PrintStream(f); 

// Write data to file 

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Pcap and Logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872118812">Capture PCAP</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872996374">Capture log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture PD Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="1033451790">Capture PD log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Base Product offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create DataPackage" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;RTC_${id}_GY_BASE_111111111&lt;/id&gt;&#xd;
            &lt;name&gt;RTC_${id}_GY_BASE&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 07/31/2018 15:40:12&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;RnC_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin on 07/31/2018 15:56:36&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_${id}_pcc_profile&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;2&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;2&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;HSQ_PCC_RULE_${id}&lt;/name&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;HSQ_PCC_RULE_${id}&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;2&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;2&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Static&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;1&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;FUP_PCC_RULE_${id}&lt;/name&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;FUP_PCC_RULE_${id}&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Static&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;2&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;512&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;512&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;FUP2_PCC_RULE_${id}&lt;/name&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;FUP2_PCC_RULE_${id}&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;512&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Kbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;512&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Kbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Static&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;RTC_${id}_Quota_profile&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;quota-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
            &lt;rncProfileDatas&gt;&#xd;
                &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                &lt;id&gt;&lt;/id&gt;&#xd;
                &lt;balanceLevel&gt;HSQ&lt;/balanceLevel&gt;&#xd;
                &lt;description&gt;Created by admin on 07/31/2018 15:54:29&lt;/description&gt;&#xd;
                &lt;name&gt;RTC_${id}_Quota_profile&lt;/name&gt;&#xd;
                &lt;quotaType&gt;TIME&lt;/quotaType&gt;&#xd;
                &lt;renewal-interval-unit&gt;MONTH&lt;/renewal-interval-unit&gt;&#xd;
                &lt;rncProfileDetailDatas&gt;&#xd;
                    &lt;balance&gt;2000&lt;/balance&gt;&#xd;
                    &lt;balanceUnit&gt;MB&lt;/balanceUnit&gt;&#xd;
                    &lt;dataServiceType&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                    &lt;/dataServiceType&gt;&#xd;
                    &lt;fupLevel&gt;0&lt;/fupLevel&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;pulseTime&gt;20&lt;/pulseTime&gt;&#xd;
                    &lt;pulseTimeUnit&gt;SECOND&lt;/pulseTimeUnit&gt;&#xd;
                    &lt;pulseVolume&gt;20&lt;/pulseVolume&gt;&#xd;
                    &lt;pulseVolumeUnit&gt;MB&lt;/pulseVolumeUnit&gt;&#xd;
                    &lt;rateUnit&gt;VOLUME&lt;/rateUnit&gt;&#xd;
                    &lt;ratingGroupData&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;RATING_GROUP_1&lt;/id&gt;&#xd;
                        &lt;name&gt;Default_Rating_Group&lt;/name&gt;&#xd;
                    &lt;/ratingGroupData&gt;&#xd;
                    &lt;timeBalance&gt;2000&lt;/timeBalance&gt;&#xd;
                    &lt;timeBalanceUnit&gt;SECOND&lt;/timeBalanceUnit&gt;&#xd;
                    &lt;timeLimitUnit&gt;SECOND&lt;/timeLimitUnit&gt;&#xd;
                    &lt;usageLimitUnit&gt;MB&lt;/usageLimitUnit&gt;&#xd;
                &lt;/rncProfileDetailDatas&gt;&#xd;
                &lt;rncProfileDetailDatas&gt;&#xd;
                    &lt;balance&gt;1000&lt;/balance&gt;&#xd;
                    &lt;balanceUnit&gt;MB&lt;/balanceUnit&gt;&#xd;
                    &lt;dataServiceType&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                    &lt;/dataServiceType&gt;&#xd;
                    &lt;fupLevel&gt;1&lt;/fupLevel&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;pulseTime&gt;10&lt;/pulseTime&gt;&#xd;
                    &lt;pulseTimeUnit&gt;SECOND&lt;/pulseTimeUnit&gt;&#xd;
                    &lt;pulseVolume&gt;10&lt;/pulseVolume&gt;&#xd;
                    &lt;pulseVolumeUnit&gt;MB&lt;/pulseVolumeUnit&gt;&#xd;
                    &lt;rateUnit&gt;VOLUME&lt;/rateUnit&gt;&#xd;
                    &lt;ratingGroupData&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;RATING_GROUP_1&lt;/id&gt;&#xd;
                        &lt;name&gt;Default_Rating_Group&lt;/name&gt;&#xd;
                    &lt;/ratingGroupData&gt;                    &#xd;
                    &lt;timeBalance&gt;1000&lt;/timeBalance&gt;&#xd;
                    &lt;timeBalanceUnit&gt;SECOND&lt;/timeBalanceUnit&gt;&#xd;
                    &lt;timeLimitUnit&gt;SECOND&lt;/timeLimitUnit&gt;&#xd;
                    &lt;usageLimitUnit&gt;MB&lt;/usageLimitUnit&gt;&#xd;
                &lt;/rncProfileDetailDatas&gt;&#xd;
                &lt;rncProfileDetailDatas&gt;&#xd;
                    &lt;balance&gt;1000&lt;/balance&gt;&#xd;
                    &lt;balanceUnit&gt;MB&lt;/balanceUnit&gt;&#xd;
                    &lt;dataServiceType&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                    &lt;/dataServiceType&gt;&#xd;
                    &lt;fupLevel&gt;2&lt;/fupLevel&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;pulseTime&gt;5&lt;/pulseTime&gt;&#xd;
                    &lt;pulseTimeUnit&gt;SECOND&lt;/pulseTimeUnit&gt;&#xd;
                    &lt;pulseVolume&gt;5&lt;/pulseVolume&gt;&#xd;
                    &lt;pulseVolumeUnit&gt;MB&lt;/pulseVolumeUnit&gt;&#xd;
                    &lt;rateUnit&gt;VOLUME&lt;/rateUnit&gt;&#xd;
                    &lt;ratingGroupData&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;RATING_GROUP_1&lt;/id&gt;&#xd;
                        &lt;name&gt;Default_Rating_Group&lt;/name&gt;&#xd;
                    &lt;/ratingGroupData&gt;&#xd;
                    &lt;timeBalance&gt;1000&lt;/timeBalance&gt;&#xd;
                    &lt;timeBalanceUnit&gt;SECOND&lt;/timeBalanceUnit&gt;&#xd;
                    &lt;timeLimitUnit&gt;SECOND&lt;/timeLimitUnit&gt;&#xd;
                    &lt;usageLimitUnit&gt;MB&lt;/usageLimitUnit&gt;&#xd;
                &lt;/rncProfileDetailDatas&gt;&#xd;
                &lt;unitType&gt;TOTAL&lt;/unitType&gt;&#xd;
            &lt;/rncProfileDatas&gt;&#xd;
            &lt;rate-cards/&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/xml</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Offer" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${productoffer_id}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${productoffer}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin on 05/23/2018 10:12:03&quot;,&#xd;
   &quot;type&quot;:&quot;BASE&quot;,&#xd;
   &quot;currency&quot;:&quot;${currency}&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${datapackage_id}&quot;,&#xd;
   &quot;validityPeriod&quot;:null,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                  <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">true</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To TEST Mode" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=TEST</stringProp>
                  <stringProp name="HTTPSampler.method">PUT</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">true</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
                <hashTree>
                  <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                    <collectionProp name="ModuleController.node_path">
                      <stringProp name="-1227702913">WorkBench</stringProp>
                      <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                      <stringProp name="18059174">Common Functions</stringProp>
                      <stringProp name="-803016769">PD: Reload Policy</stringProp>
                    </collectionProp>
                  </ModuleController>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To LIVE Mode" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=LIVE</stringProp>
                  <stringProp name="HTTPSampler.method">PUT</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">true</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Offer" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                  <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}.json</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provision Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsAddSubscriber&gt;&#xd;
         &lt;subscriberProfile&gt;    &#xd;
			&lt;entry&gt;&#xd;
			   &lt;key&gt;USERNAME&lt;/key&gt;&#xd;
			   &lt;value&gt;${username}&lt;/value&gt;&#xd;
			&lt;/entry&gt;&#xd;
			&lt;entry&gt;&#xd;
			   &lt;key&gt;PASSWORD&lt;/key&gt;&#xd;
			   &lt;value&gt;${username}&lt;/value&gt;&#xd;
			&lt;/entry&gt;&#xd;
			&lt;entry&gt;&#xd;
			   &lt;key&gt;STATUS&lt;/key&gt;&#xd;
			   &lt;value&gt;Active&lt;/value&gt;&#xd;
			&lt;/entry&gt;&#xd;
			&lt;entry&gt;&#xd;
			   &lt;key&gt;IMSI&lt;/key&gt;&#xd;
			  &lt;value&gt;${username}&lt;/value&gt;&#xd;
			&lt;/entry&gt;&#xd;
			&lt;entry&gt;&#xd;
			   &lt;key&gt;MSISDN&lt;/key&gt;&#xd;
			  &lt;value&gt;${username}&lt;/value&gt;&#xd;
			&lt;/entry&gt;&#xd;
            &lt;productOffer&gt;${productoffer}&lt;/productOffer&gt;&#xd;
            &lt;subscriberIdentity&gt;${subscriberidentity}&lt;/subscriberIdentity&gt;&#xd;
         &lt;/subscriberProfile&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsAddSubscriber&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscriber_service}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5011_CCR-I Gx" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Framed-IP-Address</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${framed-ip-address}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">1</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">2</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${sessionid_gx}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpName.13">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.15">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.17">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">18</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">2</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Charging-Rule-Name:4853515f5043435f52554c455f35303131</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5011_CCR-I Gy" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Framed-IP-Address</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${framed-ip-address}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.1">1</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Requested-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.2">1</stringProp>
            <stringProp name="DiameterSampler.avpName.3">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.3">10</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">1</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">1</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Event-Timestamp</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2015-10-15 16:14:38 +0530</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">2</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.15">1</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.16">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.17">2</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.18">0</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.19">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">21</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">5</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Time:600</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Time-Quota-Threshold:480</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Get Session using Ws and Db" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </com.computaris.jmeter.ext.controls.ParameterizedController>
          <hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Subscriber&apos;s Gy Session" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SessionManagementService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ses=&quot;http://sessionmanagement.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;ses:wsGetSessionsBySubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;sessionType&gt;&lt;/sessionType&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/ses:wsGetSessionsBySubscriberIdentity&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <stringProp name="TestPlan.comments">Web Service Call to Get Session By Subscriberidentity</stringProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Get Session from DB" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">select CORE_SESSION_ID from TBLT_SESSION where SUBSCRIBER_IDENTITY = &apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1332258241">${sessionid}:Gy
</stringProp>
                  <stringProp name="1458757190">${sessionid_gx}:Gx
</stringProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">check if session id is present or not</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5011_CCR-U Gy (1960Sec)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">413003</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">404093</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Time</stringProp>
            <stringProp name="DiameterSampler.avpData.21">1960</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">5</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Time:40</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Time-Quota-Threshold:40</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Balance" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsGetNonMonitoryBalance&gt;&#xd;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;packageId&gt;${datapackage_id}&lt;/packageId&gt;&#xd;
         &lt;packageName&gt;&lt;/packageName&gt;&#xd;
         &lt;subscriptionId&gt;&lt;/subscriptionId&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsGetNonMonitoryBalance&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscription_service}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="check remaining balance" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/actual/time[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/remaining/time[text()=&apos;40&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/actual/time[text()=&apos;1000&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/remaining/time[text()=&apos;1000&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level2&apos;]/billingCycleBalance/actual/time[text()=&apos;1000&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level2&apos;]/billingCycleBalance/remaining/time[text()=&apos;1000&apos;]</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5011_CCR-U Gy (40Sec)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">413003</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">404093</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Time</stringProp>
            <stringProp name="DiameterSampler.avpData.21">40</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">5</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Time:600</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Time-Quota-Threshold:480</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Balance" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsGetNonMonitoryBalance&gt;&#xd;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;packageId&gt;${datapackage_id}&lt;/packageId&gt;&#xd;
         &lt;packageName&gt;&lt;/packageName&gt;&#xd;
         &lt;subscriptionId&gt;&lt;/subscriptionId&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsGetNonMonitoryBalance&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscription_service}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="check remaining balance" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/actual/time[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/remaining/time[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/actual/time[text()=&apos;400&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/remaining/time[text()=&apos;1000&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level2&apos;]/billingCycleBalance/actual/time[text()=&apos;1000&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level2&apos;]/billingCycleBalance/remaining/time[text()=&apos;1000&apos;]</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="RTC_5011_RAR-RAA" enabled="true">
            <stringProp name="TestPlan.comments">As per configuration PCRF will send RAR after 1 minute</stringProp>
            <stringProp name="DiameterTimer.duration">500</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Re-Auth-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${sessionid_gx}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${username}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">5</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="RAR Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">false</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Re-Auth-Request</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID"></stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">false</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Session-Id</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">${sessionid_gx}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5011_CCR-U Gy (980Sec)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">413003</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">404093</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Time</stringProp>
            <stringProp name="DiameterSampler.avpData.21">980</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">5</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Time:20</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Time-Quota-Threshold:20</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5011_CCR-U Gy (20Sec)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">413003</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">404093</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Time</stringProp>
            <stringProp name="DiameterSampler.avpData.21">20</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">5</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Time:600</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Time-Quota-Threshold:480</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Balance" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsGetNonMonitoryBalance&gt;&#xd;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;packageId&gt;${datapackage_id}&lt;/packageId&gt;&#xd;
         &lt;packageName&gt;&lt;/packageName&gt;&#xd;
         &lt;subscriptionId&gt;&lt;/subscriptionId&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsGetNonMonitoryBalance&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscription_service}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="check remaining balance" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/actual/time[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/remaining/time[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/actual/time[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/remaining/time[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level2&apos;]/billingCycleBalance/actual/time[text()=&apos;400&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level2&apos;]/billingCycleBalance/remaining/time[text()=&apos;1000&apos;]</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="RTC_5011_RAR-RAA" enabled="true">
            <stringProp name="TestPlan.comments">As per configuration PCRF will send RAR after 1 minute</stringProp>
            <stringProp name="DiameterTimer.duration">500</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Re-Auth-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${sessionid_gx}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${username}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">5</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="RAR Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">false</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Re-Auth-Request</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID"></stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">false</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Session-Id</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">${sessionid_gx}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5011_CCR-U Gy (990Sec)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">413003</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">404093</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Time</stringProp>
            <stringProp name="DiameterSampler.avpData.21">990</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">6</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Time:10</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Time-Quota-Threshold:10</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
              <stringProp name="DiameterAssertion.avpName.5">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.5">Final-Unit-Indication:Final-Unit-Action:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.5">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.5"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5011_CCR-T Gy (10Sec)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">413003</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">404093</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">3</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Time</stringProp>
            <stringProp name="DiameterSampler.avpData.21">10</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-T Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Balance" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsGetNonMonitoryBalance&gt;&#xd;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;packageId&gt;${datapackage_id}&lt;/packageId&gt;&#xd;
         &lt;packageName&gt;&lt;/packageName&gt;&#xd;
         &lt;subscriptionId&gt;&lt;/subscriptionId&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsGetNonMonitoryBalance&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscription_service}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="check remaining balance" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/actual/time[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/remaining/time[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/actual/time[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/remaining/time[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level2&apos;]/billingCycleBalance/actual/time[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level2&apos;]/billingCycleBalance/remaining/time[text()=&apos;0&apos;]</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5011_CCR-T Gx" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-User-Location-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">0004F489008D3039</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.3">0</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid_gx}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">3</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">3</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.11">2</stringProp>
            <stringProp name="DiameterSampler.avpName.12">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">0</stringProp>
            <stringProp name="DiameterSampler.avpName.13">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.13">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Called-Station-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">internet</stringProp>
            <stringProp name="DiameterSampler.avpCounter">15</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-T Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Subscriber&apos;s Session" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SessionManagementService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ses=&quot;http://sessionmanagement.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;ses:wsGetSessionsBySubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;sessionType&gt;&lt;/sessionType&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/ses:wsGetSessionsBySubscriberIdentity&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <stringProp name="TestPlan.comments">Subscriber&apos;s Session should not be fetched</stringProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2101284903">&lt;responseCode&gt;404&lt;/responseCode&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Post Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop pcap and logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="stop Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-720136512">Stop Pcap</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop NV log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-632654166">Stop NV log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop PD log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-592019242">Stop PD log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="End of RTC_5011" enabled="true"/>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Module Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Gx+Gy-RTC_5012" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">RTC_5012 | Gx+Gy | Volume | Verify that NetVertex is supporting three level fup plan in single session.</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Gx+Gy-RTC_5012" enabled="true">
          <stringProp name="TestPlan.comments">RTC_5012 | Gx+Gy | Volume | Check and Verify Basic Diameter Gx and Gy Call Flow with addon for international roaming.</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="id" elementType="Argument">
                <stringProp name="Argument.name">id</stringProp>
                <stringProp name="Argument.value">5012</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">60407</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">Gy-RTC_5012</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subscriberidentity" elementType="Argument">
                <stringProp name="Argument.name">subscriberidentity</stringProp>
                <stringProp name="Argument.value">2111115012</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">2111115012</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">2111115012</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">2111115012</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">2111115012</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sessionid_gx" elementType="Argument">
                <stringProp name="Argument.name">sessionid_gx</stringProp>
                <stringProp name="Argument.value">2111115010_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sessionid" elementType="Argument">
                <stringProp name="Argument.name">sessionid</stringProp>
                <stringProp name="Argument.value">2111115012_gy</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage" elementType="Argument">
                <stringProp name="Argument.name">datapackage</stringProp>
                <stringProp name="Argument.value">RTC_5012_GY_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage_id" elementType="Argument">
                <stringProp name="Argument.name">datapackage_id</stringProp>
                <stringProp name="Argument.value">RTC_5012_GY_BASE_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer" elementType="Argument">
                <stringProp name="Argument.name">productoffer</stringProp>
                <stringProp name="Argument.value">RTC_5012_GY_PO</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer_id" elementType="Argument">
                <stringProp name="Argument.name">productoffer_id</stringProp>
                <stringProp name="Argument.value">RTC_5012_GY_PO_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="framed-ip-address" elementType="Argument">
                <stringProp name="Argument.name">framed-ip-address</stringProp>
                <stringProp name="Argument.value">C0A81419</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Cleanup" enabled="false"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Change product offer mode to test" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">UPDATE TBLM_PRODUCT_OFFER SET PACKAGE_MODE=&apos;TEST&apos; where ID = &apos;${productoffer_id}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Base Product Offer" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url_without_ext}/${productoffer_id}.json</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="change package status to deleted" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">UPDATE TBLM_PACKAGE SET STATUS=&apos;DELETED&apos; where ID IN (&apos;${datapackage_id}&apos;)

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="delete subscriber session" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLT_SESSION WHERE SUBSCRIBER_IDENTITY=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="delete subscription" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLT_SUBSCRIPTION WHERE SUBSCRIBER_ID=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="delete non monetary balance" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLM_DATA_BALANCE WHERE SUBSCRIBER_ID=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="delete balance" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLM_MONETARY_BALANCE WHERE SUBSCRIBER_ID=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsDeleteSubscriberProfile&gt;&#xd;
         &lt;subscriberID&gt;${subscriberidentity}&lt;/subscriberID&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsDeleteSubscriberProfile&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscriber_service}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete Subscriber&apos;s Alternate Identity" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLM_ALTERNATE_IDENTITY WHERE SUBSCRIBER_ID=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Purge Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsPurgeSubscriber&gt;&#xd;
         &lt;subscriberID&gt;${subscriberidentity}&lt;/subscriberID&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;param1&gt;&lt;/param1&gt;&#xd;
         &lt;param2&gt;&lt;/param2&gt;&#xd;
      &lt;/sub:wsPurgeSubscriber&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscriber_service}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Clear active sessions for the Subscriber" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">UPDATE TBLM_PACKAGE SET STATUS=&apos;DELETED&apos; where ID IN (&apos;${datapackage_id}&apos;)

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Pre Processing" enabled="true"/>
          <hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start of RTC_5012" enabled="true"/>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true); 
f = new FileOutputStream(mapping_file_name, true); 
p = new PrintStream(f); 

// Write data to file 

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Pcap and Logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872118812">Capture PCAP</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872996374">Capture log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture PD Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="1033451790">Capture PD log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Base Product offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create DataPackage" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;RTC_${id}_GY_BASE_111111111&lt;/id&gt;&#xd;
            &lt;name&gt;RTC_${id}_GY_BASE&lt;/name&gt;&#xd;
            &lt;description&gt;Created by Admin&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;RnC_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin on 07/31/2018 15:56:36&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_${id}_pcc_profile&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;2&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;2&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;HSQ_PCC_RULE_${id}&lt;/name&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;HSQ_PCC_RULE_${id}&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;2&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;2&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Static&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;1&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;FUP_PCC_RULE_${id}&lt;/name&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;FUP_PCC_RULE_${id}&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Static&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;2&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;5${id}&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;5${id}&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;FUP2_PCC_RULE_${id}&lt;/name&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;FUP2_PCC_RULE_${id}&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;5${id}&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Kbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;5${id}&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Kbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Static&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;RTC_${id}_Quota_profile&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;quota-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
            &lt;rncProfileDatas&gt;&#xd;
                &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                &lt;id&gt;&lt;/id&gt;&#xd;
                &lt;balanceLevel&gt;HSQ&lt;/balanceLevel&gt;&#xd;
                &lt;description&gt;Created by admin on 07/31/2018 15:54:29&lt;/description&gt;&#xd;
                &lt;name&gt;RTC_${id}_Quota_profile&lt;/name&gt;&#xd;
                &lt;quotaType&gt;HYBRID&lt;/quotaType&gt;&#xd;
                &lt;renewal-interval-unit&gt;MONTH&lt;/renewal-interval-unit&gt;&#xd;
                &lt;rncProfileDetailDatas&gt;&#xd;
                    &lt;balance&gt;2000&lt;/balance&gt;&#xd;
                    &lt;balanceUnit&gt;MB&lt;/balanceUnit&gt;&#xd;
                    &lt;dataServiceType&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                    &lt;/dataServiceType&gt;&#xd;
                    &lt;fupLevel&gt;0&lt;/fupLevel&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;pulseTime&gt;20&lt;/pulseTime&gt;&#xd;
                    &lt;pulseTimeUnit&gt;SECOND&lt;/pulseTimeUnit&gt;&#xd;
                    &lt;pulseVolume&gt;20&lt;/pulseVolume&gt;&#xd;
                    &lt;pulseVolumeUnit&gt;MB&lt;/pulseVolumeUnit&gt;&#xd;
                    &lt;rateUnit&gt;VOLUME&lt;/rateUnit&gt;&#xd;
                    &lt;ratingGroupData&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;RATING_GROUP_1&lt;/id&gt;&#xd;
                        &lt;name&gt;Default_Rating_Group&lt;/name&gt;&#xd;
                    &lt;/ratingGroupData&gt;&#xd;
			&lt;revenueDetail&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;REVENUE_DETAIL1&lt;/id&gt;&#xd;
                        &lt;description&gt;Created by admin on 02/18/2019 05:30:47&lt;/description&gt;&#xd;
                        &lt;name&gt;REVENUE_DETAIL1&lt;/name&gt;&#xd;
                        &lt;revenueDetailId&gt;REVENUE_DETAIL1&lt;/revenueDetailId&gt;&#xd;
                    &lt;/revenueDetail&gt;&#xd;
                    &lt;timeBalance&gt;2000&lt;/timeBalance&gt;&#xd;
                    &lt;timeBalanceUnit&gt;SECOND&lt;/timeBalanceUnit&gt;&#xd;
                    &lt;timeLimitUnit&gt;SECOND&lt;/timeLimitUnit&gt;&#xd;
                    &lt;usageLimitUnit&gt;MB&lt;/usageLimitUnit&gt;&#xd;
                &lt;/rncProfileDetailDatas&gt;&#xd;
                &lt;rncProfileDetailDatas&gt;&#xd;
                    &lt;balance&gt;1000&lt;/balance&gt;&#xd;
                    &lt;balanceUnit&gt;MB&lt;/balanceUnit&gt;&#xd;
                    &lt;dataServiceType&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                    &lt;/dataServiceType&gt;&#xd;
                    &lt;fupLevel&gt;1&lt;/fupLevel&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;pulseTime&gt;10&lt;/pulseTime&gt;&#xd;
                    &lt;pulseTimeUnit&gt;SECOND&lt;/pulseTimeUnit&gt;&#xd;
                    &lt;pulseVolume&gt;10&lt;/pulseVolume&gt;&#xd;
                    &lt;pulseVolumeUnit&gt;MB&lt;/pulseVolumeUnit&gt;&#xd;
                    &lt;rateUnit&gt;VOLUME&lt;/rateUnit&gt;&#xd;
                    &lt;ratingGroupData&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;RATING_GROUP_1&lt;/id&gt;&#xd;
                        &lt;name&gt;Default_Rating_Group&lt;/name&gt;&#xd;
                    &lt;/ratingGroupData&gt;       &#xd;
  			&lt;revenueDetail&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;REVENUE_DETAIL2&lt;/id&gt;&#xd;
                        &lt;description&gt;Created by admin on 02/18/2019 05:30:47&lt;/description&gt;&#xd;
                        &lt;name&gt;REVENUE_DETAIL2&lt;/name&gt;&#xd;
                        &lt;revenueDetailId&gt;REVENUE_DETAIL2&lt;/revenueDetailId&gt;&#xd;
                    &lt;/revenueDetail&gt;             &#xd;
                    &lt;timeBalance&gt;1000&lt;/timeBalance&gt;&#xd;
                    &lt;timeBalanceUnit&gt;SECOND&lt;/timeBalanceUnit&gt;&#xd;
                    &lt;timeLimitUnit&gt;SECOND&lt;/timeLimitUnit&gt;&#xd;
                    &lt;usageLimitUnit&gt;MB&lt;/usageLimitUnit&gt;&#xd;
                &lt;/rncProfileDetailDatas&gt;&#xd;
                &lt;rncProfileDetailDatas&gt;&#xd;
                    &lt;balance&gt;1000&lt;/balance&gt;&#xd;
                    &lt;balanceUnit&gt;MB&lt;/balanceUnit&gt;&#xd;
                    &lt;dataServiceType&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                    &lt;/dataServiceType&gt;&#xd;
                    &lt;fupLevel&gt;2&lt;/fupLevel&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;pulseTime&gt;5&lt;/pulseTime&gt;&#xd;
                    &lt;pulseTimeUnit&gt;SECOND&lt;/pulseTimeUnit&gt;&#xd;
                    &lt;pulseVolume&gt;5&lt;/pulseVolume&gt;&#xd;
                    &lt;pulseVolumeUnit&gt;MB&lt;/pulseVolumeUnit&gt;&#xd;
                    &lt;rateUnit&gt;VOLUME&lt;/rateUnit&gt;&#xd;
                    &lt;ratingGroupData&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;RATING_GROUP_1&lt;/id&gt;&#xd;
                        &lt;name&gt;Default_Rating_Group&lt;/name&gt;&#xd;
                    &lt;/ratingGroupData&gt;&#xd;
		  &lt;revenueDetail&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;REVENUE_DETAIL3&lt;/id&gt;&#xd;
                        &lt;description&gt;Created by admin on 02/18/2019 05:30:47&lt;/description&gt;&#xd;
                        &lt;name&gt;REVENUE_DETAIL3&lt;/name&gt;&#xd;
                        &lt;revenueDetailId&gt;REVENUE_DETAIL3&lt;/revenueDetailId&gt;&#xd;
                    &lt;/revenueDetail&gt;&#xd;
                    &lt;timeBalance&gt;1000&lt;/timeBalance&gt;&#xd;
                    &lt;timeBalanceUnit&gt;SECOND&lt;/timeBalanceUnit&gt;&#xd;
                    &lt;timeLimitUnit&gt;SECOND&lt;/timeLimitUnit&gt;&#xd;
                    &lt;usageLimitUnit&gt;MB&lt;/usageLimitUnit&gt;&#xd;
                &lt;/rncProfileDetailDatas&gt;&#xd;
                &lt;unitType&gt;TOTAL&lt;/unitType&gt;&#xd;
            &lt;/rncProfileDatas&gt;&#xd;
            &lt;rate-cards/&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/xml</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Offer" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${productoffer_id}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${productoffer}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin on 05/23/2018 10:12:03&quot;,&#xd;
   &quot;type&quot;:&quot;BASE&quot;,&#xd;
   &quot;currency&quot;:&quot;${currency}&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${datapackage_id}&quot;,&#xd;
   &quot;validityPeriod&quot;:null,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                  <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">true</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To TEST Mode" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=TEST</stringProp>
                  <stringProp name="HTTPSampler.method">PUT</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
                <hashTree>
                  <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                    <collectionProp name="ModuleController.node_path">
                      <stringProp name="-1227702913">WorkBench</stringProp>
                      <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                      <stringProp name="18059174">Common Functions</stringProp>
                      <stringProp name="-803016769">PD: Reload Policy</stringProp>
                    </collectionProp>
                  </ModuleController>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To LIVE Mode" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=LIVE</stringProp>
                  <stringProp name="HTTPSampler.method">PUT</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Offer" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                  <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}.json</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provision Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsAddSubscriber&gt;&#xd;
         &lt;subscriberProfile&gt;    &#xd;
			&lt;entry&gt;&#xd;
			   &lt;key&gt;USERNAME&lt;/key&gt;&#xd;
			   &lt;value&gt;${username}&lt;/value&gt;&#xd;
			&lt;/entry&gt;&#xd;
			&lt;entry&gt;&#xd;
			   &lt;key&gt;PASSWORD&lt;/key&gt;&#xd;
			   &lt;value&gt;${username}&lt;/value&gt;&#xd;
			&lt;/entry&gt;&#xd;
			&lt;entry&gt;&#xd;
			   &lt;key&gt;STATUS&lt;/key&gt;&#xd;
			   &lt;value&gt;Active&lt;/value&gt;&#xd;
			&lt;/entry&gt;&#xd;
			&lt;entry&gt;&#xd;
			   &lt;key&gt;IMSI&lt;/key&gt;&#xd;
			  &lt;value&gt;${username}&lt;/value&gt;&#xd;
			&lt;/entry&gt;&#xd;
			&lt;entry&gt;&#xd;
			   &lt;key&gt;MSISDN&lt;/key&gt;&#xd;
			  &lt;value&gt;${username}&lt;/value&gt;&#xd;
			&lt;/entry&gt;&#xd;
            &lt;productOffer&gt;${productoffer}&lt;/productOffer&gt;&#xd;
            &lt;subscriberIdentity&gt;${subscriberidentity}&lt;/subscriberIdentity&gt;&#xd;
         &lt;/subscriberProfile&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsAddSubscriber&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscriber_service}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5012_CCR-I Gx" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Framed-IP-Address</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${framed-ip-address}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">1</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">2</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${sessionid_gx}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpName.13">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.15">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.17">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">18</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">2</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Charging-Rule-Name:4853515f5043435f52554c455f35303132</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5012_CCR-I Gy" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Framed-IP-Address</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${framed-ip-address}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.1">1</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Requested-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.2">1</stringProp>
            <stringProp name="DiameterSampler.avpName.3">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.3">10</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">1</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">1</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Event-Timestamp</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2015-10-15 16:14:38 +0530</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">2</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.15">1</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.16">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.17">2</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.18">0</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.19">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">21</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">5</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Total-Octets:209715200</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:167772160</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Get Session using Ws and Db" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </com.computaris.jmeter.ext.controls.ParameterizedController>
          <hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Subscriber&apos;s Gy Session" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SessionManagementService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ses=&quot;http://sessionmanagement.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;ses:wsGetSessionsBySubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;sessionType&gt;&lt;/sessionType&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/ses:wsGetSessionsBySubscriberIdentity&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <stringProp name="TestPlan.comments">Web Service Call to Get Session By Subscriberidentity</stringProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Get Session from DB" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">select CORE_SESSION_ID from TBLT_SESSION where SUBSCRIBER_IDENTITY = &apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1332258241">${sessionid}:Gy
</stringProp>
                  <stringProp name="1458757190">${sessionid_gx}:Gx
</stringProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">check if session id is present or not</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5012_CCR-U Gy (1960Mb 1960Sec)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">413003</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">404093</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">2</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Time</stringProp>
            <stringProp name="DiameterSampler.avpData.21">1960</stringProp>
            <stringProp name="DiameterSampler.avpName.22">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.22">2055208960</stringProp>
            <stringProp name="DiameterSampler.avpName.23">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.23">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">24</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">7</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Total-Octets:41943040</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:41943040</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
              <stringProp name="DiameterAssertion.avpName.5">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.5">Granted-Service-Unit:CC-Time:40</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.5">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.5"></stringProp>
              <stringProp name="DiameterAssertion.avpName.6">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.6">Time-Quota-Threshold:40</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.6">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.6"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5012_CCR-U Gy (40Mb 40Sec)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">413003</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">404093</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">2</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Time</stringProp>
            <stringProp name="DiameterSampler.avpData.21">40</stringProp>
            <stringProp name="DiameterSampler.avpName.22">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.22">41943040</stringProp>
            <stringProp name="DiameterSampler.avpName.23">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.23">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">24</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">7</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Total-Octets:104857600</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:83886080</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
              <stringProp name="DiameterAssertion.avpName.5">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.5">Granted-Service-Unit:CC-Time:600</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.5">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.5"></stringProp>
              <stringProp name="DiameterAssertion.avpName.6">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.6">Time-Quota-Threshold:480</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.6">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.6"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Balance" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsGetNonMonitoryBalance&gt;&#xd;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;packageId&gt;${datapackage_id}&lt;/packageId&gt;&#xd;
         &lt;packageName&gt;&lt;/packageName&gt;&#xd;
         &lt;subscriptionId&gt;&lt;/subscriptionId&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsGetNonMonitoryBalance&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscription_service}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="check remaining balance" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/actual/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/actual/time[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/remaining/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/remaining/time[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/actual/totalOctets[text()=&apos;943718400&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/actual/time[text()=&apos;400&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/remaining/totalOctets[text()=&apos;1048576000&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/remaining/time[text()=&apos;1000&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level2&apos;]/billingCycleBalance/actual/totalOctets[text()=&apos;1048576000&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level2&apos;]/billingCycleBalance/actual/time[text()=&apos;1000&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level2&apos;]/billingCycleBalance/remaining/totalOctets[text()=&apos;1048576000&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level2&apos;]/billingCycleBalance/remaining/time[text()=&apos;1000&apos;]</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="RTC_5012_RAR-RAA" enabled="true">
            <stringProp name="TestPlan.comments">As per configuration PCRF will send RAR after 1 minute</stringProp>
            <stringProp name="DiameterTimer.duration">500</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Re-Auth-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${username}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">5</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="RAR Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">false</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Re-Auth-Request</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID"></stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">false</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Session-Id</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">${sessionid_gx}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5012_CCR-U Gy (980Mb 980Sec)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">413003</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">404093</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">2</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Time</stringProp>
            <stringProp name="DiameterSampler.avpData.21">980</stringProp>
            <stringProp name="DiameterSampler.avpName.22">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1027604480</stringProp>
            <stringProp name="DiameterSampler.avpName.23">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.23">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">24</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">7</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Total-Octets:20971520</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:20971520</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
              <stringProp name="DiameterAssertion.avpName.5">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.5">Granted-Service-Unit:CC-Time:20</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.5">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.5"></stringProp>
              <stringProp name="DiameterAssertion.avpName.6">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.6">Time-Quota-Threshold:20</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.6">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.6"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5012_CCR-U Gy (20Mb 20Sec)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">413003</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">404093</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">2</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Time</stringProp>
            <stringProp name="DiameterSampler.avpData.21">20</stringProp>
            <stringProp name="DiameterSampler.avpName.22">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.22">20971520</stringProp>
            <stringProp name="DiameterSampler.avpName.23">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.23">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">24</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">7</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Total-Octets:104857600</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:83886080</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
              <stringProp name="DiameterAssertion.avpName.5">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.5">Granted-Service-Unit:CC-Time:600</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.5">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.5"></stringProp>
              <stringProp name="DiameterAssertion.avpName.6">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.6">Time-Quota-Threshold:480</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.6">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.6"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Balance" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsGetNonMonitoryBalance&gt;&#xd;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;packageId&gt;${datapackage_id}&lt;/packageId&gt;&#xd;
         &lt;packageName&gt;&lt;/packageName&gt;&#xd;
         &lt;subscriptionId&gt;&lt;/subscriptionId&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsGetNonMonitoryBalance&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscription_service}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="check remaining balance" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/actual/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/actual/time[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/remaining/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/remaining/time[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/actual/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/actual/time[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/remaining/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/remaining/time[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level2&apos;]/billingCycleBalance/actual/totalOctets[text()=&apos;943718400&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level2&apos;]/billingCycleBalance/actual/time[text()=&apos;400&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level2&apos;]/billingCycleBalance/remaining/totalOctets[text()=&apos;1048576000&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level2&apos;]/billingCycleBalance/remaining/time[text()=&apos;1000&apos;]</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="RTC_5012_RAR-RAA" enabled="true">
            <stringProp name="TestPlan.comments">As per configuration PCRF will send RAR after 1 minute</stringProp>
            <stringProp name="DiameterTimer.duration">500</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Re-Auth-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${username}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">5</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="RAR Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">false</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Re-Auth-Request</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID"></stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">false</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Session-Id</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">${sessionid_gx}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5012_CCR-U Gy (990Mb 990Sec)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">413003</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">404093</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">2</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Time</stringProp>
            <stringProp name="DiameterSampler.avpData.21">990</stringProp>
            <stringProp name="DiameterSampler.avpName.22">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1038090240</stringProp>
            <stringProp name="DiameterSampler.avpName.23">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.23">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">24</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">8</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Total-Octets:10485760</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:10485760</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
              <stringProp name="DiameterAssertion.avpName.5">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.5">Granted-Service-Unit:CC-Time:10</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.5">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.5"></stringProp>
              <stringProp name="DiameterAssertion.avpName.6">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.6">Time-Quota-Threshold:10</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.6">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.6"></stringProp>
              <stringProp name="DiameterAssertion.avpName.7">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.7">Final-Unit-Indication:Final-Unit-Action:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.7">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.7"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.7"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.7"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5012_CCR-T Gy (10Mb 10Sec)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">413003</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">404093</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">3</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">2</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Time</stringProp>
            <stringProp name="DiameterSampler.avpData.21">10</stringProp>
            <stringProp name="DiameterSampler.avpName.22">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.22">10485760</stringProp>
            <stringProp name="DiameterSampler.avpName.23">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.23">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">24</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-T Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Balance" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsGetNonMonitoryBalance&gt;&#xd;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;packageId&gt;${datapackage_id}&lt;/packageId&gt;&#xd;
         &lt;packageName&gt;&lt;/packageName&gt;&#xd;
         &lt;subscriptionId&gt;&lt;/subscriptionId&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsGetNonMonitoryBalance&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscription_service}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="check remaining balance" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/actual/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/actual/time[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/remaining/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/remaining/time[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/actual/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/actual/time[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/remaining/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/remaining/time[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level2&apos;]/billingCycleBalance/actual/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level2&apos;]/billingCycleBalance/actual/time[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level2&apos;]/billingCycleBalance/remaining/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level2&apos;]/billingCycleBalance/remaining/time[text()=&apos;0&apos;]</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5012_CCR-T Gx" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-User-Location-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">0004F489008D3039</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.3">0</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid_gx}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">3</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">3</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.11">2</stringProp>
            <stringProp name="DiameterSampler.avpName.12">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">0</stringProp>
            <stringProp name="DiameterSampler.avpName.13">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.13">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Called-Station-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">internet</stringProp>
            <stringProp name="DiameterSampler.avpCounter">15</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-T Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Subscriber&apos;s Session" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SessionManagementService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ses=&quot;http://sessionmanagement.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;ses:wsGetSessionsBySubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;sessionType&gt;&lt;/sessionType&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/ses:wsGetSessionsBySubscriberIdentity&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <stringProp name="TestPlan.comments">Subscriber&apos;s Session should not be fetched</stringProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2101284903">&lt;responseCode&gt;404&lt;/responseCode&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Post Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop pcap and logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="stop Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-720136512">Stop Pcap</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop NV log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-632654166">Stop NV log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop PD log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-592019242">Stop PD log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="End of RTC_5012" enabled="true"/>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Module Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Gx+Gy-RTC_5013" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">RTC_5013 | Gx+Gy | Volume | Verify that NetVertex is supporting three level fup plan in single session.</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Gx+Gy-RTC_5013" enabled="true">
          <stringProp name="TestPlan.comments">RTC_2026 | Gx+Gy | Volume | Check and Verify Basic Diameter Gx and Gy Call Flow with addon for international roaming.</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="id" elementType="Argument">
                <stringProp name="Argument.name">id</stringProp>
                <stringProp name="Argument.value">5013</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">60408</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">Gy-RTC_5013</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subscriberidentity" elementType="Argument">
                <stringProp name="Argument.name">subscriberidentity</stringProp>
                <stringProp name="Argument.value">2111115013</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">2111115013</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">2111115013</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">2111115013</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">2111115013</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sessionid_gx" elementType="Argument">
                <stringProp name="Argument.name">sessionid_gx</stringProp>
                <stringProp name="Argument.value">2111115010_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sessionid" elementType="Argument">
                <stringProp name="Argument.name">sessionid</stringProp>
                <stringProp name="Argument.value">2111115013_gy</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage" elementType="Argument">
                <stringProp name="Argument.name">datapackage</stringProp>
                <stringProp name="Argument.value">RTC_5013_GY_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage_id" elementType="Argument">
                <stringProp name="Argument.name">datapackage_id</stringProp>
                <stringProp name="Argument.value">RTC_5013_GY_BASE_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer" elementType="Argument">
                <stringProp name="Argument.name">productoffer</stringProp>
                <stringProp name="Argument.value">RTC_5013_GY_PO</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer_id" elementType="Argument">
                <stringProp name="Argument.name">productoffer_id</stringProp>
                <stringProp name="Argument.value">RTC_5013_GY_PO_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Cleanup" enabled="false"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Change product offer mode to test" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">UPDATE TBLM_PRODUCT_OFFER SET PACKAGE_MODE=&apos;TEST&apos; where ID = &apos;${productoffer_id}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Base Product Offer" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url_without_ext}/${productoffer_id}.json</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="change package status to deleted" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">UPDATE TBLM_PACKAGE SET STATUS=&apos;DELETED&apos; where ID IN (&apos;${datapackage_id}&apos;)

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="delete subscriber session" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLT_SESSION WHERE SUBSCRIBER_IDENTITY=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="delete subscription" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLT_SUBSCRIPTION WHERE SUBSCRIBER_ID=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="delete non monetary balance" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLM_DATA_BALANCE WHERE SUBSCRIBER_ID=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="delete balance" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLM_MONETARY_BALANCE WHERE SUBSCRIBER_ID=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsDeleteSubscriberProfile&gt;&#xd;
         &lt;subscriberID&gt;${subscriberidentity}&lt;/subscriberID&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsDeleteSubscriberProfile&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscriber_service}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete Subscriber&apos;s Alternate Identity" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">DELETE FROM TBLM_ALTERNATE_IDENTITY WHERE SUBSCRIBER_ID=&apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Purge Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsPurgeSubscriber&gt;&#xd;
         &lt;subscriberID&gt;${subscriberidentity}&lt;/subscriberID&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;param1&gt;&lt;/param1&gt;&#xd;
         &lt;param2&gt;&lt;/param2&gt;&#xd;
      &lt;/sub:wsPurgeSubscriber&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscriber_service}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Clear active sessions for the Subscriber" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">UPDATE TBLM_PACKAGE SET STATUS=&apos;DELETED&apos; where ID IN (&apos;${datapackage_id}&apos;)

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Pre Processing" enabled="true"/>
          <hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start of RTC_5013" enabled="true"/>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true); 
f = new FileOutputStream(mapping_file_name, true); 
p = new PrintStream(f); 

// Write data to file 

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Pcap and Logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872118812">Capture PCAP</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872996374">Capture log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture PD Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="1033451790">Capture PD log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Base Product offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create DataPackage" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;RTC_${id}_GY_BASE_111111111&lt;/id&gt;&#xd;
            &lt;name&gt;RTC_${id}_GY_BASE&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 07/31/2018 15:40:12&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;RnC_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin on 07/31/2018 15:56:36&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_${id}_pcc_profile&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;2&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;2&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;HSQ_PCC_RULE_${id}&lt;/name&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;HSQ_PCC_RULE_${id}&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;2&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;2&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Static&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;1&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;FUP_PCC_RULE_${id}&lt;/name&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;FUP_PCC_RULE_${id}&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Static&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;2&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;512&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;512&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;FUP2_PCC_RULE_${id}&lt;/name&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;FUP2_PCC_RULE_${id}&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;512&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Kbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;512&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Kbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Static&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;RTC_${id}_Quota_profile&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;quota-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
            &lt;rncProfileDatas&gt;&#xd;
                &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                &lt;id&gt;&lt;/id&gt;&#xd;
                &lt;balanceLevel&gt;HSQ&lt;/balanceLevel&gt;&#xd;
                &lt;description&gt;Created by admin on 07/31/2018 15:54:29&lt;/description&gt;&#xd;
                &lt;name&gt;RTC_${id}_Quota_profile&lt;/name&gt;&#xd;
                &lt;quotaType&gt;VOLUME&lt;/quotaType&gt;&#xd;
                &lt;renewal-interval-unit&gt;MONTH&lt;/renewal-interval-unit&gt;&#xd;
                &lt;rncProfileDetailDatas&gt;&#xd;
                    &lt;balance&gt;1000&lt;/balance&gt;&#xd;
                    &lt;balanceUnit&gt;MB&lt;/balanceUnit&gt;&#xd;
                    &lt;dataServiceType&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                    &lt;/dataServiceType&gt;&#xd;
                    &lt;fupLevel&gt;0&lt;/fupLevel&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;pulseTimeUnit&gt;SECOND&lt;/pulseTimeUnit&gt;&#xd;
                    &lt;pulseVolume&gt;20&lt;/pulseVolume&gt;&#xd;
                    &lt;pulseVolumeUnit&gt;MB&lt;/pulseVolumeUnit&gt;&#xd;
                    &lt;rateUnit&gt;VOLUME&lt;/rateUnit&gt;&#xd;
                    &lt;ratingGroupData&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;RATING_GROUP_1&lt;/id&gt;&#xd;
                        &lt;name&gt;Default_Rating_Group&lt;/name&gt;&#xd;
                    &lt;/ratingGroupData&gt;&#xd;
                    &lt;timeBalanceUnit&gt;DAY&lt;/timeBalanceUnit&gt;&#xd;
                    &lt;timeLimitUnit&gt;SECOND&lt;/timeLimitUnit&gt;&#xd;
                    &lt;usageLimitUnit&gt;MB&lt;/usageLimitUnit&gt;&#xd;
                &lt;/rncProfileDetailDatas&gt;&#xd;
                &lt;rncProfileDetailDatas&gt;&#xd;
                    &lt;balance&gt;500&lt;/balance&gt;&#xd;
                    &lt;balanceUnit&gt;MB&lt;/balanceUnit&gt;&#xd;
                    &lt;dataServiceType&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                    &lt;/dataServiceType&gt;&#xd;
                    &lt;fupLevel&gt;1&lt;/fupLevel&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;pulseTimeUnit&gt;SECOND&lt;/pulseTimeUnit&gt;&#xd;
                    &lt;pulseVolume&gt;10&lt;/pulseVolume&gt;&#xd;
                    &lt;pulseVolumeUnit&gt;MB&lt;/pulseVolumeUnit&gt;&#xd;
                    &lt;rateUnit&gt;VOLUME&lt;/rateUnit&gt;&#xd;
                    &lt;ratingGroupData&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;RATING_GROUP_1&lt;/id&gt;&#xd;
                        &lt;name&gt;Default_Rating_Group&lt;/name&gt;&#xd;
                    &lt;/ratingGroupData&gt;&#xd;
                    &lt;timeBalanceUnit&gt;DAY&lt;/timeBalanceUnit&gt;&#xd;
                    &lt;timeLimitUnit&gt;SECOND&lt;/timeLimitUnit&gt;&#xd;
                    &lt;usageLimitUnit&gt;MB&lt;/usageLimitUnit&gt;&#xd;
                &lt;/rncProfileDetailDatas&gt;&#xd;
                &lt;rncProfileDetailDatas&gt;&#xd;
                    &lt;balance&gt;250&lt;/balance&gt;&#xd;
                    &lt;balanceUnit&gt;MB&lt;/balanceUnit&gt;&#xd;
                    &lt;dataServiceType&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                    &lt;/dataServiceType&gt;&#xd;
                    &lt;fupLevel&gt;2&lt;/fupLevel&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;pulseTimeUnit&gt;SECOND&lt;/pulseTimeUnit&gt;&#xd;
                    &lt;pulseVolume&gt;5&lt;/pulseVolume&gt;&#xd;
                    &lt;pulseVolumeUnit&gt;MB&lt;/pulseVolumeUnit&gt;&#xd;
                    &lt;rateUnit&gt;VOLUME&lt;/rateUnit&gt;&#xd;
                    &lt;ratingGroupData&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;RATING_GROUP_1&lt;/id&gt;&#xd;
                        &lt;name&gt;Default_Rating_Group&lt;/name&gt;&#xd;
                    &lt;/ratingGroupData&gt;&#xd;
                    &lt;timeBalanceUnit&gt;DAY&lt;/timeBalanceUnit&gt;&#xd;
                    &lt;timeLimitUnit&gt;SECOND&lt;/timeLimitUnit&gt;&#xd;
                    &lt;usageLimitUnit&gt;MB&lt;/usageLimitUnit&gt;&#xd;
                &lt;/rncProfileDetailDatas&gt;&#xd;
                &lt;unitType&gt;TOTAL&lt;/unitType&gt;&#xd;
            &lt;/rncProfileDatas&gt;&#xd;
            &lt;rate-cards/&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/xml</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Offer" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${productoffer_id}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${productoffer}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin on 05/23/2018 10:12:03&quot;,&#xd;
   &quot;type&quot;:&quot;BASE&quot;,&#xd;
   &quot;currency&quot;:&quot;${currency}&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${datapackage_id}&quot;,&#xd;
   &quot;validityPeriod&quot;:null,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                  <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">true</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To TEST Mode" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=TEST</stringProp>
                  <stringProp name="HTTPSampler.method">PUT</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">true</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
                <hashTree>
                  <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                    <collectionProp name="ModuleController.node_path">
                      <stringProp name="-1227702913">WorkBench</stringProp>
                      <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                      <stringProp name="18059174">Common Functions</stringProp>
                      <stringProp name="-803016769">PD: Reload Policy</stringProp>
                    </collectionProp>
                  </ModuleController>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To LIVE Mode" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=LIVE</stringProp>
                  <stringProp name="HTTPSampler.method">PUT</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">true</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Offer" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                  <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}.json</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provision Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsAddSubscriber&gt;&#xd;
         &lt;subscriberProfile&gt;    &#xd;
			&lt;entry&gt;&#xd;
			   &lt;key&gt;USERNAME&lt;/key&gt;&#xd;
			   &lt;value&gt;${username}&lt;/value&gt;&#xd;
			&lt;/entry&gt;&#xd;
			&lt;entry&gt;&#xd;
			   &lt;key&gt;PASSWORD&lt;/key&gt;&#xd;
			   &lt;value&gt;${username}&lt;/value&gt;&#xd;
			&lt;/entry&gt;&#xd;
			&lt;entry&gt;&#xd;
			   &lt;key&gt;STATUS&lt;/key&gt;&#xd;
			   &lt;value&gt;Active&lt;/value&gt;&#xd;
			&lt;/entry&gt;&#xd;
			&lt;entry&gt;&#xd;
			   &lt;key&gt;IMSI&lt;/key&gt;&#xd;
			  &lt;value&gt;${username}&lt;/value&gt;&#xd;
			&lt;/entry&gt;&#xd;
			&lt;entry&gt;&#xd;
			   &lt;key&gt;MSISDN&lt;/key&gt;&#xd;
			  &lt;value&gt;${username}&lt;/value&gt;&#xd;
			&lt;/entry&gt;&#xd;
            &lt;productOffer&gt;${productoffer}&lt;/productOffer&gt;&#xd;
            &lt;subscriberIdentity&gt;${subscriberidentity}&lt;/subscriberIdentity&gt;&#xd;
         &lt;/subscriberProfile&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsAddSubscriber&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscriber_service}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5013_CCR-I Gx" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">2</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.1">1</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.3">2</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">0</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${sessionid_gx}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.10">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.11">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.11">1</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.12">0</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.13">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.15">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.16">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.16">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">17</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">2</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Charging-Rule-Name:4853515f5043435f52554c455f35303133</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5013_CCR-I Gy" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Requested-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.1">1</stringProp>
            <stringProp name="DiameterSampler.avpName.2">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.2">10</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">4</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.8">1</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.9">1</stringProp>
            <stringProp name="DiameterSampler.avpName.10">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Event-Timestamp</stringProp>
            <stringProp name="DiameterSampler.avpData.12">2015-10-15 16:14:38 +0530</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">20</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">5</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Total-Octets:104857600</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:83886080</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Get Session using Ws and Db" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </com.computaris.jmeter.ext.controls.ParameterizedController>
          <hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Subscriber&apos;s Gy Session" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SessionManagementService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ses=&quot;http://sessionmanagement.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;ses:wsGetSessionsBySubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;sessionType&gt;&lt;/sessionType&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/ses:wsGetSessionsBySubscriberIdentity&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <stringProp name="TestPlan.comments">Web Service Call to Get Session By Subscriberidentity</stringProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Get Session from DB" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">select CORE_SESSION_ID from TBLT_SESSION where SUBSCRIBER_IDENTITY = &apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1332258241">${sessionid}:Gy
</stringProp>
                  <stringProp name="1458757190">${sessionid_gx}:Gx
</stringProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">check if session id is present or not</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5013_CCR-U Gy (960Mb)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">413003</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">404093</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.21">1006632960</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">5</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Total-Octets:41943040</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:41943040</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5013_CCR-T Gy (40Mb)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">413003</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">404093</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">3</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.21">41943040</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-T Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Balance" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsGetNonMonitoryBalance&gt;&#xd;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;packageId&gt;${datapackage_id}&lt;/packageId&gt;&#xd;
         &lt;packageName&gt;&lt;/packageName&gt;&#xd;
         &lt;subscriptionId&gt;&lt;/subscriptionId&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsGetNonMonitoryBalance&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscription_service}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="check remaining balance" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/actual/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/remaining/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/actual/totalOctets[text()=&apos;524288000&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/remaining/totalOctets[text()=&apos;524288000&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level2&apos;]/billingCycleBalance/actual/totalOctets[text()=&apos;262144000&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level2&apos;]/billingCycleBalance/remaining/totalOctets[text()=&apos;262144000&apos;]</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5013_CCR-T Gx" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-User-Location-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">0004F489008D3039</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.3">0</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid_gx}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">3</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">3</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.11">2</stringProp>
            <stringProp name="DiameterSampler.avpName.12">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">0</stringProp>
            <stringProp name="DiameterSampler.avpName.13">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.13">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Called-Station-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">internet</stringProp>
            <stringProp name="DiameterSampler.avpCounter">15</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-T Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Subscriber&apos;s Session" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SessionManagementService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ses=&quot;http://sessionmanagement.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;ses:wsGetSessionsBySubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;sessionType&gt;&lt;/sessionType&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/ses:wsGetSessionsBySubscriberIdentity&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <stringProp name="TestPlan.comments">Subscriber&apos;s Session should not be fetched</stringProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2101284903">&lt;responseCode&gt;404&lt;/responseCode&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5013_CCR-I Gx" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">2</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.1">1</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.3">2</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">0</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${sessionid_gx}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.10">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.11">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.11">1</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.12">0</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.13">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.15">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.16">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.16">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">17</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">2</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Charging-Rule-Name:4655505f5043435f52554c455f35303133</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5013_CCR-I Gy" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Requested-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.1">1</stringProp>
            <stringProp name="DiameterSampler.avpName.2">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.2">10</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">4</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.8">1</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.9">1</stringProp>
            <stringProp name="DiameterSampler.avpName.10">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Event-Timestamp</stringProp>
            <stringProp name="DiameterSampler.avpData.12">2015-10-15 16:14:38 +0530</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">20</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">5</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Total-Octets:52428800</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:41943040</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Get Session using Ws and Db" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </com.computaris.jmeter.ext.controls.ParameterizedController>
          <hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Subscriber&apos;s Gy Session" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SessionManagementService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ses=&quot;http://sessionmanagement.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;ses:wsGetSessionsBySubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;sessionType&gt;&lt;/sessionType&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/ses:wsGetSessionsBySubscriberIdentity&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <stringProp name="TestPlan.comments">Web Service Call to Get Session By Subscriberidentity</stringProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Get Session from DB" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">select CORE_SESSION_ID from TBLT_SESSION where SUBSCRIBER_IDENTITY = &apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1332258241">${sessionid}:Gy
</stringProp>
                  <stringProp name="1458757190">${sessionid_gx}:Gx
</stringProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">check if session id is present or not</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5013_CCR-U Gy (480Mb)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">413003</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">404093</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.21">503316480</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">5</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Total-Octets:20971520</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:20971520</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5013_CCR-T Gy (20Mb)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">413003</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">404093</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">3</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.21">20971520</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-T Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Balance" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsGetNonMonitoryBalance&gt;&#xd;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;packageId&gt;${datapackage_id}&lt;/packageId&gt;&#xd;
         &lt;packageName&gt;&lt;/packageName&gt;&#xd;
         &lt;subscriptionId&gt;&lt;/subscriptionId&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsGetNonMonitoryBalance&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscription_service}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="check remaining balance" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/actual/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/remaining/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/actual/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/remaining/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level2&apos;]/billingCycleBalance/actual/totalOctets[text()=&apos;262144000&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level2&apos;]/billingCycleBalance/remaining/totalOctets[text()=&apos;262144000&apos;]</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5013_CCR-T Gx" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-User-Location-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">0004F489008D3039</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.3">0</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid_gx}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">3</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">3</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.11">2</stringProp>
            <stringProp name="DiameterSampler.avpName.12">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">0</stringProp>
            <stringProp name="DiameterSampler.avpName.13">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.13">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Called-Station-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">internet</stringProp>
            <stringProp name="DiameterSampler.avpCounter">15</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-T Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Subscriber&apos;s Session" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SessionManagementService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ses=&quot;http://sessionmanagement.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;ses:wsGetSessionsBySubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;sessionType&gt;&lt;/sessionType&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/ses:wsGetSessionsBySubscriberIdentity&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <stringProp name="TestPlan.comments">Subscriber&apos;s Session should not be fetched</stringProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2101284903">&lt;responseCode&gt;404&lt;/responseCode&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5013_CCR-I Gx" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">2</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.1">1</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.3">2</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">0</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${sessionid_gx}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.10">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.11">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.11">1</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.12">0</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.13">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.15">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.16">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.16">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">17</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">2</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Charging-Rule-Name:465550325f5043435f52554c455f35303133</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5013_CCR-I Gy" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Requested-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.1">1</stringProp>
            <stringProp name="DiameterSampler.avpName.2">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.2">10</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">4</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.8">1</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.9">1</stringProp>
            <stringProp name="DiameterSampler.avpName.10">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Event-Timestamp</stringProp>
            <stringProp name="DiameterSampler.avpData.12">2015-10-15 16:14:38 +0530</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">20</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">5</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Total-Octets:26214400</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:20971520</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Get Session using Ws and Db" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </com.computaris.jmeter.ext.controls.ParameterizedController>
          <hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Subscriber&apos;s Gy Session" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SessionManagementService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ses=&quot;http://sessionmanagement.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;ses:wsGetSessionsBySubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;sessionType&gt;&lt;/sessionType&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/ses:wsGetSessionsBySubscriberIdentity&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <stringProp name="TestPlan.comments">Web Service Call to Get Session By Subscriberidentity</stringProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Get Session from DB" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">select CORE_SESSION_ID from TBLT_SESSION where SUBSCRIBER_IDENTITY = &apos;${subscriberidentity}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1332258241">${sessionid}:Gy
</stringProp>
                  <stringProp name="1458757190">${sessionid_gx}:Gx
</stringProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">check if session id is present or not</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5013_CCR-U Gy (240Mb)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">413003</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">404093</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.21">251658240</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">6</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Total-Octets:10485760</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:10485760</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
              <stringProp name="DiameterAssertion.avpName.5">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.5">Final-Unit-Indication:Final-Unit-Action:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.5">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.5"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5013_CCR-T Gy (10Mb)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">413003</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">404093</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">3</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.21">10485760</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-T Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Balance" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsGetNonMonitoryBalance&gt;&#xd;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;packageId&gt;${datapackage_id}&lt;/packageId&gt;&#xd;
         &lt;packageName&gt;&lt;/packageName&gt;&#xd;
         &lt;subscriptionId&gt;&lt;/subscriptionId&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsGetNonMonitoryBalance&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscription_service}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="check remaining balance" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/actual/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/remaining/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/actual/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/remaining/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level2&apos;]/billingCycleBalance/actual/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level2&apos;]/billingCycleBalance/remaining/totalOctets[text()=&apos;0&apos;]</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5013_CCR-T Gx" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-User-Location-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">0004F489008D3039</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.3">0</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid_gx}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">3</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">3</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.11">2</stringProp>
            <stringProp name="DiameterSampler.avpName.12">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">0</stringProp>
            <stringProp name="DiameterSampler.avpName.13">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.13">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Called-Station-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">internet</stringProp>
            <stringProp name="DiameterSampler.avpCounter">15</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-T Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Subscriber&apos;s Session" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SessionManagementService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ses=&quot;http://sessionmanagement.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;ses:wsGetSessionsBySubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriberidentity}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;sessionType&gt;&lt;/sessionType&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/ses:wsGetSessionsBySubscriberIdentity&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <stringProp name="TestPlan.comments">Subscriber&apos;s Session should not be fetched</stringProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2101284903">&lt;responseCode&gt;404&lt;/responseCode&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Post Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop pcap and logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="stop Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-720136512">Stop Pcap</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop NV log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-632654166">Stop NV log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop PD log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-592019242">Stop PD log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="End of RTC_5013" enabled="true"/>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Module Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Gx+Gy-RTC_5014" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">RTC_5014 | Hybrid | BOD | Check and Verify Quota Threshold = GSU in Case Of FUI in Non Monetary Flow</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Gy-RTC_5014" enabled="true">
          <stringProp name="TestPlan.comments">RTC_5014 | Hybrid | Check and Verify Quota Threshold = GSU in Case Of FUI in Non Monetary Flow</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriber_id" elementType="Argument">
                <stringProp name="Argument.name">subscriber_id</stringProp>
                <stringProp name="Argument.value">2111115014</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">2111115014</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">2111115014</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">2111115014</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="base_data_package_1" elementType="Argument">
                <stringProp name="Argument.name">base_data_package_1</stringProp>
                <stringProp name="Argument.value">RTC_5014_GY_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">2111115014</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sessionid" elementType="Argument">
                <stringProp name="Argument.name">sessionid</stringProp>
                <stringProp name="Argument.value">2111115014_gy</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">Gy-RTC_5014</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">90151</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="base_product_offer_1" elementType="Argument">
                <stringProp name="Argument.name">base_product_offer_1</stringProp>
                <stringProp name="Argument.value">RTC_5014_PRODUCT_OFFER</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="id" elementType="Argument">
                <stringProp name="Argument.name">id</stringProp>
                <stringProp name="Argument.value">5014</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sessionid_gx" elementType="Argument">
                <stringProp name="Argument.name">sessionid_gx</stringProp>
                <stringProp name="Argument.value">2111115014_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="bod_package_1" elementType="Argument">
                <stringProp name="Argument.name">bod_package_1</stringProp>
                <stringProp name="Argument.value">RTC_5014_BOD</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RTC_5014_GY_BASE_QOS" elementType="Argument">
                <stringProp name="Argument.name">RTC_5014_GY_BASE_QOS</stringProp>
                <stringProp name="Argument.value">5254435F353031345F47595F424153455F504343</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">100</stringProp>
          </ConstantTimer>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Pre Processing" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="CleanUp_Sampler" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="subscriber-id" elementType="Argument">
                    <stringProp name="Argument.name">subscriber-id</stringProp>
                    <stringProp name="Argument.value">${subscriber_id}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="product-offer-id" elementType="Argument">
                    <stringProp name="Argument.name">product-offer-id</stringProp>
                    <stringProp name="Argument.value">${base_product_offer_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="data-package-id" elementType="Argument">
                    <stringProp name="Argument.name">data-package-id</stringProp>
                    <stringProp name="Argument.value">${base_data_package_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="rnc-package-id" elementType="Argument">
                    <stringProp name="Argument.name">rnc-package-id</stringProp>
                    <stringProp name="Argument.value">${base_rnc_package_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="data-topup-id" elementType="Argument">
                    <stringProp name="Argument.name">data-topup-id</stringProp>
                    <stringProp name="Argument.value">${data_topup_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="bod-package-id" elementType="Argument">
                    <stringProp name="Argument.name">bod-package-id</stringProp>
                    <stringProp name="Argument.value">${bod_package_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="email-template-id" elementType="Argument">
                    <stringProp name="Argument.name">email-template-id</stringProp>
                    <stringProp name="Argument.value">${email_template_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="sms-template-id" elementType="Argument">
                    <stringProp name="Argument.name">sms-template-id</stringProp>
                    <stringProp name="Argument.value">${sms_template_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">com.sterlite.netvertex.nvsampler.cleanup.sampler.CleanUpSampler</stringProp>
            </JavaSampler>
            <hashTree/>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start of RTC_${id}" enabled="true"/>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true);
f = new FileOutputStream(mapping_file_name, true);
p = new PrintStream(f);

// Write data to file

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Pcap and Logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872118812">Capture PCAP</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872996374">Capture log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture PD Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="1033451790">Capture PD log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create DataPackage" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;${base_data_package_1}&lt;/id&gt;&#xd;
            &lt;name&gt;${base_data_package_1}&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 11/19/2018 09:17:50&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;RnC_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin on 11/19/2018 09:19:25&lt;/description&gt;&#xd;
                    &lt;name&gt;${base_data_package_1}_QOS&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
				&lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;2&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;2&lt;/aambrul&gt;                            &#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;2&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;2&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;${base_data_package_1}_PCC&lt;/name&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;${base_data_package_1}_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;2&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;2&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;${base_data_package_1}_QUOTA&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;${base_data_package_1}_QUOTA&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;quota-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
            &lt;rncProfileDatas&gt;&#xd;
                &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                &lt;id&gt;${base_data_package_1}_QUOTA&lt;/id&gt;&#xd;
                &lt;balanceLevel&gt;HSQ&lt;/balanceLevel&gt;&#xd;
                &lt;description&gt;Created by admin on 11/19/2018 09:18:26&lt;/description&gt;&#xd;
                &lt;name&gt;${base_data_package_1}_QUOTA&lt;/name&gt;&#xd;
                &lt;proration&gt;false&lt;/proration&gt;&#xd;
                &lt;quotaType&gt;HYBRID&lt;/quotaType&gt;&#xd;
                &lt;renewal-interval-unit&gt;MONTH&lt;/renewal-interval-unit&gt;&#xd;
                &lt;rncProfileDetailDatas&gt;&#xd;
                    &lt;balance&gt;1000&lt;/balance&gt;&#xd;
                    &lt;balanceUnit&gt;MB&lt;/balanceUnit&gt;&#xd;
                    &lt;dataServiceType&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                    &lt;/dataServiceType&gt;&#xd;
                    &lt;fupLevel&gt;0&lt;/fupLevel&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;pulseTimeUnit&gt;SECOND&lt;/pulseTimeUnit&gt;&#xd;
                    &lt;pulseVolumeUnit&gt;MB&lt;/pulseVolumeUnit&gt;&#xd;
                    &lt;rateUnit&gt;VOLUME&lt;/rateUnit&gt;&#xd;
                    &lt;ratingGroupData&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;RATING_GROUP_1&lt;/id&gt;&#xd;
                        &lt;name&gt;Default_Rating_Group&lt;/name&gt;&#xd;
                    &lt;/ratingGroupData&gt;&#xd;
                    &lt;timeBalance&gt;6000&lt;/timeBalance&gt;&#xd;
                    &lt;timeBalanceUnit&gt;SECOND&lt;/timeBalanceUnit&gt;&#xd;
                    &lt;timeLimitUnit&gt;SECOND&lt;/timeLimitUnit&gt;&#xd;
                    &lt;usageLimitUnit&gt;MB&lt;/usageLimitUnit&gt;&#xd;
                &lt;/rncProfileDetailDatas&gt;&#xd;
                &lt;unitType&gt;TOTAL&lt;/unitType&gt;&#xd;
            &lt;/rncProfileDatas&gt;&#xd;
            &lt;rate-cards/&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/xml</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create BOD" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create BOD" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${bod_package_1}&quot;,&#xd;
  &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
  &quot;groups&quot;: &quot;GROUP_1&quot;,&#xd;
  &quot;name&quot;: &quot;${bod_package_1}&quot;,&#xd;
  &quot;description&quot;: &quot;Created by admin on 01/03/2019 16:47:38&quot;,&#xd;
  &quot;packageMode&quot;: &quot;DESIGN&quot;,&#xd;
  &quot;validityPeriod&quot;: 30,&#xd;
  &quot;validityPeriodUnit&quot;: &quot;DAY&quot;,&#xd;
  &quot;applicableQosProfiles&quot;: &quot;${base_data_package_1}_QOS&quot;,&#xd;
  &quot;validity&quot;: &quot;30 DAY&quot;,&#xd;
  &quot;groupNames&quot;: &quot;DefaultGroup&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${bod_url}.json</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1256792527">&quot;id&quot;:&quot;${bod_package_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Attach QOS Multiplier" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;bodQosMultiplierDatas&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: &quot;&quot;,&#xd;
      &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
      &quot;groups&quot;: null,&#xd;
      &quot;fupLevel&quot;: 0,&#xd;
      &quot;multiplier&quot;: 2,&#xd;
      &quot;bodServiceMultiplierDatas&quot;: [],&#xd;
      &quot;bodPackageId&quot;: &quot;${bod_package_1}&quot;,&#xd;
      &quot;groupNames&quot;: null&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${bod_url}/${bod_package_1}/addBoDQosMultipliers.json</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1256792527">&quot;id&quot;:&quot;${bod_package_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change BOD To TEST Mode" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${bod_url}/${bod_package_1}/updateMode.json?pkgMode=TEST</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change BOD To LIVE Mode" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${bod_url}/${bod_package_1}/updateMode.json?pkgMode=LIVE</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create ProductOffer" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;: &quot;${base_product_offer_1}&quot;,&#xd;
    &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
    &quot;groups&quot;: &quot;GROUP_1&quot;,&#xd;
    &quot;name&quot;: &quot;${base_product_offer_1}&quot;,&#xd;
    &quot;description&quot;: &quot;Created by admin for automation&quot;,&#xd;
    &quot;type&quot;: &quot;BASE&quot;,&#xd;
    &quot;currency&quot;:&quot;${currency}&quot;,&#xd;
    &quot;packageMode&quot;: &quot;DESIGN&quot;,&#xd;
    &quot;validityPeriod&quot;: null,&#xd;
    &quot;validityPeriodUnit&quot;: &quot;DAY&quot;,&#xd;
    &quot;subscriptionPrice&quot;: null,&#xd;
    &quot;balance&quot;: null,&#xd;
    &quot;availabilityStartDate&quot;: null,&#xd;
    &quot;availabilityEndDate&quot;: null,&#xd;
    &quot;param1&quot;: null,&#xd;
    &quot;param2&quot;: null,&#xd;
    &quot;productOfferServicePkgRelDataList&quot;: [],&#xd;
    &quot;dataServicePkgId&quot;: &quot;${base_data_package_1}&quot;,&#xd;
    &quot;groupNames&quot;: &quot;DefaultGroup&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/${pd}/${product_offer_url}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49587">201</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To Test Mode" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">netvertexsm/pd/productoffer/product-offer/${base_product_offer_1}/updateMode?_method=put&amp;pkgMode=TEST</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49587">201</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To Live Mode" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">netvertexsm/pd/productoffer/product-offer/${base_product_offer_1}/updateMode?_method=put&amp;pkgMode=LIVE</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49587">201</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Subscriber Provisioning Request" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsAddSubscriberProfile&gt;
         &lt;!--Optional:--&gt;
        &lt;subscriberProfile&gt;
               &lt;entry&gt;
                  &lt;key&gt;SUBSCRIBER_IDENTITY&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;USERNAME&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUSTOMER_TYPE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;STATUS&lt;/key&gt;
                  &lt;value&gt;ACTIVE&lt;/value&gt;
               &lt;/entry&gt;
           &lt;entry&gt;
                  &lt;key&gt;PRODUCT_OFFER&lt;/key&gt;
                   &lt;value&gt;${base_product_offer_1}&lt;/value&gt;
                &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMS_PACKAGE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EXPIRY_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;AREA&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CITY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM1&lt;/key&gt;
                  &lt;value&gt;24124&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM2&lt;/key&gt;
                  &lt;value&gt;abcd&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM3&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM4&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM5&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ZONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COUNTRY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;BIRTH_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ROLE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COMPANY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;DEPARTMENT&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ARPU&lt;/key&gt;
                  &lt;value&gt;0&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CADRE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EMAIL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PHONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;SIP_URL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUI&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMSI&lt;/key&gt;
                 &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;MSISDN&lt;/key&gt;
                 &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
            &lt;/subscriberProfile&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsAddSubscriberProfile&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Subscribe BOD" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;parentId&quot;: &quot;&quot;,&#xd;
  &quot;subscriberId&quot;: &quot;${subscriber_id}&quot;,&#xd;
  &quot;alternateId&quot;: &quot;&quot;,&#xd;
  &quot;cui&quot;: &quot;&quot;,&#xd;
  &quot;bodId&quot;: &quot;${bod_package_1}&quot;,&#xd;
  &quot;bodName&quot;: &quot;&quot;,&#xd;
  &quot;subscriptionStatusValue&quot;: &quot;2&quot;,&#xd;
  &quot;subscriptionStatusName&quot;: &quot;&quot;,&#xd;
  &quot;startTime&quot;: &quot;&quot;,&#xd;
  &quot;endTime&quot;: &quot;&quot;,&#xd;
  &quot;priority&quot;: &quot;1&quot;,&#xd;
  &quot;updateAction&quot;: &quot;2&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
              <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/rest/restful/subscription/subscribeBoD?</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_${id}_CCR-I Gx" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">2</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.1">1</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.3">2</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">0</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${sessionid_gx}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.10">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.11">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.11">1</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.12">0</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.13">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.15">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.16">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.16">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">17</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">3</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Charging-Rule-Definition:Charging-Rule-Name:${RTC_5014_GY_BASE_QOS}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Charging-Rule-Definition:QoS-Information:Max-Requested-Bandwidth-DL:4194304</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_${id}_CCR-I" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">735627396</stringProp>
            <stringProp name="DiameterSampler.ETEID">2497714757</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">4</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">1</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">1</stringProp>
            <stringProp name="DiameterSampler.avpName.7">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Event-Timestamp</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2015-10-15 16:14:38 +0530</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.11">1</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">0</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.16">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">17</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">7</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Granted-Service-Unit:CC-Time:600</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Time-Quota-Threshold:480</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
              <stringProp name="DiameterAssertion.avpName.5">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.5">Granted-Service-Unit:CC-Total-Octets:104857600</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.5">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.5"></stringProp>
              <stringProp name="DiameterAssertion.avpName.6">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.6">Volume-Quota-Threshold:83886080</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.6">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.6"></stringProp>
              <stringProp name="DiameterAssertion.avpName.7">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.7">Volume-Quota-Threshold:83886080</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.7">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.7"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.7"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.7"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_${id}_CCR-U-960 MB, 480 SEC" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">735627396</stringProp>
            <stringProp name="DiameterSampler.ETEID">2497714757</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">4</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">2</stringProp>
            <stringProp name="DiameterSampler.avpName.7">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.10">1</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.12">2</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.15">4</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">1</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Reporting-Reason</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${__diamAVPValue(Multiple-Services-Credit-Control:Rating-Group,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.19">2</stringProp>
            <stringProp name="DiameterSampler.avpName.20">CC-Time</stringProp>
            <stringProp name="DiameterSampler.avpData.20">480</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.21">1006632960</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">8</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Granted-Service-Unit:CC-Total-Octets:41943040</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:41943040</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
              <stringProp name="DiameterAssertion.avpName.5">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.5">Final-Unit-Indication:Final-Unit-Action:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.5">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.5"></stringProp>
              <stringProp name="DiameterAssertion.avpName.6">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.6">Granted-Service-Unit:CC-Time:600</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.6">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.6"></stringProp>
              <stringProp name="DiameterAssertion.avpName.7">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.7">Time-Quota-Threshold:600</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.7">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.7"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.7"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.7"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_${id}_CCR-T-1000 SEC" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">735627452</stringProp>
            <stringProp name="DiameterSampler.ETEID">0</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.1">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">3</stringProp>
            <stringProp name="DiameterSampler.avpName.7">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.7">5</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.8">2</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">0</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.11">3</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.13">${__diamAVPValue(Multiple-Services-Credit-Control:Rating-Group,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.14">2</stringProp>
            <stringProp name="DiameterSampler.avpName.15">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.15">41943040</stringProp>
            <stringProp name="DiameterSampler.avpName.16">CC-Time</stringProp>
            <stringProp name="DiameterSampler.avpData.16">600</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Termination-Cause</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.18">1</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.19">0</stringProp>
            <stringProp name="DiameterSampler.avpCounter">20</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_${id}_CCR-T Gx" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-User-Location-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">0004F489008D3039</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.3">0</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid_gx}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">3</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">3</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.11">2</stringProp>
            <stringProp name="DiameterSampler.avpName.12">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">0</stringProp>
            <stringProp name="DiameterSampler.avpName.13">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.13">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Called-Station-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">internet</stringProp>
            <stringProp name="DiameterSampler.avpCounter">15</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-T Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Balance" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriptionService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetNonMonitoryBalance&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriber_id}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;packageId&gt;&lt;/packageId&gt;
         &lt;!--Optional:--&gt;
         &lt;packageName&gt;${base_data_package_1}&lt;/packageName&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriptionId&gt;&lt;/subscriptionId&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsGetNonMonitoryBalance&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Usage found" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                <stringProp name="-213139313">&lt;dailyBalance&gt;&lt;actual&gt;&lt;totalOctets&gt;999999998657822719&lt;/totalOctets&gt;&lt;/actual&gt;&lt;remaining&gt;&lt;totalOctets&gt;999999998657822719&lt;/totalOctets&gt;&lt;/remaining&gt;&lt;total&gt;&lt;totalOctets&gt;999999999999999999&lt;/totalOctets&gt;&lt;/total&gt;&lt;/dailyBalance&gt;</stringProp>
                <stringProp name="-1861579537">&lt;weeklyBalance&gt;&lt;actual&gt;&lt;totalOctets&gt;999999998657822719&lt;/totalOctets&gt;&lt;/actual&gt;&lt;remaining&gt;&lt;totalOctets&gt;999999998657822719&lt;/totalOctets&gt;&lt;/remaining&gt;&lt;total&gt;&lt;totalOctets&gt;999999999999999999&lt;/totalOctets&gt;&lt;/total&gt;&lt;/weeklyBalance&gt;</stringProp>
                <stringProp name="1446504259">&lt;billingCycleBalance&gt;&lt;actual&gt;&lt;totalOctets&gt;999999998657822719&lt;/totalOctets&gt;&lt;/actual&gt;&lt;remaining&gt;&lt;totalOctets&gt;999999998657822719&lt;/totalOctets&gt;&lt;/remaining&gt;&lt;total&gt;&lt;totalOctets&gt;999999999999999999&lt;/totalOctets&gt;&lt;/total&gt;&lt;/billingCycleBalance&gt;</stringProp>
                <stringProp name="-1761996453">&lt;packageName&gt;${datapackage}&lt;/packageName&gt;&lt;packageType&gt;BASE&lt;/packageType&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">this asseriton will check that usage of 25 mb is reported or not</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Usage found" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">//responseCode/text()=&apos;200&apos; and 
//responseMessage/text()=&apos;SUCCESS&apos; and
//quotaprofileBalance/availableHSQVolumeBalance/text()=&apos;0&apos; and  
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/actual/totalOctets[text()=&apos;0&apos;]  and  
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/actual/time[text()=&apos;4920&apos;]  and  
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/remaining/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/remaining/time[text()=&apos;4920&apos;] and
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/total/totalOctets[text()=&apos;1048576000&apos;] and
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/total/time[text()=&apos;6000&apos;] and
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/weeklyBalance/actual/totalOctets[text()=&apos;999999998951423999&apos;]  and  
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/weeklyBalance/actual/time[text()=&apos;999999999999998919&apos;]  and  
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/weeklyBalance/remaining/totalOctets[text()=&apos;999999998951423999&apos;] and
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/weeklyBalance/remaining/time[text()=&apos;999999999999998919&apos;] and
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/weeklyBalance/total/totalOctets[text()=&apos;999999999999999999&apos;] and
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/weeklyBalance/total/time[text()=&apos;999999999999999999&apos;] and
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/dailyBalance/actual/totalOctets[text()=&apos;999999998951423999&apos;]  and   
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/dailyBalance/actual/time[text()=&apos;999999999999998919&apos;]  and  
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/dailyBalance/remaining/totalOctets[text()=&apos;999999998951423999&apos;] and
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/dailyBalance/remaining/time[text()=&apos;999999999999998919&apos;] and
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/dailyBalance/total/totalOctets[text()=&apos;999999999999999999&apos;] and
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/dailyBalance/total/time[text()=&apos;999999999999999999&apos;]</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Post Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop pcap and logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="stop Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-720136512">Stop Pcap</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop NV log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-632654166">Stop NV log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop PD log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-592019242">Stop PD log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="End of RTC_${id}" enabled="true"/>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Module Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Gx+Gy-RTC_5015" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">RTC_5015 | Hybrid | Check and Verify Quota Threshold = GSU in Case Of FUI in Monetary Flow</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Gx+Gy-RTC_5015" enabled="true">
          <stringProp name="TestPlan.comments">RTC_5015 | Hybrid | Check and Verify Quota Threshold = GSU in Case Of FUI in Monetary Flow</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriber_id" elementType="Argument">
                <stringProp name="Argument.name">subscriber_id</stringProp>
                <stringProp name="Argument.value">2111115015</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">2111115015</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">2111115015</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">2111115015</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="base_data_package_1" elementType="Argument">
                <stringProp name="Argument.name">base_data_package_1</stringProp>
                <stringProp name="Argument.value">RTC_5015_GY_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">2111115015</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sessionid" elementType="Argument">
                <stringProp name="Argument.name">sessionid</stringProp>
                <stringProp name="Argument.value">2111115015_gy</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">Gy-RTC_5015</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">90152</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="base_product_offer_1" elementType="Argument">
                <stringProp name="Argument.name">base_product_offer_1</stringProp>
                <stringProp name="Argument.value">RTC_5015_PRODUCT_OFFER</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="id" elementType="Argument">
                <stringProp name="Argument.name">id</stringProp>
                <stringProp name="Argument.value">5015</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sessionid_gx" elementType="Argument">
                <stringProp name="Argument.name">sessionid_gx</stringProp>
                <stringProp name="Argument.value">2111115015_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">100</stringProp>
          </ConstantTimer>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Pre Processing" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="CleanUp_Sampler" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="subscriber-id" elementType="Argument">
                    <stringProp name="Argument.name">subscriber-id</stringProp>
                    <stringProp name="Argument.value">${subscriber_id}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="product-offer-id" elementType="Argument">
                    <stringProp name="Argument.name">product-offer-id</stringProp>
                    <stringProp name="Argument.value">${base_product_offer_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="data-package-id" elementType="Argument">
                    <stringProp name="Argument.name">data-package-id</stringProp>
                    <stringProp name="Argument.value">${base_data_package_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="rnc-package-id" elementType="Argument">
                    <stringProp name="Argument.name">rnc-package-id</stringProp>
                    <stringProp name="Argument.value">${base_rnc_package_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="data-topup-id" elementType="Argument">
                    <stringProp name="Argument.name">data-topup-id</stringProp>
                    <stringProp name="Argument.value">${data_topup_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="bod-package-id" elementType="Argument">
                    <stringProp name="Argument.name">bod-package-id</stringProp>
                    <stringProp name="Argument.value">${bod_package_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="email-template-id" elementType="Argument">
                    <stringProp name="Argument.name">email-template-id</stringProp>
                    <stringProp name="Argument.value">${email_template_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="sms-template-id" elementType="Argument">
                    <stringProp name="Argument.name">sms-template-id</stringProp>
                    <stringProp name="Argument.value">${sms_template_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">com.sterlite.netvertex.nvsampler.cleanup.sampler.CleanUpSampler</stringProp>
            </JavaSampler>
            <hashTree/>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start of RTC_${id}" enabled="true"/>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true);
f = new FileOutputStream(mapping_file_name, true);
p = new PrintStream(f);

// Write data to file

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Pcap and Logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872118812">Capture PCAP</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872996374">Capture log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture PD Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="1033451790">Capture PD log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create DataPackage" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;${base_data_package_1}&lt;/id&gt;&#xd;
            &lt;name&gt;${base_data_package_1}&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 11/19/2018 09:17:50&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;RnC_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin on 11/19/2018 09:19:25&lt;/description&gt;&#xd;
                    &lt;name&gt;${base_data_package_1}_QOS&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                     &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;2&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;2&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;${base_data_package_1}_PCC&lt;/name&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;${base_data_package_1}_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;2&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;2&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Static&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;${base_data_package_1}_QUOTA&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;${base_data_package_1}_QUOTA&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;quota-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
            &lt;rncProfileDatas&gt;&#xd;
                &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                &lt;id&gt;${base_data_package_1}_QUOTA&lt;/id&gt;&#xd;
                &lt;balanceLevel&gt;HSQ&lt;/balanceLevel&gt;&#xd;
                &lt;description&gt;Created by admin on 11/19/2018 09:18:26&lt;/description&gt;&#xd;
                &lt;name&gt;${base_data_package_1}_QUOTA&lt;/name&gt;&#xd;
                &lt;proration&gt;false&lt;/proration&gt;&#xd;
                &lt;quotaType&gt;HYBRID&lt;/quotaType&gt;&#xd;
                &lt;renewal-interval-unit&gt;MONTH&lt;/renewal-interval-unit&gt;&#xd;
                &lt;rncProfileDetailDatas&gt;&#xd;
                    &lt;balanceUnit&gt;MB&lt;/balanceUnit&gt;&#xd;
                    &lt;dataServiceType&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                    &lt;/dataServiceType&gt;&#xd;
                    &lt;fupLevel&gt;0&lt;/fupLevel&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;pulseTime&gt;20&lt;/pulseTime&gt;&#xd;
                    &lt;pulseTimeUnit&gt;SECOND&lt;/pulseTimeUnit&gt;&#xd;
                    &lt;pulseVolume&gt;20&lt;/pulseVolume&gt;&#xd;
                    &lt;pulseVolumeUnit&gt;MB&lt;/pulseVolumeUnit&gt;&#xd;
                    &lt;rate&gt;20&lt;/rate&gt;&#xd;
                    &lt;rateUnit&gt;TIME&lt;/rateUnit&gt;&#xd;
                    &lt;ratingGroupData&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;RATING_GROUP_1&lt;/id&gt;&#xd;
                        &lt;name&gt;Default_Rating_Group&lt;/name&gt;&#xd;
                    &lt;/ratingGroupData&gt;&#xd;
                    &lt;timeBalanceUnit&gt;SECOND&lt;/timeBalanceUnit&gt;&#xd;
                    &lt;timeLimitUnit&gt;SECOND&lt;/timeLimitUnit&gt;&#xd;
                    &lt;usageLimitUnit&gt;MB&lt;/usageLimitUnit&gt;&#xd;
                &lt;/rncProfileDetailDatas&gt;&#xd;
                &lt;unitType&gt;TOTAL&lt;/unitType&gt;&#xd;
            &lt;/rncProfileDatas&gt;&#xd;
            &lt;rate-cards/&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/xml</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create ProductOffer" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;: &quot;${base_product_offer_1}&quot;,&#xd;
    &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
    &quot;groups&quot;: &quot;GROUP_1&quot;,&#xd;
    &quot;name&quot;: &quot;${base_product_offer_1}&quot;,&#xd;
    &quot;description&quot;: &quot;Created by admin for automation&quot;,&#xd;
    &quot;type&quot;: &quot;BASE&quot;,&#xd;
    &quot;currency&quot;:&quot;${currency}&quot;,&#xd;
    &quot;packageMode&quot;: &quot;DESIGN&quot;,&#xd;
    &quot;validityPeriod&quot;: null,&#xd;
    &quot;validityPeriodUnit&quot;: &quot;DAY&quot;,&#xd;
    &quot;subscriptionPrice&quot;: null,&#xd;
    &quot;balance&quot;: null,&#xd;
    &quot;availabilityStartDate&quot;: null,&#xd;
    &quot;availabilityEndDate&quot;: null,&#xd;
    &quot;param1&quot;: null,&#xd;
    &quot;param2&quot;: null,&#xd;
    &quot;productOfferServicePkgRelDataList&quot;: [],&#xd;
    &quot;dataServicePkgId&quot;: &quot;${base_data_package_1}&quot;,&#xd;
    &quot;groupNames&quot;: &quot;DefaultGroup&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/${pd}/${product_offer_url}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49587">201</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To Test Mode" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">netvertexsm/pd/productoffer/product-offer/${base_product_offer_1}/updateMode?_method=put&amp;pkgMode=TEST</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49587">201</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To Live Mode" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">netvertexsm/pd/productoffer/product-offer/${base_product_offer_1}/updateMode?_method=put&amp;pkgMode=LIVE</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49587">201</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Subscriber Provisioning Request" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsAddSubscriberProfile&gt;
         &lt;!--Optional:--&gt;
        &lt;subscriberProfile&gt;
               &lt;entry&gt;
                  &lt;key&gt;SUBSCRIBER_IDENTITY&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;USERNAME&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUSTOMER_TYPE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;STATUS&lt;/key&gt;
                  &lt;value&gt;ACTIVE&lt;/value&gt;
               &lt;/entry&gt;
           &lt;entry&gt;
                  &lt;key&gt;PRODUCT_OFFER&lt;/key&gt;
                   &lt;value&gt;${base_product_offer_1}&lt;/value&gt;
                &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMS_PACKAGE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EXPIRY_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;AREA&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CITY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM1&lt;/key&gt;
                  &lt;value&gt;24124&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM2&lt;/key&gt;
                  &lt;value&gt;abcd&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM3&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM4&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM5&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ZONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COUNTRY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;BIRTH_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ROLE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COMPANY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;DEPARTMENT&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ARPU&lt;/key&gt;
                  &lt;value&gt;0&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CADRE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EMAIL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PHONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;SIP_URL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUI&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMSI&lt;/key&gt;
                 &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;MSISDN&lt;/key&gt;
                 &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
            &lt;/subscriberProfile&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsAddSubscriberProfile&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Add Monetory Balance Of 1000 INR" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriptionService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsAddMonetaryBalance&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriber_id}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;serviceId&gt;&lt;/serviceId&gt;
         &lt;!--Optional:--&gt;
         &lt;serviceName&gt;&lt;/serviceName&gt;
         &lt;!--Optional:--&gt;
         &lt;totalBalance&gt;1000&lt;/totalBalance&gt;
         &lt;!--Optional:--&gt;
         &lt;validFromDate&gt;1524720601000&lt;/validFromDate&gt;
         &lt;!--Optional:--&gt;
         &lt;validToDate&gt;1929720601000&lt;/validToDate&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsAddMonetaryBalance&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Balance Found" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                  <stringProp name="-1457087536">&lt;availBalance&gt;1000.0&lt;/availBalance&gt;&lt;totalBalance&gt;1000.0&lt;/totalBalance&gt;&lt;actualBalance&gt;1000.0&lt;/actualBalance&gt;</stringProp>
                  <stringProp name="-1646251490">&lt;currency&gt;INR&lt;/currency&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="TestPlan.comments">this asseriton will check that usage of 25 mb is reported or not</stringProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_${id}_CCR-I Gx" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">2</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.1">1</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.3">2</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">0</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${sessionid_gx}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.10">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.11">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.11">1</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.12">0</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.13">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.15">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.16">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.16">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">17</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">2</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Charging-Rule-Name:5254435F353031355F47595F424153455F504343</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_${id}_CCR-I" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">735627396</stringProp>
            <stringProp name="DiameterSampler.ETEID">2497714757</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">4</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">1</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">1</stringProp>
            <stringProp name="DiameterSampler.avpName.7">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Event-Timestamp</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2015-10-15 16:14:38 +0530</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.11">1</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">0</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.16">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">17</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">8</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Granted-Service-Unit:CC-Time:1000</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Time-Quota-Threshold:1000</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
              <stringProp name="DiameterAssertion.avpName.5">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.5">Final-Unit-Indication:Final-Unit-Action:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.5">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.5"></stringProp>
              <stringProp name="DiameterAssertion.avpName.6">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.6">Granted-Service-Unit:CC-Total-Octets:419430400</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.6">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.6"></stringProp>
              <stringProp name="DiameterAssertion.avpName.7">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.7">Volume-Quota-Threshold:419430400</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.7">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.7"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.7"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.7"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_${id}_CCR-T-1000 SEC 400 MB" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">735627452</stringProp>
            <stringProp name="DiameterSampler.ETEID">0</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.1">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">3</stringProp>
            <stringProp name="DiameterSampler.avpName.7">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.7">5</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.8">2</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">0</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.11">3</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.13">${__diamAVPValue(Multiple-Services-Credit-Control:Rating-Group,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.14">2</stringProp>
            <stringProp name="DiameterSampler.avpName.15">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.15">419430400</stringProp>
            <stringProp name="DiameterSampler.avpName.16">CC-Time</stringProp>
            <stringProp name="DiameterSampler.avpData.16">1000</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Termination-Cause</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.18">1</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.19">0</stringProp>
            <stringProp name="DiameterSampler.avpCounter">20</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_${id}_CCR-T Gx" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-User-Location-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">0004F489008D3039</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.3">0</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid_gx}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">3</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">3</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.11">2</stringProp>
            <stringProp name="DiameterSampler.avpName.12">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">0</stringProp>
            <stringProp name="DiameterSampler.avpName.13">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.13">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Called-Station-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">internet</stringProp>
            <stringProp name="DiameterSampler.avpCounter">15</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-T Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Balance" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriptionService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsGetNonMonitoryBalance&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriber_id}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;packageId&gt;&lt;/packageId&gt;
         &lt;!--Optional:--&gt;
         &lt;packageName&gt;${base_data_package_1}&lt;/packageName&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriptionId&gt;&lt;/subscriptionId&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsGetNonMonitoryBalance&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Usage found" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-457244103">&lt;responseCode&gt;200&lt;/responseCode&gt;&lt;responseMessage&gt;SUCCESS&lt;/responseMessage&gt;</stringProp>
                <stringProp name="-213139313">&lt;dailyBalance&gt;&lt;actual&gt;&lt;totalOctets&gt;999999998657822719&lt;/totalOctets&gt;&lt;/actual&gt;&lt;remaining&gt;&lt;totalOctets&gt;999999998657822719&lt;/totalOctets&gt;&lt;/remaining&gt;&lt;total&gt;&lt;totalOctets&gt;999999999999999999&lt;/totalOctets&gt;&lt;/total&gt;&lt;/dailyBalance&gt;</stringProp>
                <stringProp name="-1861579537">&lt;weeklyBalance&gt;&lt;actual&gt;&lt;totalOctets&gt;999999998657822719&lt;/totalOctets&gt;&lt;/actual&gt;&lt;remaining&gt;&lt;totalOctets&gt;999999998657822719&lt;/totalOctets&gt;&lt;/remaining&gt;&lt;total&gt;&lt;totalOctets&gt;999999999999999999&lt;/totalOctets&gt;&lt;/total&gt;&lt;/weeklyBalance&gt;</stringProp>
                <stringProp name="1446504259">&lt;billingCycleBalance&gt;&lt;actual&gt;&lt;totalOctets&gt;999999998657822719&lt;/totalOctets&gt;&lt;/actual&gt;&lt;remaining&gt;&lt;totalOctets&gt;999999998657822719&lt;/totalOctets&gt;&lt;/remaining&gt;&lt;total&gt;&lt;totalOctets&gt;999999999999999999&lt;/totalOctets&gt;&lt;/total&gt;&lt;/billingCycleBalance&gt;</stringProp>
                <stringProp name="-1761996453">&lt;packageName&gt;${datapackage}&lt;/packageName&gt;&lt;packageType&gt;BASE&lt;/packageType&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="TestPlan.comments">this asseriton will check that usage of 25 mb is reported or not</stringProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Usage found" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">//responseCode/text()=&apos;200&apos; and 
//responseMessage/text()=&apos;SUCCESS&apos; and
//quotaprofileBalance/availableHSQVolumeBalance/text()=&apos;999999999580569599&apos; and  
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/actual/totalOctets[text()=&apos;999999999580569599&apos;] and 
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/actual/time[text()=&apos;999999999999998999&apos;] and 
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/remaining/totalOctets[text()=&apos;999999999580569599&apos;] and 
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/remaining/time[text()=&apos;999999999999998999&apos;] and 
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/total/totalOctets[text()=&apos;999999999999999999&apos;] and 
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/billingCycleBalance/total/time[text()=&apos;999999999999999999&apos;] and 
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/weeklyBalance/actual/totalOctets[text()=&apos;999999999580569599&apos;]  and  
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/weeklyBalance/actual/time[text()=&apos;999999999999998999&apos;]  and  
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/weeklyBalance/remaining/totalOctets[text()=&apos;999999999580569599&apos;] and 
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/weeklyBalance/remaining/time[text()=&apos;999999999999998999&apos;] and 
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/weeklyBalance/total/totalOctets[text()=&apos;999999999999999999&apos;] and 
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/weeklyBalance/total/time[text()=&apos;999999999999999999&apos;] and 
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/dailyBalance/actual/totalOctets[text()=&apos;999999999580569599&apos;]  and   
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/dailyBalance/actual/time[text()=&apos;999999999999998999&apos;]  and   
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/dailyBalance/remaining/totalOctets[text()=&apos;999999999580569599&apos;] and 
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/dailyBalance/remaining/time[text()=&apos;999999999999998999&apos;] and 
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/dailyBalance/total/totalOctets[text()=&apos;999999999999999999&apos;] and 
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/dailyBalance/total/time[text()=&apos;999999999999999999&apos;]</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Post Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop pcap and logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="stop Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-720136512">Stop Pcap</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop NV log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-632654166">Stop NV log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop PD log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-592019242">Stop PD log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="End of RTC_${id}" enabled="true"/>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Module Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Gx+Gy-RTC_5016" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">RTC_5016 | PCC | Unknown User handling</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Gx+Gy-RTC_5016" enabled="true">
          <stringProp name="TestPlan.comments">RTC_5016 | PCC | Unknown User handling</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriber_id" elementType="Argument">
                <stringProp name="Argument.name">subscriber_id</stringProp>
                <stringProp name="Argument.value">1234567816</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">1234567816</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">1234567816</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">1234567816</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="base_data_package_1" elementType="Argument">
                <stringProp name="Argument.name">base_data_package_1</stringProp>
                <stringProp name="Argument.value">RTC_5016_GY_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">1234567816</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sessionid" elementType="Argument">
                <stringProp name="Argument.name">sessionid</stringProp>
                <stringProp name="Argument.value">1234567816_gy</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">Gy-RTC_5016</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">90291</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="base_product_offer_1" elementType="Argument">
                <stringProp name="Argument.name">base_product_offer_1</stringProp>
                <stringProp name="Argument.value">RTC_5016_PRODUCT_OFFER</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="id" elementType="Argument">
                <stringProp name="Argument.name">id</stringProp>
                <stringProp name="Argument.value">5016</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sessionid_gx" elementType="Argument">
                <stringProp name="Argument.name">sessionid_gx</stringProp>
                <stringProp name="Argument.value">1234567816_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">100</stringProp>
          </ConstantTimer>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Pre Processing" enabled="true"/>
          <hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start of RTC_${id}" enabled="true"/>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true);
f = new FileOutputStream(mapping_file_name, true);
p = new PrintStream(f);

// Write data to file

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="CleanUp_Sampler" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="subscriber-id" elementType="Argument">
                    <stringProp name="Argument.name">subscriber-id</stringProp>
                    <stringProp name="Argument.value">${subscriber_id}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="product-offer-id" elementType="Argument">
                    <stringProp name="Argument.name">product-offer-id</stringProp>
                    <stringProp name="Argument.value">${base_product_offer_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="data-package-id" elementType="Argument">
                    <stringProp name="Argument.name">data-package-id</stringProp>
                    <stringProp name="Argument.value">${base_data_package_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="rnc-package-id" elementType="Argument">
                    <stringProp name="Argument.name">rnc-package-id</stringProp>
                    <stringProp name="Argument.value">${base_rnc_package_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="data-topup-id" elementType="Argument">
                    <stringProp name="Argument.name">data-topup-id</stringProp>
                    <stringProp name="Argument.value">${data_topup_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="bod-package-id" elementType="Argument">
                    <stringProp name="Argument.name">bod-package-id</stringProp>
                    <stringProp name="Argument.value">${bod_package_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="email-template-id" elementType="Argument">
                    <stringProp name="Argument.name">email-template-id</stringProp>
                    <stringProp name="Argument.value">${email_template_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="sms-template-id" elementType="Argument">
                    <stringProp name="Argument.name">sms-template-id</stringProp>
                    <stringProp name="Argument.value">${sms_template_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">com.sterlite.netvertex.nvsampler.cleanup.sampler.CleanUpSampler</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_${id}_CCR-I Gx" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">2</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.1">1</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.3">2</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">0</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${sessionid_gx}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.10">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.11">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.11">1</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.12">0</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.13">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.15">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.16">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.16">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">17</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">2</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Charging-Rule-Name:5254435F353031365F47595F424153455F504343</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_${id}_CCR-I" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">735627396</stringProp>
            <stringProp name="DiameterSampler.ETEID">2497714757</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">4</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">1</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">1</stringProp>
            <stringProp name="DiameterSampler.avpName.7">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Event-Timestamp</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2015-10-15 16:14:38 +0530</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.11">1</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">0</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.16">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">17</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">7</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Granted-Service-Unit:CC-Time:600</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Time-Quota-Threshold:480</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
              <stringProp name="DiameterAssertion.avpName.5">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.5">Granted-Service-Unit:CC-Total-Octets:104857600</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.5">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.5"></stringProp>
              <stringProp name="DiameterAssertion.avpName.6">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.6">Volume-Quota-Threshold:83886080</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.6">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.6"></stringProp>
              <stringProp name="DiameterAssertion.avpName.7">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.7">Volume-Quota-Threshold:83886080</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.7">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.7"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.7"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.7"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_${id}_CCR-U-960 MB, 5500 SEC" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">735627396</stringProp>
            <stringProp name="DiameterSampler.ETEID">2497714757</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">4</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">2</stringProp>
            <stringProp name="DiameterSampler.avpName.7">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.10">1</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.12">2</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.15">4</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">1</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Reporting-Reason</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${__diamAVPValue(Multiple-Services-Credit-Control:Rating-Group,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.19">2</stringProp>
            <stringProp name="DiameterSampler.avpName.20">CC-Time</stringProp>
            <stringProp name="DiameterSampler.avpData.20">5500</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.21">1006632960</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">6</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Granted-Service-Unit:CC-Total-Octets:41943040</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Final-Unit-Indication:Final-Unit-Action:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
              <stringProp name="DiameterAssertion.avpName.5">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.5">Granted-Service-Unit:CC-Time:500</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.5">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.5"></stringProp>
              <stringProp name="DiameterAssertion.avpName.6">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.6">Granted-Service-Unit:CC-Time:600</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.6">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.6"></stringProp>
              <stringProp name="DiameterAssertion.avpName.7">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.7">Time-Quota-Threshold:600</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.7">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.7"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.7"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.7"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_${id}_CCR-T-500 SEC and 40 MB" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">735627452</stringProp>
            <stringProp name="DiameterSampler.ETEID">0</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.1">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">3</stringProp>
            <stringProp name="DiameterSampler.avpName.7">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.7">5</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.8">2</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">0</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.11">3</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.13">${__diamAVPValue(Multiple-Services-Credit-Control:Rating-Group,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.14">2</stringProp>
            <stringProp name="DiameterSampler.avpName.15">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.15">41943040</stringProp>
            <stringProp name="DiameterSampler.avpName.16">CC-Time</stringProp>
            <stringProp name="DiameterSampler.avpData.16">500</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Termination-Cause</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.18">1</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.19">0</stringProp>
            <stringProp name="DiameterSampler.avpCounter">20</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_${id}_CCR-T Gx" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-User-Location-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">0004F489008D3039</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.3">0</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid_gx}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">3</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">3</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.11">2</stringProp>
            <stringProp name="DiameterSampler.avpName.12">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">0</stringProp>
            <stringProp name="DiameterSampler.avpName.13">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.13">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Called-Station-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">internet</stringProp>
            <stringProp name="DiameterSampler.avpCounter">15</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-T Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_${id}_CCR-I Gx" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">2</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.1">1</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.3">2</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">0</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${sessionid_gx}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.10">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.11">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.11">1</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.12">0</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.13">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.15">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.16">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.16">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">17</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">5003</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Charging-Rule-Name:5254435F353031345F47595F424153455F504343</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_${id}_CCR-I" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">735627396</stringProp>
            <stringProp name="DiameterSampler.ETEID">2497714757</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">4</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">1</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">1</stringProp>
            <stringProp name="DiameterSampler.avpName.7">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Event-Timestamp</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2015-10-15 16:14:38 +0530</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.11">1</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">0</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.16">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">17</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">4010</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Time-Quota-Threshold:480</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Granted-Service-Unit:CC-Total-Octets:104857600</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
              <stringProp name="DiameterAssertion.avpName.5">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.5">Volume-Quota-Threshold:83886080</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.5">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.5"></stringProp>
              <stringProp name="DiameterAssertion.avpName.6">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.6">Volume-Quota-Threshold:83886080</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.6">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.6"></stringProp>
              <stringProp name="DiameterAssertion.avpName.7">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.7">Volume-Quota-Threshold:83886080</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.7">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.7"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.7"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.7"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Post Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop pcap and logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="stop Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-720136512">Stop Pcap</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop NV log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-632654166">Stop NV log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop PD log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-592019242">Stop PD log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="End of RTC_${id}" enabled="true"/>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Module Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Gx+Gy-RTC_5017" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Verify end to end call flow were user have Base Package , Multiple Spare and Data Topups</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Gx+Gy-RTC_${id}" enabled="true">
          <stringProp name="TestPlan.comments">Verify end to end call flow were user have Base Package , Multiple Spare and Data Topups</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriber_id" elementType="Argument">
                <stringProp name="Argument.name">subscriber_id</stringProp>
                <stringProp name="Argument.value">2111115017</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="alternate_id" elementType="Argument">
                <stringProp name="Argument.name">alternate_id</stringProp>
                <stringProp name="Argument.value">2311115017</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">2111115017</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">2111115017</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">2111115017</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">2111115017</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sessionid" elementType="Argument">
                <stringProp name="Argument.name">sessionid</stringProp>
                <stringProp name="Argument.value">2111115017_gy</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">Gx+Gy-RTC_5017</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="base_data_package_1" elementType="Argument">
                <stringProp name="Argument.name">base_data_package_1</stringProp>
                <stringProp name="Argument.value">RTC_5017_GY_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="base_product_offer_1" elementType="Argument">
                <stringProp name="Argument.name">base_product_offer_1</stringProp>
                <stringProp name="Argument.value">RTC_5017_PRODUCT_OFFER</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="data_topup_1" elementType="Argument">
                <stringProp name="Argument.name">data_topup_1</stringProp>
                <stringProp name="Argument.value">RTC_5017_DATA_SPARE_TOP_UP1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="data_topup_2" elementType="Argument">
                <stringProp name="Argument.name">data_topup_2</stringProp>
                <stringProp name="Argument.value">RTC_5017_DATA_TOP_UP1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="data_topup_3" elementType="Argument">
                <stringProp name="Argument.name">data_topup_3</stringProp>
                <stringProp name="Argument.value">RTC_5017_DATA_SPARE_TOP_UP2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="data_topup_4" elementType="Argument">
                <stringProp name="Argument.name">data_topup_4</stringProp>
                <stringProp name="Argument.value">RTC_5017_DATA_TOP_UP2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">91958</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="id" elementType="Argument">
                <stringProp name="Argument.name">id</stringProp>
                <stringProp name="Argument.value">5017</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Pre Processing" enabled="true"/>
          <hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start of RTC_${id}" enabled="true"/>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true); 
f = new FileOutputStream(mapping_file_name, true); 
p = new PrintStream(f); 

// Write data to file 

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Pcap and Logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="764597751">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872118812">Capture PCAP</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="764597751">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872996374">Capture log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture PD Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="764597751">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="1033451790">Capture PD log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="CleanUp Sampler" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Sleep_Time" elementType="Argument">
                    <stringProp name="Argument.name">Sleep_Time</stringProp>
                    <stringProp name="Argument.value">100</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Sleep_Mask" elementType="Argument">
                    <stringProp name="Argument.name">Sleep_Mask</stringProp>
                    <stringProp name="Argument.value">0xFF</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Label" elementType="Argument">
                    <stringProp name="Argument.name">Label</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="ResponseCode" elementType="Argument">
                    <stringProp name="Argument.name">ResponseCode</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="ResponseMessage" elementType="Argument">
                    <stringProp name="Argument.name">ResponseMessage</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Status" elementType="Argument">
                    <stringProp name="Argument.name">Status</stringProp>
                    <stringProp name="Argument.value">OK</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="SamplerData" elementType="Argument">
                    <stringProp name="Argument.name">SamplerData</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="ResultData" elementType="Argument">
                    <stringProp name="Argument.name">ResultData</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">org.apache.jmeter.protocol.java.test.JavaTest</stringProp>
            </JavaSampler>
            <hashTree/>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Data Package" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create DataPackage" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;${base_data_package_1}&lt;/id&gt;&#xd;
            &lt;name&gt;${base_data_package_1}&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriod&gt;30&lt;/validityPeriod&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;RnC_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;advancedCondition&gt;CS.UserName=&quot;${alternate_id}&quot;&lt;/advancedCondition&gt;&#xd;
                    &lt;description&gt;Created by admin&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_${id}_PCC_PROFILE2&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;2&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;2&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                     &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;RTC_${id}_PCC_RULE2&lt;/name&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;RTC_${id}_PCC_RULE2&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;2&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;2&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;50&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;RTC_${id}_QUOTA_PROFILE&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_${id}_PCC_PROFILE&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;2&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;2&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;2&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;RTC_${id}_PCC_RULE1&lt;/name&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;RTC_${id}_PCC_RULE1&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;2&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;2&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;50&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;RTC_${id}_QUOTA_PROFILE&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;quota-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
            &lt;rncProfileDatas&gt;&#xd;
                &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                &lt;id&gt;&lt;/id&gt;&#xd;
                &lt;balanceLevel&gt;HSQ&lt;/balanceLevel&gt;&#xd;
                &lt;description&gt;Created by admin&lt;/description&gt;&#xd;
                &lt;name&gt;RTC_${id}_QUOTA_PROFILE&lt;/name&gt;&#xd;
                &lt;proration&gt;false&lt;/proration&gt;&#xd;
                &lt;quotaType&gt;VOLUME&lt;/quotaType&gt;&#xd;
                &lt;renewal-interval-unit&gt;MONTH&lt;/renewal-interval-unit&gt;&#xd;
                &lt;rncProfileDetailDatas&gt;&#xd;
                    &lt;balance&gt;500&lt;/balance&gt;&#xd;
                    &lt;balanceUnit&gt;MB&lt;/balanceUnit&gt;&#xd;
                    &lt;dataServiceType&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                    &lt;/dataServiceType&gt;&#xd;
                    &lt;fupLevel&gt;0&lt;/fupLevel&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;pulseTimeUnit&gt;SECOND&lt;/pulseTimeUnit&gt;&#xd;
                    &lt;pulseVolumeUnit&gt;MB&lt;/pulseVolumeUnit&gt;&#xd;
                    &lt;rateUnit&gt;TIME&lt;/rateUnit&gt;&#xd;
                    &lt;ratingGroupData&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;RATING_GROUP_1&lt;/id&gt;&#xd;
                        &lt;name&gt;Default_Rating_Group&lt;/name&gt;&#xd;
                    &lt;/ratingGroupData&gt;&#xd;
                    &lt;timeBalanceUnit&gt;SECOND&lt;/timeBalanceUnit&gt;&#xd;
                    &lt;timeLimitUnit&gt;SECOND&lt;/timeLimitUnit&gt;&#xd;
                    &lt;usageLimitUnit&gt;MB&lt;/usageLimitUnit&gt;&#xd;
                &lt;/rncProfileDetailDatas&gt;&#xd;
                &lt;unitType&gt;TOTAL&lt;/unitType&gt;&#xd;
            &lt;/rncProfileDatas&gt;&#xd;
            &lt;rate-cards/&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/xml</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="764597751">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Offer" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${base_product_offer_1}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${base_product_offer_1}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin on 05/23/2018 10:12:03&quot;,&#xd;
   &quot;type&quot;:&quot;BASE&quot;,&#xd;
   &quot;currency&quot;:&quot;${currency}&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${base_data_package_1}&quot;,&#xd;
   &quot;validityPeriod&quot;:null,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1401564903">&quot;id&quot;:&quot;${base_product_offer_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Offer" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${base_product_offer_1}.json</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1401564903">&quot;id&quot;:&quot;${base_product_offer_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To TEST Mode" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${base_product_offer_1}/updateMode.json?pkgMode=TEST</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="764597751">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To LIVE Mode" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${base_product_offer_1}/updateMode.json?pkgMode=LIVE</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="764597751">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Spare Top Up with PCC Profile" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Spare  Top-up with PCC Profile" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${data_topup_1}&quot;,&#xd;
  &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
  &quot;groups&quot;: &quot;GROUP_1&quot;,&#xd;
  &quot;name&quot;: &quot;${data_topup_1}&quot;,&#xd;
  &quot;description&quot;: &quot;Created by admin&quot;,&#xd;
  &quot;groupNames&quot;: &quot;DefaultGroup&quot;,&#xd;
  &quot;packageMode&quot;: &quot;DESIGN&quot;,&#xd;
  &quot;price&quot;: null,&#xd;
  &quot;validityPeriod&quot;: 30,&#xd;
  &quot;validityPeriodUnit&quot;: &quot;DAY&quot;,&#xd;
  &quot;multipleSubscription&quot;: true,&#xd;
  &quot;availabilityStartDate&quot;: 1536085800000,&#xd;
  &quot;availabilityEndDate&quot;: 2546078335000,&#xd;
  &quot;param1&quot;: null,&#xd;
  &quot;param2&quot;: null,&#xd;
  &quot;topupType&quot;: &quot;SPARE_TOP_UP&quot;,&#xd;
  &quot;quotaType&quot;: &quot;VOLUME&quot;,&#xd;
  &quot;unitType&quot;: &quot;TOTAL&quot;,&#xd;
  &quot;volumeBalance&quot;: 500,&#xd;
  &quot;volumeBalanceUnit&quot;: &quot;MB&quot;,&#xd;
  &quot;timeBalance&quot;: 100,&#xd;
  &quot;timeBalanceUnit&quot;: &quot;SECOND&quot;,&#xd;
  &quot;topUpNotificationList&quot;: [],&#xd;
  &quot;applicablePCCProfiles&quot;: &quot;RTC_${id}_PCC_PROFILE&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${data_topup_url}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1307571798">&quot;id&quot;:&quot;${data_topup_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change Spare  Topup with PCC Profile mode to TEST" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/pd/datatopup/data-topup/${data_topup_1}/updateMode.json?pkgMode=DESIGN</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1307571798">&quot;id&quot;:&quot;${data_topup_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="764597751">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change Spare  Topup with PCC Profile mode to LIVE" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/pd/datatopup/data-topup/${data_topup_1}/updateMode.json?pkgMode=TEST</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1307571798">&quot;id&quot;:&quot;${data_topup_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD : Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD : Policy -Reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="764597751">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Top Up with PCC Profile" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Data Top-up with PCC Profile" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${data_topup_2}&quot;,&#xd;
  &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
  &quot;groups&quot;: &quot;GROUP_1&quot;,&#xd;
  &quot;name&quot;: &quot;${data_topup_2}&quot;,&#xd;
  &quot;description&quot;: &quot;Created by admin&quot;,&#xd;
  &quot;groupNames&quot;: &quot;DefaultGroup&quot;,&#xd;
  &quot;packageMode&quot;: &quot;DESIGN&quot;,&#xd;
  &quot;price&quot;: null,&#xd;
  &quot;validityPeriod&quot;: 30,&#xd;
  &quot;validityPeriodUnit&quot;: &quot;DAY&quot;,&#xd;
  &quot;multipleSubscription&quot;: true,&#xd;
  &quot;availabilityStartDate&quot;: 1536085800000,&#xd;
  &quot;availabilityEndDate&quot;: 2546078335000,&#xd;
  &quot;param1&quot;: null,&#xd;
  &quot;param2&quot;: null,&#xd;
  &quot;topupType&quot;: &quot;TOP_UP&quot;,&#xd;
  &quot;quotaType&quot;: &quot;VOLUME&quot;,&#xd;
  &quot;unitType&quot;: &quot;TOTAL&quot;,&#xd;
  &quot;volumeBalance&quot;: 500,&#xd;
  &quot;volumeBalanceUnit&quot;: &quot;MB&quot;,&#xd;
  &quot;timeBalance&quot;: 100,&#xd;
  &quot;timeBalanceUnit&quot;: &quot;SECOND&quot;,&#xd;
  &quot;topUpNotificationList&quot;: [],&#xd;
  &quot;applicablePCCProfiles&quot;: &quot;RTC_${id}_PCC_PROFILE&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${data_topup_url}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1307572759">&quot;id&quot;:&quot;${data_topup_2}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change Data Topup with PCC Profile mode to TEST" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/pd/datatopup/data-topup/${data_topup_2}/updateMode.json?pkgMode=DESIGN</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1307572759">&quot;id&quot;:&quot;${data_topup_2}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="764597751">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change Data Topup with PCC Profile mode to LIVE" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/pd/datatopup/data-topup/${data_topup_2}/updateMode.json?pkgMode=TEST</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1307572759">&quot;id&quot;:&quot;${data_topup_2}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD : Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD : Policy -Reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="764597751">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Spare Top Up without PCC Profile" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Spare  Top-up without PCC Profile" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${data_topup_3}&quot;,&#xd;
  &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
  &quot;groups&quot;: &quot;GROUP_1&quot;,&#xd;
  &quot;name&quot;: &quot;${data_topup_3}&quot;,&#xd;
  &quot;description&quot;: &quot;Created by admin&quot;,&#xd;
  &quot;groupNames&quot;: &quot;DefaultGroup&quot;,&#xd;
  &quot;packageMode&quot;: &quot;DESIGN&quot;,&#xd;
  &quot;price&quot;: null,&#xd;
  &quot;validityPeriod&quot;: 30,&#xd;
  &quot;validityPeriodUnit&quot;: &quot;DAY&quot;,&#xd;
  &quot;multipleSubscription&quot;: true,&#xd;
  &quot;availabilityStartDate&quot;: 1536085800000,&#xd;
  &quot;availabilityEndDate&quot;: 2546078335000,&#xd;
  &quot;param1&quot;: null,&#xd;
  &quot;param2&quot;: null,&#xd;
  &quot;topupType&quot;: &quot;SPARE_TOP_UP&quot;,&#xd;
  &quot;quotaType&quot;: &quot;VOLUME&quot;,&#xd;
  &quot;unitType&quot;: &quot;TOTAL&quot;,&#xd;
  &quot;volumeBalance&quot;: 500,&#xd;
  &quot;volumeBalanceUnit&quot;: &quot;MB&quot;,&#xd;
  &quot;timeBalance&quot;: 100,&#xd;
  &quot;timeBalanceUnit&quot;: &quot;SECOND&quot;,&#xd;
  &quot;topUpNotificationList&quot;: [],&#xd;
  &quot;applicablePCCProfiles&quot;: null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${data_topup_url}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1307573720">&quot;id&quot;:&quot;${data_topup_3}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change Spare  Topup without PCC Profile mode to TEST" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/pd/datatopup/data-topup/${data_topup_3}/updateMode.json?pkgMode=DESIGN</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1307573720">&quot;id&quot;:&quot;${data_topup_3}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="764597751">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change Spare  Topup without PCC Profile mode to LIVE" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/pd/datatopup/data-topup/${data_topup_3}/updateMode.json?pkgMode=TEST</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1307573720">&quot;id&quot;:&quot;${data_topup_3}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD : Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD : Policy -Reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="764597751">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Top Up withanother PCC Profile" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Data Top-up without PCC Profile" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${data_topup_4}&quot;,&#xd;
  &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
  &quot;groups&quot;: &quot;GROUP_1&quot;,&#xd;
  &quot;name&quot;: &quot;${data_topup_4}&quot;,&#xd;
  &quot;description&quot;: &quot;Created by admin&quot;,&#xd;
  &quot;groupNames&quot;: &quot;DefaultGroup&quot;,&#xd;
  &quot;packageMode&quot;: &quot;DESIGN&quot;,&#xd;
  &quot;price&quot;: null,&#xd;
  &quot;validityPeriod&quot;: 30,&#xd;
  &quot;validityPeriodUnit&quot;: &quot;DAY&quot;,&#xd;
  &quot;multipleSubscription&quot;: true,&#xd;
  &quot;availabilityStartDate&quot;: 1536085800000,&#xd;
  &quot;availabilityEndDate&quot;: 2546078335000,&#xd;
  &quot;param1&quot;: null,&#xd;
  &quot;param2&quot;: null,&#xd;
  &quot;topupType&quot;: &quot;TOP_UP&quot;,&#xd;
  &quot;quotaType&quot;: &quot;VOLUME&quot;,&#xd;
  &quot;unitType&quot;: &quot;TOTAL&quot;,&#xd;
  &quot;volumeBalance&quot;: 500,&#xd;
  &quot;volumeBalanceUnit&quot;: &quot;MB&quot;,&#xd;
  &quot;timeBalance&quot;: 100,&#xd;
  &quot;timeBalanceUnit&quot;: &quot;SECOND&quot;,&#xd;
  &quot;topUpNotificationList&quot;: [],&#xd;
  &quot;applicablePCCProfiles&quot;:&quot;RTC_${id}_PCC_PROFILE2&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${data_topup_url}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1307574681">&quot;id&quot;:&quot;${data_topup_4}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change Data Topup without PCC Profile mode to TEST" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/pd/datatopup/data-topup/${data_topup_4}/updateMode.json?pkgMode=DESIGN</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1307574681">&quot;id&quot;:&quot;${data_topup_4}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="764597751">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change Data Topup without PCC Profile mode to LIVE" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/pd/datatopup/data-topup/${data_topup_4}/updateMode.json?pkgMode=TEST</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1307574681">&quot;id&quot;:&quot;${data_topup_4}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD : Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD : Policy -Reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="764597751">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Add Subscriber" enabled="true"/>
            <hashTree>
              <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Subscriber Provisioning Request" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
                <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsAddSubscriberProfile&gt;
         &lt;!--Optional:--&gt;
        &lt;subscriberProfile&gt;
               &lt;entry&gt;
                  &lt;key&gt;SUBSCRIBER_IDENTITY&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;USERNAME&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUSTOMER_TYPE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;STATUS&lt;/key&gt;
                  &lt;value&gt;ACTIVE&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMS_PACKAGE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EXPIRY_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;AREA&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CITY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM1&lt;/key&gt;
                  &lt;value&gt;24124&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM2&lt;/key&gt;
                  &lt;value&gt;abcd&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM3&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM4&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM5&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ZONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COUNTRY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;BIRTH_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ROLE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COMPANY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;DEPARTMENT&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ARPU&lt;/key&gt;
                  &lt;value&gt;0&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CADRE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EMAIL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PHONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;SIP_URL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUI&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMSI&lt;/key&gt;
                 &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;MSISDN&lt;/key&gt;
                 &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PRODUCT_OFFER&lt;/key&gt;
                 &lt;value&gt;${base_product_offer_1}&lt;/value&gt;
               &lt;/entry&gt;
            &lt;/subscriberProfile&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsAddSubscriberProfile&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="SoapSampler.xml_data_file"></stringProp>
                <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
                <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              </SoapSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1149187101">SUCCESS</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Alternate Id ${alternate_id}" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
&quot;subscriberId&quot;:&quot;${subscriber_id}&quot;,&#xd;
&quot;alternateId&quot;:&quot;${alternate_id}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/rest/restful/subscriberProvisioning/addAlternateId?</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1149187101">SUCCESS</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Add Subscriptions to Subscriber" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Subscriber Spare Topup 1 to ${subscriber_id}" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
        &quot;subscriberId&quot;: &quot;${subscriber_id}&quot;,&#xd;
        &quot;alternateId&quot;: null,&#xd;
        &quot;updateAction&quot;: &quot;0&quot;,&#xd;
        &quot;topUpPackageName&quot;: &quot;${data_topup_1}&quot;,&#xd;
        &quot;subscriptionStatusValue&quot;: &quot;2&quot;,&#xd;
        &quot;priority&quot;: &quot;999&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/subscription/subscribeTopUp</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1641253226">&quot;responseCode&quot;:200</stringProp>
                    <stringProp name="-282579259">&quot;responseMessage&quot;:&quot;SUCCESS&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Subscriber Spare Topup 2 to ${subscriber_id}" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
        &quot;subscriberId&quot;: &quot;${subscriber_id}&quot;,&#xd;
        &quot;alternateId&quot;: null,&#xd;
        &quot;updateAction&quot;: &quot;0&quot;,&#xd;
        &quot;topUpPackageName&quot;: &quot;${data_topup_3}&quot;,&#xd;
        &quot;subscriptionStatusValue&quot;: &quot;2&quot;,&#xd;
        &quot;priority&quot;: &quot;999&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/subscription/subscribeTopUp</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1641253226">&quot;responseCode&quot;:200</stringProp>
                    <stringProp name="-282579259">&quot;responseMessage&quot;:&quot;SUCCESS&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Subscriber Data Topup 1 to ${subscriber_id}" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
        &quot;subscriberId&quot;: &quot;${subscriber_id}&quot;,&#xd;
        &quot;alternateId&quot;: null,&#xd;
        &quot;updateAction&quot;: &quot;0&quot;,&#xd;
        &quot;topUpPackageName&quot;: &quot;${data_topup_2}&quot;,&#xd;
        &quot;subscriptionStatusValue&quot;: &quot;2&quot;,&#xd;
        &quot;priority&quot;: &quot;999&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/subscription/subscribeTopUp</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1641253226">&quot;responseCode&quot;:200</stringProp>
                    <stringProp name="-282579259">&quot;responseMessage&quot;:&quot;SUCCESS&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Subscriber Data Topup 2 to ${subscriber_id}" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
        &quot;subscriberId&quot;: &quot;${subscriber_id}&quot;,&#xd;
        &quot;alternateId&quot;: null,&#xd;
        &quot;updateAction&quot;: &quot;0&quot;,&#xd;
        &quot;topUpPackageName&quot;: &quot;${data_topup_4}&quot;,&#xd;
        &quot;subscriptionStatusValue&quot;: &quot;2&quot;,&#xd;
        &quot;priority&quot;: &quot;999&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/subscription/subscribeTopUp</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1641253226">&quot;responseCode&quot;:200</stringProp>
                    <stringProp name="-282579259">&quot;responseMessage&quot;:&quot;SUCCESS&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="Gx-RTC_${id}_CCR-I" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-User-Location-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">0004F489008D3039</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">1</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">2</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpName.13">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.15">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.17">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">18</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="Gy-RTC_${id}_CCR-I GSU-50MB Topup 2" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">2</stringProp>
            <stringProp name="DiameterSampler.avpName.1">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.1">0</stringProp>
            <stringProp name="DiameterSampler.avpName.2">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.2">3353236383430343</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">4</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.8">1</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.9">0</stringProp>
            <stringProp name="DiameterSampler.avpName.10">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${alternate_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Event-Timestamp</stringProp>
            <stringProp name="DiameterSampler.avpData.12">2015-10-15 16:14:38 +0530</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">20</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">5</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Granted-Service-Unit:CC-Total-Octets:52428800</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:41943040</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Get Session using Ws and DB" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </com.computaris.jmeter.ext.controls.ParameterizedController>
          <hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Subscriber&apos;s Gy Session" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SessionManagementService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ses=&quot;http://sessionmanagement.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;ses:wsGetSessionsBySubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriber_id}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;sessionType&gt;&lt;/sessionType&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/ses:wsGetSessionsBySubscriberIdentity&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <stringProp name="TestPlan.comments">Web Service Call to Get Session By Subscriberidentity</stringProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Get Session from DB" enabled="false">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">select CORE_SESSION_ID from TBLT_SESSION where SUBSCRIBER_IDENTITY = &apos;${subscriber_id}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1084582857">CORE_SESSION_ID
${sessionid}:Gx
${sessionid}:Gy
</stringProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">check if session id is present or not</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="Gy-RTC_${id}_CCR-U USU-250MB Topup 2" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">4</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">1</stringProp>
            <stringProp name="DiameterSampler.avpName.7">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${alternate_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.10">1</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.12">2</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.15">4</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">1</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Reporting-Reason</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${__diamAVPValue(Multiple-Services-Credit-Control:Rating-Group,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.20">262144000</stringProp>
            <stringProp name="DiameterSampler.avpName.21">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.21">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">22</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">3</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="Gy-RTC_${id}_CCR-U USU-250MB Topup 2 &amp; GSU Topup 1" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">4</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">2</stringProp>
            <stringProp name="DiameterSampler.avpName.7">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.10">1</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.12">2</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.15">4</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">1</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Reporting-Reason</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${__diamAVPValue(Multiple-Services-Credit-Control:Rating-Group,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.20">262144000</stringProp>
            <stringProp name="DiameterSampler.avpName.21">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.21">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">22</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">3</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="Gy-RTC_${id}_CCR-U USU-250MB Topup 1 " enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">4</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">3</stringProp>
            <stringProp name="DiameterSampler.avpName.7">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.10">1</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.12">2</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.15">4</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">1</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Reporting-Reason</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${__diamAVPValue(Multiple-Services-Credit-Control:Rating-Group,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.20">262144000</stringProp>
            <stringProp name="DiameterSampler.avpName.21">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.21">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">22</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">3</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="Gy-RTC_${id}_CCR-U USU-250MB Topup 1 &amp; GSU Base Package" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">4</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">4</stringProp>
            <stringProp name="DiameterSampler.avpName.7">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.10">1</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.12">2</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.15">4</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">1</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Reporting-Reason</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${__diamAVPValue(Multiple-Services-Credit-Control:Rating-Group,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.20">262144000</stringProp>
            <stringProp name="DiameterSampler.avpName.21">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.21">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">22</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">3</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="Gy-RTC_${id}_CCR-U USU-250MB Base Package" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">4</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">5</stringProp>
            <stringProp name="DiameterSampler.avpName.7">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.10">1</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.12">2</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.15">4</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">1</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Reporting-Reason</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${__diamAVPValue(Multiple-Services-Credit-Control:Rating-Group,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.20">262144000</stringProp>
            <stringProp name="DiameterSampler.avpName.21">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.21">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">22</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">3</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="Gy-RTC_${id}_CCR-U USU-250MB Base Package &amp; GSU Spare Topup 2" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">4</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">6</stringProp>
            <stringProp name="DiameterSampler.avpName.7">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.10">1</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.12">2</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.15">4</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">1</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Reporting-Reason</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${__diamAVPValue(Multiple-Services-Credit-Control:Rating-Group,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.20">262144000</stringProp>
            <stringProp name="DiameterSampler.avpName.21">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.21">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">22</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">3</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="Gy-RTC_${id}_CCR-U USU-250MB Spare Topup 2" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">4</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">7</stringProp>
            <stringProp name="DiameterSampler.avpName.7">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.10">1</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.12">2</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.15">4</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">1</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Reporting-Reason</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${__diamAVPValue(Multiple-Services-Credit-Control:Rating-Group,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.20">262144000</stringProp>
            <stringProp name="DiameterSampler.avpName.21">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.21">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">22</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">3</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="Gy-RTC_${id}_CCR-U USU-250MB Spare Topup 2 &amp; GSU Spare Topup 1" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">4</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">8</stringProp>
            <stringProp name="DiameterSampler.avpName.7">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.10">1</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.12">2</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.15">4</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">1</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Reporting-Reason</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${__diamAVPValue(Multiple-Services-Credit-Control:Rating-Group,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.20">262144000</stringProp>
            <stringProp name="DiameterSampler.avpName.21">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.21">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">22</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">3</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="Gy-RTC_${id}_CCR-U USU-250MB Spare Topup 1" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">4</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">9</stringProp>
            <stringProp name="DiameterSampler.avpName.7">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.10">1</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.12">2</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.15">4</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">1</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Reporting-Reason</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${__diamAVPValue(Multiple-Services-Credit-Control:Rating-Group,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.20">262144000</stringProp>
            <stringProp name="DiameterSampler.avpName.21">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.21">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">22</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">3</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="Gy-RTC_${id}_CCR-T" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.0">4</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.1">1</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Reporting-Reason</stringProp>
            <stringProp name="DiameterSampler.avpData.2">0</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${__diamAVPValue(Multiple-Services-Credit-Control:Rating-Group,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.4">1</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.5">262144000</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">4</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">3</stringProp>
            <stringProp name="DiameterSampler.avpName.13">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.13">9</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">2</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.15">0</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.16">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Termination-Cause</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.18">1</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.19">0</stringProp>
            <stringProp name="DiameterSampler.avpCounter">20</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="Gx-RTC_${id}_CCR-T Gx" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-User-Location-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">0004F489008D3039</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.3">0</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">3</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">3</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.11">2</stringProp>
            <stringProp name="DiameterSampler.avpName.12">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">0</stringProp>
            <stringProp name="DiameterSampler.avpName.13">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.13">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Called-Station-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">internet</stringProp>
            <stringProp name="DiameterSampler.avpCounter">15</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">200[12]</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">true</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="Gx-RTC_${id}_CCR-I Gx (5003 Result)" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-User-Location-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">0004F489008D3039</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">1</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">2</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpName.13">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.15">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.17">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">18</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">5003</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">3000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Subscriber&apos;s Session" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SessionManagementService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ses=&quot;http://sessionmanagement.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;ses:wsGetSessionsBySubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriber_id}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;sessionType&gt;&lt;/sessionType&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/ses:wsGetSessionsBySubscriberIdentity&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <stringProp name="TestPlan.comments">Subscriber&apos;s Session should not be fetched</stringProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2101284903">&lt;responseCode&gt;404&lt;/responseCode&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Post Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop pcap and logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="stop Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-720136512">Stop Pcap</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop NV log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="764597751">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-632654166">Stop NV log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop PD log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="764597751">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-592019242">Stop PD log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="End of RTC_${id}" enabled="true"/>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Module Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="764597751">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Gx+Gy-RTC_5018" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Verify Topup when base package is reached at FUP Level and Topup is been subscribed with valid Applicable PCC Profile</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Gx+Gy-RTC_${id}" enabled="true">
          <stringProp name="TestPlan.comments">Verify end to end call flow were user have Base Package , Multiple Spare and Data Topups</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriber_id" elementType="Argument">
                <stringProp name="Argument.name">subscriber_id</stringProp>
                <stringProp name="Argument.value">2111115018</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="alternate_id" elementType="Argument">
                <stringProp name="Argument.name">alternate_id</stringProp>
                <stringProp name="Argument.value">2311115018</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">2111115018</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">2111115018</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">2111115018</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">2111115018</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sessionid" elementType="Argument">
                <stringProp name="Argument.name">sessionid</stringProp>
                <stringProp name="Argument.value">2111115018_gy</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">Gx+Gy-RTC_5018</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="base_data_package_1" elementType="Argument">
                <stringProp name="Argument.name">base_data_package_1</stringProp>
                <stringProp name="Argument.value">RTC_5018_GY_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="base_product_offer_1" elementType="Argument">
                <stringProp name="Argument.name">base_product_offer_1</stringProp>
                <stringProp name="Argument.value">RTC_5018_PRODUCT_OFFER</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="data_topup" elementType="Argument">
                <stringProp name="Argument.name">data_topup</stringProp>
                <stringProp name="Argument.value">RTC_5018_DATA_TOP_UP</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">91959</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="id" elementType="Argument">
                <stringProp name="Argument.name">id</stringProp>
                <stringProp name="Argument.value">5018</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Pre Processing" enabled="true"/>
          <hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start of RTC_${id}" enabled="true"/>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true); 
f = new FileOutputStream(mapping_file_name, true); 
p = new PrintStream(f); 

// Write data to file 

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Pcap and Logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872118812">Capture PCAP</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872996374">Capture log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture PD Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="1033451790">Capture PD log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="CleanUp Sampler" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="subscriber-id" elementType="Argument">
                    <stringProp name="Argument.name">subscriber-id</stringProp>
                    <stringProp name="Argument.value">${subscriber_id}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="product-offer-id" elementType="Argument">
                    <stringProp name="Argument.name">product-offer-id</stringProp>
                    <stringProp name="Argument.value">${base_product_offer_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="data-package-id" elementType="Argument">
                    <stringProp name="Argument.name">data-package-id</stringProp>
                    <stringProp name="Argument.value">${base_data_package_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="rnc-package-id" elementType="Argument">
                    <stringProp name="Argument.name">rnc-package-id</stringProp>
                    <stringProp name="Argument.value">${base_rnc_package_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="data-topup-id" elementType="Argument">
                    <stringProp name="Argument.name">data-topup-id</stringProp>
                    <stringProp name="Argument.value">${data_topup}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="bod-package-id" elementType="Argument">
                    <stringProp name="Argument.name">bod-package-id</stringProp>
                    <stringProp name="Argument.value">${bod_package_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="email-template-id" elementType="Argument">
                    <stringProp name="Argument.name">email-template-id</stringProp>
                    <stringProp name="Argument.value">${email_template_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="sms-template-id" elementType="Argument">
                    <stringProp name="Argument.name">sms-template-id</stringProp>
                    <stringProp name="Argument.value">${sms_template_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">com.sterlite.netvertex.nvsampler.cleanup.sampler.CleanUpSampler</stringProp>
            </JavaSampler>
            <hashTree/>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Data Package" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create DataPackage" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;${base_data_package_1}&lt;/id&gt;&#xd;
            &lt;name&gt;${base_data_package_1}&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriod&gt;30&lt;/validityPeriod&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;RnC_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_${id}_PCC_PROFILE&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;2&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;2&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;2&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;RTC_${id}_PCC_RULE&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;RTC_${id}_PCC_RULE&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;2&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;2&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;50&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;1&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;1&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;1&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;RTC_${id}_PCC_FUP1_RULE&lt;/name&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;RTC_${id}_PCC_FUP1_RULE&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;512&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;512&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;2&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;RTC_${id}_PCC_FUP2_RULE&lt;/name&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;RTC_${id}_PCC_FUP2_RULE&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;512&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Kbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;512&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Kbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;15&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;RTC_${id}_QUOTA_PROFILE&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;quota-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
            &lt;rncProfileDatas&gt;&#xd;
                &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                &lt;id&gt;&lt;/id&gt;&#xd;
                &lt;balanceLevel&gt;HSQ&lt;/balanceLevel&gt;&#xd;
                &lt;description&gt;Created by admin&lt;/description&gt;&#xd;
                &lt;name&gt;RTC_${id}_QUOTA_PROFILE&lt;/name&gt;&#xd;
                &lt;proration&gt;false&lt;/proration&gt;&#xd;
                &lt;quotaType&gt;VOLUME&lt;/quotaType&gt;&#xd;
                &lt;renewal-interval-unit&gt;MONTH&lt;/renewal-interval-unit&gt;&#xd;
                &lt;rncProfileDetailDatas&gt;&#xd;
                    &lt;balance&gt;500&lt;/balance&gt;&#xd;
                    &lt;balanceUnit&gt;MB&lt;/balanceUnit&gt;&#xd;
                    &lt;dataServiceType&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                    &lt;/dataServiceType&gt;&#xd;
                    &lt;fupLevel&gt;0&lt;/fupLevel&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;pulseTimeUnit&gt;SECOND&lt;/pulseTimeUnit&gt;&#xd;
                    &lt;pulseVolumeUnit&gt;MB&lt;/pulseVolumeUnit&gt;&#xd;
                    &lt;rateUnit&gt;TIME&lt;/rateUnit&gt;&#xd;
                    &lt;ratingGroupData&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;RATING_GROUP_1&lt;/id&gt;&#xd;
                        &lt;name&gt;Default_Rating_Group&lt;/name&gt;&#xd;
                    &lt;/ratingGroupData&gt;&#xd;
                    &lt;timeBalanceUnit&gt;SECOND&lt;/timeBalanceUnit&gt;&#xd;
                    &lt;timeLimitUnit&gt;SECOND&lt;/timeLimitUnit&gt;&#xd;
                    &lt;usageLimitUnit&gt;MB&lt;/usageLimitUnit&gt;&#xd;
                &lt;/rncProfileDetailDatas&gt;&#xd;
                &lt;rncProfileDetailDatas&gt;&#xd;
                    &lt;balance&gt;250&lt;/balance&gt;&#xd;
                    &lt;balanceUnit&gt;MB&lt;/balanceUnit&gt;&#xd;
                    &lt;dataServiceType&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                    &lt;/dataServiceType&gt;&#xd;
                    &lt;fupLevel&gt;1&lt;/fupLevel&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;pulseTimeUnit&gt;SECOND&lt;/pulseTimeUnit&gt;&#xd;
                    &lt;pulseVolumeUnit&gt;MB&lt;/pulseVolumeUnit&gt;&#xd;
                    &lt;rateUnit&gt;VOLUME&lt;/rateUnit&gt;&#xd;
                    &lt;ratingGroupData&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;RATING_GROUP_1&lt;/id&gt;&#xd;
                        &lt;name&gt;Default_Rating_Group&lt;/name&gt;&#xd;
                    &lt;/ratingGroupData&gt;&#xd;
                    &lt;timeBalanceUnit&gt;DAY&lt;/timeBalanceUnit&gt;&#xd;
                    &lt;timeLimitUnit&gt;SECOND&lt;/timeLimitUnit&gt;&#xd;
                    &lt;usageLimitUnit&gt;MB&lt;/usageLimitUnit&gt;&#xd;
                &lt;/rncProfileDetailDatas&gt;&#xd;
                &lt;rncProfileDetailDatas&gt;&#xd;
                    &lt;balance&gt;150&lt;/balance&gt;&#xd;
                    &lt;balanceUnit&gt;MB&lt;/balanceUnit&gt;&#xd;
                    &lt;dataServiceType&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                    &lt;/dataServiceType&gt;&#xd;
                    &lt;fupLevel&gt;2&lt;/fupLevel&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;pulseTimeUnit&gt;SECOND&lt;/pulseTimeUnit&gt;&#xd;
                    &lt;pulseVolumeUnit&gt;MB&lt;/pulseVolumeUnit&gt;&#xd;
                    &lt;rateUnit&gt;VOLUME&lt;/rateUnit&gt;&#xd;
                    &lt;ratingGroupData&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;RATING_GROUP_1&lt;/id&gt;&#xd;
                        &lt;name&gt;Default_Rating_Group&lt;/name&gt;&#xd;
                    &lt;/ratingGroupData&gt;&#xd;
                    &lt;timeBalanceUnit&gt;DAY&lt;/timeBalanceUnit&gt;&#xd;
                    &lt;timeLimitUnit&gt;SECOND&lt;/timeLimitUnit&gt;&#xd;
                    &lt;usageLimitUnit&gt;MB&lt;/usageLimitUnit&gt;&#xd;
                &lt;/rncProfileDetailDatas&gt;&#xd;
                &lt;unitType&gt;TOTAL&lt;/unitType&gt;&#xd;
            &lt;/rncProfileDatas&gt;&#xd;
            &lt;rate-cards/&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/xml</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="764597751">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Offer" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${base_product_offer_1}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${base_product_offer_1}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin on 05/23/2018 10:12:03&quot;,&#xd;
   &quot;type&quot;:&quot;BASE&quot;,&#xd;
   &quot;currency&quot;:&quot;${currency}&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${base_data_package_1}&quot;,&#xd;
   &quot;validityPeriod&quot;:null,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1401564903">&quot;id&quot;:&quot;${base_product_offer_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Offer" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${base_product_offer_1}.json</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1401564903">&quot;id&quot;:&quot;${base_product_offer_1}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To TEST Mode" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${base_product_offer_1}/updateMode.json?pkgMode=TEST</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="764597751">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To LIVE Mode" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${base_product_offer_1}/updateMode.json?pkgMode=LIVE</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="764597751">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Top Up with PCC Profile" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Data Top-up with PCC Profile" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${data_topup}&quot;,&#xd;
  &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
  &quot;groups&quot;: &quot;GROUP_1&quot;,&#xd;
  &quot;name&quot;: &quot;${data_topup}&quot;,&#xd;
  &quot;description&quot;: &quot;Created by admin&quot;,&#xd;
  &quot;groupNames&quot;: &quot;DefaultGroup&quot;,&#xd;
  &quot;packageMode&quot;: &quot;DESIGN&quot;,&#xd;
  &quot;price&quot;: null,&#xd;
  &quot;validityPeriod&quot;: 30,&#xd;
  &quot;validityPeriodUnit&quot;: &quot;DAY&quot;,&#xd;
  &quot;multipleSubscription&quot;: true,&#xd;
  &quot;availabilityStartDate&quot;: 1536085800000,&#xd;
  &quot;availabilityEndDate&quot;: 2546078335000,&#xd;
  &quot;param1&quot;: null,&#xd;
  &quot;param2&quot;: null,&#xd;
  &quot;topupType&quot;: &quot;TOP_UP&quot;,&#xd;
  &quot;quotaType&quot;: &quot;VOLUME&quot;,&#xd;
  &quot;unitType&quot;: &quot;TOTAL&quot;,&#xd;
  &quot;volumeBalance&quot;: 500,&#xd;
  &quot;volumeBalanceUnit&quot;: &quot;MB&quot;,&#xd;
  &quot;timeBalance&quot;: 100,&#xd;
  &quot;timeBalanceUnit&quot;: &quot;SECOND&quot;,&#xd;
  &quot;topUpNotificationList&quot;: [],&#xd;
  &quot;applicablePCCProfiles&quot;: &quot;RTC_${id}_PCC_PROFILE&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${data_topup_url}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1741653276">&quot;id&quot;:&quot;${data_topup}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change Data Topup with PCC Profile mode to TEST" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/pd/datatopup/data-topup/${data_topup}/updateMode.json?pkgMode=DESIGN</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1741653276">&quot;id&quot;:&quot;${data_topup}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="764597751">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change Data Topup with PCC Profile mode to LIVE" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/pd/datatopup/data-topup/${data_topup}/updateMode.json?pkgMode=TEST</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1741653276">&quot;id&quot;:&quot;${data_topup}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD : Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD : Policy -Reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="764597751">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Add Subscriber" enabled="true"/>
            <hashTree>
              <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Subscriber Provisioning Request" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
                <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsAddSubscriberProfile&gt;
         &lt;!--Optional:--&gt;
        &lt;subscriberProfile&gt;
               &lt;entry&gt;
                  &lt;key&gt;SUBSCRIBER_IDENTITY&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;USERNAME&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUSTOMER_TYPE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;STATUS&lt;/key&gt;
                  &lt;value&gt;ACTIVE&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMS_PACKAGE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EXPIRY_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;AREA&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CITY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM1&lt;/key&gt;
                  &lt;value&gt;24124&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM2&lt;/key&gt;
                  &lt;value&gt;abcd&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM3&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM4&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM5&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ZONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COUNTRY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;BIRTH_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ROLE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COMPANY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;DEPARTMENT&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ARPU&lt;/key&gt;
                  &lt;value&gt;0&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CADRE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EMAIL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PHONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;SIP_URL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUI&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMSI&lt;/key&gt;
                 &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;MSISDN&lt;/key&gt;
                 &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PRODUCT_OFFER&lt;/key&gt;
                 &lt;value&gt;${base_product_offer_1}&lt;/value&gt;
               &lt;/entry&gt;
            &lt;/subscriberProfile&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsAddSubscriberProfile&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="SoapSampler.xml_data_file"></stringProp>
                <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
                <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              </SoapSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1149187101">SUCCESS</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Alternate Id ${alternate_id}" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
&quot;subscriberId&quot;:&quot;${subscriber_id}&quot;,&#xd;
&quot;alternateId&quot;:&quot;${alternate_id}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/rest/restful/subscriberProvisioning/addAlternateId?</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1149187101">SUCCESS</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="Gx-RTC_${id}_CCR-I" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-User-Location-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">0004F489008D3039</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">1</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">2</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpName.13">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.15">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.17">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">18</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="Gy-RTC_${id}_CCR-I GSU-50 MB Base Package HSQ" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">2</stringProp>
            <stringProp name="DiameterSampler.avpName.1">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.1">0</stringProp>
            <stringProp name="DiameterSampler.avpName.2">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.2">3353236383430343</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">4</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.8">1</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.9">0</stringProp>
            <stringProp name="DiameterSampler.avpName.10">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${alternate_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Event-Timestamp</stringProp>
            <stringProp name="DiameterSampler.avpData.12">2015-10-15 16:14:38 +0530</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">20</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">5</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Granted-Service-Unit:CC-Total-Octets:52428800</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:41943040</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Get Session using Ws and DB" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </com.computaris.jmeter.ext.controls.ParameterizedController>
          <hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Subscriber&apos;s Gy Session" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SessionManagementService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ses=&quot;http://sessionmanagement.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;ses:wsGetSessionsBySubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriber_id}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;sessionType&gt;&lt;/sessionType&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/ses:wsGetSessionsBySubscriberIdentity&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <stringProp name="TestPlan.comments">Web Service Call to Get Session By Subscriberidentity</stringProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Get Session from DB" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">select CORE_SESSION_ID from TBLT_SESSION where SUBSCRIBER_IDENTITY = &apos;${subscriber_id}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1332258241">${sessionid}:Gy
</stringProp>
                  <stringProp name="1332258210">${sessionid}:Gx
</stringProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">check if session id is present or not</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="Gy-RTC_${id}_CCR-U USU-500MB Base Package HSQ" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">4</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">1</stringProp>
            <stringProp name="DiameterSampler.avpName.7">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${alternate_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.10">1</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.12">2</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.15">4</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">1</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Reporting-Reason</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${__diamAVPValue(Multiple-Services-Credit-Control:Rating-Group,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.20">524288000</stringProp>
            <stringProp name="DiameterSampler.avpName.21">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.21">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">22</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">3</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="Gy-RTC_${id}_CCR-U USU-250MB Base Package FUP1" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">4</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">1</stringProp>
            <stringProp name="DiameterSampler.avpName.7">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${alternate_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.10">1</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.12">2</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.15">4</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">1</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Reporting-Reason</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${__diamAVPValue(Multiple-Services-Credit-Control:Rating-Group,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.20">262144000</stringProp>
            <stringProp name="DiameterSampler.avpName.21">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.21">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">22</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">3</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Add Subscriptions to Subscriber" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Subscriber Topup to ${subscriber_id}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
        &quot;subscriberId&quot;: &quot;${subscriber_id}&quot;,&#xd;
        &quot;alternateId&quot;: null,&#xd;
        &quot;updateAction&quot;: &quot;1&quot;,&#xd;
        &quot;topUpPackageName&quot;: &quot;${data_topup}&quot;,&#xd;
        &quot;subscriptionStatusValue&quot;: &quot;2&quot;,&#xd;
        &quot;priority&quot;: &quot;999&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/subscription/subscribeTopUp</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1641253226">&quot;responseCode&quot;:200</stringProp>
                  <stringProp name="-282579259">&quot;responseMessage&quot;:&quot;SUCCESS&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="Gy-RTC_${id}_RAR-RAA" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">automatic</stringProp>
            <stringProp name="DiameterSampler.message">Re-Auth-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${username}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">5</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="Gx-RTC_${id}_RAR-RAA" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">automatic</stringProp>
            <stringProp name="DiameterSampler.message">Re-Auth-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${username}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">5</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="Gy-RTC_${id}_CCR-U USU-100MB Base Pacakge FUP2" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">4</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">1</stringProp>
            <stringProp name="DiameterSampler.avpName.7">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${alternate_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.10">1</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.12">2</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.15">4</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">1</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Reporting-Reason</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.18">0</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.20">104857600</stringProp>
            <stringProp name="DiameterSampler.avpName.21">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.21">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">22</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">3</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="Gy-RTC_${id}_CCR-U USU-500MB Data-Topup" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">4</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">1</stringProp>
            <stringProp name="DiameterSampler.avpName.7">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${alternate_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.10">1</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.12">2</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.15">4</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">1</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Reporting-Reason</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.18">0</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.20">524288000</stringProp>
            <stringProp name="DiameterSampler.avpName.21">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.21">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">22</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">3</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="Gy-RTC_${id}_CCR-T" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.0">4</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.1">1</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Reporting-Reason</stringProp>
            <stringProp name="DiameterSampler.avpData.2">0</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Rating-Group</stringProp>
            <stringProp name="DiameterSampler.avpData.3">0</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.4">1</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.5">52428800</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">4</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">3</stringProp>
            <stringProp name="DiameterSampler.avpName.13">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.13">9</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">2</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.15">0</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.16">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Termination-Cause</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.18">1</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.19">0</stringProp>
            <stringProp name="DiameterSampler.avpCounter">20</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="Gx-RTC_${id}_CCR-T Gx" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-User-Location-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">0004F489008D3039</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.3">0</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">3</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">3</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.11">2</stringProp>
            <stringProp name="DiameterSampler.avpName.12">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">0</stringProp>
            <stringProp name="DiameterSampler.avpName.13">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.13">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Called-Station-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">internet</stringProp>
            <stringProp name="DiameterSampler.avpCounter">15</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">200[12]</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">true</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="Gx-RTC_${id}_CCR-I (5003 Result)" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-User-Location-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">0004F489008D3039</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">1</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">2</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpName.13">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.15">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.17">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">18</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">5003</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">3000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Subscriber&apos;s Session" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SessionManagementService</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ses=&quot;http://sessionmanagement.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;ses:wsGetSessionsBySubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriber_id}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;sessionType&gt;&lt;/sessionType&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/ses:wsGetSessionsBySubscriberIdentity&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="SoapSampler.xml_data_file"></stringProp>
            <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
            <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <stringProp name="TestPlan.comments">Subscriber&apos;s Session should not be fetched</stringProp>
          </SoapSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2101284903">&lt;responseCode&gt;404&lt;/responseCode&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Post Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop pcap and logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="stop Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-720136512">Stop Pcap</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop NV log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="764597751">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-632654166">Stop NV log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop PD log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="764597751">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-592019242">Stop PD log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="End of RTC_${id}" enabled="true"/>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Module Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="764597751">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Gx+Gy-RTC_5019" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">RTC_5019 | Gx+Gy | Volume | Verify that NetVertex is selecting fup qos once daily hsq quota gets exhausted.</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Gx+Gy-RTC_5019" enabled="true">
          <stringProp name="TestPlan.comments">RTC_5019 | Gx+Gy | Volume | Check and Verify fup level qos getting applied when daily hsq quota gets exhausted</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="id" elementType="Argument">
                <stringProp name="Argument.name">id</stringProp>
                <stringProp name="Argument.value">5019</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">98395</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">Gy-RTC_5019</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subscriber_id" elementType="Argument">
                <stringProp name="Argument.name">subscriber_id</stringProp>
                <stringProp name="Argument.value">2111115019</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">2111115019</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">2111115019</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">2111115019</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">2111115019</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sessionid_gx" elementType="Argument">
                <stringProp name="Argument.name">sessionid_gx</stringProp>
                <stringProp name="Argument.value">2111115019_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sessionid" elementType="Argument">
                <stringProp name="Argument.name">sessionid</stringProp>
                <stringProp name="Argument.value">2111115019_gy</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="base_data_package" elementType="Argument">
                <stringProp name="Argument.name">base_data_package</stringProp>
                <stringProp name="Argument.value">RTC_5019_GY_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="base_product_offer" elementType="Argument">
                <stringProp name="Argument.name">base_product_offer</stringProp>
                <stringProp name="Argument.value">RTC_5019_GY_PO</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="framed-ip-address" elementType="Argument">
                <stringProp name="Argument.name">framed-ip-address</stringProp>
                <stringProp name="Argument.value">C0A81417</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sessionid_gx2" elementType="Argument">
                <stringProp name="Argument.name">sessionid_gx2</stringProp>
                <stringProp name="Argument.value">2111115019_gx_2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start of RTC_5019" enabled="true"/>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true); 
f = new FileOutputStream(mapping_file_name, true); 
p = new PrintStream(f); 

// Write data to file 

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Pre Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Pcap and Logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872118812">Capture PCAP</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872996374">Capture log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture PD Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="1033451790">Capture PD log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="CleanUp Sampler" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="subscriber-id" elementType="Argument">
                    <stringProp name="Argument.name">subscriber-id</stringProp>
                    <stringProp name="Argument.value">${subscriber_id}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="product-offer-id" elementType="Argument">
                    <stringProp name="Argument.name">product-offer-id</stringProp>
                    <stringProp name="Argument.value">${base_product_offer}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="data-package-id" elementType="Argument">
                    <stringProp name="Argument.name">data-package-id</stringProp>
                    <stringProp name="Argument.value">${base_data_package}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="rnc-package-id" elementType="Argument">
                    <stringProp name="Argument.name">rnc-package-id</stringProp>
                    <stringProp name="Argument.value">${base_rnc_package_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="data-topup-id" elementType="Argument">
                    <stringProp name="Argument.name">data-topup-id</stringProp>
                    <stringProp name="Argument.value">${data_topup_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="bod-package-id" elementType="Argument">
                    <stringProp name="Argument.name">bod-package-id</stringProp>
                    <stringProp name="Argument.value">${bod_package_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="email-template-id" elementType="Argument">
                    <stringProp name="Argument.name">email-template-id</stringProp>
                    <stringProp name="Argument.value">${email_template_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="sms-template-id" elementType="Argument">
                    <stringProp name="Argument.name">sms-template-id</stringProp>
                    <stringProp name="Argument.value">${sms_template_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">com.sterlite.netvertex.nvsampler.cleanup.sampler.CleanUpSampler</stringProp>
            </JavaSampler>
            <hashTree/>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Base Product offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create DataPackage" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;RTC_${id}_GY_BASE&lt;/id&gt;&#xd;
            &lt;name&gt;RTC_${id}_GY_BASE&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 07/31/2018 15:40:12&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;RnC_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin on 07/31/2018 15:56:36&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_${id}_pcc_profile&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;2&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;2&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;HSQ_PCC_RULE_DAILY&lt;/name&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;HSQ_PCC_RULE_DAILY&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;2&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;2&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Static&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;1&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;FUP_PCC_RULE_DAILY&lt;/name&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;FUP_PCC_RULE_DAILY&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Static&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;RTC_${id}_Quota_profile&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;quota-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
            &lt;rncProfileDatas&gt;&#xd;
                &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                &lt;id&gt;&lt;/id&gt;&#xd;
                &lt;balanceLevel&gt;HSQ&lt;/balanceLevel&gt;&#xd;
                &lt;description&gt;Created by admin on 07/31/2018 15:54:29&lt;/description&gt;&#xd;
                &lt;name&gt;RTC_${id}_Quota_profile&lt;/name&gt;&#xd;
                &lt;quotaType&gt;VOLUME&lt;/quotaType&gt;&#xd;
                &lt;renewal-interval-unit&gt;MONTH&lt;/renewal-interval-unit&gt;&#xd;
                &lt;rncProfileDetailDatas&gt;&#xd;
                    &lt;balanceUnit&gt;MB&lt;/balanceUnit&gt;&#xd;
                    &lt;dailyUsageLimit&gt;10&lt;/dailyUsageLimit&gt;&#xd;
                    &lt;dataServiceType&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                    &lt;/dataServiceType&gt;&#xd;
                    &lt;fupLevel&gt;0&lt;/fupLevel&gt;&#xd;
                    &lt;id&gt;221760f2-5ac7-470f-be9c-4724f3da0aa0&lt;/id&gt;&#xd;
                    &lt;pulseTimeUnit&gt;SECOND&lt;/pulseTimeUnit&gt;&#xd;
                    &lt;pulseVolumeUnit&gt;MB&lt;/pulseVolumeUnit&gt;&#xd;
                    &lt;rateUnit&gt;VOLUME&lt;/rateUnit&gt;&#xd;
                    &lt;ratingGroupData&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;RATING_GROUP_1&lt;/id&gt;&#xd;
                        &lt;name&gt;Default_Rating_Group&lt;/name&gt;&#xd;
                    &lt;/ratingGroupData&gt;&#xd;
                    &lt;timeBalanceUnit&gt;DAY&lt;/timeBalanceUnit&gt;&#xd;
                    &lt;timeLimitUnit&gt;SECOND&lt;/timeLimitUnit&gt;&#xd;
                    &lt;usageLimitUnit&gt;MB&lt;/usageLimitUnit&gt;&#xd;
                &lt;/rncProfileDetailDatas&gt;&#xd;
                &lt;rncProfileDetailDatas&gt;&#xd;
                    &lt;balanceUnit&gt;MB&lt;/balanceUnit&gt;&#xd;
                    &lt;balance&gt;500&lt;/balance&gt;&#xd;
                    &lt;dataServiceType&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                    &lt;/dataServiceType&gt;&#xd;
                    &lt;fupLevel&gt;1&lt;/fupLevel&gt;&#xd;
                    &lt;id&gt;98af3bb5-5e77-4628-ab8d-16fd23ccefd3&lt;/id&gt;&#xd;
                    &lt;pulseTimeUnit&gt;SECOND&lt;/pulseTimeUnit&gt;&#xd;
                    &lt;pulseVolumeUnit&gt;MB&lt;/pulseVolumeUnit&gt;&#xd;
                    &lt;rateUnit&gt;VOLUME&lt;/rateUnit&gt;&#xd;
                    &lt;ratingGroupData&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;RATING_GROUP_1&lt;/id&gt;&#xd;
                        &lt;name&gt;Default_Rating_Group&lt;/name&gt;&#xd;
                    &lt;/ratingGroupData&gt;&#xd;
                    &lt;timeBalanceUnit&gt;DAY&lt;/timeBalanceUnit&gt;&#xd;
                    &lt;timeLimitUnit&gt;SECOND&lt;/timeLimitUnit&gt;&#xd;
                    &lt;usageLimitUnit&gt;MB&lt;/usageLimitUnit&gt;&#xd;
                &lt;/rncProfileDetailDatas&gt;&#xd;
                &lt;unitType&gt;TOTAL&lt;/unitType&gt;&#xd;
            &lt;/rncProfileDatas&gt;&#xd;
            &lt;rate-cards/&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/xml</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Offer" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${base_product_offer}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${base_product_offer}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin on 05/23/2018 10:12:03&quot;,&#xd;
   &quot;type&quot;:&quot;BASE&quot;,&#xd;
   &quot;currency&quot;:&quot;${currency}&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${base_data_package}&quot;,&#xd;
   &quot;validityPeriod&quot;:null,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                  <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1424239207">&quot;id&quot;:&quot;${base_product_offer}&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">true</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To TEST Mode" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${base_product_offer}/updateMode.json?pkgMode=TEST</stringProp>
                  <stringProp name="HTTPSampler.method">PUT</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1424239207">&quot;id&quot;:&quot;${base_product_offer}&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">true</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
                <hashTree>
                  <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                    <collectionProp name="ModuleController.node_path">
                      <stringProp name="-1227702913">WorkBench</stringProp>
                      <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                      <stringProp name="18059174">Common Functions</stringProp>
                      <stringProp name="-803016769">PD: Reload Policy</stringProp>
                    </collectionProp>
                  </ModuleController>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To LIVE Mode" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${base_product_offer}/updateMode.json?pkgMode=LIVE</stringProp>
                  <stringProp name="HTTPSampler.method">PUT</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1424239207">&quot;id&quot;:&quot;${base_product_offer}&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">true</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Offer" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                  <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${base_product_offer}.json</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1424239207">&quot;id&quot;:&quot;${base_product_offer}&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provision Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsAddSubscriber&gt;&#xd;
         &lt;subscriberProfile&gt;    &#xd;
			&lt;entry&gt;&#xd;
			   &lt;key&gt;USERNAME&lt;/key&gt;&#xd;
			   &lt;value&gt;${username}&lt;/value&gt;&#xd;
			&lt;/entry&gt;&#xd;
			&lt;entry&gt;&#xd;
			   &lt;key&gt;PASSWORD&lt;/key&gt;&#xd;
			   &lt;value&gt;${username}&lt;/value&gt;&#xd;
			&lt;/entry&gt;&#xd;
			&lt;entry&gt;&#xd;
			   &lt;key&gt;STATUS&lt;/key&gt;&#xd;
			   &lt;value&gt;Active&lt;/value&gt;&#xd;
			&lt;/entry&gt;&#xd;
			&lt;entry&gt;&#xd;
			   &lt;key&gt;IMSI&lt;/key&gt;&#xd;
			  &lt;value&gt;${username}&lt;/value&gt;&#xd;
			&lt;/entry&gt;&#xd;
			&lt;entry&gt;&#xd;
			   &lt;key&gt;MSISDN&lt;/key&gt;&#xd;
			  &lt;value&gt;${username}&lt;/value&gt;&#xd;
			&lt;/entry&gt;&#xd;
            &lt;productOffer&gt;${base_product_offer}&lt;/productOffer&gt;&#xd;
            &lt;subscriberIdentity&gt;${subscriber_id}&lt;/subscriberIdentity&gt;&#xd;
         &lt;/subscriberProfile&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsAddSubscriber&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscriber_service}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5019_CCR-I Gx" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Framed-IP-Address</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${framed-ip-address}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">1</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">2</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${sessionid_gx}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpName.13">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.15">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.17">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">18</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">2</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Charging-Rule-Name:4853515f5043435f52554c455f4441494c59</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5019_CCR-I Gy" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Framed-IP-Address</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${framed-ip-address}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.1">1</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Requested-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.2">1</stringProp>
            <stringProp name="DiameterSampler.avpName.3">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.3">10</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">1</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">1</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Event-Timestamp</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2015-10-15 16:14:38 +0530</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">2</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.15">1</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.16">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.17">2</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.18">0</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.19">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">21</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">5</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Total-Octets:10485760</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:10485760</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Get Session using Ws and Db" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </com.computaris.jmeter.ext.controls.ParameterizedController>
          <hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Subscriber&apos;s Gy Session" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SessionManagementService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ses=&quot;http://sessionmanagement.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;ses:wsGetSessionsBySubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriber_id}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;sessionType&gt;&lt;/sessionType&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/ses:wsGetSessionsBySubscriberIdentity&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <stringProp name="TestPlan.comments">Web Service Call to Get Session By Subscriberidentity</stringProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Get Session from DB" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">select CORE_SESSION_ID from TBLT_SESSION where SUBSCRIBER_IDENTITY = &apos;${subscriber_id}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1332258241">${sessionid}:Gy
</stringProp>
                  <stringProp name="1458757190">${sessionid_gx}:Gx
</stringProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">check if session id is present or not</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5019_CCR-U Gy (10Mb)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">413003</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">404093</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.21">10485760</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">5</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Total-Octets:52428800</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:41943040</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Balance" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsGetNonMonitoryBalance&gt;&#xd;
         &lt;subscriberId&gt;${subscriber_id}&lt;/subscriberId&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;packageId&gt;${base_data_package}&lt;/packageId&gt;&#xd;
         &lt;packageName&gt;&lt;/packageName&gt;&#xd;
         &lt;subscriptionId&gt;&lt;/subscriptionId&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsGetNonMonitoryBalance&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscription_service}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="check remaining balance" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">//dataServiceTypeBalance[level=&apos;HSQ&apos;]/dailyBalance/actual/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/dailyBalance/remaining/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/actual/totalOctets[text()=&apos;524288000&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/remaining/totalOctets[text()=&apos;524288000&apos;]</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="RTC_5019_RAR-RAA" enabled="true">
            <stringProp name="TestPlan.comments">As per configuration PCRF will send RAR after 1 minute</stringProp>
            <stringProp name="DiameterTimer.duration">500</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Re-Auth-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${sessionid_gx}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${username}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">5</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="RAR Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">false</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Re-Auth-Request</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID"></stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">false</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Session-Id</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">${sessionid_gx}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5019_CCR-T Gy (10Mb)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">413003</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">404093</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">3</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.21">10485760</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-T Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5019_CCR-T Gx" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-User-Location-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">0004F489008D3039</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.3">0</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid_gx}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">3</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">3</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.11">2</stringProp>
            <stringProp name="DiameterSampler.avpName.12">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">0</stringProp>
            <stringProp name="DiameterSampler.avpName.13">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.13">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Called-Station-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">internet</stringProp>
            <stringProp name="DiameterSampler.avpCounter">15</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-T Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Balance" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsGetNonMonitoryBalance&gt;&#xd;
         &lt;subscriberId&gt;${subscriber_id}&lt;/subscriberId&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;packageId&gt;${base_data_package}&lt;/packageId&gt;&#xd;
         &lt;packageName&gt;&lt;/packageName&gt;&#xd;
         &lt;subscriptionId&gt;&lt;/subscriptionId&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsGetNonMonitoryBalance&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscription_service}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="check remaining balance" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">//dataServiceTypeBalance[level=&apos;HSQ&apos;]/dailyBalance/actual/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/dailyBalance/remaining/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/actual/totalOctets[text()=&apos;513802240&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/remaining/totalOctets[text()=&apos;513802240&apos;]</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5019_CCR-I Gx" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Framed-IP-Address</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${framed-ip-address}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">1</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">2</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${sessionid_gx2}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpName.13">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.15">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.17">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">18</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">2</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Charging-Rule-Name:4655505f5043435f52554c455f4441494c59</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Post Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop pcap and logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="stop Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-720136512">Stop Pcap</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop NV log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-632654166">Stop NV log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop PD log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-592019242">Stop PD log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="End of RTC_5019" enabled="true"/>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Module Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Gx+Gy-RTC_5020" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">RTC_5020 | Gx+Gy | Volume | Verify that NetVertex is selecting fup qos once weekly hsq quota gets exhausted.</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Gx+Gy-RTC_5020" enabled="true">
          <stringProp name="TestPlan.comments">RTC_5020 | Gx+Gy | Volume | Check and Verify fup level qos getting applied when weekly hsq quota gets exhausted</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="id" elementType="Argument">
                <stringProp name="Argument.name">id</stringProp>
                <stringProp name="Argument.value">5020</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">98397</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">Gy-RTC_5020</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subscriber_id" elementType="Argument">
                <stringProp name="Argument.name">subscriber_id</stringProp>
                <stringProp name="Argument.value">2111115020</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">2111115020</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">2111115020</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">2111115020</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">2111115020</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sessionid_gx" elementType="Argument">
                <stringProp name="Argument.name">sessionid_gx</stringProp>
                <stringProp name="Argument.value">2111115020_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sessionid" elementType="Argument">
                <stringProp name="Argument.name">sessionid</stringProp>
                <stringProp name="Argument.value">2111115020_gy</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="base_data_package" elementType="Argument">
                <stringProp name="Argument.name">base_data_package</stringProp>
                <stringProp name="Argument.value">RTC_5020_GY_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="base_product_offer" elementType="Argument">
                <stringProp name="Argument.name">base_product_offer</stringProp>
                <stringProp name="Argument.value">RTC_5020_GY_PO</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="framed-ip-address" elementType="Argument">
                <stringProp name="Argument.name">framed-ip-address</stringProp>
                <stringProp name="Argument.value">C0A81417</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sessionid_gx2" elementType="Argument">
                <stringProp name="Argument.name">sessionid_gx2</stringProp>
                <stringProp name="Argument.value">2111115020_gx_2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start of RTC_5020" enabled="true"/>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true); 
f = new FileOutputStream(mapping_file_name, true); 
p = new PrintStream(f); 

// Write data to file 

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Pre Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Pcap and Logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872118812">Capture PCAP</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872996374">Capture log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture PD Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="1033451790">Capture PD log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="CleanUp Sampler" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="subscriber-id" elementType="Argument">
                    <stringProp name="Argument.name">subscriber-id</stringProp>
                    <stringProp name="Argument.value">${subscriber_id}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="product-offer-id" elementType="Argument">
                    <stringProp name="Argument.name">product-offer-id</stringProp>
                    <stringProp name="Argument.value">${base_product_offer}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="data-package-id" elementType="Argument">
                    <stringProp name="Argument.name">data-package-id</stringProp>
                    <stringProp name="Argument.value">${base_data_package}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="rnc-package-id" elementType="Argument">
                    <stringProp name="Argument.name">rnc-package-id</stringProp>
                    <stringProp name="Argument.value">${base_rnc_package_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="data-topup-id" elementType="Argument">
                    <stringProp name="Argument.name">data-topup-id</stringProp>
                    <stringProp name="Argument.value">${data_topup_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="bod-package-id" elementType="Argument">
                    <stringProp name="Argument.name">bod-package-id</stringProp>
                    <stringProp name="Argument.value">${bod_package_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="email-template-id" elementType="Argument">
                    <stringProp name="Argument.name">email-template-id</stringProp>
                    <stringProp name="Argument.value">${email_template_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="sms-template-id" elementType="Argument">
                    <stringProp name="Argument.name">sms-template-id</stringProp>
                    <stringProp name="Argument.value">${sms_template_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">com.sterlite.netvertex.nvsampler.cleanup.sampler.CleanUpSampler</stringProp>
            </JavaSampler>
            <hashTree/>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Base Product offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create DataPackage" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;RTC_${id}_GY_BASE&lt;/id&gt;&#xd;
            &lt;name&gt;RTC_${id}_GY_BASE&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 07/31/2018 15:40:12&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;RnC_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin on 07/31/2018 15:56:36&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_${id}_pcc_profile&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;2&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;2&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;HSQ_PCC_RULE_WEEKLY&lt;/name&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;HSQ_PCC_RULE_WEEKLY&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;2&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;2&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Static&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;1&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;FUP_PCC_RULE_WEEKLY&lt;/name&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;FUP_PCC_RULE_WEEKLY&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Static&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;RTC_${id}_Quota_profile&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;quota-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
            &lt;rncProfileDatas&gt;&#xd;
                &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                &lt;id&gt;&lt;/id&gt;&#xd;
                &lt;balanceLevel&gt;HSQ&lt;/balanceLevel&gt;&#xd;
                &lt;description&gt;Created by admin on 07/31/2018 15:54:29&lt;/description&gt;&#xd;
                &lt;name&gt;RTC_${id}_Quota_profile&lt;/name&gt;&#xd;
                &lt;quotaType&gt;VOLUME&lt;/quotaType&gt;&#xd;
                &lt;renewal-interval-unit&gt;MONTH&lt;/renewal-interval-unit&gt;&#xd;
                &lt;rncProfileDetailDatas&gt;&#xd;
                    &lt;balanceUnit&gt;MB&lt;/balanceUnit&gt;&#xd;
                    &lt;weeklyUsageLimit&gt;10&lt;/weeklyUsageLimit&gt;&#xd;
                    &lt;dataServiceType&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                    &lt;/dataServiceType&gt;&#xd;
                    &lt;fupLevel&gt;0&lt;/fupLevel&gt;&#xd;
                    &lt;id&gt;221760f2-5ac7-470f-be9c-4724f3da0aa0&lt;/id&gt;&#xd;
                    &lt;pulseTimeUnit&gt;SECOND&lt;/pulseTimeUnit&gt;&#xd;
                    &lt;pulseVolumeUnit&gt;MB&lt;/pulseVolumeUnit&gt;&#xd;
                    &lt;rateUnit&gt;VOLUME&lt;/rateUnit&gt;&#xd;
                    &lt;ratingGroupData&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;RATING_GROUP_1&lt;/id&gt;&#xd;
                        &lt;name&gt;Default_Rating_Group&lt;/name&gt;&#xd;
                    &lt;/ratingGroupData&gt;&#xd;
                    &lt;timeBalanceUnit&gt;DAY&lt;/timeBalanceUnit&gt;&#xd;
                    &lt;timeLimitUnit&gt;SECOND&lt;/timeLimitUnit&gt;&#xd;
                    &lt;usageLimitUnit&gt;MB&lt;/usageLimitUnit&gt;&#xd;
                &lt;/rncProfileDetailDatas&gt;&#xd;
                &lt;rncProfileDetailDatas&gt;&#xd;
                    &lt;balanceUnit&gt;MB&lt;/balanceUnit&gt;&#xd;
                    &lt;balance&gt;500&lt;/balance&gt;&#xd;
                    &lt;dataServiceType&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                    &lt;/dataServiceType&gt;&#xd;
                    &lt;fupLevel&gt;1&lt;/fupLevel&gt;&#xd;
                    &lt;id&gt;98af3bb5-5e77-4628-ab8d-16fd23ccefd3&lt;/id&gt;&#xd;
                    &lt;pulseTimeUnit&gt;SECOND&lt;/pulseTimeUnit&gt;&#xd;
                    &lt;pulseVolumeUnit&gt;MB&lt;/pulseVolumeUnit&gt;&#xd;
                    &lt;rateUnit&gt;VOLUME&lt;/rateUnit&gt;&#xd;
                    &lt;ratingGroupData&gt;&#xd;
                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                        &lt;id&gt;RATING_GROUP_1&lt;/id&gt;&#xd;
                        &lt;name&gt;Default_Rating_Group&lt;/name&gt;&#xd;
                    &lt;/ratingGroupData&gt;&#xd;
                    &lt;timeBalanceUnit&gt;DAY&lt;/timeBalanceUnit&gt;&#xd;
                    &lt;timeLimitUnit&gt;SECOND&lt;/timeLimitUnit&gt;&#xd;
                    &lt;usageLimitUnit&gt;MB&lt;/usageLimitUnit&gt;&#xd;
                &lt;/rncProfileDetailDatas&gt;&#xd;
                &lt;unitType&gt;TOTAL&lt;/unitType&gt;&#xd;
            &lt;/rncProfileDatas&gt;&#xd;
            &lt;rate-cards/&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/xml</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Offer" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${base_product_offer}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${base_product_offer}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin on 05/23/2018 10:12:03&quot;,&#xd;
   &quot;type&quot;:&quot;BASE&quot;,&#xd;
   &quot;currency&quot;:&quot;${currency}&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${base_data_package}&quot;,&#xd;
   &quot;validityPeriod&quot;:null,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                  <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1424239207">&quot;id&quot;:&quot;${base_product_offer}&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">true</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To TEST Mode" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${base_product_offer}/updateMode.json?pkgMode=TEST</stringProp>
                  <stringProp name="HTTPSampler.method">PUT</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1424239207">&quot;id&quot;:&quot;${base_product_offer}&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">true</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
                <hashTree>
                  <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                    <collectionProp name="ModuleController.node_path">
                      <stringProp name="-1227702913">WorkBench</stringProp>
                      <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                      <stringProp name="18059174">Common Functions</stringProp>
                      <stringProp name="-803016769">PD: Reload Policy</stringProp>
                    </collectionProp>
                  </ModuleController>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To LIVE Mode" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${base_product_offer}/updateMode.json?pkgMode=LIVE</stringProp>
                  <stringProp name="HTTPSampler.method">PUT</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1424239207">&quot;id&quot;:&quot;${base_product_offer}&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">true</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Offer" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                  <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${base_product_offer}.json</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1424239207">&quot;id&quot;:&quot;${base_product_offer}&quot;</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Provision Subscriber" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsAddSubscriber&gt;&#xd;
         &lt;subscriberProfile&gt;    &#xd;
			&lt;entry&gt;&#xd;
			   &lt;key&gt;USERNAME&lt;/key&gt;&#xd;
			   &lt;value&gt;${username}&lt;/value&gt;&#xd;
			&lt;/entry&gt;&#xd;
			&lt;entry&gt;&#xd;
			   &lt;key&gt;PASSWORD&lt;/key&gt;&#xd;
			   &lt;value&gt;${username}&lt;/value&gt;&#xd;
			&lt;/entry&gt;&#xd;
			&lt;entry&gt;&#xd;
			   &lt;key&gt;STATUS&lt;/key&gt;&#xd;
			   &lt;value&gt;Active&lt;/value&gt;&#xd;
			&lt;/entry&gt;&#xd;
			&lt;entry&gt;&#xd;
			   &lt;key&gt;IMSI&lt;/key&gt;&#xd;
			  &lt;value&gt;${username}&lt;/value&gt;&#xd;
			&lt;/entry&gt;&#xd;
			&lt;entry&gt;&#xd;
			   &lt;key&gt;MSISDN&lt;/key&gt;&#xd;
			  &lt;value&gt;${username}&lt;/value&gt;&#xd;
			&lt;/entry&gt;&#xd;
            &lt;productOffer&gt;${base_product_offer}&lt;/productOffer&gt;&#xd;
            &lt;subscriberIdentity&gt;${subscriber_id}&lt;/subscriberIdentity&gt;&#xd;
         &lt;/subscriberProfile&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsAddSubscriber&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscriber_service}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5020_CCR-I Gx" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Framed-IP-Address</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${framed-ip-address}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">1</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">2</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${sessionid_gx}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpName.13">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.15">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.17">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">18</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">2</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Charging-Rule-Name:4853515F5043435F52554C455F5745454B4C59</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5020_CCR-I Gy" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Framed-IP-Address</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${framed-ip-address}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.1">1</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Requested-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.2">1</stringProp>
            <stringProp name="DiameterSampler.avpName.3">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.3">10</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">1</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">1</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Event-Timestamp</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2015-10-15 16:14:38 +0530</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">2</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.15">1</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.16">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.17">2</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.18">0</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.19">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">21</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">5</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Total-Octets:10485760</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:10485760</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="Get Session using Ws and Db" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </com.computaris.jmeter.ext.controls.ParameterizedController>
          <hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Verify Subscriber&apos;s Gy Session" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SessionManagementService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:ses=&quot;http://sessionmanagement.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;ses:wsGetSessionsBySubscriberIdentity&gt;
         &lt;!--Optional:--&gt;
         &lt;subscriberId&gt;${subscriber_id}&lt;/subscriberId&gt;
         &lt;!--Optional:--&gt;
         &lt;alternateId&gt;&lt;/alternateId&gt;
         &lt;!--Optional:--&gt;
         &lt;sessionType&gt;&lt;/sessionType&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/ses:wsGetSessionsBySubscriberIdentity&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <stringProp name="TestPlan.comments">Web Service Call to Get Session By Subscriberidentity</stringProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Get Session from DB" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">select CORE_SESSION_ID from TBLT_SESSION where SUBSCRIBER_IDENTITY = &apos;${subscriber_id}&apos;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1332258241">${sessionid}:Gy
</stringProp>
                  <stringProp name="1458757190">${sessionid_gx}:Gx
</stringProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">check if session id is present or not</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5020_CCR-U Gy (10Mb)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">413003</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">404093</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">2</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.21">10485760</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">5</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Result-Code:2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Total-Octets:52428800</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:41943040</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Balance" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsGetNonMonitoryBalance&gt;&#xd;
         &lt;subscriberId&gt;${subscriber_id}&lt;/subscriberId&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;packageId&gt;${base_data_package}&lt;/packageId&gt;&#xd;
         &lt;packageName&gt;&lt;/packageName&gt;&#xd;
         &lt;subscriptionId&gt;&lt;/subscriptionId&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsGetNonMonitoryBalance&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscription_service}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="check remaining balance" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">//dataServiceTypeBalance[level=&apos;HSQ&apos;]/weeklyBalance/actual/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/weeklyBalance/remaining/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/actual/totalOctets[text()=&apos;524288000&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/remaining/totalOctets[text()=&apos;524288000&apos;]</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="RTC_5020_RAR-RAA" enabled="true">
            <stringProp name="TestPlan.comments">As per configuration PCRF will send RAR after 1 minute</stringProp>
            <stringProp name="DiameterTimer.duration">500</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Re-Auth-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${sessionid_gx}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${username}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">5</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="RAR Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">false</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Re-Auth-Request</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID"></stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">false</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Session-Id</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">${sessionid_gx}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5020_CCR-T Gy (10Mb)" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Service-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.0">1</stringProp>
            <stringProp name="DiameterSampler.avpName.1">PS-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">3GPP-SGSN-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.2">413003</stringProp>
            <stringProp name="DiameterSampler.avpName.3">3GPP-IMSI-MCC-MNC</stringProp>
            <stringProp name="DiameterSampler.avpData.3">404093</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">3</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${username}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">2</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.14">1</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.16">2</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">0</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.18">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.19">Multiple-Services-Credit-Control</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.20">1</stringProp>
            <stringProp name="DiameterSampler.avpName.21">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.21">10485760</stringProp>
            <stringProp name="DiameterSampler.avpName.22">Multiple-Services-Indicator</stringProp>
            <stringProp name="DiameterSampler.avpData.22">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">23</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-T Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">4</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Rating-Group:0</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Multiple-Services-Credit-Control</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Volume-Quota-Threshold:335544320</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5020_CCR-T Gx" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">3GPP-User-Location-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">0004F489008D3039</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.3">0</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${sessionid_gx}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">3</stringProp>
            <stringProp name="DiameterSampler.avpName.10">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.10">3</stringProp>
            <stringProp name="DiameterSampler.avpName.11">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.11">2</stringProp>
            <stringProp name="DiameterSampler.avpName.12">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">0</stringProp>
            <stringProp name="DiameterSampler.avpName.13">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.13">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Called-Station-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">internet</stringProp>
            <stringProp name="DiameterSampler.avpCounter">15</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-T Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Balance" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscription.ws.nvsmx.elitecore.com/&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;sub:wsGetNonMonitoryBalance&gt;&#xd;
         &lt;subscriberId&gt;${subscriber_id}&lt;/subscriberId&gt;&#xd;
         &lt;alternateId&gt;&lt;/alternateId&gt;&#xd;
         &lt;packageId&gt;${base_data_package}&lt;/packageId&gt;&#xd;
         &lt;packageName&gt;&lt;/packageName&gt;&#xd;
         &lt;subscriptionId&gt;&lt;/subscriptionId&gt;&#xd;
         &lt;parameter1&gt;&lt;/parameter1&gt;&#xd;
         &lt;parameter2&gt;&lt;/parameter2&gt;&#xd;
      &lt;/sub:wsGetNonMonitoryBalance&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${smcontextpath}/${service_url}/${subscription_service}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="check remaining balance" enabled="true">
              <boolProp name="XPath.negate">false</boolProp>
              <stringProp name="XPath.xpath">//dataServiceTypeBalance[level=&apos;HSQ&apos;]/weeklyBalance/actual/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;HSQ&apos;]/weeklyBalance/remaining/totalOctets[text()=&apos;0&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/actual/totalOctets[text()=&apos;513802240&apos;] and
//dataServiceTypeBalance[level=&apos;FUP Level1&apos;]/billingCycleBalance/remaining/totalOctets[text()=&apos;513802240&apos;]</stringProp>
              <boolProp name="XPath.validate">false</boolProp>
              <boolProp name="XPath.whitespace">false</boolProp>
              <boolProp name="XPath.tolerant">false</boolProp>
              <boolProp name="XPath.namespace">false</boolProp>
            </XPathAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_5020_CCR-I Gx" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Framed-IP-Address</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${framed-ip-address}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">1</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${imsi}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">2</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${sessionid_gx2}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${originhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${originrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.12">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpName.13">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.13">0</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.15">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.16">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.17">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.17">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">18</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">2</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Charging-Rule-Name:4655505F5043435F52554C455F5745454B4C59</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Post Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop pcap and logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="stop Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-720136512">Stop Pcap</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop NV log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-632654166">Stop NV log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop PD log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-592019242">Stop PD log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="End of RTC_5020" enabled="true"/>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Module Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="com.computaris.jmeter.visualizers.gui.DiameterDispatcherVizualizer" testclass="ResultCollector" testname="Diameter Messages" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>false</time>
            <latency>false</latency>
            <timestamp>false</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>true</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
          </value>
        </objProp>
        <stringProp name="filename">PCC_Diameter_Result.jtl</stringProp>
        <stringProp name="TestPlan.comments">	</stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Common Functions" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1454995107000</longProp>
        <longProp name="ThreadGroup.end_time">1454995107000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture PCAP" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Start Pcap" enabled="false">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>mkdir -p ${logpath}/${pcapdir}</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>nohup  /usr/sbin/tcpdump -s 0 -i any port ${diameterport} or ${syport} -w ${logpath}/${pcapdir}/${pcapdir}.pcap  &amp; echo $!</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>mkdir -p ${logpath}/${pcapdir}</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>nohup  /usr/sbin/tcpdump -s 0 -i any port ${diameterport} or ${syport} -w ${logpath}/${pcapdir}/${pcapdir}.pcap  &amp; echo $!</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.extractor.DiameterStore guiclass="com.computaris.jmeter.extractor.gui.DiameterStoreGui" testclass="com.computaris.jmeter.extractor.DiameterStore" testname="Store PID of Tcpdump Command " enabled="true">
              <stringProp name="DiameterStoredefault"></stringProp>
              <stringProp name="DiameterStorerefname">PcapPID</stringProp>
              <stringProp name="DiameterStorevalue">${__telnetSSHGetResultLineByRegex(2,^\d+$)}</stringProp>
              <boolProp name="DiameterStoretolerant">true</boolProp>
            </com.computaris.jmeter.extractor.DiameterStore>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop Pcap" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Stop PCAP On Server" enabled="false">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill  ${PcapPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill  ${PcapPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.modifiers.DiameterLoad guiclass="com.computaris.jmeter.modifiers.gui.DiameterLoadGui" testclass="com.computaris.jmeter.modifiers.DiameterLoad" testname="TTS Load Variable" enabled="true">
              <stringProp name="DiameterLoaddefault"></stringProp>
              <stringProp name="DiameterLoadrefname">PcapPID</stringProp>
              <stringProp name="DiameterLoadvalue">PcapPID</stringProp>
              <boolProp name="DiameterLoadtolerant">false</boolProp>
            </com.computaris.jmeter.modifiers.DiameterLoad>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture log " enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Start NV logs" enabled="false">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>mkdir -p ${logpath}/${pcapdir}</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>nohup tail -f ${nvhome}/logs/*&gt;${logpath}/${pcapdir}/${pcapdir}-server.log &amp; echo $!</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>mkdir -p ${logpath}/${pcapdir}</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>nohup tail -f ${nvhome}/logs/*&gt;${logpath}/${pcapdir}/${pcapdir}-server.log &amp; echo $!</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.extractor.DiameterStore guiclass="com.computaris.jmeter.extractor.gui.DiameterStoreGui" testclass="com.computaris.jmeter.extractor.DiameterStore" testname="Store PID of log Command" enabled="true">
              <stringProp name="DiameterStoredefault"></stringProp>
              <stringProp name="DiameterStorerefname">LogPID</stringProp>
              <stringProp name="DiameterStorevalue">${__telnetSSHGetResultLineByRegex(2,^\d+$)}</stringProp>
              <boolProp name="DiameterStoretolerant">true</boolProp>
            </com.computaris.jmeter.extractor.DiameterStore>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture PD log " enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Start PD logs" enabled="false">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>nohup tail -f ${nvhome}/logs/netvertex-server-${serverinstancename}.log&gt;/opt/${logpath}/${pcapdir}/${logfilename}.log &amp; echo $!</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>mkdir -p ${logpath}/${pcapdir}</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>nohup tail -f ${pdhome}/logs/*&gt;${logpath}/${pcapdir}/${pcapdir}-policy-designer.log &amp; echo $!</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.extractor.DiameterStore guiclass="com.computaris.jmeter.extractor.gui.DiameterStoreGui" testclass="com.computaris.jmeter.extractor.DiameterStore" testname="Store PID of log Command" enabled="true">
              <stringProp name="DiameterStoredefault"></stringProp>
              <stringProp name="DiameterStorerefname">PDPID</stringProp>
              <stringProp name="DiameterStorevalue">${__telnetSSHGetResultLineByRegex(2,^\d+$)}</stringProp>
              <boolProp name="DiameterStoretolerant">true</boolProp>
            </com.computaris.jmeter.extractor.DiameterStore>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop NV log" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="StopNV logs" enabled="false">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill ${LogPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill ${LogPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.modifiers.DiameterLoad guiclass="com.computaris.jmeter.modifiers.gui.DiameterLoadGui" testclass="com.computaris.jmeter.modifiers.DiameterLoad" testname="TTS Load Variable" enabled="true">
              <stringProp name="DiameterLoaddefault"></stringProp>
              <stringProp name="DiameterLoadrefname">LogPID</stringProp>
              <stringProp name="DiameterLoadvalue">LogPID</stringProp>
              <boolProp name="DiameterLoadtolerant">false</boolProp>
            </com.computaris.jmeter.modifiers.DiameterLoad>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop PD log" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="StopPD logs" enabled="false">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill ${LogPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill ${PDPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.modifiers.DiameterLoad guiclass="com.computaris.jmeter.modifiers.gui.DiameterLoadGui" testclass="com.computaris.jmeter.modifiers.DiameterLoad" testname="TTS Load Variable" enabled="true">
              <stringProp name="DiameterLoaddefault"></stringProp>
              <stringProp name="DiameterLoadrefname">PDPID</stringProp>
              <stringProp name="DiameterLoadvalue">PDPID</stringProp>
              <boolProp name="DiameterLoadtolerant">false</boolProp>
            </com.computaris.jmeter.modifiers.DiameterLoad>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="NV Restart " enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CLI Shutdown REST" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="parameters" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">abort</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">parameters</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${server_rest_port}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${cli_rest_url}/shutdown</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="NV Start" enabled="false">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;shutdown\ abort&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>3000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; sh netvertex.sh&quot;</__commandText>
                  <__timeout>20000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; sh netvertex.sh&quot;</__commandText>
                  <__timeout>20000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Tomcat log " enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Start Tomcat logs" enabled="false">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>nohup tail -f ${nvhome}/logs/netvertex-server-${serverinstancename}.log&gt;/opt/${logpath}/${pcapdir}/${logfilename}.log &amp; echo $!</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>/bin/mkdir -p ${logpath}/${pcapdir}</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>nohup tail -f ${tomcat_home}/logs/catalina.out&gt;${logpath}/${pcapdir}/${tomcatlogs}.log &amp; echo $!</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.extractor.DiameterStore guiclass="com.computaris.jmeter.extractor.gui.DiameterStoreGui" testclass="com.computaris.jmeter.extractor.DiameterStore" testname="Store PID of log Command" enabled="true">
              <stringProp name="DiameterStoredefault"></stringProp>
              <stringProp name="DiameterStorerefname">TomcatLogPID</stringProp>
              <stringProp name="DiameterStorevalue">${__telnetSSHGetResultLineByRegex(2,^\d+$)}</stringProp>
              <boolProp name="DiameterStoretolerant">true</boolProp>
            </com.computaris.jmeter.extractor.DiameterStore>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop Tomcat log" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Stop Tomcat logs" enabled="false">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill ${LogPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill ${TomcatLogPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.modifiers.DiameterLoad guiclass="com.computaris.jmeter.modifiers.gui.DiameterLoadGui" testclass="com.computaris.jmeter.modifiers.DiameterLoad" testname="TTS Load Variable" enabled="true">
              <stringProp name="DiameterLoaddefault"></stringProp>
              <stringProp name="DiameterLoadrefname">TomcatLogPID</stringProp>
              <stringProp name="DiameterLoadvalue">TomcatLogPID</stringProp>
              <boolProp name="DiameterLoadtolerant">false</boolProp>
            </com.computaris.jmeter.modifiers.DiameterLoad>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="NV Restart (shut immediate)" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CLI Shutdown REST" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="parameters" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">abort</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">parameters</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${server_rest_port}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${cli_rest_url}/shutdown</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="NV Start" enabled="false">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;shutdown\ abort&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>3000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; sh netvertex.sh&quot;</__commandText>
                  <__timeout>20000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; sh netvertex.sh&quot;</__commandText>
                  <__timeout>20000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="show statistics usage" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CLI show statistics REST" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${server_rest_port}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${cli_rest_url}/show?parameters=statistics usage</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="clear statistics usage" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CLI clear statistics REST" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${server_rest_port}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${cli_rest_url}/clear?parameters=statistics usage</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2070394255">Usage statistics successfully cleared</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="show spr-cache Stats" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CLI show statistics cache spr-cache REST" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${server_rest_port}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${cli_rest_url}/show?parameters=statistics cache spr-cache</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="clear spr-cache Stats" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CLI clear statistics cache spr-cache REST" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${server_rest_port}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${cli_rest_url}/clear?parameters=statistics cache spr-cache</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-737073625">SPR cache statistics successfully cleared</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="clear spr-cache" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CLI clear cache spr-cache -all REST" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${server_rest_port}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${cli_rest_url}/clear?parameters=cache spr-cache -all</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1923322074">spr cache flushed</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Tomcat Restart " enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Tomcat Restart " enabled="false">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;shutdown\ abort&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; sh netvertex.sh&quot;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${tomcat_home}/bin; sh shutdown.sh&quot; ; sleep 3</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${tomcat_home}/bin; sh shutdown.sh&quot; ;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${tomcat_home}/bin; rm -rf ../work/*&quot; </__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${tomcat_home}/bin; sh startup.sh&quot; ; sleep 15</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Set spr.cache-enabled = true" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Set spr.cache-enabled = true" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;vi ${nvhome}/system/misc-config.properties&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/#spr.cache-enabled = true/spr.cache-enabled = true/g</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/spr.cache-enabled = false/spr.cache-enabled = true/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:x</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Reload Conf Common Function" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="-1227702913">WorkBench</stringProp>
              <stringProp name="-1829425330">Automation_plan_6622</stringProp>
              <stringProp name="18059174">Common Functions</stringProp>
              <stringProp name="77834902">RConf</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Set spr.cache-enabled = false" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Set spr.cache-enabled = false" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;vi ${nvhome}/system/misc-config.properties&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/#spr.cache-enabled = true/spr.cache-enabled = false/g</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/spr.cache-enabled = true/spr.cache-enabled = false/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:x</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Reload Conf Common Function" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="-1227702913">WorkBench</stringProp>
              <stringProp name="-1829425330">Automation_plan_6622</stringProp>
              <stringProp name="18059174">Common Functions</stringProp>
              <stringProp name="77834902">RConf</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="serverinitiated.destination-host = true" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="serverinitiated.destination-host = true" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;vi ${nvhome}/system/misc-config.properties&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/#serverinitiated.destination-host = true/serverinitiated.destination-host = true/g</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/serverinitiated.destination-host = false/serverinitiated.destination-host = true/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/#serverinitiated.destination-host = false/serverinitiated.destination-host = true/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/#serverinitiated.destination-host = true/serverinitiated.destination-host = true/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:x</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Reload Conf Common Function" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="-1227702913">WorkBench</stringProp>
              <stringProp name="-1829425330">Automation_plan_6622</stringProp>
              <stringProp name="18059174">Common Functions</stringProp>
              <stringProp name="77834902">RConf</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="serverinitiated.destination-host = false" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Set serverinitiated.destination-host = false" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;vi ${nvhome}/system/misc-config.properties&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/#serverinitiated.destination-host = true/serverinitiated.destination-host = false/g</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/serverinitiated.destination-host = true/serverinitiated.destination-host = false/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/#serverinitiated.destination-host = false/serverinitiated.destination-host = false/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:x</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Reload Conf Common Function" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="-1227702913">WorkBench</stringProp>
              <stringProp name="-1829425330">Automation_plan_6622</stringProp>
              <stringProp name="18059174">Common Functions</stringProp>
              <stringProp name="77834902">RConf</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="set -Drevalidationtime.delta=0" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="-Drevalidationtime.delta=0" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;vi ${nvhome}/bin/netvertex.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/server.gcInterval=86400000/server.gcInterval=86400000 -Drevalidationtime.delta=0/g</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/server.gcInterval=86400000 -Drevalidationtime.delta=0 -Drevalidationtime.delta=0/server.gcInterval=86400000 -Drevalidationtime.delta=0/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:x</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Reload Conf Common Function" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="-1227702913">WorkBench</stringProp>
              <stringProp name="-1829425330">Automation_plan_6622</stringProp>
              <stringProp name="18059174">Common Functions</stringProp>
              <stringProp name="77834902">RConf</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
        <hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="end sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">false</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PD: Reload Policy" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/policy/reload/policy</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Set session.cache-enabled = true" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Set session.cache-enabled = true" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;vi ${nvhome}/system/misc-config.properties&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/session.cache-enabled = false/session.cache-enabled = true/g</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/session.cache-enabled = true/session.cache-enabled = true/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:x</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Reload Conf Common Function" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="-1227702913">WorkBench</stringProp>
              <stringProp name="-1829425330">Automation_plan_6622</stringProp>
              <stringProp name="18059174">Common Functions</stringProp>
              <stringProp name="77834902">RConf</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Set session.cache-enabled = false" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Set session.cache-enabled = false" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;vi ${nvhome}/system/misc-config.properties&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/session.cache-enabled = false/session.cache-enabled = false/g</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/session.cache-enabled = true/session.cache-enabled = false/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:x</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Reload Conf Common Function" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="-1227702913">WorkBench</stringProp>
              <stringProp name="-1829425330">Automation_plan_6622</stringProp>
              <stringProp name="18059174">Common Functions</stringProp>
              <stringProp name="77834902">RConf</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="RConf" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CLI RConf REST" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${server_rest_port}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout">20000</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${cli_rest_url}/rconf</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1770785172">Server Configuration Successfully Reloaded for NetVertex</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Verify PCRF Running" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CLI Verify PCRF Running REST" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${server_rest_port}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${cli_rest_url}/services</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2024504540">PCRF.*Running</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Verify OfflineRnC Running" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CLI Verify OfflineRnC Running REST" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${server_rest_port}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${cli_rest_url}/services</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-399345633">OfflineRnC.*Running</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Verify Diameter Running" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CLI Verify Diameter Running REST" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${server_rest_port}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${cli_rest_url}/globallisteners</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="533546614">DIAMETER.*Running</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Verify Radius Running" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CLI Verify Radius Running REST" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${server_rest_port}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${cli_rest_url}/globallisteners</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1062068207">RADIUS.*Running</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
