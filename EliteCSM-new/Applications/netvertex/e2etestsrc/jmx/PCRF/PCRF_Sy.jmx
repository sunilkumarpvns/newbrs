<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.1" jmeter="3.1 r1770033">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Automation_plan_6622" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Global Variable Definition" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="originhost" elementType="Argument">
            <stringProp name="Argument.name">originhost</stringProp>
            <stringProp name="Argument.value">gx.elite.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Origin Host of Gx Gateway</stringProp>
          </elementProp>
          <elementProp name="originrealm" elementType="Argument">
            <stringProp name="Argument.name">originrealm</stringProp>
            <stringProp name="Argument.value">elite.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Origin Realm of Gx Gateway</stringProp>
          </elementProp>
          <elementProp name="destinationhost" elementType="Argument">
            <stringProp name="Argument.name">destinationhost</stringProp>
            <stringProp name="Argument.value">netvertex.elitecore.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="destinationrealm" elementType="Argument">
            <stringProp name="Argument.name">destinationrealm</stringProp>
            <stringProp name="Argument.value">elitecore.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="serverip" elementType="Argument">
            <stringProp name="Argument.name">serverip</stringProp>
            <stringProp name="Argument.value">192.168.11.199</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="smserverport" elementType="Argument">
            <stringProp name="Argument.name">smserverport</stringProp>
            <stringProp name="Argument.value">7001</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**Tomcat Startup port on which SM and PD will be displayed</stringProp>
          </elementProp>
          <elementProp name="smshutdownport" elementType="Argument">
            <stringProp name="Argument.name">smshutdownport</stringProp>
            <stringProp name="Argument.value">5782</stringProp>
            <stringProp name="Argument.desc">**Tomcat Shutdown port</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="diameterport" elementType="Argument">
            <stringProp name="Argument.name">diameterport</stringProp>
            <stringProp name="Argument.value">3868</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**change it after manual configuration</stringProp>
          </elementProp>
          <elementProp name="smcontextpath" elementType="Argument">
            <stringProp name="Argument.name">smcontextpath</stringProp>
            <stringProp name="Argument.value">netvertexsm</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**sm+username</stringProp>
          </elementProp>
          <elementProp name="smapplicationname" elementType="Argument">
            <stringProp name="Argument.name">smapplicationname</stringProp>
            <stringProp name="Argument.value">sm</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pdcontextpath" elementType="Argument">
            <stringProp name="Argument.name">pdcontextpath</stringProp>
            <stringProp name="Argument.value">netvertexsm</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**pd+username</stringProp>
          </elementProp>
          <elementProp name="nvhome" elementType="Argument">
            <stringProp name="Argument.name">nvhome</stringProp>
            <stringProp name="Argument.value">/home/trunk/server</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**Dont&apos; provide too long Name</stringProp>
          </elementProp>
          <elementProp name="pdhome" elementType="Argument">
            <stringProp name="Argument.name">pdhome</stringProp>
            <stringProp name="Argument.value">/home/trunk/netvertexsm/sm</stringProp>
            <stringProp name="Argument.desc">for PD logs</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="73_origin_host_primary" elementType="Argument">
            <stringProp name="Argument.name">73_origin_host_primary</stringProp>
            <stringProp name="Argument.value">23_gx.elite.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Do not change</stringProp>
          </elementProp>
          <elementProp name="73_origin_host_secondary" elementType="Argument">
            <stringProp name="Argument.name">73_origin_host_secondary</stringProp>
            <stringProp name="Argument.value">73_secondary.elitecore.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Do not change</stringProp>
          </elementProp>
          <elementProp name="73_origin_realm" elementType="Argument">
            <stringProp name="Argument.name">73_origin_realm</stringProp>
            <stringProp name="Argument.value">elitecore.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Do not change</stringProp>
          </elementProp>
          <elementProp name="origin_host_rx" elementType="Argument">
            <stringProp name="Argument.name">origin_host_rx</stringProp>
            <stringProp name="Argument.value">af.elite.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Do not change</stringProp>
          </elementProp>
          <elementProp name="origin_realm_rx" elementType="Argument">
            <stringProp name="Argument.name">origin_realm_rx</stringProp>
            <stringProp name="Argument.value">elite.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Do not change</stringProp>
          </elementProp>
          <elementProp name="origin_host" elementType="Argument">
            <stringProp name="Argument.name">origin_host</stringProp>
            <stringProp name="Argument.value">gx.elite.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="origin_realm" elementType="Argument">
            <stringProp name="Argument.name">origin_realm</stringProp>
            <stringProp name="Argument.value">elite.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="destination_realm" elementType="Argument">
            <stringProp name="Argument.name">destination_realm</stringProp>
            <stringProp name="Argument.value">elitecore.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="destination_host" elementType="Argument">
            <stringProp name="Argument.name">destination_host</stringProp>
            <stringProp name="Argument.value">netvertex.elitecore.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="nvuser" elementType="Argument">
            <stringProp name="Argument.name">nvuser</stringProp>
            <stringProp name="Argument.value">trunk</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">** os username</stringProp>
          </elementProp>
          <elementProp name="dbserverip" elementType="Argument">
            <stringProp name="Argument.name">dbserverip</stringProp>
            <stringProp name="Argument.value">192.168.11.199</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">*</stringProp>
          </elementProp>
          <elementProp name="dbserversid" elementType="Argument">
            <stringProp name="Argument.name">dbserversid</stringProp>
            <stringProp name="Argument.value">orcl12c</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">*Output of &apos;echo $ORACLE_SERVICE&apos;</stringProp>
          </elementProp>
          <elementProp name="dbserverport" elementType="Argument">
            <stringProp name="Argument.name">dbserverport</stringProp>
            <stringProp name="Argument.value">1521</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">*</stringProp>
          </elementProp>
          <elementProp name="dbusername" elementType="Argument">
            <stringProp name="Argument.name">dbusername</stringProp>
            <stringProp name="Argument.value">ngt70</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**Provide DB Username with Prefix NETVERTEX</stringProp>
          </elementProp>
          <elementProp name="dbpassword" elementType="Argument">
            <stringProp name="Argument.name">dbpassword</stringProp>
            <stringProp name="Argument.value">ngt70</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**Provide DB Password with Prefix NETVERTEX</stringProp>
          </elementProp>
          <elementProp name="serverinstancename" elementType="Argument">
            <stringProp name="Argument.name">serverinstancename</stringProp>
            <stringProp name="Argument.value">ngt70</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**Dont&apos; provide too long Name</stringProp>
          </elementProp>
          <elementProp name="logpath" elementType="Argument">
            <stringProp name="Argument.name">logpath</stringProp>
            <stringProp name="Argument.value">trunk_build</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**Dont&apos; provide too long Name</stringProp>
          </elementProp>
          <elementProp name="rootpassword" elementType="Argument">
            <stringProp name="Argument.name">rootpassword</stringProp>
            <stringProp name="Argument.value">root#10</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">*</stringProp>
          </elementProp>
          <elementProp name="dbserverip_for_sp_interface" elementType="Argument">
            <stringProp name="Argument.name">dbserverip_for_sp_interface</stringProp>
            <stringProp name="Argument.value">192.168.11.199</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Do not change</stringProp>
          </elementProp>
          <elementProp name="sp_dbusername" elementType="Argument">
            <stringProp name="Argument.name">sp_dbusername</stringProp>
            <stringProp name="Argument.value">trunk</stringProp>
            <stringProp name="Argument.desc">**DB Username for SP Interface</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sp_dbpassword" elementType="Argument">
            <stringProp name="Argument.name">sp_dbpassword</stringProp>
            <stringProp name="Argument.value">trunk</stringProp>
            <stringProp name="Argument.desc">**DB Password for SP Interface</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="tomcat_home" elementType="Argument">
            <stringProp name="Argument.name">tomcat_home</stringProp>
            <stringProp name="Argument.value">/home/trunk/netvertexsm</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**</stringProp>
          </elementProp>
          <elementProp name="sy_root_pwd" elementType="Argument">
            <stringProp name="Argument.name">sy_root_pwd</stringProp>
            <stringProp name="Argument.value">root#10</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">*</stringProp>
          </elementProp>
          <elementProp name="sy_serverip" elementType="Argument">
            <stringProp name="Argument.name">sy_serverip</stringProp>
            <stringProp name="Argument.value">192.168.11.199</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="syport" elementType="Argument">
            <stringProp name="Argument.name">syport</stringProp>
            <stringProp name="Argument.value">3782</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**</stringProp>
          </elementProp>
          <elementProp name="buildsourcefolder" elementType="Argument">
            <stringProp name="Argument.name">buildsourcefolder</stringProp>
            <stringProp name="Argument.value">/eliteaaa/share/netvertexbuilds/QA-Builds/6.8.2/6.8.2.2</stringProp>
            <stringProp name="Argument.desc">**Specifies path From where to take all binaries</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="oracleuserpath" elementType="Argument">
            <stringProp name="Argument.name">oracleuserpath</stringProp>
            <stringProp name="Argument.value">/home/oracle</stringProp>
            <stringProp name="Argument.desc">Oracle User&apos;s Home Directory</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="oraclehome" elementType="Argument">
            <stringProp name="Argument.name">oraclehome</stringProp>
            <stringProp name="Argument.value">/u01/app/oracle/product/12c/db_1</stringProp>
            <stringProp name="Argument.desc">*Output of &apos;echo $ORACLE_HOME&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="elapsed_time" elementType="Argument">
            <stringProp name="Argument.name">elapsed_time</stringProp>
            <stringProp name="Argument.value">120</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Elapsed Time is in Minutes</stringProp>
          </elementProp>
          <elementProp name="checked_version" elementType="Argument">
            <stringProp name="Argument.name">checked_version</stringProp>
            <stringProp name="Argument.value">12</stringProp>
            <stringProp name="Argument.desc">6.8.2.1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="checked_revision" elementType="Argument">
            <stringProp name="Argument.name">checked_revision</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**24284 was release version of 6.8.2.1</stringProp>
          </elementProp>
          <elementProp name="test_run_id" elementType="Argument">
            <stringProp name="Argument.name">test_run_id</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.desc">Test Run ID in Test Rail (e.g. R196)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rest_data_package_url" elementType="Argument">
            <stringProp name="Argument.name">rest_data_package_url</stringProp>
            <stringProp name="Argument.value">rest/restful/import/import/pkgs</stringProp>
            <stringProp name="Argument.desc">REST URL to create Data Pacakge</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rest_addon_package_url" elementType="Argument">
            <stringProp name="Argument.name">rest_addon_package_url</stringProp>
            <stringProp name="Argument.value">rest/restful/import/import/pkgs</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">REST URL to create Addon Pacakge</stringProp>
          </elementProp>
          <elementProp name="rest_ims_package_url" elementType="Argument">
            <stringProp name="Argument.name">rest_ims_package_url</stringProp>
            <stringProp name="Argument.value">rest/restful/import/import/imsPkgs</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">REST URL to create IMS Pacakge</stringProp>
          </elementProp>
          <elementProp name="rest_emergency_package_url" elementType="Argument">
            <stringProp name="Argument.name">rest_emergency_package_url</stringProp>
            <stringProp name="Argument.value">rest/restful/import/import/emergencyPkgs</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">REST URL to create Emergency Pacakge</stringProp>
          </elementProp>
          <elementProp name="rest_topup_package_url" elementType="Argument">
            <stringProp name="Argument.name">rest_topup_package_url</stringProp>
            <stringProp name="Argument.value">rest/restful/import/import/pkgs</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">REST URL to create Topup Pacakge</stringProp>
          </elementProp>
          <elementProp name="rest_global_pcc_url" elementType="Argument">
            <stringProp name="Argument.name">rest_global_pcc_url</stringProp>
            <stringProp name="Argument.value">rest/restful/import/import/globalPCCRules</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">REST URL to create Global PCC Rule</stringProp>
          </elementProp>
          <elementProp name="rest_promotional_package_url" elementType="Argument">
            <stringProp name="Argument.name">rest_promotional_package_url</stringProp>
            <stringProp name="Argument.value">rest/restful/import/import/promotionalPkgs</stringProp>
            <stringProp name="Argument.desc">*REST URL to create Promotional Package</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rest_charging_rule_base_name_url" elementType="Argument">
            <stringProp name="Argument.name">rest_charging_rule_base_name_url</stringProp>
            <stringProp name="Argument.value">rest/restful/import/import/chargingRuleBaseNames</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">*REST URL to create CRBN</stringProp>
          </elementProp>
          <elementProp name="rest_service_type_url" elementType="Argument">
            <stringProp name="Argument.name">rest_service_type_url</stringProp>
            <stringProp name="Argument.value">rest/restful/import/import/dataServiceTypes</stringProp>
            <stringProp name="Argument.desc">*REST_URL to create Service Type</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="replace" elementType="Argument">
            <stringProp name="Argument.name">replace</stringProp>
            <stringProp name="Argument.value">action=REPLACE</stringProp>
            <stringProp name="Argument.desc">Import Action with Replace</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="fail" elementType="Argument">
            <stringProp name="Argument.name">fail</stringProp>
            <stringProp name="Argument.value">action=FAIL</stringProp>
            <stringProp name="Argument.desc">Import Action with Fail</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="script_location" elementType="Argument">
            <stringProp name="Argument.name">script_location</stringProp>
            <stringProp name="Argument.value">/opt/scripts/6.8</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">*Location on server where script is kept</stringProp>
          </elementProp>
          <elementProp name="adminport" elementType="Argument">
            <stringProp name="Argument.name">adminport</stringProp>
            <stringProp name="Argument.value">3782</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**admin port to be configured in netvertex.sh file</stringProp>
          </elementProp>
          <elementProp name="jdbcvar" elementType="Argument">
            <stringProp name="Argument.name">jdbcvar</stringProp>
            <stringProp name="Argument.value">DB</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Jdbc connection variable bound to pool</stringProp>
          </elementProp>
          <elementProp name="sy_origin_host" elementType="Argument">
            <stringProp name="Argument.name">sy_origin_host</stringProp>
            <stringProp name="Argument.value">pocs.elitecore.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">configured in ocs_gateway</stringProp>
          </elementProp>
          <elementProp name="sy_origin_realm" elementType="Argument">
            <stringProp name="Argument.name">sy_origin_realm</stringProp>
            <stringProp name="Argument.value">elitecore.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">configured in ocs_gateway</stringProp>
          </elementProp>
          <elementProp name="jmeterip" elementType="Argument">
            <stringProp name="Argument.name">jmeterip</stringProp>
            <stringProp name="Argument.value">192.168.11.199</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">ip of server where jmeter is running</stringProp>
          </elementProp>
          <elementProp name="radiusport" elementType="Argument">
            <stringProp name="Argument.name">radiusport</stringProp>
            <stringProp name="Argument.value">2820</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">**radius listener port</stringProp>
          </elementProp>
          <elementProp name="jmeterport" elementType="Argument">
            <stringProp name="Argument.name">jmeterport</stringProp>
            <stringProp name="Argument.value">3636</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Any free port can be used by jmeter</stringProp>
          </elementProp>
          <elementProp name="radiusshared" elementType="Argument">
            <stringProp name="Argument.name">radiusshared</stringProp>
            <stringProp name="Argument.value">secret</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">shared secret</stringProp>
          </elementProp>
          <elementProp name="nasip" elementType="Argument">
            <stringProp name="Argument.name">nasip</stringProp>
            <stringProp name="Argument.value">127.0.0.1 </stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">NAS-IP-ADDRESS (4)</stringProp>
          </elementProp>
          <elementProp name="nasport" elementType="Argument">
            <stringProp name="Argument.name">nasport</stringProp>
            <stringProp name="Argument.value">3589</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">NAS-PORT (5)</stringProp>
          </elementProp>
          <elementProp name="server_group_url" elementType="Argument">
            <stringProp name="Argument.name">server_group_url</stringProp>
            <stringProp name="Argument.value">servergroup/server-group.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="server_instance_url" elementType="Argument">
            <stringProp name="Argument.name">server_instance_url</stringProp>
            <stringProp name="Argument.value">serverinstance/server-instance.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="session_url" elementType="Argument">
            <stringProp name="Argument.name">session_url</stringProp>
            <stringProp name="Argument.value">sessionconfiguration/session-configuration/SESSION_CONFIG_1.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="diameter_gw_profile_url" elementType="Argument">
            <stringProp name="Argument.name">diameter_gw_profile_url</stringProp>
            <stringProp name="Argument.value">gatewayprofile/diameter-gateway-profile.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="diameter_gw_url" elementType="Argument">
            <stringProp name="Argument.name">diameter_gw_url</stringProp>
            <stringProp name="Argument.value">gateway/diameter-gateway.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="default_db_datasource_url" elementType="Argument">
            <stringProp name="Argument.name">default_db_datasource_url</stringProp>
            <stringProp name="Argument.value">database/database.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="spr_url" elementType="Argument">
            <stringProp name="Argument.name">spr_url</stringProp>
            <stringProp name="Argument.value">spr/spr.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sp_interface_url" elementType="Argument">
            <stringProp name="Argument.name">sp_interface_url</stringProp>
            <stringProp name="Argument.value">spinterface/db-sp-interface.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ddf_url" elementType="Argument">
            <stringProp name="Argument.name">ddf_url</stringProp>
            <stringProp name="Argument.value">ddf/ddf/DDF_TABLE_1.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="db_cdr_url" elementType="Argument">
            <stringProp name="Argument.name">db_cdr_url</stringProp>
            <stringProp name="Argument.value">driver/db-cdr-driver.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="csv_cdr_url" elementType="Argument">
            <stringProp name="Argument.name">csv_cdr_url</stringProp>
            <stringProp name="Argument.value">driver/csv-driver.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="device_url" elementType="Argument">
            <stringProp name="Argument.name">device_url</stringProp>
            <stringProp name="Argument.value">device/device.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="network_url" elementType="Argument">
            <stringProp name="Argument.name">network_url</stringProp>
            <stringProp name="Argument.value">network/network.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="region_url" elementType="Argument">
            <stringProp name="Argument.name">region_url</stringProp>
            <stringProp name="Argument.value">region/region.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="city_url" elementType="Argument">
            <stringProp name="Argument.name">city_url</stringProp>
            <stringProp name="Argument.value">city/city.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="area_url" elementType="Argument">
            <stringProp name="Argument.name">area_url</stringProp>
            <stringProp name="Argument.value">area/area.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pcc_service_policy" elementType="Argument">
            <stringProp name="Argument.name">pcc_service_policy</stringProp>
            <stringProp name="Argument.value">pccservicepolicy/pcc-service-policy.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mapping_file_name" elementType="Argument">
            <stringProp name="Argument.name">mapping_file_name</stringProp>
            <stringProp name="Argument.value">PCC_Sy_Mapping.csv</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pd" elementType="Argument">
            <stringProp name="Argument.name">pd</stringProp>
            <stringProp name="Argument.value">pd</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="product_offer_url" elementType="Argument">
            <stringProp name="Argument.name">product_offer_url</stringProp>
            <stringProp name="Argument.value">productoffer/product-offer.json</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">User Defined Variables</stringProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="com.computaris.jmeter_plugins.radius_client.config.RadiusClientConfigGui" testclass="ConfigTestElement" testname="TTS Radius Client Configuration" enabled="true">
        <stringProp name="RadiusClientSampler.SERVER_ADDRESS">${serverip}</stringProp>
        <stringProp name="RadiusClientSampler.SERVER_PORT_AUTH">${radiusport}</stringProp>
        <stringProp name="RadiusClientSampler.SERVER_PORT_ACC">${radiusport}</stringProp>
        <stringProp name="RadiusClientSampler.SERVER_PORT_DM_CoA"></stringProp>
        <stringProp name="RadiusClientSampler..AUTH_USERNAME">${radiusshared}</stringProp>
        <stringProp name="RadiusClientSampler..SAUTH_PASSWORD">${radiusshared}</stringProp>
        <stringProp name="RadiusClientSampler..AUTH_SHARED_SECRED">${radiusshared}</stringProp>
        <stringProp name="TestPlan.comments">netvertex is client so provide ip of netvertex in hostname</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <ConfigTestElement guiclass="com.computaris.jmeter_plugins.radius_server.config.RadiusServerConfigGui" testclass="ConfigTestElement" testname="TTS Radius Server Configuration" enabled="true">
        <stringProp name="RadiusServerSampler.SERVER_ADDRESS">${jmeterip}</stringProp>
        <stringProp name="RadiusServerSampler.SERVER_PORT_AUTH">${jmeterport}</stringProp>
        <stringProp name="RadiusServerSampler.SERVER_PORT_ACC">${jmeterport}</stringProp>
        <stringProp name="RadiusServerSampler.SERVER_PORT_COA_DM"></stringProp>
        <stringProp name="RadiusServerSampler.AUTH_USERNAME"></stringProp>
        <stringProp name="RadiusServerSampler.SAUTH_PASSWORD"></stringProp>
        <stringProp name="RadiusServerSampler.AUTH_SHARED_SECRED">${radiusshared}</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="REST Default Parameters" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
        <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value">Basic YWRtaW46YWRtaW4=</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
      </HeaderManager>
      <hashTree/>
      <ConfigTestElement guiclass="com.computaris.jmeter.protocol.diameter.config.gui.DiameterConfigGui" testclass="ConfigTestElement" testname="Diameter Stack" enabled="true">
        <stringProp name="GxPCEFDiameterClient.server.0">${serverip}</stringProp>
        <stringProp name="GxPCEFDiameterClient.port.0">${diameterport}</stringProp>
        <stringProp name="GxPCEFDiameterClient.timeout.0">10000</stringProp>
        <stringProp name="GxPCEFDiameterClient.protocol.0">TCP</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.message">Capabilities-Exchange-Request</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.flagP">false</stringProp>
        <stringProp name="GxPCEFCERGxPCEFCERDiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.appID">16777238</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.0">Supported-Vendor-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.0">10415</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.1">Vendor-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.1">11</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.2">Origin-Host</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.2">${originhost}</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.3">Origin-Realm</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.3">${originrealm}</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.4">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.4">10.106.1.88</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.5">Vendor-Specific-Application-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.5">3</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.6">Acct-Application-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.6">0</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.7">Auth-Application-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.7">16777238</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.8">Vendor-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.8">10415</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.9">Product-Name</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.9">Jmeter</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.10">Origin-State-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.10">1094807040</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.11">Auth-Application-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.11">16777238</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.12">Acct-Application-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.12">0</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.13">Firmware-Revision</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.13">267</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpCounter">14</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.message">Disconnect-Peer-Request</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.flagP">false</stringProp>
        <stringProp name="GxPCEFDPRGxPCEFDPRDiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.avpData.0">${origin_host}</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.avpData.1">${originrealm}</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.avpName.2">Disconnect-Cause</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.avpData.2">2</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.avpCounter">3</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.message">Device-Watchdog-Answer</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.flagP">false</stringProp>
        <stringProp name="GxPCEFDWAGxPCEFDWADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpName.0">Result-Code</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpData.0">2001</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpName.1">Origin-Host</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpData.1">${originhost}</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpName.2">Origin-Realm</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpData.2">${originrealm}</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpName.3">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpData.3">10.106.1.142</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpName.4">Vendor-Id</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpData.4">10415</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpName.5">Product-Name</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpData.5">Jmeter</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpCounter">6</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.message">Re-Auth-Answer</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFRAAGxPCEFRAADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.appID">16777238</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.HBHID">${__diamGetHopId(var)}</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.ETEID">${__diamGetEndId(var)}</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpData.0">${origin_host}</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpData.1">${origin_realm}</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpData.2">10.106.1.142</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpData.4">Jmeter</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpName.5">Result-Code</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpData.5">2001</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpName.6">Session-Id</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpData.6">${sessionid}</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpCounter">7</stringProp>
        <stringProp name="GxPCEFASADiameterClient.message">Abort-Session-Answer</stringProp>
        <stringProp name="GxPCEFASADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFASAGxPCEFASADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFASADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFASADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFASADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFASADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpData.0"></stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpData.1"></stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpData.2"></stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpCounter">5</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.message">Cancel-Location-Answer</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFCLAGxPCEFCLADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpData.0"></stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpData.1"></stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpData.2"></stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpCounter">5</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.message">Insert-Subscriber-Data-Answer</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFIDAGxPCEFIDADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpData.0"></stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpData.1"></stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpData.2"></stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpCounter">5</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.message">Delete-Subscriber-Data-Answer</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFDSAGxPCEFDSADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpData.0"></stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpData.1"></stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpData.2"></stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpCounter">5</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.message">Reset-Answer</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFRSAGxPCEFRSADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpData.0"></stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpData.1"></stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpData.2"></stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpCounter">5</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.message">Registration-Termination-Answer</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFRTAGxPCEFRTADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpData.0"></stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpData.1"></stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpData.2"></stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpCounter">5</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.message">Push-Profile-Answer</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFPPAGxPCEFPPADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpData.0"></stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpData.1"></stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpData.2"></stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpCounter">5</stringProp>
        <stringProp name="GxPCEFSLADiameterClient.message">Spending-Limit-Answer</stringProp>
        <stringProp name="GxPCEFSLADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFSLAGxPCEFSLADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFSLADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFSLADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFSLADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFSLADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFSLADiameterClient.avpCounter">0</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.message">Session-Termination-Answer</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFSTAGxPCEFSTADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpData.0"></stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpData.1"></stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpData.2"></stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpCounter">5</stringProp>
        <boolProp name="GxPCEFDiameterClient.overrideStack">true</boolProp>
        <boolProp name="GxPCEFDiameterClient.disableAutomaticBgResponder">false</boolProp>
        <boolProp name="GxPCEFDiameterClient.enablePeerStateMachine">true</boolProp>
        <stringProp name="73_PCEF_primaryDiameterClient.server.0">${serverip}</stringProp>
        <stringProp name="73_PCEF_primaryDiameterClient.port.0">${diameterport}</stringProp>
        <stringProp name="73_PCEF_primaryDiameterClient.timeout.0">3000</stringProp>
        <stringProp name="73_PCEF_primaryDiameterClient.protocol.0">TCP</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.message">Capabilities-Exchange-Request</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.flagP">false</stringProp>
        <stringProp name="73_PCEF_primaryCER73_PCEF_primaryCERDiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.appID">16777238</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.0">Supported-Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.0">10415</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.1">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.1">${73_origin_host_primary}</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.2">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.2">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.3">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.3">10.106.1.88</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.4">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.4">11</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.5">Vendor-Specific-Application-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.5">3</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.6">Acct-Application-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.6">0</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.7">Auth-Application-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.7">16777238</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.8">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.8">10415</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.9">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.9">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.10">Origin-State-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.10">1094807040</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.11">Auth-Application-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.11">16777238</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.12">Acct-Application-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.12">0</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.13">Firmware-Revision</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.13">267</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpCounter">14</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.message">Disconnect-Peer-Request</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.flagP">false</stringProp>
        <stringProp name="73_PCEF_primaryDPR73_PCEF_primaryDPRDiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.avpData.0">${73_origin_host_primary}</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.avpData.1">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.avpName.2">Disconnect-Cause</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.avpData.2">2</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.avpCounter">3</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.message">Device-Watchdog-Answer</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.flagP">false</stringProp>
        <stringProp name="73_PCEF_primaryDWA73_PCEF_primaryDWADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpName.0">Result-Code</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpData.0">2001</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpName.1">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpData.1">${73_origin_host_primary}</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpName.2">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpData.2">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpName.3">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpData.3">127.0.0.1</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpName.4">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpData.4">0</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpName.5">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpData.5">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpCounter">6</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.message">Re-Auth-Answer</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primaryRAA73_PCEF_primaryRAADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpData.0">${73_origin_host_primary}</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpData.1">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpData.2">10.106.1.172</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.message">Abort-Session-Answer</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primaryASA73_PCEF_primaryASADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpData.0">${73_origin_host_primary}</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpData.1">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpData.2">10.106.1.172</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.message">Cancel-Location-Answer</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primaryCLA73_PCEF_primaryCLADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.message">Insert-Subscriber-Data-Answer</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primaryIDA73_PCEF_primaryIDADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.message">Delete-Subscriber-Data-Answer</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primaryDSA73_PCEF_primaryDSADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.message">Reset-Answer</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primaryRSA73_PCEF_primaryRSADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.message">Registration-Termination-Answer</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primaryRTA73_PCEF_primaryRTADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.message">Push-Profile-Answer</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primaryPPA73_PCEF_primaryPPADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_primarySLADiameterClient.message">Spending-Limit-Answer</stringProp>
        <stringProp name="73_PCEF_primarySLADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primarySLA73_PCEF_primarySLADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primarySLADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primarySLADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primarySLADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primarySLADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primarySLADiameterClient.avpCounter">0</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.message">Session-Termination-Answer</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primarySTA73_PCEF_primarySTADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpCounter">5</stringProp>
        <boolProp name="73_PCEF_primaryDiameterClient.overrideStack">true</boolProp>
        <boolProp name="73_PCEF_primaryDiameterClient.disableAutomaticBgResponder">false</boolProp>
        <boolProp name="73_PCEF_primaryDiameterClient.enablePeerStateMachine">true</boolProp>
        <stringProp name="73_PCEF_secondaryDiameterClient.server.0">${serverip}</stringProp>
        <stringProp name="73_PCEF_secondaryDiameterClient.port.0">${diameterport}</stringProp>
        <stringProp name="73_PCEF_secondaryDiameterClient.timeout.0">3000</stringProp>
        <stringProp name="73_PCEF_secondaryDiameterClient.protocol.0">TCP</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.message">Capabilities-Exchange-Request</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.flagP">false</stringProp>
        <stringProp name="73_PCEF_secondaryCER73_PCEF_secondaryCERDiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.appID">16777238</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.0">${73_origin_host_secondary}</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.1">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.2">10.106.1.172</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.3">Supported-Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.3">10415</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.4">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.4">11</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.5">Vendor-Specific-Application-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.5">3</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.6">Acct-Application-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.6">0</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.7">Auth-Application-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.7">16777238</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.8">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.8">10415</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.9">Origin-State-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.9">1094807040</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.10">Auth-Application-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.10">16777238</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.11">Acct-Application-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.11">0</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.12">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.12">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.13">Firmware-Revision</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.13">267</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpCounter">14</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.message">Disconnect-Peer-Request</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.flagP">false</stringProp>
        <stringProp name="73_PCEF_secondaryDPR73_PCEF_secondaryDPRDiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.avpData.0">${73_origin_host_secondary}</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.avpData.1">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.avpName.2">Disconnect-Cause</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.avpData.2">2</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.avpCounter">3</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.message">Device-Watchdog-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.flagP">false</stringProp>
        <stringProp name="73_PCEF_secondaryDWA73_PCEF_secondaryDWADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpName.0">Result-Code</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpData.0">2001</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpName.1">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpData.1">${73_origin_host_secondary}</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpName.2">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpData.2">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpName.3">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpData.3">10.106.1.172</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpName.4">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpData.4">0</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpName.5">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpData.5">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpCounter">6</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.message">Re-Auth-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondaryRAA73_PCEF_secondaryRAADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpData.0">${73_origin_host_secondary}</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpData.1">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpData.2">10.106.1.172</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.message">Abort-Session-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondaryASA73_PCEF_secondaryASADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpData.0">${73_origin_host_secondary}</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpData.1">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpData.2">10.106.1.172</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.message">Cancel-Location-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondaryCLA73_PCEF_secondaryCLADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.message">Insert-Subscriber-Data-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondaryIDA73_PCEF_secondaryIDADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.message">Delete-Subscriber-Data-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondaryDSA73_PCEF_secondaryDSADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.message">Reset-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondaryRSA73_PCEF_secondaryRSADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.message">Registration-Termination-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondaryRTA73_PCEF_secondaryRTADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.message">Push-Profile-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondaryPPA73_PCEF_secondaryPPADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_secondarySLADiameterClient.message">Spending-Limit-Answer</stringProp>
        <stringProp name="73_PCEF_secondarySLADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondarySLA73_PCEF_secondarySLADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondarySLADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondarySLADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondarySLADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondarySLADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondarySLADiameterClient.avpCounter">0</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.message">Session-Termination-Answer</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondarySTA73_PCEF_secondarySTADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpCounter">5</stringProp>
        <boolProp name="73_PCEF_secondaryDiameterClient.overrideStack">true</boolProp>
        <boolProp name="73_PCEF_secondaryDiameterClient.disableAutomaticBgResponder">false</boolProp>
        <boolProp name="73_PCEF_secondaryDiameterClient.enablePeerStateMachine">true</boolProp>
        <stringProp name="RxPCEFDiameterClient.server.0">${serverip}</stringProp>
        <stringProp name="RxPCEFDiameterClient.port.0">${diameterport}</stringProp>
        <stringProp name="RxPCEFDiameterClient.timeout.0">3000</stringProp>
        <stringProp name="RxPCEFDiameterClient.protocol.0">TCP</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.message">Capabilities-Exchange-Request</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.flagP">false</stringProp>
        <stringProp name="RxPCEFCERRxPCEFCERDiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.appID">16777236</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.0">Auth-Application-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.0">16777236</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.1">Acct-Application-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.1">0</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.2">Vendor-Specific-Application-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.2">3</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.3">Acct-Application-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.4">Auth-Application-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.4">16777236</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.5">Vendor-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.5">10415</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.6">Supported-Vendor-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.6">10415</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.7">Origin-Host</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.7">${origin_host_rx}</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.8">Origin-Realm</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.8">${origin_realm_rx}</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.9">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.9">10.106.1.172</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.10">Origin-State-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.10">1094807040</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.11">Vendor-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.11">11</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.12">Product-Name</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.12">Applicaion Function</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.13">Firmware-Revision</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.13">267</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpCounter">14</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.message">Disconnect-Peer-Request</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.flagP">false</stringProp>
        <stringProp name="RxPCEFDPRRxPCEFDPRDiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.avpData.0">${origin_host_rx}</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.avpData.1">${origin_realm_rx}</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.avpName.2">Disconnect-Cause</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.avpData.2">2</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.avpCounter">3</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.message">Device-Watchdog-Answer</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.flagP">false</stringProp>
        <stringProp name="RxPCEFDWARxPCEFDWADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpName.0">Result-Code</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpData.0">2001</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpName.1">Origin-Host</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpData.1">${origin_host_rx}</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpName.2">Origin-Realm</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpData.2">${origin_realm_rx}</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpName.3">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpData.3">127.0.0.1</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpName.4">Vendor-Id</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpData.4">0</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpName.5">Product-Name</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpData.5">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpCounter">6</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.message">Re-Auth-Answer</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFRAARxPCEFRAADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpData.0">${origin_host_rx}</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpData.1">${origin_realm_rx}</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpData.2">10.106.1.172</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpCounter">5</stringProp>
        <stringProp name="RxPCEFASADiameterClient.message">Abort-Session-Answer</stringProp>
        <stringProp name="RxPCEFASADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFASARxPCEFASADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFASADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFASADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFASADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFASADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpData.0">${origin_host_rx}</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpData.1">${origin_realm_rx}</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpData.2">10.106.1.172</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpName.5">Result-Code</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpData.5">2001</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpCounter">6</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.message">Cancel-Location-Answer</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFCLARxPCEFCLADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpData.0"></stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpData.1"></stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpData.2"></stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpCounter">5</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.message">Insert-Subscriber-Data-Answer</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFIDARxPCEFIDADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpData.0"></stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpData.1"></stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpData.2"></stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpCounter">5</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.message">Delete-Subscriber-Data-Answer</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFDSARxPCEFDSADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpData.0"></stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpData.1"></stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpData.2"></stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpCounter">5</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.message">Reset-Answer</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFRSARxPCEFRSADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpData.0"></stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpData.1"></stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpData.2"></stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpCounter">5</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.message">Registration-Termination-Answer</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFRTARxPCEFRTADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpData.0"></stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpData.1"></stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpData.2"></stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpCounter">5</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.message">Push-Profile-Answer</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFPPARxPCEFPPADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpData.0"></stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpData.1"></stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpData.2"></stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpCounter">5</stringProp>
        <stringProp name="RxPCEFSLADiameterClient.message">Spending-Limit-Answer</stringProp>
        <stringProp name="RxPCEFSLADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFSLARxPCEFSLADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFSLADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFSLADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFSLADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFSLADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFSLADiameterClient.avpCounter">0</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.message">Session-Termination-Answer</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFSTARxPCEFSTADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpData.0"></stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpData.1"></stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpData.2"></stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpCounter">5</stringProp>
        <boolProp name="RxPCEFDiameterClient.overrideStack">true</boolProp>
        <boolProp name="RxPCEFDiameterClient.disableAutomaticBgResponder">false</boolProp>
        <boolProp name="RxPCEFDiameterClient.enablePeerStateMachine">true</boolProp>
        <stringProp name="SyOCSDiameterClient.server.0">${serverip}</stringProp>
        <stringProp name="SyOCSDiameterClient.port.0">${diameterport}</stringProp>
        <stringProp name="SyOCSDiameterClient.timeout.0">10000</stringProp>
        <stringProp name="SyOCSDiameterClient.protocol.0">TCP</stringProp>
        <stringProp name="SyOCSCERDiameterClient.message">Capabilities-Exchange-Request</stringProp>
        <stringProp name="SyOCSCERDiameterClient.flagP">false</stringProp>
        <stringProp name="SyOCSCERSyOCSCERDiameterClient.flagE">false</stringProp>
        <stringProp name="SyOCSCERDiameterClient.flagT">false</stringProp>
        <stringProp name="SyOCSCERDiameterClient.appID">-1</stringProp>
        <stringProp name="SyOCSCERDiameterClient.HBHID">-1</stringProp>
        <stringProp name="SyOCSCERDiameterClient.ETEID">-1</stringProp>
        <stringProp name="SyOCSCERDiameterClient.avpName.0">Supported-Vendor-Id</stringProp>
        <stringProp name="SyOCSCERDiameterClient.avpData.0">10415</stringProp>
        <stringProp name="SyOCSCERDiameterClient.avpName.1">Vendor-Id</stringProp>
        <stringProp name="SyOCSCERDiameterClient.avpData.1">11</stringProp>
        <stringProp name="SyOCSCERDiameterClient.avpName.2">Origin-Host</stringProp>
        <stringProp name="SyOCSCERDiameterClient.avpData.2">${originhost}</stringProp>
        <stringProp name="SyOCSCERDiameterClient.avpName.3">Origin-Realm</stringProp>
        <stringProp name="SyOCSCERDiameterClient.avpData.3">${originrealm}</stringProp>
        <stringProp name="SyOCSCERDiameterClient.avpName.4">Host-IP-Address</stringProp>
        <stringProp name="SyOCSCERDiameterClient.avpData.4">10.106.1.88</stringProp>
        <stringProp name="SyOCSCERDiameterClient.avpName.5">Vendor-Specific-Application-Id</stringProp>
        <stringProp name="SyOCSCERDiameterClient.avpData.5">3</stringProp>
        <stringProp name="SyOCSCERDiameterClient.avpName.6">Acct-Application-Id</stringProp>
        <stringProp name="SyOCSCERDiameterClient.avpData.6">0</stringProp>
        <stringProp name="SyOCSCERDiameterClient.avpName.7">Auth-Application-Id</stringProp>
        <stringProp name="SyOCSCERDiameterClient.avpData.7">16777238</stringProp>
        <stringProp name="SyOCSCERDiameterClient.avpName.8">Vendor-Id</stringProp>
        <stringProp name="SyOCSCERDiameterClient.avpData.8">10415</stringProp>
        <stringProp name="SyOCSCERDiameterClient.avpName.9">Product-Name</stringProp>
        <stringProp name="SyOCSCERDiameterClient.avpData.9">Jmeter</stringProp>
        <stringProp name="SyOCSCERDiameterClient.avpName.10">Origin-State-Id</stringProp>
        <stringProp name="SyOCSCERDiameterClient.avpData.10">1094807040</stringProp>
        <stringProp name="SyOCSCERDiameterClient.avpName.11">Auth-Application-Id</stringProp>
        <stringProp name="SyOCSCERDiameterClient.avpData.11">16777238</stringProp>
        <stringProp name="SyOCSCERDiameterClient.avpName.12">Acct-Application-Id</stringProp>
        <stringProp name="SyOCSCERDiameterClient.avpData.12">0</stringProp>
        <stringProp name="SyOCSCERDiameterClient.avpName.13">Firmware-Revision</stringProp>
        <stringProp name="SyOCSCERDiameterClient.avpData.13">267</stringProp>
        <stringProp name="SyOCSCERDiameterClient.avpCounter">14</stringProp>
        <stringProp name="SyOCSDPRDiameterClient.message">Disconnect-Peer-Request</stringProp>
        <stringProp name="SyOCSDPRDiameterClient.flagP">false</stringProp>
        <stringProp name="SyOCSDPRSyOCSDPRDiameterClient.flagE">false</stringProp>
        <stringProp name="SyOCSDPRDiameterClient.flagT">false</stringProp>
        <stringProp name="SyOCSDPRDiameterClient.appID">-1</stringProp>
        <stringProp name="SyOCSDPRDiameterClient.HBHID">-1</stringProp>
        <stringProp name="SyOCSDPRDiameterClient.ETEID">-1</stringProp>
        <stringProp name="SyOCSDPRDiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="SyOCSDPRDiameterClient.avpData.0">$(origin_host}</stringProp>
        <stringProp name="SyOCSDPRDiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="SyOCSDPRDiameterClient.avpData.1">${originrealm}</stringProp>
        <stringProp name="SyOCSDPRDiameterClient.avpName.2">Disconnect-Cause</stringProp>
        <stringProp name="SyOCSDPRDiameterClient.avpData.2">2</stringProp>
        <stringProp name="SyOCSDPRDiameterClient.avpCounter">3</stringProp>
        <stringProp name="SyOCSDWADiameterClient.message">Device-Watchdog-Answer</stringProp>
        <stringProp name="SyOCSDWADiameterClient.flagP">false</stringProp>
        <stringProp name="SyOCSDWASyOCSDWADiameterClient.flagE">false</stringProp>
        <stringProp name="SyOCSDWADiameterClient.flagT">false</stringProp>
        <stringProp name="SyOCSDWADiameterClient.appID">-1</stringProp>
        <stringProp name="SyOCSDWADiameterClient.HBHID">-1</stringProp>
        <stringProp name="SyOCSDWADiameterClient.ETEID">-1</stringProp>
        <stringProp name="SyOCSDWADiameterClient.avpName.0">Result-Code</stringProp>
        <stringProp name="SyOCSDWADiameterClient.avpData.0">2001</stringProp>
        <stringProp name="SyOCSDWADiameterClient.avpName.1">Origin-Host</stringProp>
        <stringProp name="SyOCSDWADiameterClient.avpData.1">${originhost}</stringProp>
        <stringProp name="SyOCSDWADiameterClient.avpName.2">Origin-Realm</stringProp>
        <stringProp name="SyOCSDWADiameterClient.avpData.2">${originrealm}</stringProp>
        <stringProp name="SyOCSDWADiameterClient.avpName.3">Host-IP-Address</stringProp>
        <stringProp name="SyOCSDWADiameterClient.avpData.3">10.106.1.142</stringProp>
        <stringProp name="SyOCSDWADiameterClient.avpName.4">Vendor-Id</stringProp>
        <stringProp name="SyOCSDWADiameterClient.avpData.4">10415</stringProp>
        <stringProp name="SyOCSDWADiameterClient.avpName.5">Product-Name</stringProp>
        <stringProp name="SyOCSDWADiameterClient.avpData.5">Jmeter</stringProp>
        <stringProp name="SyOCSDWADiameterClient.avpCounter">6</stringProp>
        <stringProp name="SyOCSRAADiameterClient.message">Re-Auth-Answer</stringProp>
        <stringProp name="SyOCSRAADiameterClient.flagP">true</stringProp>
        <stringProp name="SyOCSRAASyOCSRAADiameterClient.flagE">false</stringProp>
        <stringProp name="SyOCSRAADiameterClient.flagT">false</stringProp>
        <stringProp name="SyOCSRAADiameterClient.appID">-1</stringProp>
        <stringProp name="SyOCSRAADiameterClient.HBHID">-1</stringProp>
        <stringProp name="SyOCSRAADiameterClient.ETEID">-1</stringProp>
        <stringProp name="SyOCSRAADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="SyOCSRAADiameterClient.avpData.0"></stringProp>
        <stringProp name="SyOCSRAADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="SyOCSRAADiameterClient.avpData.1"></stringProp>
        <stringProp name="SyOCSRAADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="SyOCSRAADiameterClient.avpData.2"></stringProp>
        <stringProp name="SyOCSRAADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="SyOCSRAADiameterClient.avpData.3">0</stringProp>
        <stringProp name="SyOCSRAADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="SyOCSRAADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="SyOCSRAADiameterClient.avpCounter">5</stringProp>
        <stringProp name="SyOCSASADiameterClient.message">Abort-Session-Answer</stringProp>
        <stringProp name="SyOCSASADiameterClient.flagP">true</stringProp>
        <stringProp name="SyOCSASASyOCSASADiameterClient.flagE">false</stringProp>
        <stringProp name="SyOCSASADiameterClient.flagT">false</stringProp>
        <stringProp name="SyOCSASADiameterClient.appID">-1</stringProp>
        <stringProp name="SyOCSASADiameterClient.HBHID">-1</stringProp>
        <stringProp name="SyOCSASADiameterClient.ETEID">-1</stringProp>
        <stringProp name="SyOCSASADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="SyOCSASADiameterClient.avpData.0"></stringProp>
        <stringProp name="SyOCSASADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="SyOCSASADiameterClient.avpData.1"></stringProp>
        <stringProp name="SyOCSASADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="SyOCSASADiameterClient.avpData.2"></stringProp>
        <stringProp name="SyOCSASADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="SyOCSASADiameterClient.avpData.3">0</stringProp>
        <stringProp name="SyOCSASADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="SyOCSASADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="SyOCSASADiameterClient.avpCounter">5</stringProp>
        <stringProp name="SyOCSCLADiameterClient.message">Cancel-Location-Answer</stringProp>
        <stringProp name="SyOCSCLADiameterClient.flagP">true</stringProp>
        <stringProp name="SyOCSCLASyOCSCLADiameterClient.flagE">false</stringProp>
        <stringProp name="SyOCSCLADiameterClient.flagT">false</stringProp>
        <stringProp name="SyOCSCLADiameterClient.appID">-1</stringProp>
        <stringProp name="SyOCSCLADiameterClient.HBHID">-1</stringProp>
        <stringProp name="SyOCSCLADiameterClient.ETEID">-1</stringProp>
        <stringProp name="SyOCSCLADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="SyOCSCLADiameterClient.avpData.0"></stringProp>
        <stringProp name="SyOCSCLADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="SyOCSCLADiameterClient.avpData.1"></stringProp>
        <stringProp name="SyOCSCLADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="SyOCSCLADiameterClient.avpData.2"></stringProp>
        <stringProp name="SyOCSCLADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="SyOCSCLADiameterClient.avpData.3">0</stringProp>
        <stringProp name="SyOCSCLADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="SyOCSCLADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="SyOCSCLADiameterClient.avpCounter">5</stringProp>
        <stringProp name="SyOCSIDADiameterClient.message">Insert-Subscriber-Data-Answer</stringProp>
        <stringProp name="SyOCSIDADiameterClient.flagP">true</stringProp>
        <stringProp name="SyOCSIDASyOCSIDADiameterClient.flagE">false</stringProp>
        <stringProp name="SyOCSIDADiameterClient.flagT">false</stringProp>
        <stringProp name="SyOCSIDADiameterClient.appID">-1</stringProp>
        <stringProp name="SyOCSIDADiameterClient.HBHID">-1</stringProp>
        <stringProp name="SyOCSIDADiameterClient.ETEID">-1</stringProp>
        <stringProp name="SyOCSIDADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="SyOCSIDADiameterClient.avpData.0"></stringProp>
        <stringProp name="SyOCSIDADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="SyOCSIDADiameterClient.avpData.1"></stringProp>
        <stringProp name="SyOCSIDADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="SyOCSIDADiameterClient.avpData.2"></stringProp>
        <stringProp name="SyOCSIDADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="SyOCSIDADiameterClient.avpData.3">0</stringProp>
        <stringProp name="SyOCSIDADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="SyOCSIDADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="SyOCSIDADiameterClient.avpCounter">5</stringProp>
        <stringProp name="SyOCSDSADiameterClient.message">Delete-Subscriber-Data-Answer</stringProp>
        <stringProp name="SyOCSDSADiameterClient.flagP">true</stringProp>
        <stringProp name="SyOCSDSASyOCSDSADiameterClient.flagE">false</stringProp>
        <stringProp name="SyOCSDSADiameterClient.flagT">false</stringProp>
        <stringProp name="SyOCSDSADiameterClient.appID">-1</stringProp>
        <stringProp name="SyOCSDSADiameterClient.HBHID">-1</stringProp>
        <stringProp name="SyOCSDSADiameterClient.ETEID">-1</stringProp>
        <stringProp name="SyOCSDSADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="SyOCSDSADiameterClient.avpData.0"></stringProp>
        <stringProp name="SyOCSDSADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="SyOCSDSADiameterClient.avpData.1"></stringProp>
        <stringProp name="SyOCSDSADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="SyOCSDSADiameterClient.avpData.2"></stringProp>
        <stringProp name="SyOCSDSADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="SyOCSDSADiameterClient.avpData.3">0</stringProp>
        <stringProp name="SyOCSDSADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="SyOCSDSADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="SyOCSDSADiameterClient.avpCounter">5</stringProp>
        <stringProp name="SyOCSRSADiameterClient.message">Reset-Answer</stringProp>
        <stringProp name="SyOCSRSADiameterClient.flagP">true</stringProp>
        <stringProp name="SyOCSRSASyOCSRSADiameterClient.flagE">false</stringProp>
        <stringProp name="SyOCSRSADiameterClient.flagT">false</stringProp>
        <stringProp name="SyOCSRSADiameterClient.appID">-1</stringProp>
        <stringProp name="SyOCSRSADiameterClient.HBHID">-1</stringProp>
        <stringProp name="SyOCSRSADiameterClient.ETEID">-1</stringProp>
        <stringProp name="SyOCSRSADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="SyOCSRSADiameterClient.avpData.0"></stringProp>
        <stringProp name="SyOCSRSADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="SyOCSRSADiameterClient.avpData.1"></stringProp>
        <stringProp name="SyOCSRSADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="SyOCSRSADiameterClient.avpData.2"></stringProp>
        <stringProp name="SyOCSRSADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="SyOCSRSADiameterClient.avpData.3">0</stringProp>
        <stringProp name="SyOCSRSADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="SyOCSRSADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="SyOCSRSADiameterClient.avpCounter">5</stringProp>
        <stringProp name="SyOCSRTADiameterClient.message">Registration-Termination-Answer</stringProp>
        <stringProp name="SyOCSRTADiameterClient.flagP">true</stringProp>
        <stringProp name="SyOCSRTASyOCSRTADiameterClient.flagE">false</stringProp>
        <stringProp name="SyOCSRTADiameterClient.flagT">false</stringProp>
        <stringProp name="SyOCSRTADiameterClient.appID">-1</stringProp>
        <stringProp name="SyOCSRTADiameterClient.HBHID">-1</stringProp>
        <stringProp name="SyOCSRTADiameterClient.ETEID">-1</stringProp>
        <stringProp name="SyOCSRTADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="SyOCSRTADiameterClient.avpData.0"></stringProp>
        <stringProp name="SyOCSRTADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="SyOCSRTADiameterClient.avpData.1"></stringProp>
        <stringProp name="SyOCSRTADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="SyOCSRTADiameterClient.avpData.2"></stringProp>
        <stringProp name="SyOCSRTADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="SyOCSRTADiameterClient.avpData.3">0</stringProp>
        <stringProp name="SyOCSRTADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="SyOCSRTADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="SyOCSRTADiameterClient.avpCounter">5</stringProp>
        <stringProp name="SyOCSPPADiameterClient.message">Push-Profile-Answer</stringProp>
        <stringProp name="SyOCSPPADiameterClient.flagP">true</stringProp>
        <stringProp name="SyOCSPPASyOCSPPADiameterClient.flagE">false</stringProp>
        <stringProp name="SyOCSPPADiameterClient.flagT">false</stringProp>
        <stringProp name="SyOCSPPADiameterClient.appID">-1</stringProp>
        <stringProp name="SyOCSPPADiameterClient.HBHID">-1</stringProp>
        <stringProp name="SyOCSPPADiameterClient.ETEID">-1</stringProp>
        <stringProp name="SyOCSPPADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="SyOCSPPADiameterClient.avpData.0"></stringProp>
        <stringProp name="SyOCSPPADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="SyOCSPPADiameterClient.avpData.1"></stringProp>
        <stringProp name="SyOCSPPADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="SyOCSPPADiameterClient.avpData.2"></stringProp>
        <stringProp name="SyOCSPPADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="SyOCSPPADiameterClient.avpData.3">0</stringProp>
        <stringProp name="SyOCSPPADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="SyOCSPPADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="SyOCSPPADiameterClient.avpCounter">5</stringProp>
        <stringProp name="SyOCSSLADiameterClient.message">Spending-Limit-Answer</stringProp>
        <stringProp name="SyOCSSLADiameterClient.flagP">true</stringProp>
        <stringProp name="SyOCSSLASyOCSSLADiameterClient.flagE">false</stringProp>
        <stringProp name="SyOCSSLADiameterClient.flagT">false</stringProp>
        <stringProp name="SyOCSSLADiameterClient.appID">-1</stringProp>
        <stringProp name="SyOCSSLADiameterClient.HBHID">-1</stringProp>
        <stringProp name="SyOCSSLADiameterClient.ETEID">-1</stringProp>
        <stringProp name="SyOCSSLADiameterClient.avpCounter">0</stringProp>
        <stringProp name="SyOCSSTADiameterClient.message">Session-Termination-Answer</stringProp>
        <stringProp name="SyOCSSTADiameterClient.flagP">true</stringProp>
        <stringProp name="SyOCSSTASyOCSSTADiameterClient.flagE">false</stringProp>
        <stringProp name="SyOCSSTADiameterClient.flagT">false</stringProp>
        <stringProp name="SyOCSSTADiameterClient.appID">-1</stringProp>
        <stringProp name="SyOCSSTADiameterClient.HBHID">-1</stringProp>
        <stringProp name="SyOCSSTADiameterClient.ETEID">-1</stringProp>
        <stringProp name="SyOCSSTADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="SyOCSSTADiameterClient.avpData.0"></stringProp>
        <stringProp name="SyOCSSTADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="SyOCSSTADiameterClient.avpData.1"></stringProp>
        <stringProp name="SyOCSSTADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="SyOCSSTADiameterClient.avpData.2"></stringProp>
        <stringProp name="SyOCSSTADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="SyOCSSTADiameterClient.avpData.3">0</stringProp>
        <stringProp name="SyOCSSTADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="SyOCSSTADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="SyOCSSTADiameterClient.avpCounter">5</stringProp>
        <boolProp name="SyOCSDiameterClient.overrideStack">true</boolProp>
        <boolProp name="SyOCSDiameterClient.disableAutomaticBgResponder">false</boolProp>
        <boolProp name="SyOCSDiameterClient.enablePeerStateMachine">false</boolProp>
        <objProp>
          <name>DiameterClient.CONNECTION_IDS</name>
          <value class="java.util.ArrayList">
            <java.lang.String>GxPCEF</java.lang.String>
            <java.lang.String>73_PCEF_primary</java.lang.String>
            <java.lang.String>73_PCEF_secondary</java.lang.String>
            <java.lang.String>RxPCEF</java.lang.String>
            <java.lang.String>SyOCS</java.lang.String>
          </value>
        </objProp>
      </ConfigTestElement>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery">Select 1 from dual</stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">DB</stringProp>
        <stringProp name="dbUrl">jdbc:oracle:thin:@${dbserverip}:${dbserverport}/${dbserversid}</stringProp>
        <stringProp name="driver">oracle.jdbc.driver.OracleDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">ngt70</stringProp>
        <stringProp name="poolMax">10</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">${dbusername}</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Global Configurations -P" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Global Entiry Configuration</stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Disable Password Change" enabled="true">
          <stringProp name="dataSource">DB</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">update tblm_staff set PASSWORD_CHANGE_DATE = SYSDATE</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Default Database Datasource" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;: &quot;DATABASE_DS_2&quot;,&#xd;
    &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
    &quot;groups&quot;: null,&#xd;
    &quot;name&quot;: &quot;DefaultDatabaseDatasource_2&quot;,&#xd;
    &quot;connectionUrl&quot;: &quot;jdbc:oracle:thin:@${dbserverip}:${dbserverport}/${dbserversid}&quot;,&#xd;
    &quot;userName&quot;: &quot;${dbusername}&quot;,&#xd;
    &quot;password&quot;: &quot;${dbusername}&quot;,&#xd;
    &quot;minimumPool&quot;: 1,&#xd;
    &quot;maximumPool&quot;: 10,&#xd;
    &quot;queryTimeout&quot;: 1000,&#xd;
    &quot;statusCheckDuration&quot;: 120,&#xd;
    &quot;groupNames&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
          <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${default_db_datasource_url}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1056488887">&quot;id&quot;:&quot;DATABASE_DS_2&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Server Group" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
        &quot;id&quot;: &quot;Server_Group_11111111&quot;,&#xd;
        &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
        &quot;groups&quot;: &quot;GROUP_1&quot;,&#xd;
        &quot;name&quot;: &quot;DefaultGroup&quot;,&#xd;
        &quot;sessionDataSourceId&quot;: &quot;DATABASE_DS_2&quot;,&#xd;
        &quot;serverInstanceIds&quot;: [&#xd;
            &quot;Server_Instance_11111111&quot;&#xd;
        ],&#xd;
        &quot;serverGroupType&quot;: &quot;PCC&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
          <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${server_group_url}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-361795601">&quot;id&quot;:&quot;Server_Group_11111111</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Server Instance" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
        &quot;id&quot;: &quot;Server_Instance_11111111&quot;,&#xd;
        &quot;name&quot;: &quot;ngt70&quot;,&#xd;
        &quot;description&quot;: &quot;ngt70 Server Instance created successfully&quot;,&#xd;
        &quot;snmpUrl&quot;: &quot;0.0.0.0:1161&quot;,&#xd;
        &quot;restApiUrl&quot;: &quot;192.168.11.199:9000&quot;,&#xd;
        &quot;diameterEnabled&quot;: true,&#xd;
        &quot;diameterUrl&quot;: &quot;192.168.11.199:3868&quot;,&#xd;
        &quot;diameterOriginHost&quot;: &quot;netvertex.elitecore.com&quot;,&#xd;
        &quot;diameterOriginRealm&quot;: &quot;elitecore.com&quot;,&#xd;
        &quot;radiusEnabled&quot;: false,&#xd;
        &quot;radiusUrl&quot;: null,&#xd;
        &quot;emailAgentId&quot;: null,&#xd;
        &quot;smsAgentId&quot;: null,&#xd;
        &quot;serverGroupId&quot;: &quot;Server_Group_11111111&quot;,&#xd;
        &quot;offlineRncService&quot;: null&#xd;
    }</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
          <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${server_instance_url}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="424591015">&quot;id&quot;:&quot;Server_Instance_11111111&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Diameter GW Profile" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
        &quot;id&quot;: &quot;Diameter_GW_Profile_11111111&quot;,&#xd;
        &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
        &quot;groups&quot;: &quot;1&quot;,&#xd;
        &quot;name&quot;: &quot;Diameter_GW_Profile&quot;,&#xd;
        &quot;description&quot;: &quot;Created by admin on 11/29/2017 10:38:54&quot;,&#xd;
        &quot;gatewayType&quot;: &quot;ACCESS_GATEWAY&quot;,&#xd;
        &quot;vendorId&quot;: &quot;999999999999&quot;,&#xd;
        &quot;firmware&quot;: null,&#xd;
        &quot;usageReportingType&quot;: &quot;NON_CUMULATIVE&quot;,&#xd;
        &quot;revalidationMode&quot;: &quot;ServerInitiated&quot;,&#xd;
        &quot;timeout&quot;: 3000,&#xd;
        &quot;gxApplicationId&quot;: &quot;10415:16777238&quot;,&#xd;
        &quot;gyApplicationId&quot;: &quot;10415:4&quot;,&#xd;
        &quot;rxApplicationId&quot;: &quot;10415:16777236&quot;,&#xd;
        &quot;s9ApplicationId&quot;: &quot;10415:16777267&quot;,&#xd;
        &quot;syApplicationId&quot;: &quot;10415:16777302&quot;,&#xd;
        &quot;dwInterval&quot;: 60,&#xd;
        &quot;supportedVendorList&quot;: null,&#xd;
        &quot;supportedStandard&quot;: &quot;RELEASE_9&quot;,&#xd;
        &quot;chargingRuleInstallMode&quot;: &quot;GROUPED&quot;,&#xd;
        &quot;sessionCleanUpCER&quot;: false,&#xd;
        &quot;sessionCleanUpDPR&quot;: false,&#xd;
        &quot;cerAvps&quot;: null,&#xd;
        &quot;dprAvps&quot;: null,&#xd;
        &quot;dwrAvps&quot;: null,&#xd;
        &quot;socketReceiveBufferSize&quot;: -1,&#xd;
        &quot;sendDPRCloseEvent&quot;: false,&#xd;
        &quot;socketSendBufferSize&quot;: -1,&#xd;
        &quot;tcpNagleAlgorithm&quot;: true,&#xd;
        &quot;initConnectionDuration&quot;: 0,&#xd;
        &quot;groovyScriptDatas&quot;: [],&#xd;
        &quot;umStandard&quot;: &quot;TGPPR9&quot;,&#xd;
        &quot;sessionLookUpKey&quot;: &quot;CS.SessionIPv4,CS.SessionIPv6&quot;,&#xd;
        &quot;diameterGwProfilePacketMappings&quot;: [],&#xd;
        &quot;diameterGwProfilePCCRuleMappings&quot;: [],&#xd;
        &quot;vendorData&quot;: {&#xd;
            &quot;id&quot;: &quot;999999999999&quot;,&#xd;
            &quot;name&quot;: &quot;Other&quot;,&#xd;
            &quot;description&quot;: &quot;Other&quot;&#xd;
        },&#xd;
        &quot;groupNames&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
          <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${diameter_gw_profile_url}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="575832418">&quot;id&quot;:&quot;Diameter_GW_Profile_11111111&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Diameter GW" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
        &quot;id&quot;: &quot;Diameter_GW_11111111&quot;,&#xd;
        &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
        &quot;groups&quot;: &quot;1&quot;,&#xd;
        &quot;name&quot;: &quot;Diameter_GW&quot;,&#xd;
        &quot;description&quot;: &quot;Created by admin on 11/29/2017 10:43:46&quot;,&#xd;
        &quot;policyEnforcementMethod&quot;: &quot;STANDARD&quot;,&#xd;
        &quot;connectionURL&quot;: null,&#xd;
        &quot;hostIdentity&quot;: &quot;gx.elite.com&quot;,&#xd;
        &quot;realm&quot;: &quot;elite.com&quot;,&#xd;
        &quot;localAddress&quot;: null,&#xd;
        &quot;alternateHostId&quot;: null,&#xd;
        &quot;diameterGatewayProfileId&quot;: &quot;Diameter_GW_Profile_11111111&quot;,&#xd;
        &quot;requestTimeout&quot;: 3000,&#xd;
        &quot;retransmissionCount&quot;: 3,&#xd;
        &quot;groupNames&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
          <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${diameter_gw_url}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-777825640">&quot;id&quot;:&quot;Diameter_GW_11111111&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create GW &amp; GW Profile for Rx" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Diameter GW Profile for Rx" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;id&quot;: &quot;RTC_14_AF_GW_Profile_11111111&quot;,&#xd;
        &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
        &quot;groups&quot;: &quot;1&quot;,&#xd;
        &quot;name&quot;: &quot;RTC_14_AF_GW_Profile&quot;,&#xd;
        &quot;description&quot;: &quot;Created by admin on 11/29/2017 10:38:54&quot;,&#xd;
        &quot;gatewayType&quot;: &quot;APPLICATION_FUNCTION&quot;,&#xd;
        &quot;vendorId&quot;: &quot;999999999999&quot;,&#xd;
        &quot;firmware&quot;: null,&#xd;
        &quot;usageReportingType&quot;: &quot;NON_CUMULATIVE&quot;,&#xd;
        &quot;revalidationMode&quot;: &quot;ServerInitiated&quot;,&#xd;
        &quot;timeout&quot;: 3000,&#xd;
        &quot;gxApplicationId&quot;: &quot;10415:16777238&quot;,&#xd;
        &quot;gyApplicationId&quot;: &quot;10415:4&quot;,&#xd;
        &quot;rxApplicationId&quot;: &quot;10415:16777236&quot;,&#xd;
        &quot;s9ApplicationId&quot;: &quot;10415:16777267&quot;,&#xd;
        &quot;syApplicationId&quot;: &quot;10415:16777302&quot;,&#xd;
        &quot;dwInterval&quot;: 60,&#xd;
        &quot;supportedVendorList&quot;: null,&#xd;
        &quot;supportedStandard&quot;: &quot;RELEASE_9&quot;,&#xd;
        &quot;chargingRuleInstallMode&quot;: &quot;GROUPED&quot;,&#xd;
        &quot;sessionCleanUpCER&quot;: false,&#xd;
        &quot;sessionCleanUpDPR&quot;: false,&#xd;
        &quot;cerAvps&quot;: null,&#xd;
        &quot;dprAvps&quot;: null,&#xd;
        &quot;dwrAvps&quot;: null,&#xd;
        &quot;socketReceiveBufferSize&quot;: -1,&#xd;
        &quot;sendDPRCloseEvent&quot;: false,&#xd;
        &quot;socketSendBufferSize&quot;: -1,&#xd;
        &quot;tcpNagleAlgorithm&quot;: true,&#xd;
        &quot;initConnectionDuration&quot;: 0,&#xd;
        &quot;groovyScriptDatas&quot;: [],&#xd;
        &quot;umStandard&quot;: &quot;TGPPR9&quot;,&#xd;
        &quot;sessionLookUpKey&quot;: &quot;CS.SessionIPv4,CS.SessionIPv6&quot;,&#xd;
        &quot;diameterGwProfilePacketMappings&quot;: [],&#xd;
        &quot;diameterGwProfilePCCRuleMappings&quot;: [],&#xd;
        &quot;vendorData&quot;: {&#xd;
            &quot;id&quot;: &quot;999999999999&quot;,&#xd;
            &quot;name&quot;: &quot;Other&quot;,&#xd;
            &quot;description&quot;: &quot;Other&quot;&#xd;
        },&#xd;
        &quot;groupNames&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${diameter_gw_profile_url}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-776224378">&quot;id&quot;:&quot;RTC_14_AF_GW_Profile_11111111&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Diameter GW for Rx" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;id&quot;: &quot;RTC_14_AF_Gateway_11111111&quot;,&#xd;
        &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
        &quot;groups&quot;: &quot;1&quot;,&#xd;
        &quot;name&quot;: &quot;RTC_14_AF_Gateway&quot;,&#xd;
        &quot;description&quot;: &quot;Created by admin on 11/29/2017 10:43:46&quot;,&#xd;
        &quot;policyEnforcementMethod&quot;: &quot;STANDARD&quot;,&#xd;
        &quot;connectionURL&quot;: null,&#xd;
        &quot;hostIdentity&quot;: &quot;af.elite.com&quot;,&#xd;
        &quot;realm&quot;: &quot;elite.com&quot;,&#xd;
        &quot;localAddress&quot;: null,&#xd;
        &quot;alternateHostId&quot;: null,&#xd;
        &quot;diameterGatewayProfileId&quot;: &quot;RTC_14_AF_GW_Profile_11111111&quot;,&#xd;
        &quot;requestTimeout&quot;: 3000,&#xd;
        &quot;retransmissionCount&quot;: 3,&#xd;
        &quot;groupNames&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${diameter_gw_url}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1469002434">&quot;id&quot;:&quot;RTC_14_AF_Gateway_11111111&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create GW &amp; GW Profile for RTC_21" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Diameter GW Profile" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;id&quot;: &quot;RTC_21_GW_Profile_11111111&quot;,&#xd;
        &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
        &quot;groups&quot;: &quot;1&quot;,&#xd;
        &quot;name&quot;: &quot;RTC_21_GW_Profile&quot;,&#xd;
        &quot;description&quot;: &quot;Created by admin on 11/29/2017 10:38:54&quot;,&#xd;
        &quot;gatewayType&quot;: &quot;ACCESS_GATEWAY&quot;,&#xd;
        &quot;vendorId&quot;: &quot;999999999999&quot;,&#xd;
        &quot;firmware&quot;: null,&#xd;
        &quot;usageReportingType&quot;: &quot;NON_CUMULATIVE&quot;,&#xd;
        &quot;revalidationMode&quot;: &quot;ServerInitiated&quot;,&#xd;
        &quot;timeout&quot;: 3000,&#xd;
        &quot;gxApplicationId&quot;: &quot;10415:16777238&quot;,&#xd;
        &quot;gyApplicationId&quot;: &quot;10415:4&quot;,&#xd;
        &quot;rxApplicationId&quot;: &quot;10415:16777236&quot;,&#xd;
        &quot;s9ApplicationId&quot;: &quot;10415:16777267&quot;,&#xd;
        &quot;syApplicationId&quot;: &quot;10415:16777302&quot;,&#xd;
        &quot;dwInterval&quot;: 60,&#xd;
        &quot;supportedVendorList&quot;: null,&#xd;
        &quot;supportedStandard&quot;: &quot;RELEASE_9&quot;,&#xd;
        &quot;chargingRuleInstallMode&quot;: &quot;GROUPED&quot;,&#xd;
        &quot;sessionCleanUpCER&quot;: false,&#xd;
        &quot;sessionCleanUpDPR&quot;: false,&#xd;
        &quot;cerAvps&quot;: null,&#xd;
        &quot;dprAvps&quot;: null,&#xd;
        &quot;dwrAvps&quot;: null,&#xd;
        &quot;socketReceiveBufferSize&quot;: -1,&#xd;
        &quot;sendDPRCloseEvent&quot;: false,&#xd;
        &quot;socketSendBufferSize&quot;: -1,&#xd;
        &quot;tcpNagleAlgorithm&quot;: true,&#xd;
        &quot;initConnectionDuration&quot;: 0,&#xd;
        &quot;groovyScriptDatas&quot;: [],&#xd;
        &quot;umStandard&quot;: &quot;TGPPR9&quot;,&#xd;
        &quot;sessionLookUpKey&quot;: &quot;CS.SessionIPv4,CS.SessionIPv6&quot;,&#xd;
        &quot;diameterGwProfilePacketMappings&quot;: [],&#xd;
        &quot;diameterGwProfilePCCRuleMappings&quot;: [],&#xd;
        &quot;vendorData&quot;: {&#xd;
            &quot;id&quot;: &quot;999999999999&quot;,&#xd;
            &quot;name&quot;: &quot;Other&quot;,&#xd;
            &quot;description&quot;: &quot;Other&quot;&#xd;
        },&#xd;
        &quot;groupNames&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${diameter_gw_profile_url}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="235127762">&quot;id&quot;:&quot;RTC_21_GW_Profile_11111111&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Diameter GW" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;id&quot;: &quot;RTC_21_Gateway_11111111&quot;,&#xd;
        &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
        &quot;groups&quot;: &quot;1&quot;,&#xd;
        &quot;name&quot;: &quot;RTC_21_Gateway&quot;,&#xd;
        &quot;description&quot;: &quot;Created by admin on 11/29/2017 10:43:46&quot;,&#xd;
        &quot;policyEnforcementMethod&quot;: &quot;STANDARD&quot;,&#xd;
        &quot;connectionURL&quot;: null,&#xd;
        &quot;hostIdentity&quot;: &quot;21_gx.elite.com&quot;,&#xd;
        &quot;realm&quot;: &quot;elite.com&quot;,&#xd;
        &quot;localAddress&quot;: null,&#xd;
        &quot;alternateHostId&quot;: null,&#xd;
        &quot;diameterGatewayProfileId&quot;: &quot;RTC_21_GW_Profile_11111111&quot;,&#xd;
        &quot;requestTimeout&quot;: 3000,&#xd;
        &quot;retransmissionCount&quot;: 0,&#xd;
        &quot;groupNames&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${diameter_gw_url}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1714736754">&quot;id&quot;:&quot;RTC_21_Gateway_11111111&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create GW &amp; GW Profile for RTC_22" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Diameter GW Profile" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;id&quot;: &quot;RTC_22_GW_Profile_11111111&quot;,&#xd;
        &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
        &quot;groups&quot;: &quot;1&quot;,&#xd;
        &quot;name&quot;: &quot;RTC_22_GW_Profile&quot;,&#xd;
        &quot;description&quot;: &quot;Created by admin on 11/29/2017 10:38:54&quot;,&#xd;
        &quot;gatewayType&quot;: &quot;ACCESS_GATEWAY&quot;,&#xd;
        &quot;vendorId&quot;: &quot;999999999999&quot;,&#xd;
        &quot;firmware&quot;: null,&#xd;
        &quot;usageReportingType&quot;: &quot;NON_CUMULATIVE&quot;,&#xd;
        &quot;revalidationMode&quot;: &quot;ServerInitiated&quot;,&#xd;
        &quot;timeout&quot;: 3000,&#xd;
        &quot;gxApplicationId&quot;: &quot;10415:16777238&quot;,&#xd;
        &quot;gyApplicationId&quot;: &quot;10415:4&quot;,&#xd;
        &quot;rxApplicationId&quot;: &quot;10415:16777236&quot;,&#xd;
        &quot;s9ApplicationId&quot;: &quot;10415:16777267&quot;,&#xd;
        &quot;syApplicationId&quot;: &quot;10415:16777302&quot;,&#xd;
        &quot;dwInterval&quot;: 60,&#xd;
        &quot;supportedVendorList&quot;: null,&#xd;
        &quot;supportedStandard&quot;: &quot;RELEASE_9&quot;,&#xd;
        &quot;chargingRuleInstallMode&quot;: &quot;GROUPED&quot;,&#xd;
        &quot;sessionCleanUpCER&quot;: false,&#xd;
        &quot;sessionCleanUpDPR&quot;: false,&#xd;
        &quot;cerAvps&quot;: null,&#xd;
        &quot;dprAvps&quot;: null,&#xd;
        &quot;dwrAvps&quot;: null,&#xd;
        &quot;socketReceiveBufferSize&quot;: -1,&#xd;
        &quot;sendDPRCloseEvent&quot;: false,&#xd;
        &quot;socketSendBufferSize&quot;: -1,&#xd;
        &quot;tcpNagleAlgorithm&quot;: true,&#xd;
        &quot;initConnectionDuration&quot;: 0,&#xd;
        &quot;groovyScriptDatas&quot;: [],&#xd;
        &quot;umStandard&quot;: &quot;TGPPR9&quot;,&#xd;
        &quot;sessionLookUpKey&quot;: &quot;CS.SessionIPv4,CS.SessionIPv6&quot;,&#xd;
        &quot;diameterGwProfilePacketMappings&quot;: [],&#xd;
        &quot;diameterGwProfilePCCRuleMappings&quot;: [],&#xd;
        &quot;vendorData&quot;: {&#xd;
            &quot;id&quot;: &quot;999999999999&quot;,&#xd;
            &quot;name&quot;: &quot;Other&quot;,&#xd;
            &quot;description&quot;: &quot;Other&quot;&#xd;
        },&#xd;
        &quot;groupNames&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${diameter_gw_profile_url}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1802928527">&quot;id&quot;:&quot;RTC_22_GW_Profile_11111111&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Diameter GW" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;id&quot;: &quot;RTC_22_Gateway_11111111&quot;,&#xd;
        &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
        &quot;groups&quot;: &quot;1&quot;,&#xd;
        &quot;name&quot;: &quot;RTC_22_Gateway&quot;,&#xd;
        &quot;description&quot;: &quot;Created by admin on 11/29/2017 10:43:46&quot;,&#xd;
        &quot;policyEnforcementMethod&quot;: &quot;STANDARD&quot;,&#xd;
        &quot;connectionURL&quot;: null,&#xd;
        &quot;hostIdentity&quot;: &quot;22_gx.elite.com&quot;,&#xd;
        &quot;realm&quot;: &quot;elite.com&quot;,&#xd;
        &quot;localAddress&quot;: null,&#xd;
        &quot;alternateHostId&quot;: null,&#xd;
        &quot;diameterGatewayProfileId&quot;: &quot;RTC_22_GW_Profile_11111111&quot;,&#xd;
        &quot;requestTimeout&quot;: 3000,&#xd;
        &quot;retransmissionCount&quot;: 0,&#xd;
        &quot;groupNames&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${diameter_gw_url}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="870264883">&quot;id&quot;:&quot;RTC_22_Gateway_11111111&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create GW &amp; GW Profile for RTC_23" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Diameter GW Profile" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;id&quot;: &quot;RTC_23_GW_Profile_11111111&quot;,&#xd;
        &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
        &quot;groups&quot;: &quot;1&quot;,&#xd;
        &quot;name&quot;: &quot;RTC_23_GW_Profile&quot;,&#xd;
        &quot;description&quot;: &quot;Created by admin on 11/29/2017 10:38:54&quot;,&#xd;
        &quot;gatewayType&quot;: &quot;ACCESS_GATEWAY&quot;,&#xd;
        &quot;vendorId&quot;: &quot;999999999999&quot;,&#xd;
        &quot;firmware&quot;: null,&#xd;
        &quot;usageReportingType&quot;: &quot;NON_CUMULATIVE&quot;,&#xd;
        &quot;revalidationMode&quot;: &quot;ServerInitiated&quot;,&#xd;
        &quot;timeout&quot;: 3000,&#xd;
        &quot;gxApplicationId&quot;: &quot;10415:16777238&quot;,&#xd;
        &quot;gyApplicationId&quot;: &quot;10415:4&quot;,&#xd;
        &quot;rxApplicationId&quot;: &quot;10415:16777236&quot;,&#xd;
        &quot;s9ApplicationId&quot;: &quot;10415:16777267&quot;,&#xd;
        &quot;syApplicationId&quot;: &quot;10415:16777302&quot;,&#xd;
        &quot;dwInterval&quot;: 60,&#xd;
        &quot;supportedVendorList&quot;: null,&#xd;
        &quot;supportedStandard&quot;: &quot;RELEASE_9&quot;,&#xd;
        &quot;chargingRuleInstallMode&quot;: &quot;GROUPED&quot;,&#xd;
        &quot;sessionCleanUpCER&quot;: false,&#xd;
        &quot;sessionCleanUpDPR&quot;: false,&#xd;
        &quot;cerAvps&quot;: null,&#xd;
        &quot;dprAvps&quot;: null,&#xd;
        &quot;dwrAvps&quot;: null,&#xd;
        &quot;socketReceiveBufferSize&quot;: -1,&#xd;
        &quot;sendDPRCloseEvent&quot;: false,&#xd;
        &quot;socketSendBufferSize&quot;: -1,&#xd;
        &quot;tcpNagleAlgorithm&quot;: true,&#xd;
        &quot;initConnectionDuration&quot;: 0,&#xd;
        &quot;groovyScriptDatas&quot;: [],&#xd;
        &quot;umStandard&quot;: &quot;TGPPR9&quot;,&#xd;
        &quot;sessionLookUpKey&quot;: &quot;CS.SessionIPv4,CS.SessionIPv6&quot;,&#xd;
        &quot;diameterGwProfilePacketMappings&quot;: [],&#xd;
        &quot;diameterGwProfilePCCRuleMappings&quot;: [],&#xd;
        &quot;vendorData&quot;: {&#xd;
            &quot;id&quot;: &quot;999999999999&quot;,&#xd;
            &quot;name&quot;: &quot;Other&quot;,&#xd;
            &quot;description&quot;: &quot;Other&quot;&#xd;
        },&#xd;
        &quot;groupNames&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${diameter_gw_profile_url}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="453982480">&quot;id&quot;:&quot;RTC_23_GW_Profile_11111111&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Diameter GW" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;id&quot;: &quot;RTC_23_Gateway_11111111&quot;,&#xd;
        &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
        &quot;groups&quot;: &quot;1&quot;,&#xd;
        &quot;name&quot;: &quot;RTC_23_Gateway&quot;,&#xd;
        &quot;description&quot;: &quot;Created by admin on 11/29/2017 10:43:46&quot;,&#xd;
        &quot;policyEnforcementMethod&quot;: &quot;STANDARD&quot;,&#xd;
        &quot;connectionURL&quot;: null,&#xd;
        &quot;hostIdentity&quot;: &quot;23_gx.elite.com&quot;,&#xd;
        &quot;realm&quot;: &quot;elite.com&quot;,&#xd;
        &quot;localAddress&quot;: null,&#xd;
        &quot;alternateHostId&quot;: &quot;Diameter_GW_11111111&quot;,&#xd;
        &quot;diameterGatewayProfileId&quot;: &quot;RTC_23_GW_Profile_11111111&quot;,&#xd;
        &quot;requestTimeout&quot;: 3000,&#xd;
        &quot;retransmissionCount&quot;: 0,&#xd;
        &quot;groupNames&quot;: null&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${diameter_gw_url}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="25793012">&quot;id&quot;:&quot;RTC_23_Gateway_11111111&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create GW &amp; GW Profile for Sy" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Diameter GW Profile for Sy" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;id&quot;: &quot;OCS_GW_Profile_11111111&quot;,&#xd;
        &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
        &quot;groups&quot;: &quot;GROUP_1&quot;,&#xd;
        &quot;name&quot;: &quot;OCS_GW_Profile&quot;,&#xd;
        &quot;description&quot;: &quot;Created by admin on 12/27/2017 15:38:10&quot;,&#xd;
        &quot;gatewayType&quot;: &quot;OCS&quot;,&#xd;
        &quot;vendorId&quot;: &quot;999999999999&quot;,&#xd;
        &quot;firmware&quot;: null,&#xd;
        &quot;usageReportingType&quot;: &quot;NON_CUMULATIVE&quot;,&#xd;
        &quot;revalidationMode&quot;: &quot;ServerInitiated&quot;,&#xd;
        &quot;timeout&quot;: 3000,&#xd;
        &quot;gxApplicationId&quot;: &quot;10415:16777238&quot;,&#xd;
        &quot;gyApplicationId&quot;: &quot;10415:4&quot;,&#xd;
        &quot;rxApplicationId&quot;: &quot;10415:16777236&quot;,&#xd;
        &quot;s9ApplicationId&quot;: &quot;10415:16777267&quot;,&#xd;
        &quot;syApplicationId&quot;: &quot;10415:16777302&quot;,&#xd;
        &quot;dwInterval&quot;: 60,&#xd;
        &quot;supportedVendorList&quot;: null,&#xd;
        &quot;supportedStandard&quot;: &quot;RELEASE_9&quot;,&#xd;
        &quot;chargingRuleInstallMode&quot;: &quot;GROUPED&quot;,&#xd;
        &quot;sessionCleanUpCER&quot;: false,&#xd;
        &quot;sessionCleanUpDPR&quot;: false,&#xd;
        &quot;cerAvps&quot;: null,&#xd;
        &quot;dprAvps&quot;: null,&#xd;
        &quot;dwrAvps&quot;: null,&#xd;
        &quot;socketReceiveBufferSize&quot;: -1,&#xd;
        &quot;sendDPRCloseEvent&quot;: false,&#xd;
        &quot;socketSendBufferSize&quot;: -1,&#xd;
        &quot;tcpNagleAlgorithm&quot;: true,&#xd;
        &quot;initConnectionDuration&quot;: 60,&#xd;
        &quot;groovyScriptDatas&quot;: [],&#xd;
        &quot;umStandard&quot;: &quot;TGPPR9&quot;,&#xd;
        &quot;sessionLookUpKey&quot;: &quot;CS.SessionIPv4,CS.SessionIPv6&quot;,&#xd;
        &quot;diameterGwProfilePacketMappings&quot;: [],&#xd;
        &quot;diameterGwProfilePCCRuleMappings&quot;: [],&#xd;
        &quot;vendorData&quot;: {&#xd;
            &quot;id&quot;: &quot;999999999999&quot;,&#xd;
            &quot;name&quot;: &quot;Other&quot;,&#xd;
            &quot;description&quot;: &quot;Other&quot;&#xd;
        },&#xd;
        &quot;groupNames&quot;: null&#xd;
    }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${diameter_gw_profile_url}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="229163018">&quot;id&quot;:&quot;OCS_GW_Profile_11111111&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Diameter GW for Sy" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
        &quot;id&quot;: &quot;OCS_Gateway_11111111&quot;,&#xd;
        &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
        &quot;groups&quot;: &quot;GROUP_1&quot;,&#xd;
        &quot;name&quot;: &quot;OCS_Gateway&quot;,&#xd;
        &quot;description&quot;: &quot;Created by admin on 12/27/2017 16:08:05&quot;,&#xd;
        &quot;policyEnforcementMethod&quot;: &quot;STANDARD&quot;,&#xd;
        &quot;connectionURL&quot;: &quot;10.121.21.76:3566&quot;,&#xd;
        &quot;hostIdentity&quot;: &quot;pocs.elitecore.com&quot;,&#xd;
        &quot;realm&quot;: &quot;elitecore.com&quot;,&#xd;
        &quot;localAddress&quot;: null,&#xd;
        &quot;alternateHostId&quot;: null,&#xd;
        &quot;diameterGatewayProfileId&quot;: &quot;OCS_GW_Profile_11111111&quot;,&#xd;
        &quot;requestTimeout&quot;: 3000,&#xd;
        &quot;retransmissionCount&quot;: 0,&#xd;
        &quot;groupNames&quot;: null&#xd;
    }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${diameter_gw_url}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2138307898">&quot;id&quot;:&quot;OCS_Gateway_11111111&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create SPR" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
        &quot;id&quot;: &quot;Default_SPR_11111111&quot;,&#xd;
        &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
        &quot;groups&quot;: &quot;GROUP_1&quot;,&#xd;
        &quot;name&quot;: &quot;SPR&quot;,&#xd;
        &quot;description&quot;: &quot;Created by admin on 11/29/2017 11:41:58&quot;,&#xd;
        &quot;alternateIdField&quot;: &quot;IMSI&quot;,&#xd;
        &quot;batchSize&quot;: 1,&#xd;
        &quot;databaseId&quot;: &quot;DATABASE_DS_2&quot;,&#xd;
        &quot;spInterfaceId&quot;: null,&#xd;
        &quot;groupNames&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
          <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${spr_url}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1380941555">&quot;id&quot;:&quot;Default_SPR_11111111&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DDF" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;: &quot;DDF_TABLE_1&quot;,&#xd;
    &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
    &quot;groups&quot;: &quot;GROUP_1&quot;,&#xd;
    &quot;stripPrefixes&quot;: null,&#xd;
    &quot;ddfSprRelDatas&quot;: [],&#xd;
    &quot;defaultSprDataId&quot;: &quot;Default_SPR_11111111&quot;,&#xd;
    &quot;groupNames&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
          <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${ddf_url}</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2038583816">&quot;id&quot;:&quot;DDF_TABLE_1&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DB CDR Driver-TC11" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
        &quot;id&quot;: &quot;RTC_11_DBCDR_Driver_11111111&quot;,&#xd;
        &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
        &quot;groups&quot;: &quot;GROUP_1&quot;,&#xd;
        &quot;name&quot;: &quot;RTC_11_DBCDR_Driver&quot;,&#xd;
        &quot;description&quot;: &quot;Created by admin on 11/29/2017 16:54:05&quot;,&#xd;
        &quot;driverType&quot;: &quot;DB_CDR_DRIVER&quot;,&#xd;
        &quot;csvDriverData&quot;: null,&#xd;
        &quot;dbCdrDriverData&quot;: {&#xd;
            &quot;id&quot;: &quot;RTC_11_DBCDR_Driver_11111112&quot;,&#xd;
            &quot;databaseData&quot;: {&#xd;
                &quot;id&quot;: &quot;RTC_11_DBCDR_Driver_11111113&quot;,&#xd;
                &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
                &quot;groups&quot;: null,&#xd;
                &quot;name&quot;: &quot;DB2&quot;,&#xd;
                &quot;connectionUrl&quot;: &quot;jdbc:oracle:thin:@${dbserverip}:${dbserverport}/${dbserversid}&quot;,&#xd;
                &quot;userName&quot;: &quot;${dbusername}&quot;,&#xd;
                &quot;minimumPool&quot;: 1,&#xd;
                &quot;maximumPool&quot;: 1,&#xd;
                &quot;queryTimeout&quot;: 1000,&#xd;
                &quot;statusCheckDuration&quot;: 120,&#xd;
                &quot;groupNames&quot;: null&#xd;
            },&#xd;
            &quot;maxQueryTimeoutCount&quot;: 100,&#xd;
            &quot;batchUpdate&quot;: &quot;false&quot;,&#xd;
            &quot;batchSize&quot;: 500,&#xd;
            &quot;batchUpdateInterval&quot;: 1,&#xd;
            &quot;batchUpdateQueryTimeout&quot;: 10,&#xd;
            &quot;tableName&quot;: &quot;TBLCDR&quot;,&#xd;
            &quot;identityField&quot;: &quot;CDRID&quot;,&#xd;
            &quot;sequenceName&quot;: &quot;SEQ_CDR&quot;,&#xd;
            &quot;storeAllCdr&quot;: &quot;false&quot;,&#xd;
            &quot;timeStampFieldName&quot;: &quot;TIMESTAMP&quot;,&#xd;
            &quot;reportingType&quot;: &quot;UM&quot;,&#xd;
            &quot;sessionIdFieldName&quot;: &quot;SESSIONID&quot;,&#xd;
            &quot;createDateFieldName&quot;: &quot;CREATEDATE&quot;,&#xd;
            &quot;lastModifiedDateFieldName&quot;: &quot;LASTMODIFIEDDATE&quot;,&#xd;
            &quot;inputOctetsFieldName&quot;: &quot;INPUTOCTETS&quot;,&#xd;
            &quot;outputOctetsFieldName&quot;: &quot;OUTPUTOCTETS&quot;,&#xd;
            &quot;totalOctetsFieldName&quot;: &quot;TOTALOCTETS&quot;,&#xd;
            &quot;usageTimeFieldName&quot;: &quot;USAGETIME&quot;,&#xd;
            &quot;usageKeyFieldName&quot;: &quot;MONITORINGKEY&quot;,&#xd;
            &quot;dbCdrDriverFieldMappingDataList&quot;: [&#xd;
                {&#xd;
                    &quot;id&quot;: &quot;DB_CDR_Driver_11111114&quot;,&#xd;
                    &quot;pcrfKey&quot;: &quot;CS.MSISDN&quot;,&#xd;
                    &quot;dbField&quot;: &quot;USERNAME&quot;,&#xd;
                    &quot;dataType&quot;: &quot;0&quot;,&#xd;
                    &quot;defaultValue&quot;: null&#xd;
                }&#xd;
            ],&#xd;
            &quot;databaseId&quot;: &quot;DB_CDR_Driver_11111115&quot;&#xd;
        },&#xd;
        &quot;groupNames&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
          <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${db_cdr_url}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="724137739">&quot;id&quot;:&quot;RTC_11_DBCDR_Driver_11111111&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create CSV Driver-TC12 - Need to add internal IDs" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
        &quot;id&quot;: &quot;RTC_12_CSV_Driver_11111111&quot;,&#xd;
        &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
        &quot;groups&quot;: &quot;GROUP_1&quot;,&#xd;
        &quot;name&quot;: &quot;RTC_12_CSV_Driver&quot;,&#xd;
        &quot;description&quot;: &quot;Created by admin on 12/11/2017 12:32:53&quot;,&#xd;
        &quot;driverType&quot;: &quot;CSV_DRIVER&quot;,&#xd;
        &quot;csvDriverData&quot;: {&#xd;
            &#xd;
            &quot;header&quot;: &quot;true&quot;,&#xd;
            &quot;delimiter&quot;: &quot;,&quot;,&#xd;
            &quot;timeStampFormat&quot;: &quot;EEE dd MMM,yyyy,hh:mm:ss aaa&quot;,&#xd;
            &quot;fileName&quot;: &quot;CDRs.csv&quot;,&#xd;
            &quot;fileLocation&quot;: &quot;data/csvfiles&quot;,&#xd;
            &quot;prefixFileName&quot;: null,&#xd;
            &quot;defaultFolderName&quot;: null,&#xd;
            &quot;folderName&quot;: null,&#xd;
            &quot;sequenceRange&quot;: null,&#xd;
            &quot;sequencePosition&quot;: &quot;SUFFIX&quot;,&#xd;
            &quot;sequenceGlobalization&quot;: &quot;false&quot;,&#xd;
            &quot;allocatingProtocol&quot;: &quot;LOCAL&quot;,&#xd;
            &quot;address&quot;: &quot;127.0.0.1:22&quot;,&#xd;
            &quot;remoteFileLocation&quot;: null,&#xd;
            &quot;userName&quot;: null,&#xd;
            &quot;archiveLocation&quot;: &quot;data/csvfiles/archive&quot;,&#xd;
            &quot;failOverTime&quot;: 3,&#xd;
            &quot;reportingType&quot;: &quot;UM&quot;,&#xd;
            &quot;inputOctetsHeader&quot;: &quot;INPUTOCTETS&quot;,&#xd;
            &quot;outputOctetsHeader&quot;: &quot;OUTPUTOCTETS&quot;,&#xd;
            &quot;totalOctetsHeader&quot;: &quot;TOTALOCTETS&quot;,&#xd;
            &quot;usageKeyHeader&quot;: &quot;USAGE&quot;,&#xd;
            &quot;usageTimeHeader&quot;: &quot;USAGETIME&quot;,&#xd;
            &quot;timeBoundary&quot;: 1,&#xd;
            &quot;sizeBasedRollingUnit&quot;: null,&#xd;
            &quot;timeBasedRollingUnit&quot;: null,&#xd;
            &quot;recordBasedRollingUnit&quot;: null,&#xd;
            &quot;csvDriverFieldMappingDataList&quot;: [&#xd;
                {&#xd;
                    &#xd;
                    &quot;headerField&quot;: &quot;MSISDN&quot;,&#xd;
                    &quot;pcrfKey&quot;: &quot;CS.MSISDN&quot;,&#xd;
                    &quot;orderNo&quot;: 0&#xd;
                }&#xd;
            ],&#xd;
            &quot;csvDriverStripMappingDataList&quot;: [],&#xd;
            &quot;postOperation&quot;: &quot;DELETE&quot;&#xd;
        },&#xd;
        &quot;dbCdrDriverData&quot;: null,&#xd;
        &quot;groupNames&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
          <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${csv_cdr_url}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-413617161">&quot;id&quot;:&quot;RTC_12_CSV_Driver_11111111&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Field Mapping in Session Configuration" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;id&quot;:&quot;SESSION_CONFIG_1&quot;,&#xd;
	&quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
	&quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
	&quot;batchMode&quot;:1,&#xd;
	&quot;batchSize&quot;:null,&#xd;
	&quot;batchUpdateInterval&quot;:null,&#xd;
	&quot;queryTimeout&quot;:null,&#xd;
	&quot;sessionConfigurationFieldMappingDatas&quot;:[&#xd;
	{&#xd;
	&quot;id&quot;:&quot;Location.Area_11111111&quot;,&#xd;
	&quot;referringAttribute&quot;:&quot;Location.Area&quot;,&#xd;
	&quot;fieldName&quot;:&quot;PARAM1&quot;,&#xd;
	&quot;dataType&quot;:0&#xd;
	},&#xd;
	&#xd;
	{&#xd;
	&quot;id&quot;:&quot;Sub.Email_11111111&quot;,&#xd;
	 &quot;referringAttribute&quot;:&quot;Sub.Email&quot;,&#xd;
	&quot;fieldName&quot;:&quot;PARAM2&quot;,&#xd;
	 &quot;dataType&quot;:0&#xd;
	 },&#xd;
&#xd;
	 {&#xd;
	&quot;id&quot;:&quot;Sub.Phone_11111111&quot;,&#xd;
	&quot;referringAttribute&quot;:&quot;Sub.Phone&quot;,&#xd;
	&quot;fieldName&quot;:&quot;PARAM3&quot;,&#xd;
	&quot;dataType&quot;:0&#xd;
	},&#xd;
	&#xd;
	{&#xd;
	&quot;id&quot;:&quot;GatewayType_11111111&quot;,&#xd;
	 &quot;referringAttribute&quot;:&quot;GatewayType&quot;,&#xd;
	&quot;fieldName&quot;:&quot;PARAM4&quot;,&#xd;
	 &quot;dataType&quot;:0&#xd;
	 },&#xd;
&#xd;
	{&#xd;
	&quot;id&quot;:&quot;UserName_11111111&quot;,&#xd;
	 &quot;referringAttribute&quot;:&quot;CS.UserName&quot;,&#xd;
	&quot;fieldName&quot;:&quot;PARAM5&quot;,&#xd;
	 &quot;dataType&quot;:0&#xd;
	 }&#xd;
 ],&#xd;
&quot;databaseId&quot;:&quot;DATABASE_DS_2&quot;,&#xd;
&quot;groupNames&quot;:null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
          <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${session_url}</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1722026920">&quot;id&quot;:&quot;SESSION_CONFIG_1&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create PCC Service Policy" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;Global_PCRF_Service_Policy_11111111&quot;,&#xd;
  &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
  &quot;name&quot;: &quot;Global_PCRF_Service_Policy&quot;,&#xd;
  &quot;description&quot;: &quot;Created by admin on 12/18/2017 13:17:28&quot;,&#xd;
  &quot;ruleset&quot;: &quot;GatewayType=\&quot;Diameter\&quot; AND NOT (CS.MSISDN IN (\&quot;1111111111\&quot; , \&quot;1111111112\&quot; , \&quot;1111111135\&quot; , \&quot;1111111136\&quot; , \&quot;1111111172\&quot; , \&quot;1111111173\&quot; , \&quot;1111111174\&quot; , \&quot;1111111183\&quot; , \&quot;1111111184\&quot; , \&quot;1111111185\&quot; , \&quot;1111111011\&quot; , \&quot;1111111012\&quot;))&quot;,&#xd;
  &quot;action&quot;: &quot;PROCESS_REQUEST&quot;,&#xd;
  &quot;subscriberLookupOn&quot;: &quot;SUBSCRIBER_IDENTITY&quot;,&#xd;
  &quot;identityAttribute&quot;: &quot;CS.MSISDN&quot;,&#xd;
  &quot;unknownUserAction&quot;: &quot;REJECT_UNKNOWN_USER&quot;,&#xd;
  &quot;unknownUserPkgId&quot;: null,&#xd;
  &quot;syGatewayId&quot;: null,&#xd;
  &quot;syMode&quot;: &quot;PULL&quot;,&#xd;
  &quot;policyCdrDriverId&quot;: null,&#xd;
  &quot;chargingCdrDriverId&quot;: &quot;RTC_12_CSV_Driver_11111111&quot;&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
          <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${pcc_service_policy}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-459918808">&quot;id&quot;:&quot;Global_PCRF_Service_Policy_11111111&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create PCC Service Policy-Sy-PULL" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
        &quot;id&quot;: &quot;OCS_PCC_Service_Policy_PULL_11111111&quot;,&#xd;
        &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
        &quot;name&quot;: &quot;OCS_PCC_Service_Policy_PULL&quot;,&#xd;
        &quot;description&quot;: &quot;Created by admin on 12/27/2017 16:39:42&quot;,&#xd;
        &quot;ruleset&quot;: &quot;GatewayType=\&quot;Diameter\&quot; AND CS.MSISDN IN ( \&quot;1111111135\&quot; , \&quot;1111111172\&quot; , \&quot;1111111173\&quot; , \&quot;1111111184\&quot;)&quot;,&#xd;
        &quot;action&quot;: &quot;PROCESS_REQUEST&quot;,&#xd;
        &quot;subscriberLookupOn&quot;: &quot;SUBSCRIBER_IDENTITY&quot;,&#xd;
        &quot;identityAttribute&quot;: &quot;CS.MSISDN&quot;,&#xd;
        &quot;unknownUserAction&quot;: &quot;REJECT_UNKNOWN_USER&quot;,&#xd;
        &quot;unknownUserPkgId&quot;: null,&#xd;
        &quot;syGatewayId&quot;: &quot;OCS_Gateway_11111111&quot;,&#xd;
        &quot;syMode&quot;: &quot;PULL&quot;,&#xd;
        &quot;policyCdrDriverId&quot;: null,&#xd;
        &quot;chargingCdrDriverId&quot;: &quot;RTC_12_CSV_Driver_11111111&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
          <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${pcc_service_policy}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-591512785">&quot;id&quot;:&quot;OCS_PCC_Service_Policy_PULL_11111111&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create PCC Service Policy-Sy-PUSH" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
        &quot;id&quot;: &quot;OCS_PCC_Service_Policy_PUSH_11111111&quot;,&#xd;
        &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
        &quot;name&quot;: &quot;OCS_PCC_Service_Policy_PUSH&quot;,&#xd;
        &quot;description&quot;: &quot;Created by admin on 12/27/2017 16:45:24&quot;,&#xd;
        &quot;ruleset&quot;: &quot;GatewayType=\&quot;Diameter\&quot; AND CS.MSISDN IN ( \&quot;1111111136\&quot;, \&quot;1111111174\&quot; , \&quot;1111111183\&quot; , \&quot;1111111185\&quot;)&quot;,&#xd;
        &quot;action&quot;: &quot;PROCESS_REQUEST&quot;,&#xd;
        &quot;subscriberLookupOn&quot;: &quot;SUBSCRIBER_IDENTITY&quot;,&#xd;
        &quot;identityAttribute&quot;: &quot;CS.MSISDN&quot;,&#xd;
        &quot;unknownUserAction&quot;: &quot;REJECT_UNKNOWN_USER&quot;,&#xd;
        &quot;unknownUserPkgId&quot;: null,&#xd;
        &quot;syGatewayId&quot;: &quot;OCS_Gateway_11111111&quot;,&#xd;
        &quot;syMode&quot;: &quot;PUSH&quot;,&#xd;
        &quot;policyCdrDriverId&quot;: null,&#xd;
        &quot;chargingCdrDriverId&quot;: &quot;RTC_12_CSV_Driver_11111111&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
          <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/${pcc_service_policy}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1090062908">&quot;id&quot;:&quot;OCS_PCC_Service_Policy_PUSH_11111111&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Restart NetVertex Server" enabled="true"/>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="NV Restart " enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="-1227702913">WorkBench</stringProp>
              <stringProp name="-1829425330">Automation_plan_6622</stringProp>
              <stringProp name="18059174">Common Functions</stringProp>
              <stringProp name="-424943767">NV Restart </stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Restart Tomcat Server" enabled="true"/>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Tomcat Restart " enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="-1227702913">WorkBench</stringProp>
              <stringProp name="-1829425330">Automation_plan_6622</stringProp>
              <stringProp name="18059174">Common Functions</stringProp>
              <stringProp name="-2031720627">Tomcat Restart </stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time to Start Tomcat" enabled="true">
          <stringProp name="TestPlan.comments">Tool will wait for 90 Seconds</stringProp>
          <stringProp name="SimpleTimer.TIMEOUT">90000</stringProp>
        </com.computaris.jmeter.ext.timer.SimpleTimer>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">300</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="Setup Thread (Truncate Tables)" enabled="false">
        <stringProp name="TestPlan.comments">To Truncate Subscriber, Subscription &amp; Usage tables</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1476949438000</longProp>
        <longProp name="ThreadGroup.end_time">1476949438000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </SetupThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Truncate TBLM_SUBSCRIBER" enabled="true">
          <stringProp name="dataSource">DB</stringProp>
          <stringProp name="query">TRUNCATE TABLE TBLM_SUBSCRIBER</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Callable Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Truncate TBLT_SUB_SESSION" enabled="true">
          <stringProp name="dataSource">DB</stringProp>
          <stringProp name="query">TRUNCATE TABLE TBLT_SUB_SESSION</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Callable Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Truncate TBLM_ALTERNATE_IDENTITY" enabled="true">
          <stringProp name="dataSource">DB</stringProp>
          <stringProp name="query">TRUNCATE TABLE TBLM_ALTERNATE_IDENTITY</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Callable Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Truncate TBLM_SUBSCRIPTION" enabled="true">
          <stringProp name="dataSource">DB</stringProp>
          <stringProp name="query">TRUNCATE TABLE TBLT_SUBSCRIPTION</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Callable Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Truncate TBLT_USAGE" enabled="true">
          <stringProp name="dataSource">DB</stringProp>
          <stringProp name="query">TRUNCATE TABLE TBLT_USAGE</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Callable Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Truncate TBLT_SESSION" enabled="true">
          <stringProp name="dataSource">DB</stringProp>
          <stringProp name="query">TRUNCATE TABLE TBLT_SESSION</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Callable Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Truncate TBLM_DEVICE_PROFILE" enabled="true">
          <stringProp name="dataSource">DB</stringProp>
          <stringProp name="query">TRUNCATE TABLE TBLM_DEVICE_PROFILE</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Callable Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete All Packages" enabled="true">
          <stringProp name="dataSource">DB</stringProp>
          <stringProp name="query">update tblm_package set status=&apos;DELETED&apos;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="TestPlan.comments">Data, Addon, Topup, Emergency, Promotional</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete IMS Packages" enabled="true">
          <stringProp name="dataSource">DB</stringProp>
          <stringProp name="query">update TBLM_IMS_PACKAGE set status=&apos;DELETED&apos;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Update Deployment Mode to PCRF" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1528899449000</longProp>
        <longProp name="ThreadGroup.end_time">1528899449000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="TTS Parameterized Controller" enabled="true">
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">Update_System_Parameter</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Start Log" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="-1227702913">WorkBench</stringProp>
              <stringProp name="-1829425330">Automation_plan_6622</stringProp>
              <stringProp name="18059174">Common Functions</stringProp>
              <stringProp name="1033451790">Capture PD log </stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Deployment Mode to PCC" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;groups&quot;: &quot;GROUP_1&quot;,&#xd;
  &quot;systemParameters&quot;: [&#xd;
    {&#xd;
      &quot;name&quot;: &quot;Date Format&quot;,&#xd;
      &quot;description&quot;: &quot;dd : Day, MM : Month, yy : Year, hh : Hour, mm : Minutes, ss : Seconds&quot;,&#xd;
      &quot;alias&quot;: &quot;DATE_FORMAT&quot;,&#xd;
      &quot;value&quot;: &quot;MM/dd/yyyy HH:mm:ss&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;Short Date Format&quot;,&#xd;
      &quot;description&quot;: &quot;dd : Day, MM : Month, yy : Year&quot;,&#xd;
      &quot;alias&quot;: &quot;SHORT_DATE_FORMAT&quot;,&#xd;
      &quot;value&quot;: &quot;MM/dd/yyyy&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;Datasource Max Row&quot;,&#xd;
      &quot;description&quot;: &quot;Total Number of Row Display in Search&quot;,&#xd;
      &quot;alias&quot;: &quot;TOTAL_ROW&quot;,&#xd;
      &quot;value&quot;: &quot;50&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;Update Action For WS&quot;,&#xd;
      &quot;description&quot;: &quot;Update Action on Subscription or Subscriber policy change. Possible options: 0(No_Action), 1(ReAuth_Session), 2(Disconnect Session)&quot;,&#xd;
      &quot;alias&quot;: &quot;UPDATE_ACTION&quot;,&#xd;
      &quot;value&quot;: &quot;0&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;Country&quot;,&#xd;
      &quot;description&quot;: &quot;This parameter defines Country.&quot;,&#xd;
      &quot;alias&quot;: &quot;COUNTRY&quot;,&#xd;
      &quot;value&quot;: &quot;103&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;Currency&quot;,&#xd;
      &quot;description&quot;: &quot;This parameter defines the Currency.&quot;,&#xd;
      &quot;alias&quot;: &quot;CURRENCY&quot;,&#xd;
      &quot;value&quot;: &quot;INR&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;Operator&quot;,&#xd;
      &quot;description&quot;: &quot;This parameter defines Operator.&quot;,&#xd;
      &quot;alias&quot;: &quot;OPERATOR&quot;,&#xd;
      &quot;value&quot;: &quot;101&quot;&#xd;
    },&#xd;
    {&#xd;
    	&quot;name&quot;:&quot;Deployment Mode&quot;,&#xd;
    	&quot;description&quot;:&quot;Deployment mode is used to manage policy where PCC is used for Quota metering and QoS metering, PCRF is used for Quota metering and OCS is used for QoS metering. Note: System restart in required to apply this configuration&quot;,&#xd;
    	&quot;alias&quot;:&quot;DEPLOYMENT_MODE&quot;,&#xd;
    	&quot;value&quot;:&quot;PCRF&quot;&#xd;
    },&#xd;
    {&#xd;
            &quot;name&quot;: &quot;Tax(%)&quot;,&#xd;
            &quot;description&quot;: &quot;This parameter defines the value of the tax that should be applied on monetary recharge price. &quot;,&#xd;
            &quot;alias&quot;: &quot;TAX&quot;,&#xd;
            &quot;value&quot;: &quot;10&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;packageParameters&quot;: [&#xd;
    {&#xd;
      &quot;name&quot;: &quot;Param 1 Field Label&quot;,&#xd;
      &quot;description&quot;: &quot;Label of package param1 attribute. Default Param 1 if no label is configured.&quot;,&#xd;
      &quot;alias&quot;: &quot;PARAM_1&quot;,&#xd;
      &quot;value&quot;: &quot;&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;Param 2 Field Label&quot;,&#xd;
      &quot;description&quot;: &quot;Label of package param2 attribute. Default Param 2 if no label is configured.&quot;,&#xd;
      &quot;alias&quot;: &quot;PARAM_2&quot;,&#xd;
      &quot;value&quot;: &quot;&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/systemparameter/system-parameter/edit.json</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2450279">PCRF</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop PD Log" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="-1227702913">WorkBench</stringProp>
              <stringProp name="-1829425330">Automation_plan_6622</stringProp>
              <stringProp name="18059174">Common Functions</stringProp>
              <stringProp name="-592019242">Stop PD log</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Restart NetVertex Server And Tomcat" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Global Entiry Configuration</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="TTS Parameterized Controller" enabled="true">
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">Restart_NetVertex_Server_And _Tomcat</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Start Log" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="-1227702913">WorkBench</stringProp>
              <stringProp name="-1829425330">Automation_plan_6622</stringProp>
              <stringProp name="18059174">Common Functions</stringProp>
              <stringProp name="1033451790">Capture PD log </stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Restart NetVertex Server" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="NV Restart " enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-424943767">NV Restart </stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Restart Tomcat Server" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Tomcat Restart " enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2031720627">Tomcat Restart </stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time to Start Tomcat" enabled="true">
            <stringProp name="TestPlan.comments">Tool will wait for 6 MInutes</stringProp>
            <stringProp name="SimpleTimer.TIMEOUT">360000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">200</stringProp>
          </ConstantTimer>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop PD Log" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="-1227702913">WorkBench</stringProp>
              <stringProp name="-1829425330">Automation_plan_6622</stringProp>
              <stringProp name="18059174">Common Functions</stringProp>
              <stringProp name="-592019242">Stop PD log</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Verify Services in CLI" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">check and verify services and Global listerer before executing TCs</stringProp>
      </ThreadGroup>
      <hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">300</stringProp>
        </ConstantTimer>
        <hashTree/>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Verify that PCRF is Running in CLI" enabled="true"/>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Verify PCRF is Running" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="-1227702913">WorkBench</stringProp>
              <stringProp name="-1829425330">Automation_plan_6622</stringProp>
              <stringProp name="18059174">Common Functions</stringProp>
              <stringProp name="1515041293">Verify PCRF Running</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Verify that Diameter Stack is Running in CLI" enabled="true"/>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Verify Diameter Stack is Running" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="-1227702913">WorkBench</stringProp>
              <stringProp name="-1829425330">Automation_plan_6622</stringProp>
              <stringProp name="18059174">Common Functions</stringProp>
              <stringProp name="428160467">Verify Diameter Running</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Verify that RADIUS Listener is Running in CLI" enabled="true"/>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Verify Radius Listener is Running" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="-1227702913">WorkBench</stringProp>
              <stringProp name="-1829425330">Automation_plan_6622</stringProp>
              <stringProp name="18059174">Common Functions</stringProp>
              <stringProp name="-1728266600">Verify Radius Running</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sy-RTC_35" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Sy Pull Client Scenario : RTC-35-Sy-Pull-Client</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="RTC_35" enabled="true">
          <stringProp name="TestPlan.comments">Verify Sy Counter Based Plan HSQ + 2 Level FUP with PULL Mode</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriber_identity" elementType="Argument">
                <stringProp name="Argument.name">subscriber_identity</stringProp>
                <stringProp name="Argument.value">1111111135</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">1111111135</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">1111111135</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">1111111135</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subscriber_package" elementType="Argument">
                <stringProp name="Argument.name">subscriber_package</stringProp>
                <stringProp name="Argument.value">RTC_35_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">1111111135</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="session_id" elementType="Argument">
                <stringProp name="Argument.name">session_id</stringProp>
                <stringProp name="Argument.value">1111111135_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RTC_35_HSQ_PCC" elementType="Argument">
                <stringProp name="Argument.name">RTC_35_HSQ_PCC</stringProp>
                <stringProp name="Argument.value">5254435f33355f4853515f504343</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RTC_35_FUP1_PCC" elementType="Argument">
                <stringProp name="Argument.name">RTC_35_FUP1_PCC</stringProp>
                <stringProp name="Argument.value">5254435f33355f465550315f504343</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RTC_35_FUP2_PCC" elementType="Argument">
                <stringProp name="Argument.name">RTC_35_FUP2_PCC</stringProp>
                <stringProp name="Argument.value">5254435f33355f465550325f504343</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapfilename" elementType="Argument">
                <stringProp name="Argument.name">pcapfilename</stringProp>
                <stringProp name="Argument.value">Sy-RTC_35</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">Sy-RTC_35</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="logfilename" elementType="Argument">
                <stringProp name="Argument.name">logfilename</stringProp>
                <stringProp name="Argument.value">Sy-RTC_35</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">25172</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer" elementType="Argument">
                <stringProp name="Argument.name">productoffer</stringProp>
                <stringProp name="Argument.value">RTC_35_PRODUCT_OFFER</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage_id" elementType="Argument">
                <stringProp name="Argument.name">datapackage_id</stringProp>
                <stringProp name="Argument.value">RTC_35_BASE_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer_id" elementType="Argument">
                <stringProp name="Argument.name">productoffer_id</stringProp>
                <stringProp name="Argument.value">RTC_35_PRODUCT_OFFER_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start of Sy_Client" enabled="true"/>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true); 
f = new FileOutputStream(mapping_file_name, true); 
p = new PrintStream(f); 

// Write data to file 

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="RTC_35 Pre_Processing" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </com.computaris.jmeter.ext.controls.ParameterizedController>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Pcap and Logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872118812">Capture PCAP</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872996374">Capture log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture PD Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="1033451790">Capture PD log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create DataPackage" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;RTC_35_BASE_111111111&lt;/id&gt;&#xd;
            &lt;name&gt;RTC_35_BASE&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 12/27/2017 17:28:51&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriod&gt;30&lt;/validityPeriod&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;SY_COUNTER_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin on 12/27/2017 17:30:22&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_35_QOS&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;3&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;3&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;RTC_35_HSQ_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;RTC_35_HSQ_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;gbrdlUnit&gt;Kbps&lt;/gbrdlUnit&gt;&#xd;
                                    &lt;mbrdl&gt;3&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;3&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;50&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;2&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;2&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;1&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;RTC_35_FUP1_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;RTC_35_FUP1_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;gbrdlUnit&gt;Kbps&lt;/gbrdlUnit&gt;&#xd;
                                    &lt;mbrdl&gt;2&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;2&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;1&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;1&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;2&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;RTC_35_FUP2_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;RTC_35_FUP2_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;gbrdlUnit&gt;Kbps&lt;/gbrdlUnit&gt;&#xd;
                                    &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;15&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;RTC_35_QUOTA&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles&gt;&#xd;
                &lt;sy-quota-Profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin on 12/27/2017 17:29:06&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_35_QUOTA&lt;/name&gt;&#xd;
                    &lt;syQuotaProfileDetailDatas&gt;&#xd;
                        &lt;counterName&gt;gold_qos&lt;/counterName&gt;&#xd;
                        &lt;counterPresent&gt;1&lt;/counterPresent&gt;&#xd;
                        &lt;dataServiceType&gt;&#xd;
                            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                            &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                            &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                        &lt;/dataServiceType&gt;&#xd;
                        &lt;fup1Value&gt;2&lt;/fup1Value&gt;&#xd;
                        &lt;fup2Value&gt;1&lt;/fup2Value&gt;&#xd;
                        &lt;hsqValue&gt;3&lt;/hsqValue&gt;&#xd;
                        &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;/syQuotaProfileDetailDatas&gt;&#xd;
                &lt;/sy-quota-Profile&gt;&#xd;
            &lt;/sy-quota-profiles&gt;&#xd;
            &lt;topUp-qos-multipliers/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/xml</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Offer" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${productoffer_id}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${productoffer}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin on 05/23/2018 10:12:03&quot;,&#xd;
   &quot;type&quot;:&quot;BASE&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${datapackage_id}&quot;,&#xd;
   &quot;validityPeriod&quot;:null,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null,&#xd;
   &quot;currency&quot;:&quot;${currency}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1909856551">${productoffer_id}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Offer" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}.json</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1909856551">${productoffer_id}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To TEST Mode" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=TEST</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To LIVE Mode" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=LIVE</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Subscriber Provisioning Request" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsAddSubscriberProfile&gt;
         &lt;!--Optional:--&gt;
        &lt;subscriberProfile&gt;
               &lt;entry&gt;
                  &lt;key&gt;SUBSCRIBER_IDENTITY&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;USERNAME&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD_CHECK&lt;/key&gt;
                  &lt;value&gt;TRUE&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUSTOMER_TYPE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;STATUS&lt;/key&gt;
                  &lt;value&gt;Active&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PRODUCT_OFFER&lt;/key&gt;
                   &lt;value&gt;${productoffer}&lt;/value&gt;
                &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMS_PACKAGE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EXPIRY_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;AREA&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CITY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM1&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM2&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM3&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM4&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM5&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ZONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COUNTRY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;BIRTH_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ROLE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COMPANY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;DEPARTMENT&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ARPU&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CADRE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EMAIL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PHONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;SIP_URL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUI&lt;/key&gt;
                  &lt;value&gt;${cui}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMSI&lt;/key&gt;
                  &lt;value&gt;${imsi}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;MSISDN&lt;/key&gt;
                  &lt;value&gt;${msisdn}&lt;/value&gt;
               &lt;/entry&gt;
             &lt;/subscriberProfile&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsAddSubscriberProfile&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_35_CCR-I" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">2</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.1">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">0</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.8">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.8">1</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.9">0</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destination_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.12">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.13">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.13">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">14</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">2</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Charging-Rule-Definition:Charging-Rule-Name:${RTC_35_HSQ_PCC}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Granted-Service-Unit:CC-Total-Octets:26214400</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_35_CCR-U-1" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">1</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Event-Trigger</stringProp>
            <stringProp name="DiameterSampler.avpData.7">33</stringProp>
            <stringProp name="DiameterSampler.avpCounter">8</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">2</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">true</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Monitoring-Key:${RTC_35_HSQ_PCC}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Granted-Service-Unit:CC-Total-Octets:26214400</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_35_CCR-U-2" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">2</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Event-Trigger</stringProp>
            <stringProp name="DiameterSampler.avpData.7">33</stringProp>
            <stringProp name="DiameterSampler.avpCounter">8</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">2</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Charging-Rule-Definition:Charging-Rule-Name:${RTC_35_FUP1_PCC}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Charging-Rule-Remove</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Charging-Rule-Name:${RTC_35_HSQ_PCC}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">200[12]</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_35_CCR-U-3" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">3</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Event-Trigger</stringProp>
            <stringProp name="DiameterSampler.avpData.7">33</stringProp>
            <stringProp name="DiameterSampler.avpCounter">8</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">2</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Monitoring-Key:${RTC_35_FUP1_PCC}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Granted-Service-Unit:CC-Total-Octets:26214400</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_35_CCR-U-4" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">4</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Event-Trigger</stringProp>
            <stringProp name="DiameterSampler.avpData.7">33</stringProp>
            <stringProp name="DiameterSampler.avpCounter">8</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">2</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Charging-Rule-Definition:Charging-Rule-Name:${RTC_35_FUP2_PCC}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Charging-Rule-Remove</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Charging-Rule-Name:${RTC_35_FUP1_PCC}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">200[12]</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_35_CCR-U-5" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">5</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Event-Trigger</stringProp>
            <stringProp name="DiameterSampler.avpData.7">33</stringProp>
            <stringProp name="DiameterSampler.avpCounter">8</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">2</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Monitoring-Key:${RTC_35_FUP2_PCC}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Granted-Service-Unit:CC-Total-Octets:26214400</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_35_CCR-U-5" enabled="false">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">5</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Event-Trigger</stringProp>
            <stringProp name="DiameterSampler.avpData.7">33</stringProp>
            <stringProp name="DiameterSampler.avpCounter">8</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">2</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Monitoring-Key:${RTC_35_FUP2_PCC}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Granted-Service-Unit:CC-Total-Octets:26214400</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_35_CCR-T" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">3</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">3</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Termination-Cause</stringProp>
            <stringProp name="DiameterSampler.avpData.7">1</stringProp>
            <stringProp name="DiameterSampler.avpName.8">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.8">2</stringProp>
            <stringProp name="DiameterSampler.avpName.9">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">0</stringProp>
            <stringProp name="DiameterSampler.avpName.10">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.10">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Called-Station-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">internet</stringProp>
            <stringProp name="DiameterSampler.avpCounter">12</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-T Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Post Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop pcap and logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="stop Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-720136512">Stop Pcap</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop NV log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-632654166">Stop NV log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop PD log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-592019242">Stop PD log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="End of RTC_35" enabled="true"/>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Simple Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sy-RTC_35" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Sy Pull Server Scenario : RTC-35-Sy-Pull-Server</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="RTC_35" enabled="true">
          <stringProp name="TestPlan.comments">Verify Sy Counter Based Plan HSQ + 2 Level FUP with PULL Mode</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriber_identity" elementType="Argument">
                <stringProp name="Argument.name">subscriber_identity</stringProp>
                <stringProp name="Argument.value">1111111135</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">1111111135</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">1111111135</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">1111111135</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subscriber_package" elementType="Argument">
                <stringProp name="Argument.name">subscriber_package</stringProp>
                <stringProp name="Argument.value">RTC_35_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">1111111135</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="session_id" elementType="Argument">
                <stringProp name="Argument.name">session_id</stringProp>
                <stringProp name="Argument.value">1111111135_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RTC_35_HSQ_PCC" elementType="Argument">
                <stringProp name="Argument.name">RTC_35_HSQ_PCC</stringProp>
                <stringProp name="Argument.value">5254435f33355f4853515f504343</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RTC_35_FUP1_PCC" elementType="Argument">
                <stringProp name="Argument.name">RTC_35_FUP1_PCC</stringProp>
                <stringProp name="Argument.value">5254435f33355f465550315f504343</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RTC_35_FUP2_PCC" elementType="Argument">
                <stringProp name="Argument.name">RTC_35_FUP2_PCC</stringProp>
                <stringProp name="Argument.value">5254435f33355f465550325f504343</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="counter_name" elementType="Argument">
                <stringProp name="Argument.name">counter_name</stringProp>
                <stringProp name="Argument.value">gold_qos</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="hsq_counter_value" elementType="Argument">
                <stringProp name="Argument.name">hsq_counter_value</stringProp>
                <stringProp name="Argument.value">3</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="fup1_counter_value" elementType="Argument">
                <stringProp name="Argument.name">fup1_counter_value</stringProp>
                <stringProp name="Argument.value">2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="fup2_counter_value" elementType="Argument">
                <stringProp name="Argument.name">fup2_counter_value</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start of Sy_Server" enabled="true"/>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="CER-OCS" enabled="true">
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Capabilities-Exchange-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">false</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Supported-Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Vendor-Specific-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">3</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Acct-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.6">16777302</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Product-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.8">Jmeter</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">1094807040</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.10">16777302</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Acct-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">0</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Firmware-Revision</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">13</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree/>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="Send Counter 3 for HSQ" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Spending-Limit-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">SL-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.7">2</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${counter_name}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${hsq_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">10</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="No Counter Change" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Spending-Limit-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">SL-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.7">2</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${counter_name}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${hsq_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">10</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="Send Counter 2 for FUP1" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Spending-Limit-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">SL-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.7">2</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${counter_name}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${fup1_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">10</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="No Counter Change" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Spending-Limit-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">SL-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.7">2</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${counter_name}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${fup1_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">10</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="Send Counter 1 for FUP2" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Spending-Limit-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">SL-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.7">2</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${counter_name}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${fup2_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">10</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="No Counter Change" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Spending-Limit-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">SL-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.7">2</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${counter_name}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${fup2_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">10</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="Send STA" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Session-Termination-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777302</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">4</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="End of RTC_35" enabled="true"/>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Simple Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sy-RTC_36" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Sy Push Client Scenario :  RTC-36-Sy-Push-Client</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
          <stringProp name="SimpleTimer.TIMEOUT">40000</stringProp>
        </com.computaris.jmeter.ext.timer.SimpleTimer>
        <hashTree/>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="RTC_36" enabled="true">
          <stringProp name="TestPlan.comments">Verify Sy Counter Based Plan with PUSH Mode</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriber_identity" elementType="Argument">
                <stringProp name="Argument.name">subscriber_identity</stringProp>
                <stringProp name="Argument.value">1111111136</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">1111111136</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">1111111136</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">1111111136</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subscriber_package" elementType="Argument">
                <stringProp name="Argument.name">subscriber_package</stringProp>
                <stringProp name="Argument.value">RTC_36_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">1111111136</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="session_id" elementType="Argument">
                <stringProp name="Argument.name">session_id</stringProp>
                <stringProp name="Argument.value">1111111136_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RTC_36_HSQ_PCC" elementType="Argument">
                <stringProp name="Argument.name">RTC_36_HSQ_PCC</stringProp>
                <stringProp name="Argument.value">5254435f33365f4853515f504343</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RTC_36_FUP1_PCC" elementType="Argument">
                <stringProp name="Argument.name">RTC_36_FUP1_PCC</stringProp>
                <stringProp name="Argument.value">5254435f33365f465550315f504343</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RTC_36_FUP2_PCC" elementType="Argument">
                <stringProp name="Argument.name">RTC_36_FUP2_PCC</stringProp>
                <stringProp name="Argument.value">5254435f33365f465550325f504343</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapfilename" elementType="Argument">
                <stringProp name="Argument.name">pcapfilename</stringProp>
                <stringProp name="Argument.value">Sy-RTC_36</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">Sy-RTC_36</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="logfilename" elementType="Argument">
                <stringProp name="Argument.name">logfilename</stringProp>
                <stringProp name="Argument.value">Sy-RTC_36</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">25173</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer" elementType="Argument">
                <stringProp name="Argument.name">productoffer</stringProp>
                <stringProp name="Argument.value">RTC_36_PRODUCT_OFFER</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage_id" elementType="Argument">
                <stringProp name="Argument.name">datapackage_id</stringProp>
                <stringProp name="Argument.value">RTC_36_BASE_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer_id" elementType="Argument">
                <stringProp name="Argument.name">productoffer_id</stringProp>
                <stringProp name="Argument.value">RTC_36_PRODUCT_OFFER_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start Sy Push Client" enabled="true"/>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true); 
f = new FileOutputStream(mapping_file_name, true); 
p = new PrintStream(f); 

// Write data to file 

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="RTC_36 Pre_Processing" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </com.computaris.jmeter.ext.controls.ParameterizedController>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Pcap and Logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872118812">Capture PCAP</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872996374">Capture log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture PD Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="1033451790">Capture PD log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create DataPackage" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;RTC_36_BASE_111111111&lt;/id&gt;&#xd;
            &lt;name&gt;RTC_36_BASE&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 12/27/2017 17:28:51&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriod&gt;30&lt;/validityPeriod&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;SY_COUNTER_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin on 12/27/2017 17:30:22&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_36_QOS&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;3&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;3&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;RTC_36_HSQ_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;RTC_36_HSQ_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;gbrdlUnit&gt;Kbps&lt;/gbrdlUnit&gt;&#xd;
                                    &lt;mbrdl&gt;3&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;3&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;50&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;2&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;2&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;1&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;RTC_36_FUP1_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;RTC_36_FUP1_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;gbrdlUnit&gt;Kbps&lt;/gbrdlUnit&gt;&#xd;
                                    &lt;mbrdl&gt;2&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;2&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;1&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;1&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;2&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;RTC_36_FUP2_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;RTC_36_FUP2_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;gbrdlUnit&gt;Kbps&lt;/gbrdlUnit&gt;&#xd;
                                    &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;15&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;RTC_36_QUOTA&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles&gt;&#xd;
                &lt;sy-quota-Profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin on 12/27/2017 17:29:06&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_36_QUOTA&lt;/name&gt;&#xd;
                    &lt;syQuotaProfileDetailDatas&gt;&#xd;
                        &lt;counterName&gt;gold_qos&lt;/counterName&gt;&#xd;
                        &lt;counterPresent&gt;1&lt;/counterPresent&gt;&#xd;
                        &lt;dataServiceType&gt;&#xd;
                            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                            &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                            &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                        &lt;/dataServiceType&gt;&#xd;
                        &lt;fup1Value&gt;2&lt;/fup1Value&gt;&#xd;
                        &lt;fup2Value&gt;1&lt;/fup2Value&gt;&#xd;
                        &lt;hsqValue&gt;3&lt;/hsqValue&gt;&#xd;
                        &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;/syQuotaProfileDetailDatas&gt;&#xd;
                &lt;/sy-quota-Profile&gt;&#xd;
            &lt;/sy-quota-profiles&gt;&#xd;
            &lt;topUp-qos-multipliers/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/xml</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Offer" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${productoffer_id}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${productoffer}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin on 05/23/2018 10:12:03&quot;,&#xd;
   &quot;type&quot;:&quot;BASE&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${datapackage_id}&quot;,&#xd;
   &quot;validityPeriod&quot;:null,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null,&#xd;
   &quot;currency&quot;:&quot;${currency}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1909856551">${productoffer_id}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Offer" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}.json</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1909856551">${productoffer_id}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To TEST Mode" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=TEST</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To LIVE Mode" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=LIVE</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Subscriber Provisioning Request" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsAddSubscriberProfile&gt;
         &lt;!--Optional:--&gt;
        &lt;subscriberProfile&gt;
               &lt;entry&gt;
                  &lt;key&gt;SUBSCRIBER_IDENTITY&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;USERNAME&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD_CHECK&lt;/key&gt;
                  &lt;value&gt;TRUE&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUSTOMER_TYPE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;STATUS&lt;/key&gt;
                  &lt;value&gt;Active&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PRODUCT_OFFER&lt;/key&gt;
                   &lt;value&gt;${productoffer}&lt;/value&gt;
                &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMS_PACKAGE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EXPIRY_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;AREA&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CITY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM1&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM2&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM3&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM4&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM5&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ZONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COUNTRY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;BIRTH_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ROLE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COMPANY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;DEPARTMENT&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ARPU&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CADRE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EMAIL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PHONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;SIP_URL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUI&lt;/key&gt;
                  &lt;value&gt;${cui}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMSI&lt;/key&gt;
                  &lt;value&gt;${imsi}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;MSISDN&lt;/key&gt;
                  &lt;value&gt;${msisdn}&lt;/value&gt;
               &lt;/entry&gt;
             &lt;/subscriberProfile&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsAddSubscriberProfile&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="TestPlan.comments">Tool will wait for 1 Sec.</stringProp>
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_36_CCR-I" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">2</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.1">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">0</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.8">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.8">1</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.9">0</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destination_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.12">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.13">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.13">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">14</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">2</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Charging-Rule-Definition:Charging-Rule-Name:${RTC_36_HSQ_PCC}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Granted-Service-Unit:CC-Total-Octets:26214400</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_36_CCR-U-1" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">1</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Event-Trigger</stringProp>
            <stringProp name="DiameterSampler.avpData.7">33</stringProp>
            <stringProp name="DiameterSampler.avpCounter">8</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">2</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">true</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Monitoring-Key:${RTC_36_HSQ_PCC}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Granted-Service-Unit:CC-Total-Octets:26214400</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="RTC_36_Expecting_RAR For FUP1" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Re-Auth-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.1">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Host-IP-Address</stringProp>
            <stringProp name="DiameterSampler.avpData.3">10.106.1.88</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.4">2001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">5</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="RAR Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">false</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Re-Auth-Request</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">2</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Charging-Rule-Definition:Charging-Rule-Name:${RTC_36_FUP1_PCC}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Charging-Rule-Remove</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Charging-Rule-Name:${RTC_36_HSQ_PCC}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Charging-Rule-Remove</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Charging-Rule-Name:${RTC_36_PCC_HSQ}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_36_CCR-U-2" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">2</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Event-Trigger</stringProp>
            <stringProp name="DiameterSampler.avpData.7">33</stringProp>
            <stringProp name="DiameterSampler.avpCounter">8</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">2</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">true</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Monitoring-Key:${RTC_36_FUP1_PCC}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Granted-Service-Unit:CC-Total-Octets:26214400</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="RTC_36_Expecting_RAR For FUP2" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Re-Auth-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.1">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Host-IP-Address</stringProp>
            <stringProp name="DiameterSampler.avpData.3">10.106.1.88</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.4">2001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">5</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="RAR Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">false</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Re-Auth-Request</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">2</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Charging-Rule-Definition:Charging-Rule-Name:${RTC_36_FUP2_PCC}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Charging-Rule-Remove</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Charging-Rule-Name:${RTC_36_FUP1_PCC}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Charging-Rule-Remove</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Charging-Rule-Name:${RTC_36_PCC_HSQ}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_36_CCR-T" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">3</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">1</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Termination-Cause</stringProp>
            <stringProp name="DiameterSampler.avpData.7">1</stringProp>
            <stringProp name="DiameterSampler.avpName.8">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.8">2</stringProp>
            <stringProp name="DiameterSampler.avpName.9">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">0</stringProp>
            <stringProp name="DiameterSampler.avpName.10">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.10">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Called-Station-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">internet</stringProp>
            <stringProp name="DiameterSampler.avpCounter">12</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-T Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">200[12]</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">true</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="TestPlan.comments">Tool will wait for 1 Sec.</stringProp>
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Stop Sy Push Client" enabled="true"/>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Simple Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sy-RTC_36" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Sy Push Server Scenario : RTC-36-Sy-Push-Server</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
          <stringProp name="SimpleTimer.TIMEOUT">40000</stringProp>
        </com.computaris.jmeter.ext.timer.SimpleTimer>
        <hashTree/>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="RTC_36" enabled="true">
          <stringProp name="TestPlan.comments">Verify Sy Counter Based Plan HSQ + 2 Level FUP with PULL Mode</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriber_identity" elementType="Argument">
                <stringProp name="Argument.name">subscriber_identity</stringProp>
                <stringProp name="Argument.value">1111111136</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">1111111136</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">1111111136</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">1111111136</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subscriber_package" elementType="Argument">
                <stringProp name="Argument.name">subscriber_package</stringProp>
                <stringProp name="Argument.value">RTC_SY_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">1111111136</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="session_id" elementType="Argument">
                <stringProp name="Argument.name">session_id</stringProp>
                <stringProp name="Argument.value">1111111136_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RTC_PCC_HSQ" elementType="Argument">
                <stringProp name="Argument.name">RTC_PCC_HSQ</stringProp>
                <stringProp name="Argument.value">5254435f5043435f485351</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RTC_PCC_FUP1" elementType="Argument">
                <stringProp name="Argument.name">RTC_PCC_FUP1</stringProp>
                <stringProp name="Argument.value">5254435f5043435f46555031</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RTC_PCC_FUP2" elementType="Argument">
                <stringProp name="Argument.name">RTC_PCC_FUP2</stringProp>
                <stringProp name="Argument.value">5254435f5043435f46555032</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="counter_name" elementType="Argument">
                <stringProp name="Argument.name">counter_name</stringProp>
                <stringProp name="Argument.value">gold_qos</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="hsq_counter_value" elementType="Argument">
                <stringProp name="Argument.name">hsq_counter_value</stringProp>
                <stringProp name="Argument.value">3</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="fup1_counter_value" elementType="Argument">
                <stringProp name="Argument.name">fup1_counter_value</stringProp>
                <stringProp name="Argument.value">2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="fup2_counter_value" elementType="Argument">
                <stringProp name="Argument.name">fup2_counter_value</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start Sy Push Server" enabled="true"/>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="CER-OCS" enabled="true">
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Capabilities-Exchange-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">false</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Supported-Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Vendor-Specific-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">3</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Acct-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.6">16777302</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Product-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.8">Jmeter</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">1094807040</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.10">16777302</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Acct-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">0</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Firmware-Revision</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">13</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="Send Counter 3 for HSQ" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Spending-Limit-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">SL-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.7">2</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${counter_name}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${hsq_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">10</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="Send SNR for FUP1" enabled="true">
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Abort-Session-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.0">2</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.1">${counter_name}</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${fup1_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.3">2</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">0</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Vendor-Specific-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.6">2</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">16777302</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.8">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.13">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">14</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree/>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="Send SNR for FUP2" enabled="true">
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Abort-Session-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.0">2</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.1">${counter_name}</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${fup2_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.3">2</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">0</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Vendor-Specific-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.6">2</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">16777302</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.8">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.13">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">14</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree/>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="TestPlan.comments">Tool will wait for 1 Sec.</stringProp>
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="Send STA" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Session-Termination-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777302</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">4</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Stop Sy Push Server" enabled="true"/>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Post Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop pcap and logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="stop Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-720136512">Stop Pcap</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop NV log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-632654166">Stop NV log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop PD log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-592019242">Stop PD log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Simple Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sy-RTC_72" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Verify Charging Rule Base Name install &amp; remove functionality with HSQ + Two Level FUP plan in Sy Package. : RTC-72-Sy-Pull-Client</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
          <stringProp name="SimpleTimer.TIMEOUT">96000</stringProp>
        </com.computaris.jmeter.ext.timer.SimpleTimer>
        <hashTree/>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="RTC_72" enabled="true">
          <stringProp name="TestPlan.comments">Verify Sy Counter Based Plan HSQ + 2 Level FUP with PULL Mode</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriber_identity" elementType="Argument">
                <stringProp name="Argument.name">subscriber_identity</stringProp>
                <stringProp name="Argument.value">1111111172</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">1111111172</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">1111111172</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">1111111172</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subscriber_package" elementType="Argument">
                <stringProp name="Argument.name">subscriber_package</stringProp>
                <stringProp name="Argument.value">RTC_72_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">1111111172</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="session_id" elementType="Argument">
                <stringProp name="Argument.name">session_id</stringProp>
                <stringProp name="Argument.value">1111111172_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RTC_35_HSQ_PCC" elementType="Argument">
                <stringProp name="Argument.name">RTC_35_HSQ_PCC</stringProp>
                <stringProp name="Argument.value">5254435f33355f4853515f504343</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RTC_35_FUP1_PCC" elementType="Argument">
                <stringProp name="Argument.name">RTC_35_FUP1_PCC</stringProp>
                <stringProp name="Argument.value">5254435f33355f465550315f504343</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RTC_35_FUP2_PCC" elementType="Argument">
                <stringProp name="Argument.name">RTC_35_FUP2_PCC</stringProp>
                <stringProp name="Argument.value">5254435f33355f465550325f504343</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapfilename" elementType="Argument">
                <stringProp name="Argument.name">pcapfilename</stringProp>
                <stringProp name="Argument.value">Sy-RTC_72</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">Sy-RTC_72</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="logfilename" elementType="Argument">
                <stringProp name="Argument.name">logfilename</stringProp>
                <stringProp name="Argument.value">Sy-RTC_72</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_72_1_http" elementType="Argument">
                <stringProp name="Argument.name">crbn_72_1_http</stringProp>
                <stringProp name="Argument.value">6372626e5f37325f315f68747470</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_72_1_all" elementType="Argument">
                <stringProp name="Argument.name">crbn_72_1_all</stringProp>
                <stringProp name="Argument.value">6372626e5f37325f315f616c6c</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_72_2_http" elementType="Argument">
                <stringProp name="Argument.name">crbn_72_2_http</stringProp>
                <stringProp name="Argument.value">6372626e5f37325f325f68747470</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_72_2_all" elementType="Argument">
                <stringProp name="Argument.name">crbn_72_2_all</stringProp>
                <stringProp name="Argument.value">6372626e5f37325f325f616c6c</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_72_3_http" elementType="Argument">
                <stringProp name="Argument.name">crbn_72_3_http</stringProp>
                <stringProp name="Argument.value">6372626e5f37325f335f68747470</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_72_3_all" elementType="Argument">
                <stringProp name="Argument.name">crbn_72_3_all</stringProp>
                <stringProp name="Argument.value">6372626e5f37325f335f616c6c</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">25174</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer" elementType="Argument">
                <stringProp name="Argument.name">productoffer</stringProp>
                <stringProp name="Argument.value">RTC_72_PRODUCT_OFFER</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage_id" elementType="Argument">
                <stringProp name="Argument.name">datapackage_id</stringProp>
                <stringProp name="Argument.value">RTC_72_BASE_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer_id" elementType="Argument">
                <stringProp name="Argument.name">productoffer_id</stringProp>
                <stringProp name="Argument.value">RTC_72_PRODUCT_OFFER_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start of Sy_Client" enabled="true"/>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true); 
f = new FileOutputStream(mapping_file_name, true); 
p = new PrintStream(f); 

// Write data to file 

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="RTC_72 Pre_Processing" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </com.computaris.jmeter.ext.controls.ParameterizedController>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Pcap and Logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872118812">Capture PCAP</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872996374">Capture log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture PD Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="1033451790">Capture PD log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create CRBN" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;global-charging-rule-base-name-container&gt;&#xd;
    &lt;chargingRuleBaseNameDatas&gt;&#xd;
        &lt;chargingRuleBaseNameData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;2ed3ec23-8381-4af6-9454-7148d1d6cf68&lt;/id&gt;&#xd;
            &lt;name&gt;CRBN_72_1&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 01/05/2018 16:44:40&lt;/description&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                    &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;crbn_72_1_all&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;c66598c6-3a0b-4c6b-a8a5-31eebbebb6bd&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_3&lt;/id&gt;&#xd;
                    &lt;name&gt;HTTP&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;crbn_72_1_http&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;25c6bf21-b0bf-4eaa-9c52-c4e4509194a3&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
        &lt;/chargingRuleBaseNameData&gt;&#xd;
        &lt;chargingRuleBaseNameData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;0b305c14-9f89-4a3e-b220-5484debf654b&lt;/id&gt;&#xd;
            &lt;name&gt;CRBN_72_2&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 01/05/2018 16:47:01&lt;/description&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                    &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;crbn_72_2_all&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;d2fcd606-3ce7-4934-8e4c-02ba37c2fb7b&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_3&lt;/id&gt;&#xd;
                    &lt;name&gt;HTTP&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;crbn_72_2_http&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;9f1e1f98-c55a-4229-872e-d0fa179f403a&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
        &lt;/chargingRuleBaseNameData&gt;&#xd;
        &lt;chargingRuleBaseNameData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;ed4fc1ea-bf28-40ee-a447-de054d2ae76d&lt;/id&gt;&#xd;
            &lt;name&gt;CRBN_72_3&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 01/05/2018 16:48:02&lt;/description&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                    &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;crbn_72_3_all&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;5e6e6e37-e606-49c4-99c3-f5a347d2b912&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_3&lt;/id&gt;&#xd;
                    &lt;name&gt;HTTP&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;crbn_72_3_http&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;5bc76dab-573d-4de6-a56b-43b326d80e45&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
        &lt;/chargingRuleBaseNameData&gt;&#xd;
    &lt;/chargingRuleBaseNameDatas&gt;&#xd;
&lt;/global-charging-rule-base-name-container&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_charging_rule_base_name_url}?${replace}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/xml</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create DataPackage" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;RTC_72_BASE_111111111&lt;/id&gt;&#xd;
            &lt;name&gt;RTC_72_BASE&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 01/05/2018 18:23:15&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriod&gt;30&lt;/validityPeriod&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;SY_COUNTER_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin on 01/05/2018 18:27:45&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_72_QOS&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;1&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;1&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names&gt;&#xd;
                                &lt;charging-rule-base-name&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;name&gt;CRBN_72_1&lt;/name&gt;&#xd;
                                &lt;/charging-rule-base-name&gt;&#xd;
                            &lt;/charging-rule-base-names&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules/&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;500&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;500&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names&gt;&#xd;
                                &lt;charging-rule-base-name&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;name&gt;CRBN_72_2&lt;/name&gt;&#xd;
                                &lt;/charging-rule-base-name&gt;&#xd;
                            &lt;/charging-rule-base-names&gt;&#xd;
                            &lt;fup-level&gt;1&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules/&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;256&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;256&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names&gt;&#xd;
                                &lt;charging-rule-base-name&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;name&gt;CRBN_72_3&lt;/name&gt;&#xd;
                                &lt;/charging-rule-base-name&gt;&#xd;
                            &lt;/charging-rule-base-names&gt;&#xd;
                            &lt;fup-level&gt;2&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules/&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;RTC_72_sy_quota_CRBN&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles&gt;&#xd;
                &lt;sy-quota-Profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin on 01/05/2018 18:23:40&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_72_sy_quota_CRBN&lt;/name&gt;&#xd;
                    &lt;syQuotaProfileDetailDatas&gt;&#xd;
                        &lt;counterName&gt;gold_all&lt;/counterName&gt;&#xd;
                        &lt;counterPresent&gt;1&lt;/counterPresent&gt;&#xd;
                        &lt;dataServiceType&gt;&#xd;
                            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                            &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                            &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                        &lt;/dataServiceType&gt;&#xd;
                        &lt;fup1Value&gt;1&lt;/fup1Value&gt;&#xd;
                        &lt;fup2Value&gt;0&lt;/fup2Value&gt;&#xd;
                        &lt;hsqValue&gt;2&lt;/hsqValue&gt;&#xd;
                        &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;/syQuotaProfileDetailDatas&gt;&#xd;
                    &lt;syQuotaProfileDetailDatas&gt;&#xd;
                        &lt;counterName&gt;gold_http&lt;/counterName&gt;&#xd;
                        &lt;counterPresent&gt;1&lt;/counterPresent&gt;&#xd;
                        &lt;dataServiceType&gt;&#xd;
                            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                            &lt;id&gt;DATA_SERVICE_TYPE_3&lt;/id&gt;&#xd;
                            &lt;name&gt;HTTP&lt;/name&gt;&#xd;
                        &lt;/dataServiceType&gt;&#xd;
                        &lt;fup1Value&gt;1&lt;/fup1Value&gt;&#xd;
                        &lt;fup2Value&gt;0&lt;/fup2Value&gt;&#xd;
                        &lt;hsqValue&gt;2&lt;/hsqValue&gt;&#xd;
                        &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;/syQuotaProfileDetailDatas&gt;&#xd;
                &lt;/sy-quota-Profile&gt;&#xd;
            &lt;/sy-quota-profiles&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/xml</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Offer" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${productoffer_id}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${productoffer}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin on 05/23/2018 10:12:03&quot;,&#xd;
   &quot;type&quot;:&quot;BASE&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${datapackage_id}&quot;,&#xd;
   &quot;validityPeriod&quot;:null,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null,&#xd;
   &quot;currency&quot;:&quot;${currency}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1909856551">${productoffer_id}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Offer" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}.json</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1909856551">${productoffer_id}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To TEST Mode" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=TEST</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To LIVE Mode" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=LIVE</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Subscriber Provisioning Request" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsAddSubscriberProfile&gt;
         &lt;!--Optional:--&gt;
        &lt;subscriberProfile&gt;
               &lt;entry&gt;
                  &lt;key&gt;SUBSCRIBER_IDENTITY&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;USERNAME&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD_CHECK&lt;/key&gt;
                  &lt;value&gt;TRUE&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUSTOMER_TYPE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;STATUS&lt;/key&gt;
                  &lt;value&gt;Active&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PRODUCT_OFFER&lt;/key&gt;
                   &lt;value&gt;${productoffer}&lt;/value&gt;
                &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMS_PACKAGE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EXPIRY_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;AREA&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CITY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM1&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM2&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM3&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM4&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM5&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ZONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COUNTRY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;BIRTH_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ROLE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COMPANY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;DEPARTMENT&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ARPU&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CADRE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EMAIL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PHONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;SIP_URL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUI&lt;/key&gt;
                  &lt;value&gt;${cui}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMSI&lt;/key&gt;
                  &lt;value&gt;${imsi}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;MSISDN&lt;/key&gt;
                  &lt;value&gt;${msisdn}&lt;/value&gt;
               &lt;/entry&gt;
             &lt;/subscriberProfile&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsAddSubscriberProfile&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_72_CCR-I" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">2</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.1">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">0</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.8">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.8">1</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.9">0</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destination_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.12">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.13">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.13">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">14</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">5</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Charging-Rule-Base-Name:CRBN_72_1</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Monitoring-Key:${crbn_72_1_http}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Monitoring-Key:${crbn_72_1_all}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Granted-Service-Unit:CC-Total-Octets:524288000</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_72_CCR-U-1" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">2</stringProp>
            <stringProp name="DiameterSampler.avpName.1">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.1">0</stringProp>
            <stringProp name="DiameterSampler.avpName.2">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.2">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Usage-Monitoring-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.3">3</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Monitoring-Key</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${__diamAVPValue(Usage-Monitoring-Information:Monitoring-Key[0],var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.5">1</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${__diamAVPValue(Usage-Monitoring-Information:Granted-Service-Unit:CC-Total-Octets,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Usage-Monitoring-Level</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${__diamAVPValue(Usage-Monitoring-Information:Usage-Monitoring-Level[0],var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Usage-Monitoring-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.8">3</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Monitoring-Key</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${__diamAVPValue(Usage-Monitoring-Information:Monitoring-Key[1],var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.10">1</stringProp>
            <stringProp name="DiameterSampler.avpName.11">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${__diamAVPValue(Usage-Monitoring-Information:Granted-Service-Unit:CC-Total-Octets,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Usage-Monitoring-Level</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${__diamAVPValue(Usage-Monitoring-Information:Usage-Monitoring-Level[1],var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.16">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.17">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.18">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.18">2</stringProp>
            <stringProp name="DiameterSampler.avpName.19">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.19">1</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Event-Trigger</stringProp>
            <stringProp name="DiameterSampler.avpData.20">33</stringProp>
            <stringProp name="DiameterSampler.avpCounter">21</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">6</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Charging-Rule-Base-Name:CRBN_72_2</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Monitoring-Key:${crbn_72_2_http}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Monitoring-Key:${crbn_72_2_all}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Granted-Service-Unit:CC-Total-Octets:524288000</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
              <stringProp name="DiameterAssertion.avpName.5">Charging-Rule-Remove</stringProp>
              <stringProp name="DiameterAssertion.avpData.5">Charging-Rule-Base-Name:CRBN_72_1</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.5">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.5"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_72_CCR-U-2" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.0">2</stringProp>
            <stringProp name="DiameterSampler.avpName.1">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.1">0</stringProp>
            <stringProp name="DiameterSampler.avpName.2">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.2">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Usage-Monitoring-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.3">3</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Monitoring-Key</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${__diamAVPValue(Usage-Monitoring-Information:Monitoring-Key[0],var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.5">1</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${__diamAVPValue(Usage-Monitoring-Information:Granted-Service-Unit:CC-Total-Octets,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Usage-Monitoring-Level</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${__diamAVPValue(Usage-Monitoring-Information:Usage-Monitoring-Level[0],var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Usage-Monitoring-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.8">3</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Monitoring-Key</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${__diamAVPValue(Usage-Monitoring-Information:Monitoring-Key[1],var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.10">1</stringProp>
            <stringProp name="DiameterSampler.avpName.11">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${__diamAVPValue(Usage-Monitoring-Information:Granted-Service-Unit:CC-Total-Octets,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Usage-Monitoring-Level</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${__diamAVPValue(Usage-Monitoring-Information:Usage-Monitoring-Level[1],var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.13">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.14">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.16">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.17">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.18">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.18">2</stringProp>
            <stringProp name="DiameterSampler.avpName.19">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.19">2</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Event-Trigger</stringProp>
            <stringProp name="DiameterSampler.avpData.20">33</stringProp>
            <stringProp name="DiameterSampler.avpCounter">21</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">6</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Charging-Rule-Base-Name:CRBN_72_3</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Monitoring-Key:${crbn_72_3_http}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Monitoring-Key:${crbn_72_3_all}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Granted-Service-Unit:CC-Total-Octets:524288000</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
              <stringProp name="DiameterAssertion.avpName.5">Charging-Rule-Remove</stringProp>
              <stringProp name="DiameterAssertion.avpData.5">Charging-Rule-Base-Name:CRBN_72_2</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.5">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.5"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_72_CCR-T" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">3</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">3</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Termination-Cause</stringProp>
            <stringProp name="DiameterSampler.avpData.7">1</stringProp>
            <stringProp name="DiameterSampler.avpName.8">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.8">2</stringProp>
            <stringProp name="DiameterSampler.avpName.9">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">0</stringProp>
            <stringProp name="DiameterSampler.avpName.10">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.10">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Called-Station-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">internet</stringProp>
            <stringProp name="DiameterSampler.avpCounter">12</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-T Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="End of RTC_72" enabled="true"/>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Post Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop pcap and logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="stop Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-720136512">Stop Pcap</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop NV log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-632654166">Stop NV log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop PD log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-592019242">Stop PD log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Simple Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sy-RTC_72" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Verify Charging Rule Base Name install &amp; remove functionality with HSQ + Two Level FUP plan in Sy Package. : RTC-72-Sy-Pull-Server</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
          <stringProp name="SimpleTimer.TIMEOUT">96000</stringProp>
        </com.computaris.jmeter.ext.timer.SimpleTimer>
        <hashTree/>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="RTC_72" enabled="true">
          <stringProp name="TestPlan.comments">Verify Sy Counter Based Plan HSQ + 2 Level FUP with PULL Mode</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriber_identity" elementType="Argument">
                <stringProp name="Argument.name">subscriber_identity</stringProp>
                <stringProp name="Argument.value">1111111135</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">1111111135</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">1111111135</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">1111111135</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subscriber_package" elementType="Argument">
                <stringProp name="Argument.name">subscriber_package</stringProp>
                <stringProp name="Argument.value">RTC_35_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">1111111135</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="session_id" elementType="Argument">
                <stringProp name="Argument.name">session_id</stringProp>
                <stringProp name="Argument.value">1111111135_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RTC_35_HSQ_PCC" elementType="Argument">
                <stringProp name="Argument.name">RTC_35_HSQ_PCC</stringProp>
                <stringProp name="Argument.value">5254435f33355f4853515f504343</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RTC_35_FUP1_PCC" elementType="Argument">
                <stringProp name="Argument.name">RTC_35_FUP1_PCC</stringProp>
                <stringProp name="Argument.value">5254435f33355f465550315f504343</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RTC_35_FUP2_PCC" elementType="Argument">
                <stringProp name="Argument.name">RTC_35_FUP2_PCC</stringProp>
                <stringProp name="Argument.value">5254435f33355f465550325f504343</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="counter_name_1" elementType="Argument">
                <stringProp name="Argument.name">counter_name_1</stringProp>
                <stringProp name="Argument.value">gold_all</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="counter_name_2" elementType="Argument">
                <stringProp name="Argument.name">counter_name_2</stringProp>
                <stringProp name="Argument.value">gold_http</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="hsq_counter_value" elementType="Argument">
                <stringProp name="Argument.name">hsq_counter_value</stringProp>
                <stringProp name="Argument.value">2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="fup1_counter_value" elementType="Argument">
                <stringProp name="Argument.name">fup1_counter_value</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="fup2_counter_value" elementType="Argument">
                <stringProp name="Argument.name">fup2_counter_value</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start of Sy_Server" enabled="true"/>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="CER-OCS" enabled="true">
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Capabilities-Exchange-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">false</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Supported-Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Vendor-Specific-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">3</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Acct-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.6">16777302</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Product-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.8">Jmeter</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">1094807040</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.10">16777302</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Acct-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">0</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Firmware-Revision</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">13</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree/>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="Send Counter 2 for HSQ" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Spending-Limit-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">SL-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.7">2</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${counter_name_1}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${hsq_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${counter_name_2}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${hsq_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">13</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="Send Counter 1 for FUP1" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Spending-Limit-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">SL-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.7">2</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${counter_name_1}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${fup1_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${counter_name_2}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${fup1_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">13</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="Send Counter 0 for FUP2" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Spending-Limit-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">SL-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.7">2</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${counter_name_1}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${fup2_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${counter_name_2}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${fup2_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">13</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="Send STA" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Session-Termination-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777302</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">4</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="End of RTC_72" enabled="true"/>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Simple Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sy-RTC_73" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Verify Sy Counter Based Plan HSQ + 2 Level FUP with PULL Mode without pcc : RTC-73-Sy-Pull-Client</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
          <stringProp name="SimpleTimer.TIMEOUT">134000</stringProp>
        </com.computaris.jmeter.ext.timer.SimpleTimer>
        <hashTree/>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="RTC_73" enabled="true">
          <stringProp name="TestPlan.comments">Verify Sy Counter Based Plan HSQ + 2 Level FUP with PULL Mode without pcc</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriber_identity" elementType="Argument">
                <stringProp name="Argument.name">subscriber_identity</stringProp>
                <stringProp name="Argument.value">1111111173</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">1111111173</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">1111111173</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">1111111173</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subscriber_package" elementType="Argument">
                <stringProp name="Argument.name">subscriber_package</stringProp>
                <stringProp name="Argument.value">RTC_73_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">1111111173</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="session_id" elementType="Argument">
                <stringProp name="Argument.name">session_id</stringProp>
                <stringProp name="Argument.value">1111111173_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapfilename" elementType="Argument">
                <stringProp name="Argument.name">pcapfilename</stringProp>
                <stringProp name="Argument.value">Sy-RTC_73</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">Sy-RTC_73</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="logfilename" elementType="Argument">
                <stringProp name="Argument.name">logfilename</stringProp>
                <stringProp name="Argument.value">Sy-RTC_73</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">25175</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer" elementType="Argument">
                <stringProp name="Argument.name">productoffer</stringProp>
                <stringProp name="Argument.value">RTC_73_PRODUCT_OFFER</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage_id" elementType="Argument">
                <stringProp name="Argument.name">datapackage_id</stringProp>
                <stringProp name="Argument.value">RTC_73_BASE_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer_id" elementType="Argument">
                <stringProp name="Argument.name">productoffer_id</stringProp>
                <stringProp name="Argument.value">RTC_73_PRODUCT_OFFER_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start of Sy_Client" enabled="true"/>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true); 
f = new FileOutputStream(mapping_file_name, true); 
p = new PrintStream(f); 

// Write data to file 

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="RTC_73 Pre_Processing" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </com.computaris.jmeter.ext.controls.ParameterizedController>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Pcap and Logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872118812">Capture PCAP</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872996374">Capture log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture PD Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="1033451790">Capture PD log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create DataPackage" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;id&gt;RTC_73_BASE_111111111&lt;/id&gt;&#xd;
            &lt;name&gt;RTC_73_BASE&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 09/21/2017 17:38:54&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriod&gt;30&lt;/validityPeriod&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;SY_COUNTER_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin on 09/21/2017 17:39:54&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_73_QOS&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;3&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;3&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules/&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;2&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;2&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;1&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules/&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;1&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;1&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;2&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules/&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;RTC_73_QUOTA&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles&gt;&#xd;
                &lt;sy-quota-Profile&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin on 09/21/2017 17:39:12&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_73_QUOTA&lt;/name&gt;&#xd;
                    &lt;syQuotaProfileDetailDatas&gt;&#xd;
                        &lt;counterName&gt;gold_qos&lt;/counterName&gt;&#xd;
                        &lt;counterPresent&gt;1&lt;/counterPresent&gt;&#xd;
                        &lt;fup1Value&gt;2&lt;/fup1Value&gt;&#xd;
                        &lt;fup2Value&gt;1&lt;/fup2Value&gt;&#xd;
                        &lt;hsqValue&gt;3&lt;/hsqValue&gt;&#xd;
                        &lt;id&gt;&lt;/id&gt;&#xd;
                        &lt;dataServiceType&gt;&#xd;
                            &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                            &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                        &lt;/dataServiceType&gt;&#xd;
                    &lt;/syQuotaProfileDetailDatas&gt;&#xd;
                &lt;/sy-quota-Profile&gt;&#xd;
            &lt;/sy-quota-profiles&gt;&#xd;
            &lt;topUp-qos-multipliers/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/xml</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Offer" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${productoffer_id}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${productoffer}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin on 05/23/2018 10:12:03&quot;,&#xd;
   &quot;type&quot;:&quot;BASE&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${datapackage_id}&quot;,&#xd;
   &quot;validityPeriod&quot;:null,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null,&#xd;
   &quot;currency&quot;:&quot;${currency}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1909856551">${productoffer_id}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Offer" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}.json</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1909856551">${productoffer_id}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To TEST Mode" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=TEST</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To LIVE Mode" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=LIVE</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Subscriber Provisioning Request" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsAddSubscriberProfile&gt;
         &lt;!--Optional:--&gt;
        &lt;subscriberProfile&gt;
               &lt;entry&gt;
                  &lt;key&gt;SUBSCRIBER_IDENTITY&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;USERNAME&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD_CHECK&lt;/key&gt;
                  &lt;value&gt;TRUE&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUSTOMER_TYPE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;STATUS&lt;/key&gt;
                  &lt;value&gt;Active&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PRODUCT_OFFER&lt;/key&gt;
                   &lt;value&gt;${productoffer}&lt;/value&gt;
                &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMS_PACKAGE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EXPIRY_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;AREA&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CITY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM1&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM2&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM3&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM4&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM5&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ZONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COUNTRY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;BIRTH_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ROLE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COMPANY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;DEPARTMENT&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ARPU&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CADRE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EMAIL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PHONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;SIP_URL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUI&lt;/key&gt;
                  &lt;value&gt;${cui}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMSI&lt;/key&gt;
                  &lt;value&gt;${imsi}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;MSISDN&lt;/key&gt;
                  &lt;value&gt;${msisdn}&lt;/value&gt;
               &lt;/entry&gt;
             &lt;/subscriberProfile&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsAddSubscriberProfile&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="false">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_73_CCR-I" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">2</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.1">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">0</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.8">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.8">1</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.9">0</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destination_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.12">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.13">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.13">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">14</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">2</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">QoS-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">APN-Aggregate-Max-Bitrate-DL:3145728</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">&lt;&lt;&lt; Undefined &gt;&gt;&gt;</stringProp>
              <stringProp name="DiameterAssertion.avpData.2"></stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_73_CCR-U-1" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">1</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Event-Trigger</stringProp>
            <stringProp name="DiameterSampler.avpData.7">33</stringProp>
            <stringProp name="DiameterSampler.avpCounter">8</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">2</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">QoS-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">APN-Aggregate-Max-Bitrate-DL:3145728</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">&lt;&lt;&lt; Undefined &gt;&gt;&gt;</stringProp>
              <stringProp name="DiameterAssertion.avpData.2"></stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_73_CCR-U-2" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">2</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Event-Trigger</stringProp>
            <stringProp name="DiameterSampler.avpData.7">33</stringProp>
            <stringProp name="DiameterSampler.avpCounter">8</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">2</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">QoS-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">APN-Aggregate-Max-Bitrate-DL:2097152</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Granted-Service-Unit:CC-Total-Octets:26214400</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_73_CCR-U-3" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">3</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Event-Trigger</stringProp>
            <stringProp name="DiameterSampler.avpData.7">33</stringProp>
            <stringProp name="DiameterSampler.avpCounter">8</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">2</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">QoS-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">APN-Aggregate-Max-Bitrate-DL:2097152</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Granted-Service-Unit:CC-Total-Octets:26214400</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_73_CCR-U-4" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">4</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Event-Trigger</stringProp>
            <stringProp name="DiameterSampler.avpData.7">33</stringProp>
            <stringProp name="DiameterSampler.avpCounter">8</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">2</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">true</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">QoS-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">APN-Aggregate-Max-Bitrate-DL:1048576</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Granted-Service-Unit:CC-Total-Octets:26214400</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_73_CCR-U-5" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">5</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Event-Trigger</stringProp>
            <stringProp name="DiameterSampler.avpData.7">33</stringProp>
            <stringProp name="DiameterSampler.avpCounter">8</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">2</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">true</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">QoS-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">APN-Aggregate-Max-Bitrate-DL:1048576</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Granted-Service-Unit:CC-Total-Octets:26214400</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_73_CCR-T" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">3</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">3</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Termination-Cause</stringProp>
            <stringProp name="DiameterSampler.avpData.7">1</stringProp>
            <stringProp name="DiameterSampler.avpName.8">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.8">2</stringProp>
            <stringProp name="DiameterSampler.avpName.9">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">0</stringProp>
            <stringProp name="DiameterSampler.avpName.10">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.10">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Called-Station-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">internet</stringProp>
            <stringProp name="DiameterSampler.avpCounter">12</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-T Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="End of RTC_73" enabled="true"/>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Post Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop pcap and logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="stop Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-720136512">Stop Pcap</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop NV log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-632654166">Stop NV log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop PD log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-592019242">Stop PD log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Simple Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sy-RTC_73" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Verify Sy Counter Based Plan HSQ + 2 Level FUP with PULL Mode without pcc : RTC-73-Sy-Pull-Server</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
          <stringProp name="SimpleTimer.TIMEOUT">134000</stringProp>
        </com.computaris.jmeter.ext.timer.SimpleTimer>
        <hashTree/>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="RTC_73" enabled="true">
          <stringProp name="TestPlan.comments">Verify Sy Counter Based Plan HSQ + 2 Level FUP with PULL Mode without pcc</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriber_identity" elementType="Argument">
                <stringProp name="Argument.name">subscriber_identity</stringProp>
                <stringProp name="Argument.value">1111111173</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">1111111173</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">1111111173</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">1111111173</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subscriber_package" elementType="Argument">
                <stringProp name="Argument.name">subscriber_package</stringProp>
                <stringProp name="Argument.value">RTC_73_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">1111111173</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="session_id" elementType="Argument">
                <stringProp name="Argument.name">session_id</stringProp>
                <stringProp name="Argument.value">1111111173_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="counter_name" elementType="Argument">
                <stringProp name="Argument.name">counter_name</stringProp>
                <stringProp name="Argument.value">gold_qos</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="hsq_counter_value" elementType="Argument">
                <stringProp name="Argument.name">hsq_counter_value</stringProp>
                <stringProp name="Argument.value">3</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="fup1_counter_value" elementType="Argument">
                <stringProp name="Argument.name">fup1_counter_value</stringProp>
                <stringProp name="Argument.value">2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="fup2_counter_value" elementType="Argument">
                <stringProp name="Argument.name">fup2_counter_value</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start of Sy_Server" enabled="true"/>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="CER-OCS" enabled="true">
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Capabilities-Exchange-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">false</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Supported-Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Vendor-Specific-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">3</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Acct-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.6">16777302</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Product-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.8">Jmeter</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">1094807040</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.10">16777302</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Acct-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">0</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Firmware-Revision</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">13</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree/>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="Send Counter 3 for HSQ" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Spending-Limit-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">SL-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.7">2</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${counter_name}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${hsq_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">10</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="No Counter Change" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Spending-Limit-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">SL-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.7">2</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${counter_name}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${hsq_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">10</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="Send Counter 2 for FUP1" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Spending-Limit-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">SL-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.7">2</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${counter_name}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${fup1_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">10</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="No Counter Change" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Spending-Limit-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">SL-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.7">2</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${counter_name}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${fup1_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">10</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="Send Counter 1 for FUP2" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Spending-Limit-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">SL-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.7">2</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${counter_name}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${fup2_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">10</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="No Counter Change" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Spending-Limit-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">SL-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.7">2</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${counter_name}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${fup2_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">10</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="Send STA" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Session-Termination-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777302</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">4</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="End of RTC_73" enabled="true"/>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Simple Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sy-RTC_74" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Sy Push Client Scenario : RTC-74-Sy-Push-Client</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
          <stringProp name="SimpleTimer.TIMEOUT">174000</stringProp>
        </com.computaris.jmeter.ext.timer.SimpleTimer>
        <hashTree/>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="RTC_74" enabled="true">
          <stringProp name="TestPlan.comments">Verify Sy Counter Based Plan with PUSH Mode</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriber_identity" elementType="Argument">
                <stringProp name="Argument.name">subscriber_identity</stringProp>
                <stringProp name="Argument.value">1111111174</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">1111111174</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">1111111174</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">1111111174</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subscriber_package" elementType="Argument">
                <stringProp name="Argument.name">subscriber_package</stringProp>
                <stringProp name="Argument.value">RTC_74_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">1111111174</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="session_id" elementType="Argument">
                <stringProp name="Argument.name">session_id</stringProp>
                <stringProp name="Argument.value">1111111174_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapfilename" elementType="Argument">
                <stringProp name="Argument.name">pcapfilename</stringProp>
                <stringProp name="Argument.value">Sy-RTC_74</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">Sy-RTC_74</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="logfilename" elementType="Argument">
                <stringProp name="Argument.name">logfilename</stringProp>
                <stringProp name="Argument.value">Sy-RTC_74</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">25176</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer" elementType="Argument">
                <stringProp name="Argument.name">productoffer</stringProp>
                <stringProp name="Argument.value">RTC_74_PRODUCT_OFFER</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage_id" elementType="Argument">
                <stringProp name="Argument.name">datapackage_id</stringProp>
                <stringProp name="Argument.value">RTC_74_BASE_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer_id" elementType="Argument">
                <stringProp name="Argument.name">productoffer_id</stringProp>
                <stringProp name="Argument.value">RTC_74_PRODUCT_OFFER_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start Sy Push Client" enabled="true"/>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true); 
f = new FileOutputStream(mapping_file_name, true); 
p = new PrintStream(f); 

// Write data to file 

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="RTC_74 Pre_Processing" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </com.computaris.jmeter.ext.controls.ParameterizedController>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Pcap and Logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872118812">Capture PCAP</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872996374">Capture log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture PD Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="1033451790">Capture PD log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create DataPackage" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;id&gt;RTC_74_BASE_111111111&lt;/id&gt;&#xd;
            &lt;name&gt;RTC_74_BASE&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 09/21/2017 19:14:06&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriod&gt;30&lt;/validityPeriod&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;SY_COUNTER_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin on 09/21/2017 19:15:02&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_74_QOS&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;3&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;3&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules/&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;2&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;2&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;1&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules/&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;1&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;1&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;2&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules/&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;RTC_74_QUOTA&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles&gt;&#xd;
                &lt;sy-quota-Profile&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin on 09/21/2017 19:14:20&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_74_QUOTA&lt;/name&gt;&#xd;
                    &lt;syQuotaProfileDetailDatas&gt;&#xd;
                        &lt;counterName&gt;gold_qos&lt;/counterName&gt;&#xd;
                        &lt;counterPresent&gt;1&lt;/counterPresent&gt;&#xd;
                        &lt;fup1Value&gt;2&lt;/fup1Value&gt;&#xd;
                        &lt;fup2Value&gt;1&lt;/fup2Value&gt;&#xd;
                        &lt;hsqValue&gt;3&lt;/hsqValue&gt;&#xd;
                        &lt;id&gt;&lt;/id&gt;&#xd;
                        &lt;dataServiceType&gt;&#xd;
                            &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                            &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                        &lt;/dataServiceType&gt;&#xd;
                    &lt;/syQuotaProfileDetailDatas&gt;&#xd;
                &lt;/sy-quota-Profile&gt;&#xd;
            &lt;/sy-quota-profiles&gt;&#xd;
            &lt;topUp-qos-multipliers/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/xml</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Offer" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${productoffer_id}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${productoffer}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin on 05/23/2018 10:12:03&quot;,&#xd;
   &quot;type&quot;:&quot;BASE&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${datapackage_id}&quot;,&#xd;
   &quot;validityPeriod&quot;:null,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null,&#xd;
   &quot;currency&quot;:&quot;${currency}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1909856551">${productoffer_id}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Offer" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}.json</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1909856551">${productoffer_id}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To TEST Mode" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=TEST</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To LIVE Mode" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=LIVE</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Subscriber Provisioning Request" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsAddSubscriberProfile&gt;
         &lt;!--Optional:--&gt;
        &lt;subscriberProfile&gt;
               &lt;entry&gt;
                  &lt;key&gt;SUBSCRIBER_IDENTITY&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;USERNAME&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD_CHECK&lt;/key&gt;
                  &lt;value&gt;TRUE&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUSTOMER_TYPE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;STATUS&lt;/key&gt;
                  &lt;value&gt;Active&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PRODUCT_OFFER&lt;/key&gt;
                   &lt;value&gt;${productoffer}&lt;/value&gt;
                &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMS_PACKAGE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EXPIRY_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;AREA&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CITY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM1&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM2&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM3&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM4&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM5&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ZONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COUNTRY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;BIRTH_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ROLE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COMPANY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;DEPARTMENT&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ARPU&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CADRE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EMAIL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PHONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;SIP_URL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUI&lt;/key&gt;
                  &lt;value&gt;${cui}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMSI&lt;/key&gt;
                  &lt;value&gt;${imsi}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;MSISDN&lt;/key&gt;
                  &lt;value&gt;${msisdn}&lt;/value&gt;
               &lt;/entry&gt;
             &lt;/subscriberProfile&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsAddSubscriberProfile&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="TestPlan.comments">Tool will wait for 1 Sec.</stringProp>
            <stringProp name="SimpleTimer.TIMEOUT">5000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_74_CCR-I" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">2</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.1">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">0</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.8">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.8">1</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.9">0</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destination_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.12">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.13">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.13">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">14</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">2</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">QoS-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">APN-Aggregate-Max-Bitrate-DL:3145728</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">&lt;&lt;&lt; Undefined &gt;&gt;&gt;</stringProp>
              <stringProp name="DiameterAssertion.avpData.2"></stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_74_CCR-U-1" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">1</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Event-Trigger</stringProp>
            <stringProp name="DiameterSampler.avpData.7">33</stringProp>
            <stringProp name="DiameterSampler.avpCounter">8</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">2</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">200[12]</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">true</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">QoS-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">APN-Aggregate-Max-Bitrate-DL:3145728</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">&lt;&lt;&lt; Undefined &gt;&gt;&gt;</stringProp>
              <stringProp name="DiameterAssertion.avpData.2"></stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="RTC_74_Expecting_RAR For FUP1" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Re-Auth-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.1">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Host-IP-Address</stringProp>
            <stringProp name="DiameterSampler.avpData.3">10.106.1.88</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.4">2001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">5</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="RAR Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">false</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Re-Auth-Request</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">QoS-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">APN-Aggregate-Max-Bitrate-DL:2097152</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Charging-Rule-Remove</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Charging-Rule-Name:${RTC_36_HSQ_PCC}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Charging-Rule-Remove</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Charging-Rule-Name:${RTC_36_PCC_HSQ}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_74_CCR-U-2" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">2</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Event-Trigger</stringProp>
            <stringProp name="DiameterSampler.avpData.7">33</stringProp>
            <stringProp name="DiameterSampler.avpCounter">8</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U-2 Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">2</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">QoS-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">APN-Aggregate-Max-Bitrate-DL:2097152</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Charging-Rule-Remove</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Charging-Rule-Name:${RTC_36_PCC_HSQ}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="RTC_74_Expecting_RAR For FUP2" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Re-Auth-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.1">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Host-IP-Address</stringProp>
            <stringProp name="DiameterSampler.avpData.3">10.106.1.88</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.4">2001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">5</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="RAR Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">false</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Re-Auth-Request</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">QoS-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">APN-Aggregate-Max-Bitrate-DL:1048576</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Charging-Rule-Remove</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Charging-Rule-Name:${RTC_36_FUP1_PCC}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Charging-Rule-Remove</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Charging-Rule-Name:${RTC_36_PCC_HSQ}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_74_CCR-T" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">3</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">1</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Termination-Cause</stringProp>
            <stringProp name="DiameterSampler.avpData.7">1</stringProp>
            <stringProp name="DiameterSampler.avpName.8">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.8">2</stringProp>
            <stringProp name="DiameterSampler.avpName.9">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">0</stringProp>
            <stringProp name="DiameterSampler.avpName.10">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.10">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Called-Station-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">internet</stringProp>
            <stringProp name="DiameterSampler.avpCounter">12</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-T Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">true</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="TestPlan.comments">Tool will wait for 1 Sec.</stringProp>
            <stringProp name="SimpleTimer.TIMEOUT">5000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Stop Sy Push Client" enabled="true"/>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Simple Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sy-RTC_74" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Sy Push Server Scenario : RTC-74-Sy-Push-Server</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
          <stringProp name="SimpleTimer.TIMEOUT">174000</stringProp>
        </com.computaris.jmeter.ext.timer.SimpleTimer>
        <hashTree/>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="RTC_74" enabled="true">
          <stringProp name="TestPlan.comments">Verify Sy Counter Based Plan HSQ + 2 Level FUP with PULL Mode</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriber_identity" elementType="Argument">
                <stringProp name="Argument.name">subscriber_identity</stringProp>
                <stringProp name="Argument.value">1111111174</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">1111111174</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">1111111174</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">1111111174</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subscriber_package" elementType="Argument">
                <stringProp name="Argument.name">subscriber_package</stringProp>
                <stringProp name="Argument.value">RTC_74_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">1111111174</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="session_id" elementType="Argument">
                <stringProp name="Argument.name">session_id</stringProp>
                <stringProp name="Argument.value">1111111174_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="counter_name" elementType="Argument">
                <stringProp name="Argument.name">counter_name</stringProp>
                <stringProp name="Argument.value">gold_qos</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="hsq_counter_value" elementType="Argument">
                <stringProp name="Argument.name">hsq_counter_value</stringProp>
                <stringProp name="Argument.value">3</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="fup1_counter_value" elementType="Argument">
                <stringProp name="Argument.name">fup1_counter_value</stringProp>
                <stringProp name="Argument.value">2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="fup2_counter_value" elementType="Argument">
                <stringProp name="Argument.name">fup2_counter_value</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start Sy Push Server" enabled="true"/>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="CER-OCS" enabled="true">
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Capabilities-Exchange-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">false</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Supported-Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Vendor-Specific-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">3</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Acct-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.6">16777302</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Product-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.8">Jmeter</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">1094807040</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.10">16777302</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Acct-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">0</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Firmware-Revision</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">13</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="Send Counter 3 for HSQ" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Spending-Limit-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">SL-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.7">2</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${counter_name}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${hsq_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">10</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">500</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="Send SNR for FUP1" enabled="true">
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Abort-Session-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.0">2</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.1">${counter_name}</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${fup1_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.3">2</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">0</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Vendor-Specific-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.6">2</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">16777302</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.8">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.13">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">14</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree/>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="Send SNR for FUP2" enabled="true">
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Abort-Session-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.0">2</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.1">${counter_name}</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${fup2_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.3">2</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">0</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Vendor-Specific-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.6">2</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">16777302</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.8">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.13">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">14</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree/>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="TestPlan.comments">Tool will wait for 1 Sec.</stringProp>
            <stringProp name="SimpleTimer.TIMEOUT">5000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="Send STA" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Session-Termination-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777302</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">4</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Stop Sy Push Server" enabled="true"/>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Post Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop pcap and logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="stop Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-720136512">Stop Pcap</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop NV log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-632654166">Stop NV log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop PD log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-592019242">Stop PD log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Simple Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sy-RTC_83" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Verify Charging Rule Base Name install &amp; remove functionality with HSQ + Two Level FUP plan in Sy Package. : RTC-83-Sy-Push-Client</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
          <stringProp name="SimpleTimer.TIMEOUT">238000</stringProp>
        </com.computaris.jmeter.ext.timer.SimpleTimer>
        <hashTree/>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="RTC_83" enabled="true">
          <stringProp name="TestPlan.comments">Verify Sy Counter Based Plan HSQ + 2 Level FUP with PULL Mode</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriber_identity" elementType="Argument">
                <stringProp name="Argument.name">subscriber_identity</stringProp>
                <stringProp name="Argument.value">1111111183</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">1111111183</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">1111111183</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">1111111183</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subscriber_package" elementType="Argument">
                <stringProp name="Argument.name">subscriber_package</stringProp>
                <stringProp name="Argument.value">RTC_83_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">1111111183</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="session_id" elementType="Argument">
                <stringProp name="Argument.name">session_id</stringProp>
                <stringProp name="Argument.value">1111111183_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapfilename" elementType="Argument">
                <stringProp name="Argument.name">pcapfilename</stringProp>
                <stringProp name="Argument.value">Sy-RTC_83</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">Sy-RTC_83</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="logfilename" elementType="Argument">
                <stringProp name="Argument.name">logfilename</stringProp>
                <stringProp name="Argument.value">Sy-RTC_83</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_83_1_http" elementType="Argument">
                <stringProp name="Argument.name">crbn_83_1_http</stringProp>
                <stringProp name="Argument.value">6372626e5f38335f315f68747470</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_83_1_all" elementType="Argument">
                <stringProp name="Argument.name">crbn_83_1_all</stringProp>
                <stringProp name="Argument.value">6372626e5f38335f315f616c6c</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_83_2_http" elementType="Argument">
                <stringProp name="Argument.name">crbn_83_2_http</stringProp>
                <stringProp name="Argument.value">6372626e5f38335f325f68747470</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_83_2_all" elementType="Argument">
                <stringProp name="Argument.name">crbn_83_2_all</stringProp>
                <stringProp name="Argument.value">6372626e5f38335f325f616c6c</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_83_3_http" elementType="Argument">
                <stringProp name="Argument.name">crbn_83_3_http</stringProp>
                <stringProp name="Argument.value">6372626e5f38335f335f68747470</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_83_3_all" elementType="Argument">
                <stringProp name="Argument.name">crbn_83_3_all</stringProp>
                <stringProp name="Argument.value">6372626e5f38335f335f616c6c</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">25177</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer" elementType="Argument">
                <stringProp name="Argument.name">productoffer</stringProp>
                <stringProp name="Argument.value">RTC_75_PRODUCT_OFFER</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage_id" elementType="Argument">
                <stringProp name="Argument.name">datapackage_id</stringProp>
                <stringProp name="Argument.value">RTC_75_BASE_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer_id" elementType="Argument">
                <stringProp name="Argument.name">productoffer_id</stringProp>
                <stringProp name="Argument.value">RTC_75_PRODUCT_OFFER_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start of Sy_Client" enabled="true"/>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true); 
f = new FileOutputStream(mapping_file_name, true); 
p = new PrintStream(f); 

// Write data to file 

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="RTC_83 Pre_Processing" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </com.computaris.jmeter.ext.controls.ParameterizedController>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Pcap and Logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872118812">Capture PCAP</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872996374">Capture log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture PD Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="1033451790">Capture PD log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create CRBN" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;global-charging-rule-base-name-container&gt;&#xd;
    &lt;chargingRuleBaseNameDatas&gt;&#xd;
        &lt;chargingRuleBaseNameData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;&lt;/id&gt;&#xd;
            &lt;name&gt;CRBN_83_1&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 01/05/2018 16:44:40&lt;/description&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                    &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;crbn_83_1_all&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_3&lt;/id&gt;&#xd;
                    &lt;name&gt;HTTP&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;crbn_83_1_http&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
        &lt;/chargingRuleBaseNameData&gt;&#xd;
        &lt;chargingRuleBaseNameData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;&lt;/id&gt;&#xd;
            &lt;name&gt;CRBN_83_2&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 01/05/2018 16:47:01&lt;/description&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                    &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;crbn_83_2_all&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_3&lt;/id&gt;&#xd;
                    &lt;name&gt;HTTP&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;crbn_83_2_http&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
        &lt;/chargingRuleBaseNameData&gt;&#xd;
        &lt;chargingRuleBaseNameData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;&lt;/id&gt;&#xd;
            &lt;name&gt;CRBN_83_3&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 01/05/2018 16:48:02&lt;/description&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                    &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;crbn_83_3_all&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_3&lt;/id&gt;&#xd;
                    &lt;name&gt;HTTP&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;crbn_83_3_http&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
        &lt;/chargingRuleBaseNameData&gt;&#xd;
    &lt;/chargingRuleBaseNameDatas&gt;&#xd;
&lt;/global-charging-rule-base-name-container&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_charging_rule_base_name_url}?${replace}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/xml</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create DataPackage" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;RTC_75_BASE_111111111&lt;/id&gt;&#xd;
            &lt;name&gt;RTC_83_BASE&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 01/05/2018 18:23:15&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriod&gt;30&lt;/validityPeriod&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;SY_COUNTER_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin on 01/05/2018 18:27:45&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_83_QOS&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;1&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;1&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names&gt;&#xd;
                                &lt;charging-rule-base-name&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;name&gt;CRBN_83_1&lt;/name&gt;&#xd;
                                &lt;/charging-rule-base-name&gt;&#xd;
                            &lt;/charging-rule-base-names&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules/&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;500&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;500&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names&gt;&#xd;
                                &lt;charging-rule-base-name&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;name&gt;CRBN_83_2&lt;/name&gt;&#xd;
                                &lt;/charging-rule-base-name&gt;&#xd;
                            &lt;/charging-rule-base-names&gt;&#xd;
                            &lt;fup-level&gt;1&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules/&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;256&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;256&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names&gt;&#xd;
                                &lt;charging-rule-base-name&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;name&gt;CRBN_83_3&lt;/name&gt;&#xd;
                                &lt;/charging-rule-base-name&gt;&#xd;
                            &lt;/charging-rule-base-names&gt;&#xd;
                            &lt;fup-level&gt;2&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules/&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;RTC_83_sy_quota_CRBN&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles&gt;&#xd;
                &lt;sy-quota-Profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin on 01/05/2018 18:23:40&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_83_sy_quota_CRBN&lt;/name&gt;&#xd;
                    &lt;syQuotaProfileDetailDatas&gt;&#xd;
                        &lt;counterName&gt;gold_all&lt;/counterName&gt;&#xd;
                        &lt;counterPresent&gt;1&lt;/counterPresent&gt;&#xd;
                        &lt;dataServiceType&gt;&#xd;
                            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                            &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                            &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                        &lt;/dataServiceType&gt;&#xd;
                        &lt;fup1Value&gt;1&lt;/fup1Value&gt;&#xd;
                        &lt;fup2Value&gt;0&lt;/fup2Value&gt;&#xd;
                        &lt;hsqValue&gt;2&lt;/hsqValue&gt;&#xd;
                        &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;/syQuotaProfileDetailDatas&gt;&#xd;
                    &lt;syQuotaProfileDetailDatas&gt;&#xd;
                        &lt;counterName&gt;gold_http&lt;/counterName&gt;&#xd;
                        &lt;counterPresent&gt;1&lt;/counterPresent&gt;&#xd;
                        &lt;dataServiceType&gt;&#xd;
                            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                            &lt;id&gt;DATA_SERVICE_TYPE_3&lt;/id&gt;&#xd;
                            &lt;name&gt;HTTP&lt;/name&gt;&#xd;
                        &lt;/dataServiceType&gt;&#xd;
                        &lt;fup1Value&gt;1&lt;/fup1Value&gt;&#xd;
                        &lt;fup2Value&gt;0&lt;/fup2Value&gt;&#xd;
                        &lt;hsqValue&gt;2&lt;/hsqValue&gt;&#xd;
                        &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;/syQuotaProfileDetailDatas&gt;&#xd;
                &lt;/sy-quota-Profile&gt;&#xd;
            &lt;/sy-quota-profiles&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/xml</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Offer" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${productoffer_id}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${productoffer}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin on 05/23/2018 10:12:03&quot;,&#xd;
   &quot;type&quot;:&quot;BASE&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${datapackage_id}&quot;,&#xd;
   &quot;validityPeriod&quot;:null,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null,&#xd;
   &quot;currency&quot;:&quot;${currency}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1909856551">${productoffer_id}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Offer" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}.json</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1909856551">${productoffer_id}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To TEST Mode" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=TEST</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To LIVE Mode" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=LIVE</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Subscriber Provisioning Request" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsAddSubscriberProfile&gt;
         &lt;!--Optional:--&gt;
        &lt;subscriberProfile&gt;
               &lt;entry&gt;
                  &lt;key&gt;SUBSCRIBER_IDENTITY&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;USERNAME&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD_CHECK&lt;/key&gt;
                  &lt;value&gt;TRUE&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUSTOMER_TYPE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;STATUS&lt;/key&gt;
                  &lt;value&gt;Active&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PRODUCT_OFFER&lt;/key&gt;
                   &lt;value&gt;${productoffer}&lt;/value&gt;
                &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMS_PACKAGE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EXPIRY_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;AREA&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CITY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM1&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM2&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM3&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM4&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM5&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ZONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COUNTRY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;BIRTH_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ROLE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COMPANY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;DEPARTMENT&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ARPU&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CADRE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EMAIL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PHONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;SIP_URL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUI&lt;/key&gt;
                  &lt;value&gt;${cui}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMSI&lt;/key&gt;
                  &lt;value&gt;${imsi}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;MSISDN&lt;/key&gt;
                  &lt;value&gt;${msisdn}&lt;/value&gt;
               &lt;/entry&gt;
             &lt;/subscriberProfile&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsAddSubscriberProfile&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="TestPlan.comments">Tool will wait for 1 Sec.</stringProp>
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_83_CCR-I" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">2</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.1">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">0</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.8">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.8">1</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.9">0</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destination_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.12">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.13">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.13">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">14</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">5</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Charging-Rule-Base-Name:CRBN_83_1</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Monitoring-Key:${crbn_83_1_http}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Monitoring-Key:${crbn_83_1_all}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Granted-Service-Unit:CC-Total-Octets:524288000</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_83_CCR-U-1" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">1</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Event-Trigger</stringProp>
            <stringProp name="DiameterSampler.avpData.7">33</stringProp>
            <stringProp name="DiameterSampler.avpCounter">8</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U-1 Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">4</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Monitoring-Key:${crbn_83_1_http}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Monitoring-Key:${crbn_83_1_all}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Total-Octets:524288000</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Granted-Service-Unit:CC-Total-Octets:524288000</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
              <stringProp name="DiameterAssertion.avpName.5">Charging-Rule-Remove</stringProp>
              <stringProp name="DiameterAssertion.avpData.5">Charging-Rule-Base-Name:CRBN_83_1</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.5">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.5"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="RTC_83_Expecting_RAR For FUP1" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Re-Auth-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.1">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Host-IP-Address</stringProp>
            <stringProp name="DiameterSampler.avpData.3">10.106.1.88</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.4">2001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">5</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="RAR Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">false</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Re-Auth-Request</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">4</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Charging-Rule-Base-Name:crbn_83_2</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Charging-Rule-Remove</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Charging-Rule-Base-Name:crbn_83_1</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Monitoring-Key:${crbn_83_2_all}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Monitoring-Key:${crbn_83_2_http}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Monitoring-Key:${crbn_85_2_all}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
              <stringProp name="DiameterAssertion.avpName.5">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.5">Monitoring-Key:${crbn_85_2_http}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.5">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.5"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_83_CCR-U-2" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">2</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Event-Trigger</stringProp>
            <stringProp name="DiameterSampler.avpData.7">33</stringProp>
            <stringProp name="DiameterSampler.avpCounter">8</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-U-1 Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">4</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Monitoring-Key:${crbn_83_2_http}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Monitoring-Key:${crbn_83_2_all}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Granted-Service-Unit:CC-Total-Octets:524288000</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Granted-Service-Unit:CC-Total-Octets:524288000</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
              <stringProp name="DiameterAssertion.avpName.5">Charging-Rule-Remove</stringProp>
              <stringProp name="DiameterAssertion.avpData.5">Charging-Rule-Base-Name:CRBN_83_1</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.5">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.5"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="RTC_83_Expecting_RAR For FUP1" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Re-Auth-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.1">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Host-IP-Address</stringProp>
            <stringProp name="DiameterSampler.avpData.3">10.106.1.88</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.4">2001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">5</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="RAR Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">false</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Re-Auth-Request</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">4</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Charging-Rule-Base-Name:crbn_83_3</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Charging-Rule-Remove</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Charging-Rule-Base-Name:crbn_83_2</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Monitoring-Key:${crbn_83_3_all}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Monitoring-Key:${crbn_83_3_http}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Monitoring-Key:${crbn_85_2_all}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
              <stringProp name="DiameterAssertion.avpName.5">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.5">Monitoring-Key:${crbn_85_2_http}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.5">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.5"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_83_CCR-T" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">3</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">1</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Termination-Cause</stringProp>
            <stringProp name="DiameterSampler.avpData.7">1</stringProp>
            <stringProp name="DiameterSampler.avpName.8">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.8">2</stringProp>
            <stringProp name="DiameterSampler.avpName.9">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">0</stringProp>
            <stringProp name="DiameterSampler.avpName.10">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.10">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Called-Station-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">internet</stringProp>
            <stringProp name="DiameterSampler.avpCounter">12</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-T Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="TestPlan.comments">Tool will wait for 1 Sec.</stringProp>
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Post Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop pcap and logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="stop Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-720136512">Stop Pcap</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop NV log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-632654166">Stop NV log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop PD log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-592019242">Stop PD log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="End of RTC_83" enabled="true"/>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Simple Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sy-RTC_83" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Verify Charging Rule Base Name install &amp; remove functionality with HSQ + Two Level FUP plan in Sy Package. : RTC-83-Sy-Push-Server</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
          <stringProp name="SimpleTimer.TIMEOUT">238000</stringProp>
        </com.computaris.jmeter.ext.timer.SimpleTimer>
        <hashTree/>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="RTC_83" enabled="true">
          <stringProp name="TestPlan.comments">Verify Sy Counter Based Plan HSQ + 2 Level FUP with PULL Mode</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriber_identity" elementType="Argument">
                <stringProp name="Argument.name">subscriber_identity</stringProp>
                <stringProp name="Argument.value">1111111135</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">1111111135</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">1111111135</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">1111111135</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subscriber_package" elementType="Argument">
                <stringProp name="Argument.name">subscriber_package</stringProp>
                <stringProp name="Argument.value">RTC_35_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">1111111135</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="session_id" elementType="Argument">
                <stringProp name="Argument.name">session_id</stringProp>
                <stringProp name="Argument.value">1111111135_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RTC_35_HSQ_PCC" elementType="Argument">
                <stringProp name="Argument.name">RTC_35_HSQ_PCC</stringProp>
                <stringProp name="Argument.value">5254435f33355f4853515f504343</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RTC_35_FUP1_PCC" elementType="Argument">
                <stringProp name="Argument.name">RTC_35_FUP1_PCC</stringProp>
                <stringProp name="Argument.value">5254435f33355f465550315f504343</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RTC_35_FUP2_PCC" elementType="Argument">
                <stringProp name="Argument.name">RTC_35_FUP2_PCC</stringProp>
                <stringProp name="Argument.value">5254435f33355f465550325f504343</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="counter_name_1" elementType="Argument">
                <stringProp name="Argument.name">counter_name_1</stringProp>
                <stringProp name="Argument.value">gold_all</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="counter_name_2" elementType="Argument">
                <stringProp name="Argument.name">counter_name_2</stringProp>
                <stringProp name="Argument.value">gold_http</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="hsq_counter_value" elementType="Argument">
                <stringProp name="Argument.name">hsq_counter_value</stringProp>
                <stringProp name="Argument.value">2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="fup1_counter_value" elementType="Argument">
                <stringProp name="Argument.name">fup1_counter_value</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="fup2_counter_value" elementType="Argument">
                <stringProp name="Argument.name">fup2_counter_value</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start Sy Push Server" enabled="true"/>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="CER-OCS" enabled="true">
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Capabilities-Exchange-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">false</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Supported-Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Vendor-Specific-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">3</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Acct-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.6">16777302</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Product-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.8">Jmeter</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">1094807040</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.10">16777302</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Acct-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">0</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Firmware-Revision</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">13</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="Send Counter 2 for HSQ" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Spending-Limit-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">SL-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.7">2</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${counter_name_1}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${hsq_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${counter_name_2}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${hsq_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">13</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="TestPlan.comments">Tool will wait for 1 Sec.</stringProp>
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="Send SNR for FUP1" enabled="true">
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Abort-Session-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">2</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.1">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">0</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Vendor-Specific-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.3">2</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">16777302</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.11">2</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${counter_name_1}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.13">${fup1_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.14">2</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${counter_name_2}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.16">${fup1_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">17</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree/>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="TestPlan.comments">Tool will wait for 1 Sec.</stringProp>
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="Send SNR for FUP2" enabled="true">
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Abort-Session-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">2</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.1">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">0</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Vendor-Specific-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.3">2</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">16777302</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.11">2</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${counter_name_1}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.13">${fup2_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.14">2</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${counter_name_2}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.16">${fup2_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">17</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree/>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="TestPlan.comments">Tool will wait for 1 Sec.</stringProp>
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="Send STA" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Session-Termination-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777302</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">4</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="TestPlan.comments">Tool will wait for 1 Sec.</stringProp>
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="End of RTC_83" enabled="true"/>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Simple Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sy-RTC_84" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Sy Pull Client Scenario : RTC-84-Sy-Pull-Client</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
          <stringProp name="SimpleTimer.TIMEOUT">296000</stringProp>
        </com.computaris.jmeter.ext.timer.SimpleTimer>
        <hashTree/>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="RTC_84" enabled="true">
          <stringProp name="TestPlan.comments">Verify Sy Counter Based Plan HSQ + 2 Level FUP with PULL Mode</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriber_identity" elementType="Argument">
                <stringProp name="Argument.name">subscriber_identity</stringProp>
                <stringProp name="Argument.value">1111111184</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">1111111184</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">1111111184</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">1111111184</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subscriber_package" elementType="Argument">
                <stringProp name="Argument.name">subscriber_package</stringProp>
                <stringProp name="Argument.value">RTC_84_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">1111111184</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="session_id" elementType="Argument">
                <stringProp name="Argument.name">session_id</stringProp>
                <stringProp name="Argument.value">1111111184_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RTC_84_HSQ_PCC" elementType="Argument">
                <stringProp name="Argument.name">RTC_84_HSQ_PCC</stringProp>
                <stringProp name="Argument.value">5254435F38345F4853515F504343</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RTC_84_FUP_PCC" elementType="Argument">
                <stringProp name="Argument.name">RTC_84_FUP_PCC</stringProp>
                <stringProp name="Argument.value">5254435f38345f4655505f504343</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RTC_84_FUP2_PCC" elementType="Argument">
                <stringProp name="Argument.name">RTC_84_FUP2_PCC</stringProp>
                <stringProp name="Argument.value">5254435f38345f465550325f504343</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapfilename" elementType="Argument">
                <stringProp name="Argument.name">pcapfilename</stringProp>
                <stringProp name="Argument.value">Sy-RTC_84</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">Sy-RTC_84</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="logfilename" elementType="Argument">
                <stringProp name="Argument.name">logfilename</stringProp>
                <stringProp name="Argument.value">Sy-RTC_84</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_84_1_all" elementType="Argument">
                <stringProp name="Argument.name">crbn_84_1_all</stringProp>
                <stringProp name="Argument.value">6372626E5F38345F315F616C6C</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_84_1_http" elementType="Argument">
                <stringProp name="Argument.name">crbn_84_1_http</stringProp>
                <stringProp name="Argument.value">6372626E5F38345F315F68747470</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_84_2_all" elementType="Argument">
                <stringProp name="Argument.name">crbn_84_2_all</stringProp>
                <stringProp name="Argument.value">6372626e5f38345f325f616c6c</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_84_2_http" elementType="Argument">
                <stringProp name="Argument.name">crbn_84_2_http</stringProp>
                <stringProp name="Argument.value">6372626e5f38345f325f68747470</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_84_3_all" elementType="Argument">
                <stringProp name="Argument.name">crbn_84_3_all</stringProp>
                <stringProp name="Argument.value">6372626e5f38345f335f616c6c</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_84_3_http" elementType="Argument">
                <stringProp name="Argument.name">crbn_84_3_http</stringProp>
                <stringProp name="Argument.value">6372626e5f38345f335f68747470</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">25178</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer" elementType="Argument">
                <stringProp name="Argument.name">productoffer</stringProp>
                <stringProp name="Argument.value">RTC_84_PRODUCT_OFFER</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage_id" elementType="Argument">
                <stringProp name="Argument.name">datapackage_id</stringProp>
                <stringProp name="Argument.value">RTC_84_BASE_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer_id" elementType="Argument">
                <stringProp name="Argument.name">productoffer_id</stringProp>
                <stringProp name="Argument.value">RTC_84_PRODUCT_OFFER_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start of Sy_Client" enabled="true"/>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true); 
f = new FileOutputStream(mapping_file_name, true); 
p = new PrintStream(f); 

// Write data to file 

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="RTC_84 Pre_Processing" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </com.computaris.jmeter.ext.controls.ParameterizedController>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Pcap and Logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872118812">Capture PCAP</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872996374">Capture log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture PD Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="1033451790">Capture PD log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create CRBN" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;global-charging-rule-base-name-container&gt;&#xd;
    &lt;chargingRuleBaseNameDatas&gt;&#xd;
        &lt;chargingRuleBaseNameData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;&lt;/id&gt;&#xd;
            &lt;name&gt;CRBN_84_1&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 01/05/2018 16:44:40&lt;/description&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                    &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;crbn_84_1_all&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_3&lt;/id&gt;&#xd;
                    &lt;name&gt;HTTP&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;crbn_84_1_http&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
        &lt;/chargingRuleBaseNameData&gt;&#xd;
        &lt;chargingRuleBaseNameData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;&lt;/id&gt;&#xd;
            &lt;name&gt;CRBN_84_2&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 01/05/2018 16:47:01&lt;/description&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                    &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;crbn_84_2_all&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_3&lt;/id&gt;&#xd;
                    &lt;name&gt;HTTP&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;crbn_84_2_http&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
        &lt;/chargingRuleBaseNameData&gt;&#xd;
        &lt;chargingRuleBaseNameData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;&lt;/id&gt;&#xd;
            &lt;name&gt;CRBN_84_3&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 01/05/2018 16:48:02&lt;/description&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                    &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;crbn_84_3_all&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_3&lt;/id&gt;&#xd;
                    &lt;name&gt;HTTP&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;crbn_84_3_http&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
        &lt;/chargingRuleBaseNameData&gt;&#xd;
    &lt;/chargingRuleBaseNameDatas&gt;&#xd;
&lt;/global-charging-rule-base-name-container&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_charging_rule_base_name_url}?${replace}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/xml</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create DataPackage" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;RTC_84_BASE_111111111&lt;/id&gt;&#xd;
            &lt;name&gt;RTC_84_BASE&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 01/05/2018 18:23:15&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriod&gt;30&lt;/validityPeriod&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;SY_COUNTER_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin on 01/05/2018 18:27:45&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_84_QOS&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;1&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;1&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names&gt;&#xd;
                                &lt;charging-rule-base-name&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;name&gt;CRBN_84_1&lt;/name&gt;&#xd;
                                &lt;/charging-rule-base-name&gt;&#xd;
                            &lt;/charging-rule-base-names&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;RTC_84_HSQ_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;RTC_84_HSQ_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;512&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;512&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names&gt;&#xd;
                                &lt;charging-rule-base-name&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;name&gt;CRBN_84_2&lt;/name&gt;&#xd;
                                &lt;/charging-rule-base-name&gt;&#xd;
                            &lt;/charging-rule-base-names&gt;&#xd;
                            &lt;fup-level&gt;1&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;RTC_84_FUP_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;RTC_84_FUP_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;512&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Kbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;512&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Kbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;256&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;256&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names&gt;&#xd;
                                &lt;charging-rule-base-name&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;name&gt;CRBN_84_3&lt;/name&gt;&#xd;
                                &lt;/charging-rule-base-name&gt;&#xd;
                            &lt;/charging-rule-base-names&gt;&#xd;
                            &lt;fup-level&gt;2&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;RTC_84_FUP2_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;monitoringKey&gt;RTC_84_FUP2_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;mbrdl&gt;256&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Kbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;256&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Kbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;chargingKeyName&gt;Default_Rating_Group&lt;/chargingKeyName&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;RTC_84_sy_quota_CRBN&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles&gt;&#xd;
                &lt;sy-quota-Profile&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin on 01/05/2018 18:23:40&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_84_sy_quota_CRBN&lt;/name&gt;&#xd;
                    &lt;syQuotaProfileDetailDatas&gt;&#xd;
                        &lt;counterName&gt;gold_all&lt;/counterName&gt;&#xd;
                        &lt;counterPresent&gt;1&lt;/counterPresent&gt;&#xd;
                        &lt;dataServiceType&gt;&#xd;
                            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                            &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                            &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                        &lt;/dataServiceType&gt;&#xd;
                        &lt;fup1Value&gt;1&lt;/fup1Value&gt;&#xd;
                        &lt;fup2Value&gt;0&lt;/fup2Value&gt;&#xd;
                        &lt;hsqValue&gt;2&lt;/hsqValue&gt;&#xd;
                        &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;/syQuotaProfileDetailDatas&gt;&#xd;
                    &lt;syQuotaProfileDetailDatas&gt;&#xd;
                        &lt;counterName&gt;gold_http&lt;/counterName&gt;&#xd;
                        &lt;counterPresent&gt;1&lt;/counterPresent&gt;&#xd;
                        &lt;dataServiceType&gt;&#xd;
                            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                            &lt;id&gt;DATA_SERVICE_TYPE_3&lt;/id&gt;&#xd;
                            &lt;name&gt;HTTP&lt;/name&gt;&#xd;
                        &lt;/dataServiceType&gt;&#xd;
                        &lt;fup1Value&gt;1&lt;/fup1Value&gt;&#xd;
                        &lt;fup2Value&gt;0&lt;/fup2Value&gt;&#xd;
                        &lt;hsqValue&gt;2&lt;/hsqValue&gt;&#xd;
                        &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;/syQuotaProfileDetailDatas&gt;&#xd;
                &lt;/sy-quota-Profile&gt;&#xd;
            &lt;/sy-quota-profiles&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/xml</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Offer" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${productoffer_id}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${productoffer}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin on 05/23/2018 10:12:03&quot;,&#xd;
   &quot;type&quot;:&quot;BASE&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${datapackage_id}&quot;,&#xd;
   &quot;validityPeriod&quot;:null,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null,&#xd;
   &quot;currency&quot;:&quot;${currency}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1909856551">${productoffer_id}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Offer" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}.json</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1909856551">${productoffer_id}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To TEST Mode" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=TEST</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To LIVE Mode" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=LIVE</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Subscriber Provisioning Request" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsAddSubscriberProfile&gt;
         &lt;!--Optional:--&gt;
        &lt;subscriberProfile&gt;
               &lt;entry&gt;
                  &lt;key&gt;SUBSCRIBER_IDENTITY&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;USERNAME&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD_CHECK&lt;/key&gt;
                  &lt;value&gt;TRUE&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUSTOMER_TYPE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;STATUS&lt;/key&gt;
                  &lt;value&gt;Active&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PRODUCT_OFFER&lt;/key&gt;
                   &lt;value&gt;${productoffer}&lt;/value&gt;
                &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMS_PACKAGE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EXPIRY_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;AREA&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CITY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM1&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM2&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM3&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM4&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM5&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ZONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COUNTRY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;BIRTH_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ROLE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COMPANY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;DEPARTMENT&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ARPU&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CADRE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EMAIL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PHONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;SIP_URL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUI&lt;/key&gt;
                  &lt;value&gt;${cui}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMSI&lt;/key&gt;
                  &lt;value&gt;${imsi}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;MSISDN&lt;/key&gt;
                  &lt;value&gt;${msisdn}&lt;/value&gt;
               &lt;/entry&gt;
             &lt;/subscriberProfile&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsAddSubscriberProfile&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_84_CCR-I" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">2</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.1">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">0</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.8">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.8">1</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.9">0</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destination_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.12">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.13">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.13">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">14</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">7</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Charging-Rule-Definition:Charging-Rule-Name:${RTC_84_HSQ_PCC}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Charging-Rule-Definition:QoS-Information:Max-Requested-Bandwidth-DL:1048576</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">QoS-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">APN-Aggregate-Max-Bitrate-DL:1048576</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Monitoring-Key:${crbn_84_1_all}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
              <stringProp name="DiameterAssertion.avpName.5">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.5">Monitoring-Key:${crbn_84_1_http}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.5">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.5"></stringProp>
              <stringProp name="DiameterAssertion.avpName.6">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.6">Granted-Service-Unit:CC-Total-Octets:524288000</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.6">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.6"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_84_CCR-U-1" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">1</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Event-Trigger</stringProp>
            <stringProp name="DiameterSampler.avpData.7">33</stringProp>
            <stringProp name="DiameterSampler.avpName.8">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.8">2</stringProp>
            <stringProp name="DiameterSampler.avpName.9">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">0</stringProp>
            <stringProp name="DiameterSampler.avpName.10">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.10">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Usage-Monitoring-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.11">3</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Monitoring-Key</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${__diamAVPValue(Usage-Monitoring-Information:Monitoring-Key[0],var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.13">1</stringProp>
            <stringProp name="DiameterSampler.avpName.14">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${__diamAVPValue(Usage-Monitoring-Information:Granted-Service-Unit:CC-Total-Octets,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Usage-Monitoring-Level</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${__diamAVPValue(Usage-Monitoring-Information:Usage-Monitoring-Level[0],var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Usage-Monitoring-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.16">3</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Monitoring-Key</stringProp>
            <stringProp name="DiameterSampler.avpData.17">${__diamAVPValue(Usage-Monitoring-Information:Monitoring-Key[1],var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.18">1</stringProp>
            <stringProp name="DiameterSampler.avpName.19">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.19">${__diamAVPValue(Usage-Monitoring-Information:Granted-Service-Unit:CC-Total-Octets,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Usage-Monitoring-Level</stringProp>
            <stringProp name="DiameterSampler.avpData.20">${__diamAVPValue(Usage-Monitoring-Information:Usage-Monitoring-Level[1],var)}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">21</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">5</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">QoS-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">APN-Aggregate-Max-Bitrate-DL:1048576</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Monitoring-Key:${crbn_84_1_all}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Monitoring-Key:${crbn_84_1_http}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Granted-Service-Unit:CC-Total-Octets:524288000</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
              <stringProp name="DiameterAssertion.avpName.5">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.5">Monitoring-Key:${crbn_84_1_http}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.5">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.5"></stringProp>
              <stringProp name="DiameterAssertion.avpName.6">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.6">Granted-Service-Unit:CC-Total-Octets:524288000</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.6">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.6"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_84_CCR-U-2" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">2</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Event-Trigger</stringProp>
            <stringProp name="DiameterSampler.avpData.7">33</stringProp>
            <stringProp name="DiameterSampler.avpName.8">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.8">2</stringProp>
            <stringProp name="DiameterSampler.avpName.9">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">0</stringProp>
            <stringProp name="DiameterSampler.avpName.10">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.10">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Usage-Monitoring-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.11">3</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Monitoring-Key</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${__diamAVPValue(Usage-Monitoring-Information:Monitoring-Key[0],var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.13">1</stringProp>
            <stringProp name="DiameterSampler.avpName.14">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${__diamAVPValue(Usage-Monitoring-Information:Granted-Service-Unit:CC-Total-Octets,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Usage-Monitoring-Level</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${__diamAVPValue(Usage-Monitoring-Information:Usage-Monitoring-Level[0],var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Usage-Monitoring-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.16">3</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Monitoring-Key</stringProp>
            <stringProp name="DiameterSampler.avpData.17">${__diamAVPValue(Usage-Monitoring-Information:Monitoring-Key[1],var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.18">1</stringProp>
            <stringProp name="DiameterSampler.avpName.19">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.19">${__diamAVPValue(Usage-Monitoring-Information:Granted-Service-Unit:CC-Total-Octets,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Usage-Monitoring-Level</stringProp>
            <stringProp name="DiameterSampler.avpData.20">${__diamAVPValue(Usage-Monitoring-Information:Usage-Monitoring-Level[1],var)}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">21</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">7</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Charging-Rule-Definition:Charging-Rule-Name:${RTC_84_FUP_PCC}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Charging-Rule-Definition:QoS-Information:Max-Requested-Bandwidth-DL:524288</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">QoS-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">APN-Aggregate-Max-Bitrate-DL:524288</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Monitoring-Key:${crbn_84_2_all}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
              <stringProp name="DiameterAssertion.avpName.5">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.5">Monitoring-Key:${crbn_84_2_http}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.5">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.5"></stringProp>
              <stringProp name="DiameterAssertion.avpName.6">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.6">Granted-Service-Unit:CC-Total-Octets:524288000</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.6">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.6"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_84_CCR-U-3" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">2</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Event-Trigger</stringProp>
            <stringProp name="DiameterSampler.avpData.7">33</stringProp>
            <stringProp name="DiameterSampler.avpName.8">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.8">2</stringProp>
            <stringProp name="DiameterSampler.avpName.9">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">0</stringProp>
            <stringProp name="DiameterSampler.avpName.10">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.10">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Usage-Monitoring-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.11">3</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Monitoring-Key</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${__diamAVPValue(Usage-Monitoring-Information:Monitoring-Key[0],var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.13">1</stringProp>
            <stringProp name="DiameterSampler.avpName.14">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${__diamAVPValue(Usage-Monitoring-Information:Granted-Service-Unit:CC-Total-Octets,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Usage-Monitoring-Level</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${__diamAVPValue(Usage-Monitoring-Information:Usage-Monitoring-Level[0],var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Usage-Monitoring-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.16">3</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Monitoring-Key</stringProp>
            <stringProp name="DiameterSampler.avpData.17">${__diamAVPValue(Usage-Monitoring-Information:Monitoring-Key[1],var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.18">1</stringProp>
            <stringProp name="DiameterSampler.avpName.19">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.19">${__diamAVPValue(Usage-Monitoring-Information:Granted-Service-Unit:CC-Total-Octets,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Usage-Monitoring-Level</stringProp>
            <stringProp name="DiameterSampler.avpData.20">${__diamAVPValue(Usage-Monitoring-Information:Usage-Monitoring-Level[1],var)}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">21</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">5</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">QoS-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">APN-Aggregate-Max-Bitrate-DL:524288</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Monitoring-Key:${crbn_84_2_all}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Monitoring-Key:${crbn_84_2_http}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Granted-Service-Unit:CC-Total-Octets:524288000</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
              <stringProp name="DiameterAssertion.avpName.5">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.5">Monitoring-Key:${crbn_84_2_http}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.5">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.5"></stringProp>
              <stringProp name="DiameterAssertion.avpName.6">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.6">Granted-Service-Unit:CC-Total-Octets:524288000</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.6">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.6"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_84_CCR-U-4" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">2</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Event-Trigger</stringProp>
            <stringProp name="DiameterSampler.avpData.7">33</stringProp>
            <stringProp name="DiameterSampler.avpName.8">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.8">2</stringProp>
            <stringProp name="DiameterSampler.avpName.9">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">0</stringProp>
            <stringProp name="DiameterSampler.avpName.10">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.10">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Usage-Monitoring-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.11">3</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Monitoring-Key</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${__diamAVPValue(Usage-Monitoring-Information:Monitoring-Key[0],var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.13">1</stringProp>
            <stringProp name="DiameterSampler.avpName.14">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${__diamAVPValue(Usage-Monitoring-Information:Granted-Service-Unit:CC-Total-Octets,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Usage-Monitoring-Level</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${__diamAVPValue(Usage-Monitoring-Information:Usage-Monitoring-Level[0],var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Usage-Monitoring-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.16">3</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Monitoring-Key</stringProp>
            <stringProp name="DiameterSampler.avpData.17">${__diamAVPValue(Usage-Monitoring-Information:Monitoring-Key[1],var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.18">1</stringProp>
            <stringProp name="DiameterSampler.avpName.19">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.19">${__diamAVPValue(Usage-Monitoring-Information:Granted-Service-Unit:CC-Total-Octets,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Usage-Monitoring-Level</stringProp>
            <stringProp name="DiameterSampler.avpData.20">${__diamAVPValue(Usage-Monitoring-Information:Usage-Monitoring-Level[1],var)}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">21</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">7</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Charging-Rule-Definition:Charging-Rule-Name:${RTC_84_FUP2_PCC}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Charging-Rule-Definition:QoS-Information:Max-Requested-Bandwidth-DL:262144</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">QoS-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">APN-Aggregate-Max-Bitrate-DL:262144</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Monitoring-Key:${crbn_84_3_all}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
              <stringProp name="DiameterAssertion.avpName.5">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.5">Monitoring-Key:${crbn_84_3_http}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.5">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.5"></stringProp>
              <stringProp name="DiameterAssertion.avpName.6">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.6">Granted-Service-Unit:CC-Total-Octets:524288000</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.6">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.6"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_84_CCR-U-5" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">2</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Event-Trigger</stringProp>
            <stringProp name="DiameterSampler.avpData.7">33</stringProp>
            <stringProp name="DiameterSampler.avpName.8">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.8">2</stringProp>
            <stringProp name="DiameterSampler.avpName.9">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">0</stringProp>
            <stringProp name="DiameterSampler.avpName.10">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.10">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Usage-Monitoring-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.11">3</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Monitoring-Key</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${__diamAVPValue(Usage-Monitoring-Information:Monitoring-Key[0],var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.13">1</stringProp>
            <stringProp name="DiameterSampler.avpName.14">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${__diamAVPValue(Usage-Monitoring-Information:Granted-Service-Unit:CC-Total-Octets,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Usage-Monitoring-Level</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${__diamAVPValue(Usage-Monitoring-Information:Usage-Monitoring-Level[0],var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Usage-Monitoring-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.16">3</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Monitoring-Key</stringProp>
            <stringProp name="DiameterSampler.avpData.17">${__diamAVPValue(Usage-Monitoring-Information:Monitoring-Key[1],var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.18">1</stringProp>
            <stringProp name="DiameterSampler.avpName.19">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.19">${__diamAVPValue(Usage-Monitoring-Information:Granted-Service-Unit:CC-Total-Octets,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Usage-Monitoring-Level</stringProp>
            <stringProp name="DiameterSampler.avpData.20">${__diamAVPValue(Usage-Monitoring-Information:Usage-Monitoring-Level[1],var)}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">21</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">5</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">QoS-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">APN-Aggregate-Max-Bitrate-DL:262144</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Monitoring-Key:${crbn_84_3_all}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Monitoring-Key:${crbn_84_3_http}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Granted-Service-Unit:CC-Total-Octets:524288000</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
              <stringProp name="DiameterAssertion.avpName.5">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.5">Monitoring-Key:${crbn_84_3_http}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.5">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.5"></stringProp>
              <stringProp name="DiameterAssertion.avpName.6">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.6">Granted-Service-Unit:CC-Total-Octets:524288000</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.6">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.6"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_84_CCR-T" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">3</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">3</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Termination-Cause</stringProp>
            <stringProp name="DiameterSampler.avpData.7">1</stringProp>
            <stringProp name="DiameterSampler.avpName.8">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.8">2</stringProp>
            <stringProp name="DiameterSampler.avpName.9">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">0</stringProp>
            <stringProp name="DiameterSampler.avpName.10">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.10">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Called-Station-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">internet</stringProp>
            <stringProp name="DiameterSampler.avpCounter">12</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-T Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Post Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop pcap and logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="stop Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-720136512">Stop Pcap</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop NV log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-632654166">Stop NV log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop PD log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-592019242">Stop PD log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="End of RTC_84" enabled="true"/>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Simple Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sy-RTC_84" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Sy Pull Server Scenario : RTC-84-Sy-Pull-Server</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
          <stringProp name="SimpleTimer.TIMEOUT">296000</stringProp>
        </com.computaris.jmeter.ext.timer.SimpleTimer>
        <hashTree/>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="RTC_84" enabled="true">
          <stringProp name="TestPlan.comments">Verify Sy Counter Based Plan HSQ + 2 Level FUP with PULL Mode</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriber_identity" elementType="Argument">
                <stringProp name="Argument.name">subscriber_identity</stringProp>
                <stringProp name="Argument.value">1111111184</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">1111111184</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">1111111184</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">1111111184</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subscriber_package" elementType="Argument">
                <stringProp name="Argument.name">subscriber_package</stringProp>
                <stringProp name="Argument.value">RTC_84_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">1111111184</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="session_id" elementType="Argument">
                <stringProp name="Argument.name">session_id</stringProp>
                <stringProp name="Argument.value">1111111184_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RTC_84_HSQ_PCC" elementType="Argument">
                <stringProp name="Argument.name">RTC_84_HSQ_PCC</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RTC_84_FUP_PCC" elementType="Argument">
                <stringProp name="Argument.name">RTC_84_FUP_PCC</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RTC_84_FUP2_PCC" elementType="Argument">
                <stringProp name="Argument.name">RTC_84_FUP2_PCC</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="counter_name_1" elementType="Argument">
                <stringProp name="Argument.name">counter_name_1</stringProp>
                <stringProp name="Argument.value">gold_all</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="counter_name_2" elementType="Argument">
                <stringProp name="Argument.name">counter_name_2</stringProp>
                <stringProp name="Argument.value">gold_http</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="hsq_counter_value" elementType="Argument">
                <stringProp name="Argument.name">hsq_counter_value</stringProp>
                <stringProp name="Argument.value">2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="fup1_counter_value" elementType="Argument">
                <stringProp name="Argument.name">fup1_counter_value</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="fup2_counter_value" elementType="Argument">
                <stringProp name="Argument.name">fup2_counter_value</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start of Sy_Server" enabled="true"/>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="CER-OCS" enabled="true">
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Capabilities-Exchange-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">false</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Supported-Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Vendor-Specific-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">3</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Acct-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.6">16777302</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Product-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.8">Jmeter</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">1094807040</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.10">16777302</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Acct-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">0</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Firmware-Revision</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">13</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree/>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="Send Counter 2 for HSQ" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Spending-Limit-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">SL-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.7">2</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${counter_name_1}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${hsq_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${counter_name_2}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${hsq_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">13</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="No Counter Change" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Spending-Limit-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">SL-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.7">2</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${counter_name_1}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${hsq_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${counter_name_2}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${hsq_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">13</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="Send Counter 1 for HSQ" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Spending-Limit-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">SL-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.7">2</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${counter_name_1}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${fup1_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${counter_name_2}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${fup1_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">13</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="No Counter Change" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Spending-Limit-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">SL-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.7">2</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${counter_name_1}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${fup1_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${counter_name_2}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${fup1_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">13</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="Send Counter 0 for HSQ" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Spending-Limit-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">SL-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.7">2</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${counter_name_1}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${fup2_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${counter_name_2}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${fup2_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">13</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="No Counter Change" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Spending-Limit-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">SL-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.7">2</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${counter_name_1}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${fup2_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${counter_name_2}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${fup2_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">13</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="Send STA" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Session-Termination-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777302</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">4</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="End of RTC_84" enabled="true"/>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Simple Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sy-RTC_85" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Sy Push Client Scenario : RTC-85-Sy-Push-Client</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
          <stringProp name="SimpleTimer.TIMEOUT">337000</stringProp>
        </com.computaris.jmeter.ext.timer.SimpleTimer>
        <hashTree/>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="RTC_85" enabled="true">
          <stringProp name="TestPlan.comments">Verify Sy Counter Based Plan with PUSH Mode</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriber_identity" elementType="Argument">
                <stringProp name="Argument.name">subscriber_identity</stringProp>
                <stringProp name="Argument.value">1111111185</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">1111111185</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">1111111185</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">1111111185</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subscriber_package" elementType="Argument">
                <stringProp name="Argument.name">subscriber_package</stringProp>
                <stringProp name="Argument.value">RTC_85_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">1111111185</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="session_id" elementType="Argument">
                <stringProp name="Argument.name">session_id</stringProp>
                <stringProp name="Argument.value">1111111185_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RTC_85_HSQ_PCC" elementType="Argument">
                <stringProp name="Argument.name">RTC_85_HSQ_PCC</stringProp>
                <stringProp name="Argument.value">5254435f38355f4853515f504343</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RTC_85_FUP_PCC" elementType="Argument">
                <stringProp name="Argument.name">RTC_85_FUP_PCC</stringProp>
                <stringProp name="Argument.value">5254435f38355f4655505f504343</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RTC_85_FUP2_PCC" elementType="Argument">
                <stringProp name="Argument.name">RTC_85_FUP2_PCC</stringProp>
                <stringProp name="Argument.value">5254435f38355f465550325f504343</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapfilename" elementType="Argument">
                <stringProp name="Argument.name">pcapfilename</stringProp>
                <stringProp name="Argument.value">Sy-RTC_85</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">Sy-RTC_85</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="logfilename" elementType="Argument">
                <stringProp name="Argument.name">logfilename</stringProp>
                <stringProp name="Argument.value">Sy-RTC_85</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_85_1_all" elementType="Argument">
                <stringProp name="Argument.name">crbn_85_1_all</stringProp>
                <stringProp name="Argument.value">6372626e5f38355f315f616c6c</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_85_1_http" elementType="Argument">
                <stringProp name="Argument.name">crbn_85_1_http</stringProp>
                <stringProp name="Argument.value">6372626e5f38355f315f68747470</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_85_2_all" elementType="Argument">
                <stringProp name="Argument.name">crbn_85_2_all</stringProp>
                <stringProp name="Argument.value">6372626e5f38355f325f616c6c</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_85_2_http" elementType="Argument">
                <stringProp name="Argument.name">crbn_85_2_http</stringProp>
                <stringProp name="Argument.value">6372626e5f38355f325f68747470</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_85_3_all" elementType="Argument">
                <stringProp name="Argument.name">crbn_85_3_all</stringProp>
                <stringProp name="Argument.value">6372626e5f38355f335f616c6c</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="crbn_85_3_http" elementType="Argument">
                <stringProp name="Argument.name">crbn_85_3_http</stringProp>
                <stringProp name="Argument.value">6372626e5f38355f335f68747470</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">25179</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer" elementType="Argument">
                <stringProp name="Argument.name">productoffer</stringProp>
                <stringProp name="Argument.value">RTC_85_PRODUCT_OFFER</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage_id" elementType="Argument">
                <stringProp name="Argument.name">datapackage_id</stringProp>
                <stringProp name="Argument.value">RTC_85_BASE_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer_id" elementType="Argument">
                <stringProp name="Argument.name">productoffer_id</stringProp>
                <stringProp name="Argument.value">RTC_85_PRODUCT_OFFER_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start Sy Push Client" enabled="true"/>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true); 
f = new FileOutputStream(mapping_file_name, true); 
p = new PrintStream(f); 

// Write data to file 

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="RTC_85 Pre_Processing" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </com.computaris.jmeter.ext.controls.ParameterizedController>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Pcap and Logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872118812">Capture PCAP</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872996374">Capture log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture PD Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="1033451790">Capture PD log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create CRBN" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;global-charging-rule-base-name-container&gt;&#xd;
    &lt;chargingRuleBaseNameDatas&gt;&#xd;
        &lt;chargingRuleBaseNameData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;&lt;/id&gt;&#xd;
            &lt;name&gt;CRBN_85_1&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 01/05/2018 16:44:40&lt;/description&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                    &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;crbn_85_1_all&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_3&lt;/id&gt;&#xd;
                    &lt;name&gt;HTTP&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;crbn_85_1_http&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
        &lt;/chargingRuleBaseNameData&gt;&#xd;
        &lt;chargingRuleBaseNameData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;&lt;/id&gt;&#xd;
            &lt;name&gt;CRBN_85_2&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 01/05/2018 16:47:01&lt;/description&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                    &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;crbn_85_2_all&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_3&lt;/id&gt;&#xd;
                    &lt;name&gt;HTTP&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;crbn_85_2_http&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
        &lt;/chargingRuleBaseNameData&gt;&#xd;
        &lt;chargingRuleBaseNameData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
            &lt;id&gt;&lt;/id&gt;&#xd;
            &lt;name&gt;CRBN_85_3&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 01/05/2018 16:48:02&lt;/description&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                    &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;crbn_85_3_all&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
            &lt;chargingRuleDataServiceTypes&gt;&#xd;
                &lt;dataServiceType&gt;&#xd;
                    &lt;groups&gt;GROUP_1&lt;/groups&gt;&#xd;
                    &lt;id&gt;DATA_SERVICE_TYPE_3&lt;/id&gt;&#xd;
                    &lt;name&gt;HTTP&lt;/name&gt;&#xd;
                &lt;/dataServiceType&gt;&#xd;
                &lt;monitoringKey&gt;crbn_85_3_http&lt;/monitoringKey&gt;&#xd;
                &lt;id&gt;&lt;/id&gt;&#xd;
                &lt;sliceTotal&gt;500&lt;/sliceTotal&gt;&#xd;
                &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
            &lt;/chargingRuleDataServiceTypes&gt;&#xd;
        &lt;/chargingRuleBaseNameData&gt;&#xd;
    &lt;/chargingRuleBaseNameDatas&gt;&#xd;
&lt;/global-charging-rule-base-name-container&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_charging_rule_base_name_url}?${replace}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/xml</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create DataPackage" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;id&gt;RTC_85_BASE_111111111&lt;/id&gt;&#xd;
            &lt;name&gt;RTC_85_BASE&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 11/06/2017 15:13:07&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriod&gt;30&lt;/validityPeriod&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;SY_COUNTER_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin on 11/06/2017 15:15:02&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_85_QOS&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;1&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Mbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;1&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Mbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names&gt;&#xd;
                                &lt;charging-rule-base-name&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;name&gt;CRBN_85_1&lt;/name&gt;&#xd;
                                &lt;/charging-rule-base-name&gt;&#xd;
                            &lt;/charging-rule-base-names&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;RTC_85_HSQ_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;monitoringKey&gt;RTC_85_HSQ_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;gbrdlUnit&gt;Kbps&lt;/gbrdlUnit&gt;&#xd;
                                    &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;512&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;512&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names&gt;&#xd;
                                &lt;charging-rule-base-name&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;name&gt;CRBN_85_2&lt;/name&gt;&#xd;
                                &lt;/charging-rule-base-name&gt;&#xd;
                            &lt;/charging-rule-base-names&gt;&#xd;
                            &lt;fup-level&gt;1&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;RTC_85_FUP_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;monitoringKey&gt;RTC_85_FUP_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;gbrdlUnit&gt;Kbps&lt;/gbrdlUnit&gt;&#xd;
                                    &lt;mbrdl&gt;512&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Kbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;512&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Kbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl&gt;256&lt;/aambrdl&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul&gt;256&lt;/aambrul&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names&gt;&#xd;
                                &lt;charging-rule-base-name&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;name&gt;CRBN_85_3&lt;/name&gt;&#xd;
                                &lt;/charging-rule-base-name&gt;&#xd;
                            &lt;/charging-rule-base-names&gt;&#xd;
                            &lt;fup-level&gt;2&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;&lt;/id&gt;&#xd;
                            &lt;mbrdl-unit&gt;Kbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul-unit&gt;Kbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;id&gt;&lt;/id&gt;&#xd;
                                    &lt;dataServiceType&gt;&#xd;
                                        &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/dataServiceType&gt;&#xd;
                                    &lt;name&gt;RTC_85_FUP2_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;monitoringKey&gt;RTC_85_FUP2_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;gbrdlUnit&gt;Kbps&lt;/gbrdlUnit&gt;&#xd;
                                    &lt;mbrdl&gt;256&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Kbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;256&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Kbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;RTC_85_sy_quota_CRBN&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles&gt;&#xd;
                &lt;sy-quota-Profile&gt;&#xd;
                    &lt;id&gt;&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin on 11/06/2017 15:13:38&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_85_sy_quota_CRBN&lt;/name&gt;&#xd;
                    &lt;syQuotaProfileDetailDatas&gt;&#xd;
                        &lt;counterName&gt;gold_all&lt;/counterName&gt;&#xd;
                        &lt;counterPresent&gt;1&lt;/counterPresent&gt;&#xd;
                        &lt;fup1Value&gt;1&lt;/fup1Value&gt;&#xd;
                        &lt;fup2Value&gt;0&lt;/fup2Value&gt;&#xd;
                        &lt;hsqValue&gt;2&lt;/hsqValue&gt;&#xd;
                        &lt;id&gt;&lt;/id&gt;&#xd;
                        &lt;dataServiceType&gt;&#xd;
                            &lt;id&gt;DATA_SERVICE_TYPE_1&lt;/id&gt;&#xd;
                            &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                        &lt;/dataServiceType&gt;&#xd;
                    &lt;/syQuotaProfileDetailDatas&gt;&#xd;
                    &lt;syQuotaProfileDetailDatas&gt;&#xd;
                        &lt;counterName&gt;gold_http&lt;/counterName&gt;&#xd;
                        &lt;counterPresent&gt;1&lt;/counterPresent&gt;&#xd;
                        &lt;fup1Value&gt;1&lt;/fup1Value&gt;&#xd;
                        &lt;fup2Value&gt;0&lt;/fup2Value&gt;&#xd;
                        &lt;hsqValue&gt;2&lt;/hsqValue&gt;&#xd;
                        &lt;id&gt;&lt;/id&gt;&#xd;
                        &lt;dataServiceType&gt;&#xd;
                            &lt;id&gt;DATA_SERVICE_TYPE_3&lt;/id&gt;&#xd;
                            &lt;name&gt;HTTP&lt;/name&gt;&#xd;
                        &lt;/dataServiceType&gt;&#xd;
                    &lt;/syQuotaProfileDetailDatas&gt;&#xd;
                &lt;/sy-quota-Profile&gt;&#xd;
            &lt;/sy-quota-profiles&gt;&#xd;
            &lt;topUp-qos-multipliers/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
            &lt;currency&gt;${currency}&lt;/currency&gt;&#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/xml</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Offer" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${productoffer_id}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${productoffer}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin on 05/23/2018 10:12:03&quot;,&#xd;
   &quot;type&quot;:&quot;BASE&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${datapackage_id}&quot;,&#xd;
   &quot;validityPeriod&quot;:null,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null,&#xd;
   &quot;currency&quot;:&quot;${currency}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1909856551">${productoffer_id}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Offer" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}.json</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1909856551">${productoffer_id}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To TEST Mode" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=TEST</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
              <hashTree>
                <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                  <collectionProp name="ModuleController.node_path">
                    <stringProp name="-1227702913">WorkBench</stringProp>
                    <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                    <stringProp name="18059174">Common Functions</stringProp>
                    <stringProp name="-803016769">PD: Reload Policy</stringProp>
                  </collectionProp>
                </ModuleController>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To LIVE Mode" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode.json?pkgMode=LIVE</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Subscriber Provisioning Request" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsAddSubscriberProfile&gt;
         &lt;!--Optional:--&gt;
        &lt;subscriberProfile&gt;
               &lt;entry&gt;
                  &lt;key&gt;SUBSCRIBER_IDENTITY&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;USERNAME&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD_CHECK&lt;/key&gt;
                  &lt;value&gt;TRUE&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUSTOMER_TYPE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;STATUS&lt;/key&gt;
                  &lt;value&gt;Active&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PRODUCT_OFFER&lt;/key&gt;
                   &lt;value&gt;${productoffer}&lt;/value&gt;
                &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMS_PACKAGE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EXPIRY_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;AREA&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CITY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM1&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM2&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM3&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM4&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM5&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ZONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COUNTRY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;BIRTH_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ROLE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COMPANY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;DEPARTMENT&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ARPU&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CADRE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EMAIL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PHONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;SIP_URL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUI&lt;/key&gt;
                  &lt;value&gt;${cui}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMSI&lt;/key&gt;
                  &lt;value&gt;${imsi}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;MSISDN&lt;/key&gt;
                  &lt;value&gt;${msisdn}&lt;/value&gt;
               &lt;/entry&gt;
             &lt;/subscriberProfile&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsAddSubscriberProfile&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_85_CCR-I" enabled="true">
            <stringProp name="TestPlan.comments">Diameter CCR - Initial Request</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">2</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.1">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">0</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.8">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.8">1</stringProp>
            <stringProp name="DiameterSampler.avpName.9">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.9">0</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destination_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">154154</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Service-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.12">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.13">RAT-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.13">1001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">14</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">7</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Charging-Rule-Definition:Charging-Rule-Name:${RTC_85_HSQ_PCC}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Charging-Rule-Definition:QoS-Information:Max-Requested-Bandwidth-DL:1048576</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">QoS-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">APN-Aggregate-Max-Bitrate-DL:1048576</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Monitoring-Key:${crbn_85_1_all}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
              <stringProp name="DiameterAssertion.avpName.5">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.5">Monitoring-Key:${crbn_85_1_http}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.5">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.5"></stringProp>
              <stringProp name="DiameterAssertion.avpName.6">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.6">Granted-Service-Unit:CC-Total-Octets:524288000</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.6">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.6"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_85_CCR-U-1" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">1</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Event-Trigger</stringProp>
            <stringProp name="DiameterSampler.avpData.7">33</stringProp>
            <stringProp name="DiameterSampler.avpName.8">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.8">2</stringProp>
            <stringProp name="DiameterSampler.avpName.9">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">0</stringProp>
            <stringProp name="DiameterSampler.avpName.10">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.10">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Usage-Monitoring-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.11">3</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Monitoring-Key</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${__diamAVPValue(Usage-Monitoring-Information:Monitoring-Key[0],var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.13">1</stringProp>
            <stringProp name="DiameterSampler.avpName.14">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${__diamAVPValue(Usage-Monitoring-Information:Granted-Service-Unit:CC-Total-Octets,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Usage-Monitoring-Level</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${__diamAVPValue(Usage-Monitoring-Information:Usage-Monitoring-Level[0],var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Usage-Monitoring-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.16">3</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Monitoring-Key</stringProp>
            <stringProp name="DiameterSampler.avpData.17">${__diamAVPValue(Usage-Monitoring-Information:Monitoring-Key[1],var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.18">1</stringProp>
            <stringProp name="DiameterSampler.avpName.19">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.19">${__diamAVPValue(Usage-Monitoring-Information:Granted-Service-Unit:CC-Total-Octets,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Usage-Monitoring-Level</stringProp>
            <stringProp name="DiameterSampler.avpData.20">${__diamAVPValue(Usage-Monitoring-Information:Usage-Monitoring-Level[1],var)}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">21</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">5</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">QoS-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">APN-Aggregate-Max-Bitrate-DL:1048576</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Monitoring-Key:${crbn_85_1_all}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Monitoring-Key:${crbn_85_1_http}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Granted-Service-Unit:CC-Total-Octets:524288000</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
              <stringProp name="DiameterAssertion.avpName.5">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.5">Monitoring-Key:${crbn_84_1_http}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.5">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.5"></stringProp>
              <stringProp name="DiameterAssertion.avpName.6">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.6">Granted-Service-Unit:CC-Total-Octets:524288000</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.6">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.6"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="RTC_85_Expecting_RAR For FUP1" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Re-Auth-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.1">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Host-IP-Address</stringProp>
            <stringProp name="DiameterSampler.avpData.3">10.106.1.88</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.4">2001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">5</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="RAR Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">false</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Re-Auth-Request</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">6</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Charging-Rule-Definition:Charging-Rule-Name:${RTC_85_FUP_PCC}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Charging-Rule-Remove</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Charging-Rule-Name:${RTC_85_HSQ_PCC}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Charging-Rule-Base-Name:crbn_85_2</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Charging-Rule-Remove</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Charging-Rule-Base-Name:crbn_85_1</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Monitoring-Key:${crbn_85_2_all}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
              <stringProp name="DiameterAssertion.avpName.5">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.5">Monitoring-Key:${crbn_85_2_http}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.5">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.5"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_85_CCR-U-2" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">2</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">2</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Event-Trigger</stringProp>
            <stringProp name="DiameterSampler.avpData.7">33</stringProp>
            <stringProp name="DiameterSampler.avpName.8">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.8">2</stringProp>
            <stringProp name="DiameterSampler.avpName.9">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">0</stringProp>
            <stringProp name="DiameterSampler.avpName.10">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.10">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Usage-Monitoring-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.11">3</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Monitoring-Key</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${__diamAVPValue(Usage-Monitoring-Information:Monitoring-Key[0],var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.13">1</stringProp>
            <stringProp name="DiameterSampler.avpName.14">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.14">${__diamAVPValue(Usage-Monitoring-Information:Granted-Service-Unit:CC-Total-Octets,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Usage-Monitoring-Level</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${__diamAVPValue(Usage-Monitoring-Information:Usage-Monitoring-Level[0],var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Usage-Monitoring-Information</stringProp>
            <stringProp name="DiameterSampler.avpData.16">3</stringProp>
            <stringProp name="DiameterSampler.avpName.17">Monitoring-Key</stringProp>
            <stringProp name="DiameterSampler.avpData.17">${__diamAVPValue(Usage-Monitoring-Information:Monitoring-Key[1],var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.18">Used-Service-Unit</stringProp>
            <stringProp name="DiameterSampler.avpData.18">1</stringProp>
            <stringProp name="DiameterSampler.avpName.19">CC-Total-Octets</stringProp>
            <stringProp name="DiameterSampler.avpData.19">${__diamAVPValue(Usage-Monitoring-Information:Granted-Service-Unit:CC-Total-Octets,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.20">Usage-Monitoring-Level</stringProp>
            <stringProp name="DiameterSampler.avpData.20">${__diamAVPValue(Usage-Monitoring-Information:Usage-Monitoring-Level[1],var)}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">21</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-I Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">5</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">QoS-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">APN-Aggregate-Max-Bitrate-DL:524288</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Monitoring-Key:${crbn_85_2_all}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Monitoring-Key:${crbn_85_2_http}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Granted-Service-Unit:CC-Total-Octets:524288000</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
              <stringProp name="DiameterAssertion.avpName.5">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.5">Monitoring-Key:${crbn_85_2_http}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.5">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.5"></stringProp>
              <stringProp name="DiameterAssertion.avpName.6">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.6">Granted-Service-Unit:CC-Total-Octets:524288000</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.6">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.6"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.6"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="RTC_85_Expecting_RAR For FUP2" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Re-Auth-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.1">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Host-IP-Address</stringProp>
            <stringProp name="DiameterSampler.avpData.3">10.106.1.88</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.4">2001</stringProp>
            <stringProp name="DiameterSampler.avpCounter">5</stringProp>
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="RAR Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">false</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Re-Auth-Request</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">6</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">Charging-Rule-Definition:Charging-Rule-Name:${RTC_85_FUP2_PCC}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
              <stringProp name="DiameterAssertion.avpName.1">Charging-Rule-Remove</stringProp>
              <stringProp name="DiameterAssertion.avpData.1">Charging-Rule-Name:${RTC_85_FUP_PCC}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.1">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.1"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.1"></stringProp>
              <stringProp name="DiameterAssertion.avpName.2">Charging-Rule-Install</stringProp>
              <stringProp name="DiameterAssertion.avpData.2">Charging-Rule-Base-Name:crbn_85_3</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.2">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.2"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.2"></stringProp>
              <stringProp name="DiameterAssertion.avpName.3">Charging-Rule-Remove</stringProp>
              <stringProp name="DiameterAssertion.avpData.3">Charging-Rule-Base-Name:crbn_85_2</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.3">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.3"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.3"></stringProp>
              <stringProp name="DiameterAssertion.avpName.4">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.4">Monitoring-Key:${crbn_85_3_all}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.4">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.4"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.4"></stringProp>
              <stringProp name="DiameterAssertion.avpName.5">Usage-Monitoring-Information</stringProp>
              <stringProp name="DiameterAssertion.avpData.5">Monitoring-Key:${crbn_85_3_http}</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.5">false</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.5"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.5"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="RTC_85_CCR-T" enabled="true">
            <stringProp name="DiameterClient.connectionName">GxPCEF</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Credit-Control-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777238</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">16777238</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destination_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">CC-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">3</stringProp>
            <stringProp name="DiameterSampler.avpName.6">CC-Request-Number</stringProp>
            <stringProp name="DiameterSampler.avpData.6">3</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Termination-Cause</stringProp>
            <stringProp name="DiameterSampler.avpData.7">1</stringProp>
            <stringProp name="DiameterSampler.avpName.8">User-Equipment-Info</stringProp>
            <stringProp name="DiameterSampler.avpData.8">2</stringProp>
            <stringProp name="DiameterSampler.avpName.9">User-Equipment-Info-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.9">0</stringProp>
            <stringProp name="DiameterSampler.avpName.10">User-Equipment-Info-Value</stringProp>
            <stringProp name="DiameterSampler.avpData.10">33353831383230363236303232383031</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Called-Station-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">internet</stringProp>
            <stringProp name="DiameterSampler.avpCounter">12</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree>
            <com.computaris.jmeter.assertions.DiameterAssertion guiclass="com.computaris.jmeter.assertions.gui.DiameterAssertionGui" testclass="com.computaris.jmeter.assertions.DiameterAssertion" testname="CCR-T Diameter Assertion" enabled="true">
              <boolProp name="DiameterAssertion.ASSERT_ON_RESPONSE">true</boolProp>
              <stringProp name="DiameterAssertion.responseCode">200</stringProp>
              <stringProp name="DiameterAssertion.message">Credit-Control-Answer</stringProp>
              <stringProp name="DiameterAssertion.avpCounter">1</stringProp>
              <boolProp name="DiameterAssertion.caseEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.loadEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagP">true</boolProp>
              <boolProp name="DiameterAssertion.flagE">false</boolProp>
              <boolProp name="DiameterAssertion.flagT">false</boolProp>
              <stringProp name="DiameterAssertion.applicationID">16777238</stringProp>
              <stringProp name="DiameterAssertion.hopbyhopID"></stringProp>
              <stringProp name="DiameterAssertion.endtoendID"></stringProp>
              <boolProp name="DiameterAssertion.containsEnabled">true</boolProp>
              <stringProp name="DiameterAssertion.ASSERTION_MODE">CONTAINS</stringProp>
              <boolProp name="DiameterAssertion.ignoreStatusEnabled">false</boolProp>
              <boolProp name="DiameterAssertion.flagAppID">true</boolProp>
              <boolProp name="DiameterAssertion.flagHbhID">false</boolProp>
              <boolProp name="DiameterAssertion.flagE2eID">false</boolProp>
              <stringProp name="DiameterAssertion.avpName.0">Result-Code</stringProp>
              <stringProp name="DiameterAssertion.avpData.0">2001</stringProp>
              <stringProp name="DiameterAssertion.avpIsReg.0">true</stringProp>
              <stringProp name="DiameterAssertion.avpFlagM.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagP.0"></stringProp>
              <stringProp name="DiameterAssertion.avpFlagV.0"></stringProp>
            </com.computaris.jmeter.assertions.DiameterAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Stop Sy Push Client" enabled="true"/>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Simple Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sy-RTC_85" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Sy Push Server Scenario : RTC-85-Sy-Push-Server</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
          <stringProp name="SimpleTimer.TIMEOUT">337000</stringProp>
        </com.computaris.jmeter.ext.timer.SimpleTimer>
        <hashTree/>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="RTC_85" enabled="true">
          <stringProp name="TestPlan.comments">Verify Sy Counter Based Plan HSQ + 2 Level FUP with PULL Mode</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriber_identity" elementType="Argument">
                <stringProp name="Argument.name">subscriber_identity</stringProp>
                <stringProp name="Argument.value">1111111136</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">1111111136</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">1111111136</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">1111111136</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subscriber_package" elementType="Argument">
                <stringProp name="Argument.name">subscriber_package</stringProp>
                <stringProp name="Argument.value">RTC_SY_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">1111111136</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="session_id" elementType="Argument">
                <stringProp name="Argument.name">session_id</stringProp>
                <stringProp name="Argument.value">1111111136_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="counter_name_1" elementType="Argument">
                <stringProp name="Argument.name">counter_name_1</stringProp>
                <stringProp name="Argument.value">gold_all</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="counter_name_2" elementType="Argument">
                <stringProp name="Argument.name">counter_name_2</stringProp>
                <stringProp name="Argument.value">gold_http</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="hsq_counter_value" elementType="Argument">
                <stringProp name="Argument.name">hsq_counter_value</stringProp>
                <stringProp name="Argument.value">2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="fup1_counter_value" elementType="Argument">
                <stringProp name="Argument.name">fup1_counter_value</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="fup2_counter_value" elementType="Argument">
                <stringProp name="Argument.name">fup2_counter_value</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start Sy Push Server" enabled="true"/>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="CER-OCS" enabled="true">
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Capabilities-Exchange-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">false</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Supported-Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Vendor-Specific-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">3</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Acct-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.6">16777302</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Product-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.8">Jmeter</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">1094807040</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.10">16777302</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Acct-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">0</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Firmware-Revision</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">13</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="Send Counter 2 for HSQ" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Spending-Limit-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">SL-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.7">2</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${counter_name_1}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${hsq_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.10">2</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${counter_name_2}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${hsq_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">13</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="Send SNR for FUP1" enabled="true">
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Abort-Session-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">2</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.1">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">0</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Vendor-Specific-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.3">2</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">16777302</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.11">2</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${counter_name_1}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.13">${fup1_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.14">2</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${counter_name_2}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.16">${fup1_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">17</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree/>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="Send SNR for FUP2" enabled="true">
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Abort-Session-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">2</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.1">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.2">0</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Vendor-Specific-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.3">2</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">16777302</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.6">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.7">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.11">2</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${counter_name_1}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.13">${fup2_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpName.14">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.14">2</stringProp>
            <stringProp name="DiameterSampler.avpName.15">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.15">${counter_name_2}</stringProp>
            <stringProp name="DiameterSampler.avpName.16">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.16">${fup2_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">17</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree/>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="TestPlan.comments">Tool will wait for 1 Sec.</stringProp>
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="Send STA" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Session-Termination-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777302</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">4</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Stop Sy Push Server" enabled="true"/>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Post Processing" enabled="true"/>
          <hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop pcap and logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="stop Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-720136512">Stop Pcap</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop NV log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-632654166">Stop NV log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop PD log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-592019242">Stop PD log</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Simple Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sy-RTC_1011" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Sy Pull Client Scenario : RTC-1011-Sy-Pull-Client</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
          <stringProp name="SimpleTimer.TIMEOUT">310000</stringProp>
        </com.computaris.jmeter.ext.timer.SimpleTimer>
        <hashTree/>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="RTC_1011" enabled="true">
          <stringProp name="TestPlan.comments">Verify Sy Counter Based Plan HSQ + 2 Level FUP with PULL Mode</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriberidentity" elementType="Argument">
                <stringProp name="Argument.name">subscriberidentity</stringProp>
                <stringProp name="Argument.value">1111111011</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">1111111011</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">1111111011</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">1111111011</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage" elementType="Argument">
                <stringProp name="Argument.name">datapackage</stringProp>
                <stringProp name="Argument.value">RTC_1011_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">1111111011</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sessionid" elementType="Argument">
                <stringProp name="Argument.name">sessionid</stringProp>
                <stringProp name="Argument.value">1111111011</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="password" elementType="Argument">
                <stringProp name="Argument.name">password</stringProp>
                <stringProp name="Argument.value">1111111011</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="framedip" elementType="Argument">
                <stringProp name="Argument.name">framedip</stringProp>
                <stringProp name="Argument.value">192.168.22.11</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pccrulename" elementType="Argument">
                <stringProp name="Argument.name">pccrulename</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">Sy-RTC_1011</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapfilename" elementType="Argument">
                <stringProp name="Argument.name">pcapfilename</stringProp>
                <stringProp name="Argument.value">Sy-RTC_1011</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="logfilename" elementType="Argument">
                <stringProp name="Argument.name">logfilename</stringProp>
                <stringProp name="Argument.value">Sy-RTC_1011</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">25250</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer" elementType="Argument">
                <stringProp name="Argument.name">productoffer</stringProp>
                <stringProp name="Argument.value">RTC_1011_PRODUCT_OFFER</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage_id" elementType="Argument">
                <stringProp name="Argument.name">datapackage_id</stringProp>
                <stringProp name="Argument.value">6da8bfef-2e3b-4c4b-aca9-642cf1c8ab90</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer_id" elementType="Argument">
                <stringProp name="Argument.name">productoffer_id</stringProp>
                <stringProp name="Argument.value">RTC_1011_PRODUCT_OFFER_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start of Sy_Client" enabled="true"/>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true); 
f = new FileOutputStream(mapping_file_name, true); 
p = new PrintStream(f); 

// Write data to file 

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="RTC_35 Pre_Processing" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </com.computaris.jmeter.ext.controls.ParameterizedController>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="false">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create DataPackage" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;id&gt;6da8bfef-2e3b-4c4b-aca9-642cf1c8ab90&lt;/id&gt;&#xd;
            &lt;name&gt;RTC_1011_BASE&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 07/25/2017 15:39:35&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriod&gt;30&lt;/validityPeriod&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;SY_COUNTER_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;id&gt;4277096d-04c2-4f7e-83ba-95d855be514a&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin on 07/25/2017 15:42:04&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_1011_QOS&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;3a9c3389-a9af-44d7-8c97-3b015c302853&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;3&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;3&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;id&gt;ffe11915-c7a9-4667-81d5-f81ea265828f&lt;/id&gt;&#xd;
                                    &lt;serviceType&gt;&#xd;
                                        &lt;id&gt;SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/serviceType&gt;&#xd;
                                    &lt;name&gt;RTC_1011_HSQ_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;monitoringKey&gt;RTC_1011_HSQ_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;gbrdlUnit&gt;Kbps&lt;/gbrdlUnit&gt;&#xd;
                                    &lt;mbrdl&gt;3&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;3&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;50&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;b3ad0670-106f-402e-adaa-7beda2688675&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;a936e3e4-e1a2-4e44-b753-c400593c82fb&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;1&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;cf7ef533-5ed6-4145-964c-d49ddebb60ea&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;2&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;2&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;id&gt;c6ab1b0c-17b6-44b0-9542-688538510b10&lt;/id&gt;&#xd;
                                    &lt;serviceType&gt;&#xd;
                                        &lt;id&gt;SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/serviceType&gt;&#xd;
                                    &lt;name&gt;RTC_1011_FUP1_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;monitoringKey&gt;RTC_1011_FUP1_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;gbrdlUnit&gt;Kbps&lt;/gbrdlUnit&gt;&#xd;
                                    &lt;mbrdl&gt;2&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;2&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;33750b3c-30de-414f-afe5-3ff004c20a4d&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;5f0a7834-a584-4607-958d-ec2d86242769&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;2&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;90c74473-c78d-4ff0-ba99-49dd9f847c91&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;id&gt;ad480271-4eda-4cb2-a532-37f13595bc09&lt;/id&gt;&#xd;
                                    &lt;serviceType&gt;&#xd;
                                        &lt;id&gt;SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/serviceType&gt;&#xd;
                                    &lt;name&gt;RTC_1011_FUP2_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;monitoringKey&gt;RTC_1011_FUP2_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;gbrdlUnit&gt;Kbps&lt;/gbrdlUnit&gt;&#xd;
                                    &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;15&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;696653bd-aeee-44f1-b438-cf4f707ca0d2&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;2f404622-4207-4464-a2d3-9319553b5c1e&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;e27c5eac-c0c1-44aa-8ce3-7794994669dc&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;RTC_1011_QUOTA&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles&gt;&#xd;
                &lt;sy-quota-Profile&gt;&#xd;
                    &lt;id&gt;e27c5eac-c0c1-44aa-8ce3-7794994669dc&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin on 07/25/2017 15:40:53&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_1011_QUOTA&lt;/name&gt;&#xd;
                    &lt;syQuotaProfileDetailDatas&gt;&#xd;
                        &lt;counterName&gt;gold_qos&lt;/counterName&gt;&#xd;
                        &lt;counterPresent&gt;1&lt;/counterPresent&gt;&#xd;
                        &lt;fup1Value&gt;2&lt;/fup1Value&gt;&#xd;
                        &lt;fup2Value&gt;1&lt;/fup2Value&gt;&#xd;
                        &lt;hsqValue&gt;3&lt;/hsqValue&gt;&#xd;
                        &lt;id&gt;8d3fcfe3-f22d-427f-9ee6-738428942fa4&lt;/id&gt;&#xd;
                        &lt;serviceTypeData&gt;&#xd;
                            &lt;id&gt;SERVICE_TYPE_1&lt;/id&gt;&#xd;
                            &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                        &lt;/serviceTypeData&gt;&#xd;
                    &lt;/syQuotaProfileDetailDatas&gt;&#xd;
                &lt;/sy-quota-Profile&gt;&#xd;
            &lt;/sy-quota-profiles&gt;&#xd;
            &lt;topUp-qos-multipliers/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
            &lt;currency&gt;USD&lt;/currency&gt;            &#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/xml</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Offer" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${productoffer_id}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${productoffer}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin on 05/23/2018 10:12:03&quot;,&#xd;
   &quot;type&quot;:&quot;BASE&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${datapackage_id}&quot;,&#xd;
   &quot;validityPeriod&quot;:null,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Attach RnC Package" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;rest_product_offer_${id}&quot;,&#xd;
  &quot;productOfferServicePkgRelDataList&quot;: [&#xd;
    {&#xd;
   	&quot;serviceId&quot;:&quot;VOICE&quot;,&#xd;
   	&quot;rncPackageId&quot;:&quot;rest_rnc_package_${id}&quot;&#xd;
    }&#xd;
  ]&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/rest_product_offer_${id}/addServicePkgRelations.json</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1440523576">&quot;id&quot;:&quot;rest_product_offer_${id}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Offer" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}.json</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To Live Mode" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode?_method=put&amp;pkgMode=LIVE</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Subscriber Provisioning Request" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsAddSubscriberProfile&gt;
         &lt;!--Optional:--&gt;
        &lt;subscriberProfile&gt;
               &lt;entry&gt;
                  &lt;key&gt;SUBSCRIBER_IDENTITY&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;USERNAME&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD_CHECK&lt;/key&gt;
                  &lt;value&gt;TRUE&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUSTOMER_TYPE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;STATUS&lt;/key&gt;
                  &lt;value&gt;Active&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PRODUCT_OFFER&lt;/key&gt;
                   &lt;value&gt;${productoffer}&lt;/value&gt;
                &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMS_PACKAGE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EXPIRY_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;AREA&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CITY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM1&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM2&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM3&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM4&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM5&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ZONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COUNTRY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;BIRTH_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ROLE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COMPANY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;DEPARTMENT&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ARPU&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CADRE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EMAIL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PHONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;SIP_URL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUI&lt;/key&gt;
                  &lt;value&gt;${cui}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMSI&lt;/key&gt;
                  &lt;value&gt;${imsi}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;MSISDN&lt;/key&gt;
                  &lt;value&gt;${msisdn}&lt;/value&gt;
               &lt;/entry&gt;
             &lt;/subscriberProfile&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsAddSubscriberProfile&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Pcap and Logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872118812">Capture PCAP</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872996374">Capture log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter__plugins.radius__client.sampler.RadiusClientSampler guiclass="com.computaris.jmeter_plugins.radius_client.sampler.gui.RadiusClientSamplerGui" testclass="com.computaris.jmeter_plugins.radius_client.sampler.RadiusClientSampler" testname="Access Request" enabled="true">
            <stringProp name="TestPlan.comments">step 1</stringProp>
            <stringProp name="RadiusSampler.message">Access-Request</stringProp>
            <stringProp name="radiusSampler.auth_type">Passphrase Authentication Protocol (PAP)</stringProp>
            <stringProp name="RadiusSampler.avpName.0">NAS-IP-Address</stringProp>
            <stringProp name="RadiusSampler.avpData.0">${nasip}</stringProp>
            <stringProp name="RadiusSampler.avpName.1">User-Name</stringProp>
            <stringProp name="RadiusSampler.avpData.1">${username}</stringProp>
            <stringProp name="RadiusSampler.avpName.2">User-Password</stringProp>
            <stringProp name="RadiusSampler.avpData.2">${password}</stringProp>
            <stringProp name="RadiusSampler.avpName.3">NAS-Port</stringProp>
            <stringProp name="RadiusSampler.avpData.3">${nasport}</stringProp>
            <stringProp name="RadiusSampler.avpCounter">4</stringProp>
          </com.computaris.jmeter__plugins.radius__client.sampler.RadiusClientSampler>
          <hashTree>
            <com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion guiclass="com.computaris.jmeter_plugins.radius_client.assertion.gui.RadiusAssertionGui" testclass="com.computaris.jmeter_plugins.radius_client.assertion.RadiusAssertion" testname="TTS Radius Assertion" enabled="true">
              <stringProp name="RadiusAssertion.message">Access-Accept</stringProp>
              <stringProp name="RadiusAssertion.avpCounter">1</stringProp>
              <stringProp name="RadiusAssertion.ASSERT_ON_RESPONSE">true</stringProp>
              <stringProp name="RadiusAssertion.avpName.0">User-Name</stringProp>
              <stringProp name="RadiusAssertion.avpData.0">${username}</stringProp>
            </com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter__plugins.radius__client.sampler.RadiusClientSampler guiclass="com.computaris.jmeter_plugins.radius_client.sampler.gui.RadiusClientSamplerGui" testclass="com.computaris.jmeter_plugins.radius_client.sampler.RadiusClientSampler" testname="Accounting Start 100" enabled="true">
            <stringProp name="TestPlan.comments">step 2</stringProp>
            <stringProp name="RadiusSampler.message">Accounting-Request</stringProp>
            <stringProp name="radiusSampler.auth_type">Passphrase Authentication Protocol (PAP)</stringProp>
            <stringProp name="RadiusSampler.avpName.0">Acct-Output-Octets</stringProp>
            <stringProp name="RadiusSampler.avpData.0">52428800</stringProp>
            <stringProp name="RadiusSampler.avpName.1">Acct-Input-Octets</stringProp>
            <stringProp name="RadiusSampler.avpData.1">52428800</stringProp>
            <stringProp name="RadiusSampler.avpName.2">Acct-Session-Id</stringProp>
            <stringProp name="RadiusSampler.avpData.2">${sessionid}</stringProp>
            <stringProp name="RadiusSampler.avpName.3">Acct-Status-Type</stringProp>
            <stringProp name="RadiusSampler.avpData.3">1</stringProp>
            <stringProp name="RadiusSampler.avpName.4">NAS-IP-Address</stringProp>
            <stringProp name="RadiusSampler.avpData.4">${nasip}</stringProp>
            <stringProp name="RadiusSampler.avpName.5">User-Name</stringProp>
            <stringProp name="RadiusSampler.avpData.5">${username}</stringProp>
            <stringProp name="RadiusSampler.avpName.6">NAS-Port</stringProp>
            <stringProp name="RadiusSampler.avpData.6">${nasport}</stringProp>
            <stringProp name="RadiusSampler.avpName.7">Framed-IP-Address</stringProp>
            <stringProp name="RadiusSampler.avpData.7">${framedip}</stringProp>
            <stringProp name="RadiusSampler.avpCounter">8</stringProp>
          </com.computaris.jmeter__plugins.radius__client.sampler.RadiusClientSampler>
          <hashTree>
            <com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion guiclass="com.computaris.jmeter_plugins.radius_client.assertion.gui.RadiusAssertionGui" testclass="com.computaris.jmeter_plugins.radius_client.assertion.RadiusAssertion" testname="TTS Radius Assertion" enabled="true">
              <stringProp name="RadiusAssertion.message">Accounting-Response</stringProp>
              <stringProp name="RadiusAssertion.avpCounter">0</stringProp>
              <stringProp name="RadiusAssertion.ASSERT_ON_RESPONSE">true</stringProp>
            </com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter__plugins.radius__server.sampler.RadiusServerSampler guiclass="com.computaris.jmeter_plugins.radius_server.sampler.gui.RadiusServerSamplerGui" testclass="com.computaris.jmeter_plugins.radius_server.sampler.RadiusServerSampler" testname="Listen COA request" enabled="true">
            <stringProp name="TestPlan.comments">here we build servers answer. all fields are empty, becouse they are loaded from configuration</stringProp>
            <boolProp name="RadiusServerSampler.LISTENING_SERVER_BUTTON_STATUS">true</boolProp>
            <boolProp name="RadiusServerSampler.SENDING_SERVER_BUTTON_STATUS">false</boolProp>
            <stringProp name="RadiusSampler.message">Access-Accept</stringProp>
            <stringProp name="RadiusSampler.avpName.0">Service-Type</stringProp>
            <stringProp name="RadiusSampler.avpData.0">1</stringProp>
            <stringProp name="RadiusSampler.avpName.1">Login-Service</stringProp>
            <stringProp name="RadiusSampler.avpData.1">1</stringProp>
            <stringProp name="RadiusSampler.avpName.2">Login-IP-Host</stringProp>
            <stringProp name="RadiusSampler.avpData.2">192.168.96.150</stringProp>
            <stringProp name="RadiusSampler.avpName.3">Reply-Message</stringProp>
            <stringProp name="RadiusSampler.avpData.3">access granted</stringProp>
            <stringProp name="RadiusSampler.avpCounter">4</stringProp>
          </com.computaris.jmeter__plugins.radius__server.sampler.RadiusServerSampler>
          <hashTree>
            <com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion guiclass="com.computaris.jmeter_plugins.radius_client.assertion.gui.RadiusAssertionGui" testclass="com.computaris.jmeter_plugins.radius_client.assertion.RadiusAssertion" testname="TTS Radius Assertion" enabled="true">
              <stringProp name="RadiusAssertion.message">CoA-Request</stringProp>
              <stringProp name="RadiusAssertion.avpCounter">0</stringProp>
              <stringProp name="RadiusAssertion.ASSERT_ON_RESPONSE">true</stringProp>
            </com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter__plugins.radius__server.sampler.RadiusServerSampler guiclass="com.computaris.jmeter_plugins.radius_server.sampler.gui.RadiusServerSamplerGui" testclass="com.computaris.jmeter_plugins.radius_server.sampler.RadiusServerSampler" testname="Answer CoA" enabled="true">
            <stringProp name="TestPlan.comments">this is ack for COA request</stringProp>
            <boolProp name="RadiusServerSampler.LISTENING_SERVER_BUTTON_STATUS">false</boolProp>
            <boolProp name="RadiusServerSampler.SENDING_SERVER_BUTTON_STATUS">true</boolProp>
            <stringProp name="RadiusSampler.message">CoA-ACK</stringProp>
            <stringProp name="RadiusSampler.avpCounter">0</stringProp>
          </com.computaris.jmeter__plugins.radius__server.sampler.RadiusServerSampler>
          <hashTree/>
          <com.computaris.jmeter__plugins.radius__client.sampler.RadiusClientSampler guiclass="com.computaris.jmeter_plugins.radius_client.sampler.gui.RadiusClientSamplerGui" testclass="com.computaris.jmeter_plugins.radius_client.sampler.RadiusClientSampler" testname="Accounting Update with 100 MB" enabled="true">
            <stringProp name="TestPlan.comments">step 4</stringProp>
            <stringProp name="RadiusSampler.message">Accounting-Request</stringProp>
            <stringProp name="radiusSampler.auth_type">Passphrase Authentication Protocol (PAP)</stringProp>
            <stringProp name="RadiusSampler.avpName.0">Acct-Status-Type</stringProp>
            <stringProp name="RadiusSampler.avpData.0">3</stringProp>
            <stringProp name="RadiusSampler.avpName.1">NAS-IP-Address</stringProp>
            <stringProp name="RadiusSampler.avpData.1">${nasip}</stringProp>
            <stringProp name="RadiusSampler.avpName.2">Acct-Input-Octets</stringProp>
            <stringProp name="RadiusSampler.avpData.2">52428800</stringProp>
            <stringProp name="RadiusSampler.avpName.3">Acct-Output-Octets</stringProp>
            <stringProp name="RadiusSampler.avpData.3">52428800</stringProp>
            <stringProp name="RadiusSampler.avpName.4">Acct-Session-Id</stringProp>
            <stringProp name="RadiusSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="RadiusSampler.avpName.5">User-Name</stringProp>
            <stringProp name="RadiusSampler.avpData.5">${username}</stringProp>
            <stringProp name="RadiusSampler.avpName.6">Framed-IP-Address</stringProp>
            <stringProp name="RadiusSampler.avpData.6">${framedip}</stringProp>
            <stringProp name="RadiusSampler.avpCounter">7</stringProp>
          </com.computaris.jmeter__plugins.radius__client.sampler.RadiusClientSampler>
          <hashTree>
            <com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion guiclass="com.computaris.jmeter_plugins.radius_client.assertion.gui.RadiusAssertionGui" testclass="com.computaris.jmeter_plugins.radius_client.assertion.RadiusAssertion" testname="TTS Radius Assertion" enabled="true">
              <stringProp name="RadiusAssertion.message">Accounting-Response</stringProp>
              <stringProp name="RadiusAssertion.avpCounter">0</stringProp>
              <stringProp name="RadiusAssertion.ASSERT_ON_RESPONSE">true</stringProp>
            </com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter__plugins.radius__server.sampler.RadiusServerSampler guiclass="com.computaris.jmeter_plugins.radius_server.sampler.gui.RadiusServerSamplerGui" testclass="com.computaris.jmeter_plugins.radius_server.sampler.RadiusServerSampler" testname="Listen COA request" enabled="true">
            <stringProp name="TestPlan.comments">here we build servers answer. all fields are empty, becouse they are loaded from configuration</stringProp>
            <boolProp name="RadiusServerSampler.LISTENING_SERVER_BUTTON_STATUS">true</boolProp>
            <boolProp name="RadiusServerSampler.SENDING_SERVER_BUTTON_STATUS">false</boolProp>
            <stringProp name="RadiusSampler.message">Access-Accept</stringProp>
            <stringProp name="RadiusSampler.avpName.0">Service-Type</stringProp>
            <stringProp name="RadiusSampler.avpData.0">1</stringProp>
            <stringProp name="RadiusSampler.avpName.1">Login-Service</stringProp>
            <stringProp name="RadiusSampler.avpData.1">1</stringProp>
            <stringProp name="RadiusSampler.avpName.2">Login-IP-Host</stringProp>
            <stringProp name="RadiusSampler.avpData.2">192.168.96.150</stringProp>
            <stringProp name="RadiusSampler.avpName.3">Reply-Message</stringProp>
            <stringProp name="RadiusSampler.avpData.3">access granted</stringProp>
            <stringProp name="RadiusSampler.avpCounter">4</stringProp>
          </com.computaris.jmeter__plugins.radius__server.sampler.RadiusServerSampler>
          <hashTree>
            <com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion guiclass="com.computaris.jmeter_plugins.radius_client.assertion.gui.RadiusAssertionGui" testclass="com.computaris.jmeter_plugins.radius_client.assertion.RadiusAssertion" testname="TTS Radius Assertion" enabled="true">
              <stringProp name="RadiusAssertion.message">CoA-Request</stringProp>
              <stringProp name="RadiusAssertion.avpCounter">0</stringProp>
              <stringProp name="RadiusAssertion.ASSERT_ON_RESPONSE">true</stringProp>
            </com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter__plugins.radius__server.sampler.RadiusServerSampler guiclass="com.computaris.jmeter_plugins.radius_server.sampler.gui.RadiusServerSamplerGui" testclass="com.computaris.jmeter_plugins.radius_server.sampler.RadiusServerSampler" testname="Answer CoA" enabled="true">
            <stringProp name="TestPlan.comments">this is ack for COA request</stringProp>
            <boolProp name="RadiusServerSampler.LISTENING_SERVER_BUTTON_STATUS">false</boolProp>
            <boolProp name="RadiusServerSampler.SENDING_SERVER_BUTTON_STATUS">true</boolProp>
            <stringProp name="RadiusSampler.message">CoA-ACK</stringProp>
            <stringProp name="RadiusSampler.avpCounter">0</stringProp>
          </com.computaris.jmeter__plugins.radius__server.sampler.RadiusServerSampler>
          <hashTree/>
          <com.computaris.jmeter__plugins.radius__client.sampler.RadiusClientSampler guiclass="com.computaris.jmeter_plugins.radius_client.sampler.gui.RadiusClientSamplerGui" testclass="com.computaris.jmeter_plugins.radius_client.sampler.RadiusClientSampler" testname="Accounting Update with 100 MB" enabled="true">
            <stringProp name="TestPlan.comments">step 4</stringProp>
            <stringProp name="RadiusSampler.message">Accounting-Request</stringProp>
            <stringProp name="radiusSampler.auth_type">Passphrase Authentication Protocol (PAP)</stringProp>
            <stringProp name="RadiusSampler.avpName.0">Acct-Status-Type</stringProp>
            <stringProp name="RadiusSampler.avpData.0">3</stringProp>
            <stringProp name="RadiusSampler.avpName.1">NAS-IP-Address</stringProp>
            <stringProp name="RadiusSampler.avpData.1">${nasip}</stringProp>
            <stringProp name="RadiusSampler.avpName.2">Acct-Input-Octets</stringProp>
            <stringProp name="RadiusSampler.avpData.2">52428800</stringProp>
            <stringProp name="RadiusSampler.avpName.3">Acct-Output-Octets</stringProp>
            <stringProp name="RadiusSampler.avpData.3">52428800</stringProp>
            <stringProp name="RadiusSampler.avpName.4">Acct-Session-Id</stringProp>
            <stringProp name="RadiusSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="RadiusSampler.avpName.5">User-Name</stringProp>
            <stringProp name="RadiusSampler.avpData.5">${username}</stringProp>
            <stringProp name="RadiusSampler.avpName.6">Framed-IP-Address</stringProp>
            <stringProp name="RadiusSampler.avpData.6">${framedip}</stringProp>
            <stringProp name="RadiusSampler.avpCounter">7</stringProp>
          </com.computaris.jmeter__plugins.radius__client.sampler.RadiusClientSampler>
          <hashTree>
            <com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion guiclass="com.computaris.jmeter_plugins.radius_client.assertion.gui.RadiusAssertionGui" testclass="com.computaris.jmeter_plugins.radius_client.assertion.RadiusAssertion" testname="TTS Radius Assertion" enabled="true">
              <stringProp name="RadiusAssertion.message">Accounting-Response</stringProp>
              <stringProp name="RadiusAssertion.avpCounter">0</stringProp>
              <stringProp name="RadiusAssertion.ASSERT_ON_RESPONSE">true</stringProp>
            </com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter__plugins.radius__client.sampler.RadiusClientSampler guiclass="com.computaris.jmeter_plugins.radius_client.sampler.gui.RadiusClientSamplerGui" testclass="com.computaris.jmeter_plugins.radius_client.sampler.RadiusClientSampler" testname="Accounting Update with 100 MB" enabled="true">
            <stringProp name="TestPlan.comments">step 4</stringProp>
            <stringProp name="RadiusSampler.message">Accounting-Request</stringProp>
            <stringProp name="radiusSampler.auth_type">Passphrase Authentication Protocol (PAP)</stringProp>
            <stringProp name="RadiusSampler.avpName.0">Acct-Status-Type</stringProp>
            <stringProp name="RadiusSampler.avpData.0">3</stringProp>
            <stringProp name="RadiusSampler.avpName.1">NAS-IP-Address</stringProp>
            <stringProp name="RadiusSampler.avpData.1">${nasip}</stringProp>
            <stringProp name="RadiusSampler.avpName.2">Acct-Input-Octets</stringProp>
            <stringProp name="RadiusSampler.avpData.2">52428800</stringProp>
            <stringProp name="RadiusSampler.avpName.3">Acct-Output-Octets</stringProp>
            <stringProp name="RadiusSampler.avpData.3">52428800</stringProp>
            <stringProp name="RadiusSampler.avpName.4">Acct-Session-Id</stringProp>
            <stringProp name="RadiusSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="RadiusSampler.avpName.5">User-Name</stringProp>
            <stringProp name="RadiusSampler.avpData.5">${username}</stringProp>
            <stringProp name="RadiusSampler.avpName.6">Framed-IP-Address</stringProp>
            <stringProp name="RadiusSampler.avpData.6">${framedip}</stringProp>
            <stringProp name="RadiusSampler.avpCounter">7</stringProp>
          </com.computaris.jmeter__plugins.radius__client.sampler.RadiusClientSampler>
          <hashTree>
            <com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion guiclass="com.computaris.jmeter_plugins.radius_client.assertion.gui.RadiusAssertionGui" testclass="com.computaris.jmeter_plugins.radius_client.assertion.RadiusAssertion" testname="TTS Radius Assertion" enabled="true">
              <stringProp name="RadiusAssertion.message">Accounting-Response</stringProp>
              <stringProp name="RadiusAssertion.avpCounter">0</stringProp>
              <stringProp name="RadiusAssertion.ASSERT_ON_RESPONSE">true</stringProp>
            </com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter__plugins.radius__server.sampler.RadiusServerSampler guiclass="com.computaris.jmeter_plugins.radius_server.sampler.gui.RadiusServerSamplerGui" testclass="com.computaris.jmeter_plugins.radius_server.sampler.RadiusServerSampler" testname="Listen COA request" enabled="true">
            <stringProp name="TestPlan.comments">here we build servers answer. all fields are empty, becouse they are loaded from configuration</stringProp>
            <boolProp name="RadiusServerSampler.LISTENING_SERVER_BUTTON_STATUS">true</boolProp>
            <boolProp name="RadiusServerSampler.SENDING_SERVER_BUTTON_STATUS">false</boolProp>
            <stringProp name="RadiusSampler.message">Access-Accept</stringProp>
            <stringProp name="RadiusSampler.avpName.0">Service-Type</stringProp>
            <stringProp name="RadiusSampler.avpData.0">1</stringProp>
            <stringProp name="RadiusSampler.avpName.1">Login-Service</stringProp>
            <stringProp name="RadiusSampler.avpData.1">1</stringProp>
            <stringProp name="RadiusSampler.avpName.2">Login-IP-Host</stringProp>
            <stringProp name="RadiusSampler.avpData.2">192.168.96.150</stringProp>
            <stringProp name="RadiusSampler.avpName.3">Reply-Message</stringProp>
            <stringProp name="RadiusSampler.avpData.3">access granted</stringProp>
            <stringProp name="RadiusSampler.avpCounter">4</stringProp>
          </com.computaris.jmeter__plugins.radius__server.sampler.RadiusServerSampler>
          <hashTree>
            <com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion guiclass="com.computaris.jmeter_plugins.radius_client.assertion.gui.RadiusAssertionGui" testclass="com.computaris.jmeter_plugins.radius_client.assertion.RadiusAssertion" testname="TTS Radius Assertion" enabled="true">
              <stringProp name="RadiusAssertion.message">CoA-Request</stringProp>
              <stringProp name="RadiusAssertion.avpCounter">0</stringProp>
              <stringProp name="RadiusAssertion.ASSERT_ON_RESPONSE">true</stringProp>
            </com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter__plugins.radius__server.sampler.RadiusServerSampler guiclass="com.computaris.jmeter_plugins.radius_server.sampler.gui.RadiusServerSamplerGui" testclass="com.computaris.jmeter_plugins.radius_server.sampler.RadiusServerSampler" testname="Answer CoA" enabled="true">
            <stringProp name="TestPlan.comments">this is ack for COA request</stringProp>
            <boolProp name="RadiusServerSampler.LISTENING_SERVER_BUTTON_STATUS">false</boolProp>
            <boolProp name="RadiusServerSampler.SENDING_SERVER_BUTTON_STATUS">true</boolProp>
            <stringProp name="RadiusSampler.message">CoA-ACK</stringProp>
            <stringProp name="RadiusSampler.avpCounter">0</stringProp>
          </com.computaris.jmeter__plugins.radius__server.sampler.RadiusServerSampler>
          <hashTree/>
          <com.computaris.jmeter__plugins.radius__client.sampler.RadiusClientSampler guiclass="com.computaris.jmeter_plugins.radius_client.sampler.gui.RadiusClientSamplerGui" testclass="com.computaris.jmeter_plugins.radius_client.sampler.RadiusClientSampler" testname="Accounting Update with 100 MB" enabled="true">
            <stringProp name="TestPlan.comments">step 4</stringProp>
            <stringProp name="RadiusSampler.message">Accounting-Request</stringProp>
            <stringProp name="radiusSampler.auth_type">Passphrase Authentication Protocol (PAP)</stringProp>
            <stringProp name="RadiusSampler.avpName.0">Acct-Status-Type</stringProp>
            <stringProp name="RadiusSampler.avpData.0">3</stringProp>
            <stringProp name="RadiusSampler.avpName.1">NAS-IP-Address</stringProp>
            <stringProp name="RadiusSampler.avpData.1">${nasip}</stringProp>
            <stringProp name="RadiusSampler.avpName.2">Acct-Input-Octets</stringProp>
            <stringProp name="RadiusSampler.avpData.2">52428800</stringProp>
            <stringProp name="RadiusSampler.avpName.3">Acct-Output-Octets</stringProp>
            <stringProp name="RadiusSampler.avpData.3">52428800</stringProp>
            <stringProp name="RadiusSampler.avpName.4">Acct-Session-Id</stringProp>
            <stringProp name="RadiusSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="RadiusSampler.avpName.5">User-Name</stringProp>
            <stringProp name="RadiusSampler.avpData.5">${username}</stringProp>
            <stringProp name="RadiusSampler.avpName.6">Framed-IP-Address</stringProp>
            <stringProp name="RadiusSampler.avpData.6">${framedip}</stringProp>
            <stringProp name="RadiusSampler.avpCounter">7</stringProp>
          </com.computaris.jmeter__plugins.radius__client.sampler.RadiusClientSampler>
          <hashTree>
            <com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion guiclass="com.computaris.jmeter_plugins.radius_client.assertion.gui.RadiusAssertionGui" testclass="com.computaris.jmeter_plugins.radius_client.assertion.RadiusAssertion" testname="TTS Radius Assertion" enabled="true">
              <stringProp name="RadiusAssertion.message">Accounting-Response</stringProp>
              <stringProp name="RadiusAssertion.avpCounter">0</stringProp>
              <stringProp name="RadiusAssertion.ASSERT_ON_RESPONSE">true</stringProp>
            </com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter__plugins.radius__client.sampler.RadiusClientSampler guiclass="com.computaris.jmeter_plugins.radius_client.sampler.gui.RadiusClientSamplerGui" testclass="com.computaris.jmeter_plugins.radius_client.sampler.RadiusClientSampler" testname="Accounting Stop" enabled="true">
            <stringProp name="TestPlan.comments">step 8 : </stringProp>
            <stringProp name="RadiusSampler.message">Accounting-Request</stringProp>
            <stringProp name="radiusSampler.auth_type">Passphrase Authentication Protocol (PAP)</stringProp>
            <stringProp name="RadiusSampler.avpName.0">User-Name</stringProp>
            <stringProp name="RadiusSampler.avpData.0">${username}</stringProp>
            <stringProp name="RadiusSampler.avpName.1">Acct-Status-Type</stringProp>
            <stringProp name="RadiusSampler.avpData.1">2</stringProp>
            <stringProp name="RadiusSampler.avpName.2">Acct-Session-Id</stringProp>
            <stringProp name="RadiusSampler.avpData.2">${sessionid}</stringProp>
            <stringProp name="RadiusSampler.avpName.3">NAS-IP-Address</stringProp>
            <stringProp name="RadiusSampler.avpData.3">${nasip}</stringProp>
            <stringProp name="RadiusSampler.avpName.4">Framed-IP-Address</stringProp>
            <stringProp name="RadiusSampler.avpData.4">${framedip}</stringProp>
            <stringProp name="RadiusSampler.avpCounter">5</stringProp>
          </com.computaris.jmeter__plugins.radius__client.sampler.RadiusClientSampler>
          <hashTree>
            <com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion guiclass="com.computaris.jmeter_plugins.radius_client.assertion.gui.RadiusAssertionGui" testclass="com.computaris.jmeter_plugins.radius_client.assertion.RadiusAssertion" testname="TTS Radius Assertion" enabled="true">
              <stringProp name="RadiusAssertion.message">Accounting-Response</stringProp>
              <stringProp name="RadiusAssertion.avpCounter">0</stringProp>
              <stringProp name="RadiusAssertion.ASSERT_ON_RESPONSE">true</stringProp>
            </com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop pcap and logs" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="stop Pcap" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-720136512">Stop Pcap</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop NV log" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-632654166">Stop NV log</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="End of RTC_1011" enabled="true"/>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Simple Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sy-RTC_1011" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Sy Pull Server Scenario : RTC-1011-Sy-Pull-Server</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
          <stringProp name="SimpleTimer.TIMEOUT">310000</stringProp>
        </com.computaris.jmeter.ext.timer.SimpleTimer>
        <hashTree/>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="RTC_1011" enabled="true">
          <stringProp name="TestPlan.comments">Verify Sy Counter Based Plan HSQ + 2 Level FUP with PULL Mode</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriberidentity" elementType="Argument">
                <stringProp name="Argument.name">subscriberidentity</stringProp>
                <stringProp name="Argument.value">1111111011</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">1111111011</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">1111111011</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">1111111011</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage" elementType="Argument">
                <stringProp name="Argument.name">datapackage</stringProp>
                <stringProp name="Argument.value">RTC_1011_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">1111111011</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="session_id" elementType="Argument">
                <stringProp name="Argument.name">session_id</stringProp>
                <stringProp name="Argument.value">1111111011</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="counter_name" elementType="Argument">
                <stringProp name="Argument.name">counter_name</stringProp>
                <stringProp name="Argument.value">gold_qos</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="hsq_counter_value" elementType="Argument">
                <stringProp name="Argument.name">hsq_counter_value</stringProp>
                <stringProp name="Argument.value">3</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="fup1_counter_value" elementType="Argument">
                <stringProp name="Argument.name">fup1_counter_value</stringProp>
                <stringProp name="Argument.value">2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="fup2_counter_value" elementType="Argument">
                <stringProp name="Argument.name">fup2_counter_value</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start of Sy_Server" enabled="true"/>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="CER-OCS" enabled="true">
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Capabilities-Exchange-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">false</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Supported-Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Vendor-Specific-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">3</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Acct-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.6">16777302</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Product-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.8">Jmeter</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">1094807040</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.10">16777302</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Acct-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">0</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Firmware-Revision</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">13</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="Send Counter 3 for HSQ" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Spending-Limit-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">SL-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.7">2</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${counter_name}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${hsq_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">10</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="No Counter Change" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Spending-Limit-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">SL-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.7">2</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${counter_name}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${hsq_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">10</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="Send Counter 2 for FUP1" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Spending-Limit-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">SL-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.7">2</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${counter_name}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${fup1_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">10</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="No Counter Change" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Spending-Limit-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">SL-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.7">2</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${counter_name}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${fup1_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">10</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="Send Counter 1 for FUP2" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Spending-Limit-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">SL-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.7">2</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${counter_name}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${fup2_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">10</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="No Counter Change" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Spending-Limit-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${session_id}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">SL-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.7">2</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${counter_name}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${fup2_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">10</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="Send STA" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Session-Termination-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777302</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">4</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time2" enabled="false">
            <stringProp name="SimpleTimer.TIMEOUT">100000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="End of RTC_1011" enabled="true"/>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Simple Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sy-RTC_1012" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Sy Push Client Scenario : RTC-1012-Sy-Push-Client</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
          <stringProp name="SimpleTimer.TIMEOUT">335000</stringProp>
        </com.computaris.jmeter.ext.timer.SimpleTimer>
        <hashTree/>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="RTC_1012" enabled="true">
          <stringProp name="TestPlan.comments">Verify Sy Counter Based Plan with PUSH Mode</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriber_identity" elementType="Argument">
                <stringProp name="Argument.name">subscriber_identity</stringProp>
                <stringProp name="Argument.value">1111111012</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">1111111012</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">1111111012</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">1111111012</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subscriber_package" elementType="Argument">
                <stringProp name="Argument.name">subscriber_package</stringProp>
                <stringProp name="Argument.value">RTC_1012_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">1111111012</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sessionid" elementType="Argument">
                <stringProp name="Argument.name">sessionid</stringProp>
                <stringProp name="Argument.value">1111111012</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapfilename" elementType="Argument">
                <stringProp name="Argument.name">pcapfilename</stringProp>
                <stringProp name="Argument.value">Sy-RTC_1012</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">Sy-RTC_1012</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="logfilename" elementType="Argument">
                <stringProp name="Argument.name">logfilename</stringProp>
                <stringProp name="Argument.value">Sy-RTC_1012</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="password" elementType="Argument">
                <stringProp name="Argument.name">password</stringProp>
                <stringProp name="Argument.value">1111111012</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="framedip" elementType="Argument">
                <stringProp name="Argument.name">framedip</stringProp>
                <stringProp name="Argument.value">192.168.2.12</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="test_case_id" elementType="Argument">
                <stringProp name="Argument.name">test_case_id</stringProp>
                <stringProp name="Argument.value">25251</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer" elementType="Argument">
                <stringProp name="Argument.name">productoffer</stringProp>
                <stringProp name="Argument.value">RTC_1012_PRODUCT_OFFER</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="datapackage_id" elementType="Argument">
                <stringProp name="Argument.name">datapackage_id</stringProp>
                <stringProp name="Argument.value">97560393-4347-4eff-8ae3-c9452d70fe7e</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="productoffer_id" elementType="Argument">
                <stringProp name="Argument.name">productoffer_id</stringProp>
                <stringProp name="Argument.value">RTC_1012_PRODUCT_OFFER_111111111</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start Sy Push Client" enabled="true"/>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import org.apache.jmeter.services.FileServer;

// Get the variable(s) from the JMeter script
mapping_file_name= vars.get(&quot;mapping_file_name&quot;);
jMeterTCName= ctx.getThreadGroup().getName();
testRailTCID = vars.get(&quot;test_case_id&quot;);

// Open File(s)
//f = new FileOutputStream(FileServer.getFileServer().getBaseDir()+&quot;\\tmp.csv&quot;, true); 
f = new FileOutputStream(mapping_file_name, true); 
p = new PrintStream(f); 

// Write data to file 

p.println(jMeterTCName + &apos;,&apos; + testRailTCID);

// Close File(s)
p.close();f.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="RTC_1012_Pre_Processing" enabled="true">
            <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </com.computaris.jmeter.ext.controls.ParameterizedController>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create DataPackage" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;pkg-container&gt;&#xd;
    &lt;pkgDatas&gt;&#xd;
        &lt;pkgData&gt;&#xd;
            &lt;groupNames&gt;DefaultGroup&lt;/groupNames&gt;&#xd;
            &lt;id&gt;97560393-4347-4eff-8ae3-c9452d70fe7e&lt;/id&gt;&#xd;
            &lt;name&gt;RTC_1012_BASE&lt;/name&gt;&#xd;
            &lt;description&gt;Created by admin on 07/25/2017 15:39:35&lt;/description&gt;&#xd;
            &lt;type&gt;BASE&lt;/type&gt;&#xd;
            &lt;status&gt;ACTIVE&lt;/status&gt;&#xd;
            &lt;packageMode&gt;LIVE&lt;/packageMode&gt;&#xd;
            &lt;validityPeriod&gt;30&lt;/validityPeriod&gt;&#xd;
            &lt;validityPeriodUnit&gt;DAY&lt;/validityPeriodUnit&gt;&#xd;
            &lt;exclusiveAddOn&gt;false&lt;/exclusiveAddOn&gt;&#xd;
            &lt;multipleSubscription&gt;true&lt;/multipleSubscription&gt;&#xd;
            &lt;quotaProfileType&gt;SY_COUNTER_BASED&lt;/quotaProfileType&gt;&#xd;
            &lt;quota-profiles/&gt;&#xd;
            &lt;qos-profiles&gt;&#xd;
                &lt;qos-profile&gt;&#xd;
                    &lt;id&gt;d7a3ca9c-ec66-4e37-8f26-31417075cdfd&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin on 07/25/2017 15:42:04&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_1012_QOS&lt;/name&gt;&#xd;
                    &lt;orderNo&gt;1&lt;/orderNo&gt;&#xd;
                    &lt;qos-profile-details&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;0&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;c909e047-cac5-4793-aac1-aecfbae875a1&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;3&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;3&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;id&gt;8617bb1d-5fbb-4563-9a0d-e2e92f75264d&lt;/id&gt;&#xd;
                                    &lt;serviceType&gt;&#xd;
                                        &lt;id&gt;SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/serviceType&gt;&#xd;
                                    &lt;name&gt;RTC_1012_HSQ_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;monitoringKey&gt;RTC_1012_HSQ_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;gbrdlUnit&gt;Kbps&lt;/gbrdlUnit&gt;&#xd;
                                    &lt;mbrdl&gt;3&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;3&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;50&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;9afa1ae7-f316-437a-bb33-3a949eb861de&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;71fd87cc-7606-40d2-9b14-c43bf05824f5&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;1&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;dcf1696f-edd9-4805-87cd-ca98e8f065b6&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;2&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;2&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;id&gt;0742b3e8-614f-439d-99bd-5d35a400edf4&lt;/id&gt;&#xd;
                                    &lt;serviceType&gt;&#xd;
                                        &lt;id&gt;SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/serviceType&gt;&#xd;
                                    &lt;name&gt;RTC_1012_FUP1_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;monitoringKey&gt;RTC_1012_FUP1_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;gbrdlUnit&gt;Kbps&lt;/gbrdlUnit&gt;&#xd;
                                    &lt;mbrdl&gt;2&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;2&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;25&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;da2be91d-be09-4821-96d5-945a85cdc93c&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;0a55f5d9-0edf-4f4d-b093-4c8bed034438&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                        &lt;qos-profile-detail&gt;&#xd;
                            &lt;aambrdl-unit&gt;Kbps&lt;/aambrdl-unit&gt;&#xd;
                            &lt;aambrul-unit&gt;Kbps&lt;/aambrul-unit&gt;&#xd;
                            &lt;action&gt;0&lt;/action&gt;&#xd;
                            &lt;charging-rule-base-names/&gt;&#xd;
                            &lt;fup-level&gt;2&lt;/fup-level&gt;&#xd;
                            &lt;global-pcc-rules/&gt;&#xd;
                            &lt;id&gt;ea079c5a-c6d5-41fd-b66c-9c7232388e65&lt;/id&gt;&#xd;
                            &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                            &lt;mbrdl-unit&gt;Mbps&lt;/mbrdl-unit&gt;&#xd;
                            &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                            &lt;mbrul-unit&gt;Mbps&lt;/mbrul-unit&gt;&#xd;
                            &lt;pcc-rules&gt;&#xd;
                                &lt;pcc-rule&gt;&#xd;
                                    &lt;id&gt;11e089c7-f040-4e26-ba33-7ade4a30a468&lt;/id&gt;&#xd;
                                    &lt;serviceType&gt;&#xd;
                                        &lt;id&gt;SERVICE_TYPE_1&lt;/id&gt;&#xd;
                                        &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                                    &lt;/serviceType&gt;&#xd;
                                    &lt;name&gt;RTC_1012_FUP2_PCC&lt;/name&gt;&#xd;
                                    &lt;precedence&gt;999&lt;/precedence&gt;&#xd;
                                    &lt;chargingMode&gt;0&lt;/chargingMode&gt;&#xd;
                                    &lt;chargingKey&gt;RATING_GROUP_1&lt;/chargingKey&gt;&#xd;
                                    &lt;monitoringKey&gt;RTC_1012_FUP2_PCC&lt;/monitoringKey&gt;&#xd;
                                    &lt;flowStatus&gt;2&lt;/flowStatus&gt;&#xd;
                                    &lt;usageMonitoring&gt;true&lt;/usageMonitoring&gt;&#xd;
                                    &lt;qci&gt;6&lt;/qci&gt;&#xd;
                                    &lt;arp&gt;1&lt;/arp&gt;&#xd;
                                    &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                                    &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                                    &lt;gbrdlUnit&gt;Kbps&lt;/gbrdlUnit&gt;&#xd;
                                    &lt;mbrdl&gt;1&lt;/mbrdl&gt;&#xd;
                                    &lt;mbrdlUnit&gt;Mbps&lt;/mbrdlUnit&gt;&#xd;
                                    &lt;mbrul&gt;1&lt;/mbrul&gt;&#xd;
                                    &lt;mbrulUnit&gt;Mbps&lt;/mbrulUnit&gt;&#xd;
                                    &lt;type&gt;Dynamic&lt;/type&gt;&#xd;
                                    &lt;sliceTotal&gt;15&lt;/sliceTotal&gt;&#xd;
                                    &lt;sliceTotalUnit&gt;MB&lt;/sliceTotalUnit&gt;&#xd;
                                    &lt;sliceUploadUnit&gt;MB&lt;/sliceUploadUnit&gt;&#xd;
                                    &lt;sliceDownloadUnit&gt;MB&lt;/sliceDownloadUnit&gt;&#xd;
                                    &lt;sliceTimeUnit&gt;MINUTE&lt;/sliceTimeUnit&gt;&#xd;
                                    &lt;service-data-flows&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit out&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;0ed666e0-f403-43bc-b332-3ba7c0da3657&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                        &lt;service-data-flow&gt;&#xd;
                                            &lt;destinationIP&gt;any&lt;/destinationIP&gt;&#xd;
                                            &lt;flowAccess&gt;permit in&lt;/flowAccess&gt;&#xd;
                                            &lt;protocol&gt;ip&lt;/protocol&gt;&#xd;
                                            &lt;serviceDataFlowId&gt;726668cd-5a9b-41be-9951-bd26cae551d6&lt;/serviceDataFlowId&gt;&#xd;
                                            &lt;sourceIP&gt;any&lt;/sourceIP&gt;&#xd;
                                        &lt;/service-data-flow&gt;&#xd;
                                    &lt;/service-data-flows&gt;&#xd;
                                &lt;/pcc-rule&gt;&#xd;
                            &lt;/pcc-rules&gt;&#xd;
                            &lt;preCapability&gt;true&lt;/preCapability&gt;&#xd;
                            &lt;preVulnerability&gt;true&lt;/preVulnerability&gt;&#xd;
                            &lt;priority-level&gt;1&lt;/priority-level&gt;&#xd;
                            &lt;qci&gt;6&lt;/qci&gt;&#xd;
                            &lt;slice-download-unit&gt;MB&lt;/slice-download-unit&gt;&#xd;
                            &lt;slice-time-unit&gt;MINUTE&lt;/slice-time-unit&gt;&#xd;
                            &lt;slice-total&gt;25&lt;/slice-total&gt;&#xd;
                            &lt;slice-total-unit&gt;MB&lt;/slice-total-unit&gt;&#xd;
                            &lt;slice-upload-unit&gt;MB&lt;/slice-upload-unit&gt;&#xd;
                            &lt;usageMonitoring&gt;false&lt;/usageMonitoring&gt;&#xd;
                        &lt;/qos-profile-detail&gt;&#xd;
                    &lt;/qos-profile-details&gt;&#xd;
                    &lt;quota-profile-id&gt;59203ed4-e414-46ce-a3cf-d67e8df8f5a2&lt;/quota-profile-id&gt;&#xd;
                    &lt;quota-profile-name&gt;RTC_1012_QUOTA&lt;/quota-profile-name&gt;&#xd;
                    &lt;time-periods/&gt;&#xd;
                &lt;/qos-profile&gt;&#xd;
            &lt;/qos-profiles&gt;&#xd;
            &lt;sy-quota-profiles&gt;&#xd;
                &lt;sy-quota-Profile&gt;&#xd;
                    &lt;id&gt;59203ed4-e414-46ce-a3cf-d67e8df8f5a2&lt;/id&gt;&#xd;
                    &lt;description&gt;Created by admin on 07/25/2017 15:40:53&lt;/description&gt;&#xd;
                    &lt;name&gt;RTC_1012_QUOTA&lt;/name&gt;&#xd;
                    &lt;syQuotaProfileDetailDatas&gt;&#xd;
                        &lt;counterName&gt;gold_qos&lt;/counterName&gt;&#xd;
                        &lt;counterPresent&gt;1&lt;/counterPresent&gt;&#xd;
                        &lt;fup1Value&gt;2&lt;/fup1Value&gt;&#xd;
                        &lt;fup2Value&gt;1&lt;/fup2Value&gt;&#xd;
                        &lt;hsqValue&gt;3&lt;/hsqValue&gt;&#xd;
                        &lt;id&gt;7d9f1992-0338-477c-bb38-028336d591c1&lt;/id&gt;&#xd;
                        &lt;serviceTypeData&gt;&#xd;
                            &lt;id&gt;SERVICE_TYPE_1&lt;/id&gt;&#xd;
                            &lt;name&gt;All-Service&lt;/name&gt;&#xd;
                        &lt;/serviceTypeData&gt;&#xd;
                    &lt;/syQuotaProfileDetailDatas&gt;&#xd;
                &lt;/sy-quota-Profile&gt;&#xd;
            &lt;/sy-quota-profiles&gt;&#xd;
            &lt;topUp-qos-multipliers/&gt;&#xd;
            &lt;alwaysPreferPromotionalQoS&gt;false&lt;/alwaysPreferPromotionalQoS&gt;&#xd;
            &lt;usgae-notifications/&gt;&#xd;
            &lt;tariffSwitchSupport&gt;true&lt;/tariffSwitchSupport&gt;&#xd;
            &lt;currency&gt;USD&lt;/currency&gt;            &#xd;
        &lt;/pkgData&gt;&#xd;
    &lt;/pkgDatas&gt;&#xd;
&lt;/pkg-container&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${pdcontextpath}/${rest_data_package_url}?${replace}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1777808594">&lt;messages&gt;SUCCESS&lt;/messages&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="xml content type" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/xml</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Create Product Offer" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Offer" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{  &#xd;
   &quot;id&quot;:&quot;${productoffer_id}&quot;,&#xd;
   &quot;status&quot;:&quot;ACTIVE&quot;,&#xd;
   &quot;groups&quot;:&quot;GROUP_1&quot;,&#xd;
   &quot;name&quot;:&quot;${productoffer}&quot;,&#xd;
   &quot;description&quot;:&quot;Created by admin on 05/23/2018 10:12:03&quot;,&#xd;
   &quot;type&quot;:&quot;BASE&quot;,&#xd;
   &quot;packageMode&quot;:&quot;DESIGN&quot;,&#xd;
   &quot;dataServicePkgId&quot;:&quot;${datapackage_id}&quot;,&#xd;
   &quot;validityPeriod&quot;:null,&#xd;
   &quot;validityPeriodUnit&quot;:&quot;DAY&quot;,&#xd;
   &quot;subscriptionPrice&quot;:null,&#xd;
   &quot;balance&quot;:null,&#xd;
   &quot;availabilityStartDate&quot;:null,&#xd;
   &quot;availabilityEndDate&quot;:null,&#xd;
   &quot;param1&quot;:null,&#xd;
   &quot;param2&quot;:null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/${product_offer_url}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Attach RnC Package" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;rest_product_offer_${id}&quot;,&#xd;
  &quot;productOfferServicePkgRelDataList&quot;: [&#xd;
    {&#xd;
   	&quot;serviceId&quot;:&quot;VOICE&quot;,&#xd;
   	&quot;rncPackageId&quot;:&quot;rest_rnc_package_${id}&quot;&#xd;
    }&#xd;
  ]&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/rest_product_offer_${id}/addServicePkgRelations.json</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1440523576">&quot;id&quot;:&quot;rest_product_offer_${id}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Offer" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
                <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}.json</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="725851598">&quot;id&quot;:&quot;${productoffer_id}&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change ProductOffer To Live Mode" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${smcontextpath}/${pd}/productoffer/product-offer/${productoffer_id}/updateMode?_method=put&amp;pkgMode=LIVE</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="PD: policy -reload" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="-803016769">PD: Reload Policy</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="Subscriber Provisioning Request" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SoapSampler.URL_DATA">http://${serverip}:${smserverport}/${pdcontextpath}/services/SubscriberProvisioningService</stringProp>
              <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sub=&quot;http://subscriberprovisioning.ws.nvsmx.elitecore.com/&quot;&gt;
   &lt;soap:Header/&gt;
   &lt;soap:Body&gt;
      &lt;sub:wsAddSubscriberProfile&gt;
         &lt;!--Optional:--&gt;
        &lt;subscriberProfile&gt;
               &lt;entry&gt;
                  &lt;key&gt;SUBSCRIBER_IDENTITY&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;USERNAME&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD&lt;/key&gt;
                  &lt;value&gt;${username}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PASSWORD_CHECK&lt;/key&gt;
                  &lt;value&gt;TRUE&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUSTOMER_TYPE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;STATUS&lt;/key&gt;
                  &lt;value&gt;Active&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PRODUCT_OFFER&lt;/key&gt;
                   &lt;value&gt;${productoffer}&lt;/value&gt;
                &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMS_PACKAGE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EXPIRY_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;AREA&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CITY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM1&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM2&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM3&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM4&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PARAM5&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ZONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COUNTRY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;BIRTH_DATE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ROLE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;COMPANY&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;DEPARTMENT&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;ARPU&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CADRE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;EMAIL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;PHONE&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;SIP_URL&lt;/key&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;CUI&lt;/key&gt;
                  &lt;value&gt;${cui}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;IMSI&lt;/key&gt;
                  &lt;value&gt;${imsi}&lt;/value&gt;
               &lt;/entry&gt;
               &lt;entry&gt;
                  &lt;key&gt;MSISDN&lt;/key&gt;
                  &lt;value&gt;${msisdn}&lt;/value&gt;
               &lt;/entry&gt;
             &lt;/subscriberProfile&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter1&gt;&lt;/parameter1&gt;
         &lt;!--Optional:--&gt;
         &lt;parameter2&gt;&lt;/parameter2&gt;
      &lt;/sub:wsAddSubscriberProfile&gt;
   &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="SoapSampler.xml_data_file"></stringProp>
              <stringProp name="SoapSampler.SOAP_ACTION"></stringProp>
              <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            </SoapSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1149187101">SUCCESS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Pcap and Logs" enabled="true"/>
            <hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Pcap" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872118812">Capture PCAP</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Capture Log" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                  <stringProp name="18059174">Common Functions</stringProp>
                  <stringProp name="872996374">Capture log </stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="TestPlan.comments">Tool will wait for 1 Sec.</stringProp>
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter__plugins.radius__client.sampler.RadiusClientSampler guiclass="com.computaris.jmeter_plugins.radius_client.sampler.gui.RadiusClientSamplerGui" testclass="com.computaris.jmeter_plugins.radius_client.sampler.RadiusClientSampler" testname="Access Request" enabled="true">
            <stringProp name="TestPlan.comments">step 1</stringProp>
            <stringProp name="RadiusSampler.message">Access-Request</stringProp>
            <stringProp name="radiusSampler.auth_type">Passphrase Authentication Protocol (PAP)</stringProp>
            <stringProp name="RadiusSampler.avpName.0">NAS-IP-Address</stringProp>
            <stringProp name="RadiusSampler.avpData.0">${nasip}</stringProp>
            <stringProp name="RadiusSampler.avpName.1">User-Name</stringProp>
            <stringProp name="RadiusSampler.avpData.1">${username}</stringProp>
            <stringProp name="RadiusSampler.avpName.2">User-Password</stringProp>
            <stringProp name="RadiusSampler.avpData.2">${password}</stringProp>
            <stringProp name="RadiusSampler.avpName.3">NAS-Port</stringProp>
            <stringProp name="RadiusSampler.avpData.3">${nasport}</stringProp>
            <stringProp name="RadiusSampler.avpCounter">4</stringProp>
          </com.computaris.jmeter__plugins.radius__client.sampler.RadiusClientSampler>
          <hashTree>
            <com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion guiclass="com.computaris.jmeter_plugins.radius_client.assertion.gui.RadiusAssertionGui" testclass="com.computaris.jmeter_plugins.radius_client.assertion.RadiusAssertion" testname="TTS Radius Assertion" enabled="true">
              <stringProp name="RadiusAssertion.message">Access-Accept</stringProp>
              <stringProp name="RadiusAssertion.avpCounter">1</stringProp>
              <stringProp name="RadiusAssertion.ASSERT_ON_RESPONSE">true</stringProp>
              <stringProp name="RadiusAssertion.avpName.0">User-Name</stringProp>
              <stringProp name="RadiusAssertion.avpData.0">${username}</stringProp>
            </com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter__plugins.radius__client.sampler.RadiusClientSampler guiclass="com.computaris.jmeter_plugins.radius_client.sampler.gui.RadiusClientSamplerGui" testclass="com.computaris.jmeter_plugins.radius_client.sampler.RadiusClientSampler" testname="Accounting Start 100" enabled="true">
            <stringProp name="TestPlan.comments">step 2</stringProp>
            <stringProp name="RadiusSampler.message">Accounting-Request</stringProp>
            <stringProp name="radiusSampler.auth_type">Passphrase Authentication Protocol (PAP)</stringProp>
            <stringProp name="RadiusSampler.avpName.0">Acct-Output-Octets</stringProp>
            <stringProp name="RadiusSampler.avpData.0">52428800</stringProp>
            <stringProp name="RadiusSampler.avpName.1">Acct-Input-Octets</stringProp>
            <stringProp name="RadiusSampler.avpData.1">52428800</stringProp>
            <stringProp name="RadiusSampler.avpName.2">Acct-Session-Id</stringProp>
            <stringProp name="RadiusSampler.avpData.2">${sessionid}</stringProp>
            <stringProp name="RadiusSampler.avpName.3">Acct-Status-Type</stringProp>
            <stringProp name="RadiusSampler.avpData.3">1</stringProp>
            <stringProp name="RadiusSampler.avpName.4">NAS-IP-Address</stringProp>
            <stringProp name="RadiusSampler.avpData.4">${nasip}</stringProp>
            <stringProp name="RadiusSampler.avpName.5">User-Name</stringProp>
            <stringProp name="RadiusSampler.avpData.5">${username}</stringProp>
            <stringProp name="RadiusSampler.avpName.6">NAS-Port</stringProp>
            <stringProp name="RadiusSampler.avpData.6">${nasport}</stringProp>
            <stringProp name="RadiusSampler.avpName.7">Framed-IP-Address</stringProp>
            <stringProp name="RadiusSampler.avpData.7">${framedip}</stringProp>
            <stringProp name="RadiusSampler.avpCounter">8</stringProp>
          </com.computaris.jmeter__plugins.radius__client.sampler.RadiusClientSampler>
          <hashTree>
            <com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion guiclass="com.computaris.jmeter_plugins.radius_client.assertion.gui.RadiusAssertionGui" testclass="com.computaris.jmeter_plugins.radius_client.assertion.RadiusAssertion" testname="TTS Radius Assertion" enabled="true">
              <stringProp name="RadiusAssertion.message">Accounting-Response</stringProp>
              <stringProp name="RadiusAssertion.avpCounter">0</stringProp>
              <stringProp name="RadiusAssertion.ASSERT_ON_RESPONSE">true</stringProp>
            </com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter__plugins.radius__server.sampler.RadiusServerSampler guiclass="com.computaris.jmeter_plugins.radius_server.sampler.gui.RadiusServerSamplerGui" testclass="com.computaris.jmeter_plugins.radius_server.sampler.RadiusServerSampler" testname="Listen COA request" enabled="true">
            <stringProp name="TestPlan.comments">here we build servers answer. all fields are empty, becouse they are loaded from configuration</stringProp>
            <boolProp name="RadiusServerSampler.LISTENING_SERVER_BUTTON_STATUS">true</boolProp>
            <boolProp name="RadiusServerSampler.SENDING_SERVER_BUTTON_STATUS">false</boolProp>
            <stringProp name="RadiusSampler.message">Access-Accept</stringProp>
            <stringProp name="RadiusSampler.avpName.0">Service-Type</stringProp>
            <stringProp name="RadiusSampler.avpData.0">1</stringProp>
            <stringProp name="RadiusSampler.avpName.1">Login-Service</stringProp>
            <stringProp name="RadiusSampler.avpData.1">1</stringProp>
            <stringProp name="RadiusSampler.avpName.2">Login-IP-Host</stringProp>
            <stringProp name="RadiusSampler.avpData.2">192.168.96.150</stringProp>
            <stringProp name="RadiusSampler.avpName.3">Reply-Message</stringProp>
            <stringProp name="RadiusSampler.avpData.3">access granted</stringProp>
            <stringProp name="RadiusSampler.avpCounter">4</stringProp>
          </com.computaris.jmeter__plugins.radius__server.sampler.RadiusServerSampler>
          <hashTree>
            <com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion guiclass="com.computaris.jmeter_plugins.radius_client.assertion.gui.RadiusAssertionGui" testclass="com.computaris.jmeter_plugins.radius_client.assertion.RadiusAssertion" testname="TTS Radius Assertion" enabled="true">
              <stringProp name="RadiusAssertion.message">CoA-Request</stringProp>
              <stringProp name="RadiusAssertion.avpCounter">0</stringProp>
              <stringProp name="RadiusAssertion.ASSERT_ON_RESPONSE">true</stringProp>
            </com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter__plugins.radius__server.sampler.RadiusServerSampler guiclass="com.computaris.jmeter_plugins.radius_server.sampler.gui.RadiusServerSamplerGui" testclass="com.computaris.jmeter_plugins.radius_server.sampler.RadiusServerSampler" testname="Answer CoA" enabled="true">
            <stringProp name="TestPlan.comments">this is ack for COA request</stringProp>
            <boolProp name="RadiusServerSampler.LISTENING_SERVER_BUTTON_STATUS">false</boolProp>
            <boolProp name="RadiusServerSampler.SENDING_SERVER_BUTTON_STATUS">true</boolProp>
            <stringProp name="RadiusSampler.message">CoA-ACK</stringProp>
            <stringProp name="RadiusSampler.avpCounter">0</stringProp>
          </com.computaris.jmeter__plugins.radius__server.sampler.RadiusServerSampler>
          <hashTree/>
          <com.computaris.jmeter__plugins.radius__client.sampler.RadiusClientSampler guiclass="com.computaris.jmeter_plugins.radius_client.sampler.gui.RadiusClientSamplerGui" testclass="com.computaris.jmeter_plugins.radius_client.sampler.RadiusClientSampler" testname="Accounting Update with 100 MB" enabled="true">
            <stringProp name="TestPlan.comments">step 4</stringProp>
            <stringProp name="RadiusSampler.message">Accounting-Request</stringProp>
            <stringProp name="radiusSampler.auth_type">Passphrase Authentication Protocol (PAP)</stringProp>
            <stringProp name="RadiusSampler.avpName.0">Acct-Status-Type</stringProp>
            <stringProp name="RadiusSampler.avpData.0">3</stringProp>
            <stringProp name="RadiusSampler.avpName.1">NAS-IP-Address</stringProp>
            <stringProp name="RadiusSampler.avpData.1">${nasip}</stringProp>
            <stringProp name="RadiusSampler.avpName.2">Acct-Input-Octets</stringProp>
            <stringProp name="RadiusSampler.avpData.2">52428800</stringProp>
            <stringProp name="RadiusSampler.avpName.3">Acct-Output-Octets</stringProp>
            <stringProp name="RadiusSampler.avpData.3">52428800</stringProp>
            <stringProp name="RadiusSampler.avpName.4">Acct-Session-Id</stringProp>
            <stringProp name="RadiusSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="RadiusSampler.avpName.5">User-Name</stringProp>
            <stringProp name="RadiusSampler.avpData.5">${username}</stringProp>
            <stringProp name="RadiusSampler.avpName.6">Framed-IP-Address</stringProp>
            <stringProp name="RadiusSampler.avpData.6">${framedip}</stringProp>
            <stringProp name="RadiusSampler.avpCounter">7</stringProp>
          </com.computaris.jmeter__plugins.radius__client.sampler.RadiusClientSampler>
          <hashTree>
            <com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion guiclass="com.computaris.jmeter_plugins.radius_client.assertion.gui.RadiusAssertionGui" testclass="com.computaris.jmeter_plugins.radius_client.assertion.RadiusAssertion" testname="TTS Radius Assertion" enabled="true">
              <stringProp name="RadiusAssertion.message">Accounting-Response</stringProp>
              <stringProp name="RadiusAssertion.avpCounter">0</stringProp>
              <stringProp name="RadiusAssertion.ASSERT_ON_RESPONSE">true</stringProp>
            </com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time4" enabled="true">
            <stringProp name="TestPlan.comments">Tool will wait for 1 Sec.</stringProp>
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter__plugins.radius__server.sampler.RadiusServerSampler guiclass="com.computaris.jmeter_plugins.radius_server.sampler.gui.RadiusServerSamplerGui" testclass="com.computaris.jmeter_plugins.radius_server.sampler.RadiusServerSampler" testname="Listen COA request" enabled="true">
            <stringProp name="TestPlan.comments">here we build servers answer. all fields are empty, becouse they are loaded from configuration</stringProp>
            <boolProp name="RadiusServerSampler.LISTENING_SERVER_BUTTON_STATUS">true</boolProp>
            <boolProp name="RadiusServerSampler.SENDING_SERVER_BUTTON_STATUS">false</boolProp>
            <stringProp name="RadiusSampler.message">Access-Accept</stringProp>
            <stringProp name="RadiusSampler.avpName.0">Service-Type</stringProp>
            <stringProp name="RadiusSampler.avpData.0">1</stringProp>
            <stringProp name="RadiusSampler.avpName.1">Login-Service</stringProp>
            <stringProp name="RadiusSampler.avpData.1">1</stringProp>
            <stringProp name="RadiusSampler.avpName.2">Login-IP-Host</stringProp>
            <stringProp name="RadiusSampler.avpData.2">192.168.96.150</stringProp>
            <stringProp name="RadiusSampler.avpName.3">Reply-Message</stringProp>
            <stringProp name="RadiusSampler.avpData.3">access granted</stringProp>
            <stringProp name="RadiusSampler.avpCounter">4</stringProp>
          </com.computaris.jmeter__plugins.radius__server.sampler.RadiusServerSampler>
          <hashTree>
            <com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion guiclass="com.computaris.jmeter_plugins.radius_client.assertion.gui.RadiusAssertionGui" testclass="com.computaris.jmeter_plugins.radius_client.assertion.RadiusAssertion" testname="TTS Radius Assertion" enabled="true">
              <stringProp name="RadiusAssertion.message">CoA-Request</stringProp>
              <stringProp name="RadiusAssertion.avpCounter">0</stringProp>
              <stringProp name="RadiusAssertion.ASSERT_ON_RESPONSE">true</stringProp>
            </com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter__plugins.radius__server.sampler.RadiusServerSampler guiclass="com.computaris.jmeter_plugins.radius_server.sampler.gui.RadiusServerSamplerGui" testclass="com.computaris.jmeter_plugins.radius_server.sampler.RadiusServerSampler" testname="Answer CoA" enabled="true">
            <stringProp name="TestPlan.comments">this is ack for COA request</stringProp>
            <boolProp name="RadiusServerSampler.LISTENING_SERVER_BUTTON_STATUS">false</boolProp>
            <boolProp name="RadiusServerSampler.SENDING_SERVER_BUTTON_STATUS">true</boolProp>
            <stringProp name="RadiusSampler.message">CoA-ACK</stringProp>
            <stringProp name="RadiusSampler.avpCounter">0</stringProp>
          </com.computaris.jmeter__plugins.radius__server.sampler.RadiusServerSampler>
          <hashTree/>
          <com.computaris.jmeter__plugins.radius__client.sampler.RadiusClientSampler guiclass="com.computaris.jmeter_plugins.radius_client.sampler.gui.RadiusClientSamplerGui" testclass="com.computaris.jmeter_plugins.radius_client.sampler.RadiusClientSampler" testname="Accounting Update with 100 MB" enabled="true">
            <stringProp name="TestPlan.comments">step 4</stringProp>
            <stringProp name="RadiusSampler.message">Accounting-Request</stringProp>
            <stringProp name="radiusSampler.auth_type">Passphrase Authentication Protocol (PAP)</stringProp>
            <stringProp name="RadiusSampler.avpName.0">Acct-Status-Type</stringProp>
            <stringProp name="RadiusSampler.avpData.0">3</stringProp>
            <stringProp name="RadiusSampler.avpName.1">NAS-IP-Address</stringProp>
            <stringProp name="RadiusSampler.avpData.1">${nasip}</stringProp>
            <stringProp name="RadiusSampler.avpName.2">Acct-Input-Octets</stringProp>
            <stringProp name="RadiusSampler.avpData.2">52428800</stringProp>
            <stringProp name="RadiusSampler.avpName.3">Acct-Output-Octets</stringProp>
            <stringProp name="RadiusSampler.avpData.3">52428800</stringProp>
            <stringProp name="RadiusSampler.avpName.4">Acct-Session-Id</stringProp>
            <stringProp name="RadiusSampler.avpData.4">${sessionid}</stringProp>
            <stringProp name="RadiusSampler.avpName.5">User-Name</stringProp>
            <stringProp name="RadiusSampler.avpData.5">${username}</stringProp>
            <stringProp name="RadiusSampler.avpName.6">Framed-IP-Address</stringProp>
            <stringProp name="RadiusSampler.avpData.6">${framedip}</stringProp>
            <stringProp name="RadiusSampler.avpCounter">7</stringProp>
          </com.computaris.jmeter__plugins.radius__client.sampler.RadiusClientSampler>
          <hashTree>
            <com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion guiclass="com.computaris.jmeter_plugins.radius_client.assertion.gui.RadiusAssertionGui" testclass="com.computaris.jmeter_plugins.radius_client.assertion.RadiusAssertion" testname="TTS Radius Assertion" enabled="true">
              <stringProp name="RadiusAssertion.message">Accounting-Response</stringProp>
              <stringProp name="RadiusAssertion.avpCounter">0</stringProp>
              <stringProp name="RadiusAssertion.ASSERT_ON_RESPONSE">true</stringProp>
            </com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time4" enabled="true">
            <stringProp name="TestPlan.comments">Tool will wait for 1 Sec.</stringProp>
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter__plugins.radius__server.sampler.RadiusServerSampler guiclass="com.computaris.jmeter_plugins.radius_server.sampler.gui.RadiusServerSamplerGui" testclass="com.computaris.jmeter_plugins.radius_server.sampler.RadiusServerSampler" testname="Listen COA request" enabled="true">
            <stringProp name="TestPlan.comments">here we build servers answer. all fields are empty, becouse they are loaded from configuration</stringProp>
            <boolProp name="RadiusServerSampler.LISTENING_SERVER_BUTTON_STATUS">true</boolProp>
            <boolProp name="RadiusServerSampler.SENDING_SERVER_BUTTON_STATUS">false</boolProp>
            <stringProp name="RadiusSampler.message">Access-Accept</stringProp>
            <stringProp name="RadiusSampler.avpName.0">Service-Type</stringProp>
            <stringProp name="RadiusSampler.avpData.0">1</stringProp>
            <stringProp name="RadiusSampler.avpName.1">Login-Service</stringProp>
            <stringProp name="RadiusSampler.avpData.1">1</stringProp>
            <stringProp name="RadiusSampler.avpName.2">Login-IP-Host</stringProp>
            <stringProp name="RadiusSampler.avpData.2">192.168.96.150</stringProp>
            <stringProp name="RadiusSampler.avpName.3">Reply-Message</stringProp>
            <stringProp name="RadiusSampler.avpData.3">access granted</stringProp>
            <stringProp name="RadiusSampler.avpCounter">4</stringProp>
          </com.computaris.jmeter__plugins.radius__server.sampler.RadiusServerSampler>
          <hashTree>
            <com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion guiclass="com.computaris.jmeter_plugins.radius_client.assertion.gui.RadiusAssertionGui" testclass="com.computaris.jmeter_plugins.radius_client.assertion.RadiusAssertion" testname="TTS Radius Assertion" enabled="true">
              <stringProp name="RadiusAssertion.message">CoA-Request</stringProp>
              <stringProp name="RadiusAssertion.avpCounter">0</stringProp>
              <stringProp name="RadiusAssertion.ASSERT_ON_RESPONSE">true</stringProp>
            </com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter__plugins.radius__server.sampler.RadiusServerSampler guiclass="com.computaris.jmeter_plugins.radius_server.sampler.gui.RadiusServerSamplerGui" testclass="com.computaris.jmeter_plugins.radius_server.sampler.RadiusServerSampler" testname="Answer CoA" enabled="true">
            <stringProp name="TestPlan.comments">this is ack for COA request</stringProp>
            <boolProp name="RadiusServerSampler.LISTENING_SERVER_BUTTON_STATUS">false</boolProp>
            <boolProp name="RadiusServerSampler.SENDING_SERVER_BUTTON_STATUS">true</boolProp>
            <stringProp name="RadiusSampler.message">CoA-ACK</stringProp>
            <stringProp name="RadiusSampler.avpCounter">0</stringProp>
          </com.computaris.jmeter__plugins.radius__server.sampler.RadiusServerSampler>
          <hashTree/>
          <com.computaris.jmeter__plugins.radius__client.sampler.RadiusClientSampler guiclass="com.computaris.jmeter_plugins.radius_client.sampler.gui.RadiusClientSamplerGui" testclass="com.computaris.jmeter_plugins.radius_client.sampler.RadiusClientSampler" testname="Accounting Stop" enabled="true">
            <stringProp name="TestPlan.comments">step 8 : </stringProp>
            <stringProp name="RadiusSampler.message">Accounting-Request</stringProp>
            <stringProp name="radiusSampler.auth_type">Passphrase Authentication Protocol (PAP)</stringProp>
            <stringProp name="RadiusSampler.avpName.0">User-Name</stringProp>
            <stringProp name="RadiusSampler.avpData.0">${username}</stringProp>
            <stringProp name="RadiusSampler.avpName.1">Acct-Status-Type</stringProp>
            <stringProp name="RadiusSampler.avpData.1">2</stringProp>
            <stringProp name="RadiusSampler.avpName.2">Acct-Session-Id</stringProp>
            <stringProp name="RadiusSampler.avpData.2">${sessionid}</stringProp>
            <stringProp name="RadiusSampler.avpName.3">NAS-IP-Address</stringProp>
            <stringProp name="RadiusSampler.avpData.3">${nasip}</stringProp>
            <stringProp name="RadiusSampler.avpName.4">Framed-IP-Address</stringProp>
            <stringProp name="RadiusSampler.avpData.4">${framedip}</stringProp>
            <stringProp name="RadiusSampler.avpCounter">5</stringProp>
          </com.computaris.jmeter__plugins.radius__client.sampler.RadiusClientSampler>
          <hashTree>
            <com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion guiclass="com.computaris.jmeter_plugins.radius_client.assertion.gui.RadiusAssertionGui" testclass="com.computaris.jmeter_plugins.radius_client.assertion.RadiusAssertion" testname="TTS Radius Assertion" enabled="true">
              <stringProp name="RadiusAssertion.message">Accounting-Response</stringProp>
              <stringProp name="RadiusAssertion.avpCounter">0</stringProp>
              <stringProp name="RadiusAssertion.ASSERT_ON_RESPONSE">true</stringProp>
            </com.computaris.jmeter__plugins.radius__client.assertion.RadiusAssertion>
            <hashTree/>
          </hashTree>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Stop Sy Push Client" enabled="true"/>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Simple Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sy-RTC_1012" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1438756094000</longProp>
        <longProp name="ThreadGroup.end_time">1438756094000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Sy Push Server Scenario : RTC-1012-Sy-Push-Server</stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="TTS Simple Timer" enabled="true">
          <stringProp name="SimpleTimer.TIMEOUT">335000</stringProp>
        </com.computaris.jmeter.ext.timer.SimpleTimer>
        <hashTree/>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="RTC_1012" enabled="true">
          <stringProp name="TestPlan.comments">Verify Sy Counter Based Plan HSQ + 2 Level FUP with PULL Mode</stringProp>
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subscriber_identity" elementType="Argument">
                <stringProp name="Argument.name">subscriber_identity</stringProp>
                <stringProp name="Argument.value">1111111012</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="msisdn" elementType="Argument">
                <stringProp name="Argument.name">msisdn</stringProp>
                <stringProp name="Argument.value">1111111012</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="imsi" elementType="Argument">
                <stringProp name="Argument.name">imsi</stringProp>
                <stringProp name="Argument.value">1111111012</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="cui" elementType="Argument">
                <stringProp name="Argument.name">cui</stringProp>
                <stringProp name="Argument.value">1111111012</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="subscriber_package" elementType="Argument">
                <stringProp name="Argument.name">subscriber_package</stringProp>
                <stringProp name="Argument.value">RTC_SY_BASE</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">1111111012</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sessionid" elementType="Argument">
                <stringProp name="Argument.name">sessionid</stringProp>
                <stringProp name="Argument.value">1111111012_gx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="counter_name" elementType="Argument">
                <stringProp name="Argument.name">counter_name</stringProp>
                <stringProp name="Argument.value">gold_qos</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="hsq_counter_value" elementType="Argument">
                <stringProp name="Argument.name">hsq_counter_value</stringProp>
                <stringProp name="Argument.value">3</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="fup1_counter_value" elementType="Argument">
                <stringProp name="Argument.name">fup1_counter_value</stringProp>
                <stringProp name="Argument.value">2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="fup2_counter_value" elementType="Argument">
                <stringProp name="Argument.name">fup2_counter_value</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Start Sy Push Server" enabled="true"/>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="CER-OCS" enabled="true">
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Capabilities-Exchange-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">false</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Supported-Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.1">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Vendor-Specific-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.4">3</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Acct-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.5">4</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.6">16777302</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Product-Name</stringProp>
            <stringProp name="DiameterSampler.avpData.8">Jmeter</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Origin-State-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">1094807040</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.10">16777302</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Acct-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.11">0</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Firmware-Revision</stringProp>
            <stringProp name="DiameterSampler.avpData.12">1</stringProp>
            <stringProp name="DiameterSampler.avpCounter">13</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree/>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="TestPlan.comments">Tool will wait for 1 Sec.</stringProp>
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="Send SLR  for HSQ" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Spending-Limit-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">SL-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.7">2</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${counter_name}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${hsq_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">10</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="Send SLR  for HSQ" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Spending-Limit-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.5">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpName.6">SL-Request-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.6">0</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.7">2</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.8">${counter_name}</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${hsq_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">10</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="TestPlan.comments">Tool will wait for 1 Sec.</stringProp>
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="Send SNR for FUP1" enabled="true">
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Abort-Session-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.0">2</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.1">${counter_name}</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${fup1_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.3">2</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">1</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Vendor-Specific-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.6">2</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">16777302</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.8">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.13">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">14</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree/>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="TestPlan.comments">Tool will wait for 1 Sec.</stringProp>
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler guiclass="com.computaris.jmeter.protocol.diameter.control.gui.DiameterSamplerGui" testclass="com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler" testname="Send SNR for FUP2" enabled="true">
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
            <stringProp name="DiameterClient.LOAD_SERVER_REQUEST_TEXT"></stringProp>
            <boolProp name="DiameterClient.LOAD_SERVER_REQUEST_CHECKBOX">false</boolProp>
            <stringProp name="DiameterSampler.message">Abort-Session-Request</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">-1</stringProp>
            <stringProp name="DiameterSampler.HBHID">-1</stringProp>
            <stringProp name="DiameterSampler.ETEID">-1</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Policy-Counter-Status-Report</stringProp>
            <stringProp name="DiameterSampler.avpData.0">2</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Policy-Counter-Identifier</stringProp>
            <stringProp name="DiameterSampler.avpData.1">${counter_name}</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Policy-Counter-Status</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${fup2_counter_value}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Subscription-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.3">2</stringProp>
            <stringProp name="DiameterSampler.avpName.4">Subscription-Id-Data</stringProp>
            <stringProp name="DiameterSampler.avpData.4">${msisdn}</stringProp>
            <stringProp name="DiameterSampler.avpName.5">Subscription-Id-Type</stringProp>
            <stringProp name="DiameterSampler.avpData.5">0</stringProp>
            <stringProp name="DiameterSampler.avpName.6">Vendor-Specific-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.6">2</stringProp>
            <stringProp name="DiameterSampler.avpName.7">Auth-Application-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.7">16777302</stringProp>
            <stringProp name="DiameterSampler.avpName.8">Vendor-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.8">10415</stringProp>
            <stringProp name="DiameterSampler.avpName.9">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.9">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.10">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.10">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.11">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.11">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpName.12">Destination-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.12">${destinationhost}</stringProp>
            <stringProp name="DiameterSampler.avpName.13">Destination-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.13">${destinationrealm}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">14</stringProp>
          </com.computaris.jmeter.protocol.diameter.sampler.DiameterSampler>
          <hashTree/>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="TestPlan.comments">Tool will wait for 1 Sec.</stringProp>
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.timers.DiameterTimer guiclass="com.computaris.jmeter.timers.gui.DiameterTimerGui" testclass="com.computaris.jmeter.timers.DiameterTimer" testname="Send STA" enabled="true">
            <stringProp name="DiameterTimer.duration">1000</stringProp>
            <stringProp name="DiameterTimer.messageType">Re-Auth-Request</stringProp>
            <boolProp name="checkMessageReceived">false</boolProp>
            <stringProp name="DiameterTimer.answer">manual</stringProp>
            <stringProp name="DiameterSampler.message">Session-Termination-Answer</stringProp>
            <stringProp name="DiameterSampler.flagP">true</stringProp>
            <stringProp name="DiameterSampler.flagE">false</stringProp>
            <stringProp name="DiameterSampler.flagT">false</stringProp>
            <stringProp name="DiameterSampler.appID">16777302</stringProp>
            <stringProp name="DiameterSampler.HBHID">${__diamGetHopId()}</stringProp>
            <stringProp name="DiameterSampler.ETEID">${__diamGetEndId()}</stringProp>
            <stringProp name="DiameterSampler.avpName.0">Session-Id</stringProp>
            <stringProp name="DiameterSampler.avpData.0">${__diamAVPValue(Session-Id,var)}</stringProp>
            <stringProp name="DiameterSampler.avpName.1">Result-Code</stringProp>
            <stringProp name="DiameterSampler.avpData.1">2001</stringProp>
            <stringProp name="DiameterSampler.avpName.2">Origin-Host</stringProp>
            <stringProp name="DiameterSampler.avpData.2">${sy_origin_host}</stringProp>
            <stringProp name="DiameterSampler.avpName.3">Origin-Realm</stringProp>
            <stringProp name="DiameterSampler.avpData.3">${sy_origin_realm}</stringProp>
            <stringProp name="DiameterSampler.avpCounter">4</stringProp>
            <stringProp name="DiameterClient.connectionName">SyOCS</stringProp>
          </com.computaris.jmeter.timers.DiameterTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.timer.SimpleTimer guiclass="com.computaris.jmeter.ext.timer.SimpleTimerGui" testclass="com.computaris.jmeter.ext.timer.SimpleTimer" testname="Wait Time" enabled="true">
            <stringProp name="SimpleTimer.TIMEOUT">1000</stringProp>
          </com.computaris.jmeter.ext.timer.SimpleTimer>
          <hashTree/>
          <com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler guiclass="com.computaris.jmeter.ext.sampler.dummy.preferred.gui.TtsDummySamplerGui" testclass="com.computaris.jmeter.ext.sampler.dummy.preferred.TtsDummySampler" testname="Stop Sy Push Server" enabled="true"/>
          <hashTree/>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop pcap and logs" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="stop Pcap" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-720136512">Stop Pcap</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop NV log" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-632654166">Stop NV log</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="End Sampler Simple Controller" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="-1227702913">WorkBench</stringProp>
                <stringProp name="-1829425330">Automation_plan_6622</stringProp>
                <stringProp name="18059174">Common Functions</stringProp>
                <stringProp name="-2119522963">End Sampler Simple Controller</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="com.computaris.jmeter.visualizers.gui.DiameterDispatcherVizualizer" testclass="ResultCollector" testname="Diameter Messages" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>false</time>
            <latency>false</latency>
            <timestamp>false</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="com.computaris.jmeter_plugins.radius_client.visualizers.RadiusTreeListener" testclass="ResultCollector" testname="TTS Radius Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="com.computaris.jmeter_plugins.radius_client.visualizers.RadiusTreeMessageListener" testclass="ResultCollector" testname="TTS Radius Message Listener" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <JSR223Listener guiclass="TestBeanGUI" testclass="JSR223Listener" testname="Test-Rail Push Result JSR223 Listener" enabled="false">
        <stringProp name="TestPlan.comments">This Listener will Push Pass/Fail Result to Test Rail</stringProp>
        <stringProp name="cacheKey"></stringProp>
        <stringProp name="filename"></stringProp>
        <stringProp name="parameters">${test_run_id} ${test_case_id}</stringProp>
        <stringProp name="script">import java.util.HashMap;
import java.util.Map;
import org.json.simple.JSONObject;
import org.apache.jorphan.logging.LoggingManager;
import com.gurock.testrail.APIClient;
import org.apache.jmeter.samplers.*;
import org.apache.jmeter.assertions.*;

		
APIClient client = new APIClient(&quot;http://192.168.2.138/csmqa/&quot;);
client.setUser(&quot;nirav.modhiya@elitecore.com&quot;);
client.setPassword(&quot;elitecore&quot;);	

LoggingManager.getLoggerForClass().info(&quot;JSON Object To Be Sent Is : &quot;+ args);
// Here STATUS 1 is for &apos;Passed&apos; and &apos;5&apos; is for &apos;Failed&apos;
String STATUS_ID = &quot;status_id&quot;;
//Validations on results

Map data = new HashMap();
LoggingManager.getLoggerForClass().info(&quot;SampleResult.isStopThread : &quot;+ sampleResult.isStopThread()); 
LoggingManager.getLoggerForClass().info(&quot;SampleResult.isSuccessful : &quot;+ sampleResult.isSuccessful()); 

int status = 1;
// 1) This will be executed when all the samplers are executed succesffully.
String commit = &quot;All the Steps are executed Successfully&quot;
// 1) End

// 2) Exectuion failed on Sampler. i.e. Sampler ERROR &amp; Test Thread is stopped.
if(sampleResult.isStopThread()) {
	status = 5;
	Sampler sampler = ctx.getCurrentSampler();
	commit = &quot;\n&quot; + sampler.getName() + &quot; execution failed&quot;;
// 2) End
	
} else {
// 3) Execution failed on Assertion. i.e. Assertion failed / multiple Assertion failed.
	Sampler sampler = ctx.getCurrentSampler();
	String name = sampler.getName();

	if(name.equals(&quot;end sampler&quot;)){
		status = 1;
	} else if (sampleResult.isSuccessful() == false) {
		status = 5;

		if(sampleResult.getAssertionResults() == null || sampleResult.getAssertionResults().size() == 0) {
			commit = &quot;Execution failed of: &quot; + &quot;\n Thread Name: &quot; + sampler.getThreadName() + &quot;\n Sampler Name: &quot; + sampler.getName();
			LoggingManager.getLoggerForClass().info(&quot;SampleResult.isSuccessful : &quot;+ sampleResult.isSuccessful());
		} else {
			commit = &quot;Execution failed of: &quot; + &quot;\n Thread Name: &quot; + sampler.getThreadName() + &quot;\n Sampler Name: &quot; + sampler.getName() + &quot; on following Assertion:&quot;;
			for (AssertionResult assertionResult : sampleResult.getAssertionResults()) {
	
				if(assertionResult.isFailure() || assertionResult.isError()) {
commit = commit + &quot;\n Assertion Name: &quot; + assertionResult.getName() + &quot;\n Assertion Failure Message: &quot; + assertionResult.getFailureMessage();
				}
			}
		}
	} else {
		return;
	}
}
// 3) End

// Null Check for Elapsed Time.
String elapsedTime = vars.get(&quot;elapsed_time&quot;);
if (elapsedTime == null) {
	LoggingManager.getLoggerForClass().error(&quot;&lt;&lt; Elapsed Time is not defined in Global Variable Definition &gt;&gt;&quot;);
	return;
} else {
LoggingManager.getLoggerForClass().info(&quot;elapsed time is: &quot; + elapsedTime);
}

// Null Check for Checked Version.
String checkedVersion = vars.get(&quot;checked_version&quot;);
if (checkedVersion == null) {
	LoggingManager.getLoggerForClass().error(&quot;&lt;&lt; Checked Version is not defined in Global Variable Definition &gt;&gt;&quot;);
	return;
} else {
LoggingManager.getLoggerForClass().info(&quot;Checked Version is: &quot; + checkedVersion);
}

// Null Check for Checked Revision.
String checkedRevision = vars.get(&quot;checked_revision&quot;);
if (checkedRevision == null) {
	LoggingManager.getLoggerForClass().error(&quot;&lt;&lt; Checked Revision is not defined in Global Variable Definition &gt;&gt;&quot;);
	return;
} else {
LoggingManager.getLoggerForClass().info(&quot;Checked Revision is: &quot; + checkedRevision);
}

// Null Check for Test Run ID.
String testRunId = vars.get(&quot;test_run_id&quot;);
if (testRunId == null) {
	LoggingManager.getLoggerForClass().error(&quot;&lt;&lt; Test Run ID is not defined in Global Variable Definition &gt;&gt;&quot;);
	return;
} else {
LoggingManager.getLoggerForClass().info(&quot;Test Run ID is: &quot; + testRunId);
}

// Null Check for Test Case ID.
String testCaseId = vars.get(&quot;test_case_id&quot;);
if (testCaseId == null) {
	LoggingManager.getLoggerForClass().error(&quot;&lt;&lt; Test Case ID is not defined in TTS Parameterized Configuration &gt;&gt;&quot;);
	return;
} else {
LoggingManager.getLoggerForClass().info(&quot;Test Case ID is: &quot; + testCaseId);
}

data.put(STATUS_ID, status);
data.put(&quot;comment&quot;, commit);
// Elapsed time is in Minutes
data.put(&quot;elapsed&quot;, new Integer(elapsedTime));
data.put(&quot;custom_version&quot;, new Integer(checkedVersion));
data.put(&quot;custom_revision&quot;, new Integer(checkedRevision));
LoggingManager.getLoggerForClass().info(&quot;Add_result_for_case/&quot;+args[0]+&quot;/&quot;+args[1]);
JSONObject r = (JSONObject) client.sendPost(&quot;Add_result_for_case/&quot;+args[0]+&quot;/&quot;+args[1], data);
LoggingManager.getLoggerForClass().info(&quot;JSON Object To Be Sent Is : &quot;+ r);</stringProp>
        <stringProp name="scriptLanguage">groovy</stringProp>
      </JSR223Listener>
      <hashTree/>
      <PostThreadGroup guiclass="PostThreadGroupGui" testclass="PostThreadGroup" testname="tearDown Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1473851955000</longProp>
        <longProp name="ThreadGroup.end_time">1473851955000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </PostThreadGroup>
      <hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop Pcap" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Teardown_Stop PCAP On Server" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill  ${PcapPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill -9 `ps -ef | grep -w &apos;tcpdump&apos; | awk &apos;{print $2}&apos;`</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.modifiers.DiameterLoad guiclass="com.computaris.jmeter.modifiers.gui.DiameterLoadGui" testclass="com.computaris.jmeter.modifiers.DiameterLoad" testname="TTS Load Variable" enabled="true">
              <stringProp name="DiameterLoaddefault"></stringProp>
              <stringProp name="DiameterLoadrefname">PcapPID</stringProp>
              <stringProp name="DiameterLoadvalue">PcapPID</stringProp>
              <boolProp name="DiameterLoadtolerant">false</boolProp>
            </com.computaris.jmeter.modifiers.DiameterLoad>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop NV log" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Teardown_StopNV logs" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill ${LogPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill -9 `ps -ef | grep -w &apos;tail&apos; | awk &apos;{print $2}&apos;`</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.modifiers.DiameterLoad guiclass="com.computaris.jmeter.modifiers.gui.DiameterLoadGui" testclass="com.computaris.jmeter.modifiers.DiameterLoad" testname="TTS Load Variable" enabled="true">
              <stringProp name="DiameterLoaddefault"></stringProp>
              <stringProp name="DiameterLoadrefname">LogPID</stringProp>
              <stringProp name="DiameterLoadvalue">LogPID</stringProp>
              <boolProp name="DiameterLoadtolerant">false</boolProp>
            </com.computaris.jmeter.modifiers.DiameterLoad>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Delete GW &amp; GW Profile" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Diameter GW" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/gateway/diameter-gateway/RTC_21_Gateway_11111111.json</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1714736754">&quot;id&quot;:&quot;RTC_21_Gateway_11111111&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Diameter GW Profile" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/gatewayprofile/diameter-gateway-profile/RTC_21_GW_Profile_11111111.json</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="235127762">&quot;id&quot;:&quot;RTC_21_GW_Profile_11111111&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Diameter GW" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/gateway/diameter-gateway/RTC_22_Gateway_11111111.json</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="870264883">&quot;id&quot;:&quot;RTC_22_Gateway_11111111&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Diameter GW Profile" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/gatewayprofile/diameter-gateway-profile/RTC_22_GW_Profile_11111111.json</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1802928527">&quot;id&quot;:&quot;RTC_22_GW_Profile_11111111&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Diameter GW" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/gateway/diameter-gateway/RTC_23_Gateway_11111111.json</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="870264883">&quot;id&quot;:&quot;RTC_22_Gateway_11111111&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Diameter GW Profile" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/gatewayprofile/diameter-gateway-profile/RTC_23_GW_Profile_11111111.json</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1802928527">&quot;id&quot;:&quot;RTC_22_GW_Profile_11111111&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Delete GW &amp; GW Profile" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Diameter GW for Rx" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
              <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/gateway/diameter-gateway/RTC_14_AF_Gateway_11111111.json</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1469002434">&quot;id&quot;:&quot;RTC_14_AF_Gateway_11111111&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Diameter GW Profile for Rx" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
              <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/gatewayprofile/diameter-gateway-profile/RTC_14_AF_GW_Profile_11111111.json</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-776224378">&quot;id&quot;:&quot;RTC_14_AF_GW_Profile_11111111&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Delete GW &amp; GW Profile-29" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Diameter GW for Rx" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
              <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/gateway/diameter-gateway/RTC_29_AF_Gateway_11111111.json</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1824584806">&quot;id&quot;:&quot;RTC_29_AF_Gateway_11111111&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Diameter GW Profile for Rx" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
              <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/gatewayprofile/diameter-gateway-profile/RTC_29_AF_GW_Profile_11111111.json</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1753650602">&quot;id&quot;:&quot;RTC_29_AF_GW_Profile_11111111&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Delete GW &amp; GW Profile-30" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Diameter GW for Rx" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
              <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/gateway/diameter-gateway/RTC_30_AF_Gateway_11111111.json</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="582817092">&quot;id&quot;:&quot;RTC_30_AF_Gateway_11111111&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Diameter GW Profile for Rx" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
              <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/gatewayprofile/diameter-gateway-profile/RTC_30_AF_GW_Profile_11111111.json</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-995281984">&quot;id&quot;:&quot;RTC_30_AF_GW_Profile_11111111&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Common Functions" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1454995107000</longProp>
        <longProp name="ThreadGroup.end_time">1454995107000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture PCAP" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Start Pcap" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>mkdir -p ${logpath}/${pcapdir}</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>nohup  /usr/sbin/tcpdump -s 0 -i any port ${diameterport} or ${syport} -w ${logpath}/${pcapdir}/${pcapdir}.pcap  &amp; echo $!</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>mkdir -p ${logpath}/${pcapdir}</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>nohup  /usr/sbin/tcpdump -s 0 -i any port ${diameterport} or ${syport} -w ${logpath}/${pcapdir}/${pcapdir}.pcap  &amp; echo $!</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.extractor.DiameterStore guiclass="com.computaris.jmeter.extractor.gui.DiameterStoreGui" testclass="com.computaris.jmeter.extractor.DiameterStore" testname="Store PID of Tcpdump Command " enabled="true">
              <stringProp name="DiameterStoredefault"></stringProp>
              <stringProp name="DiameterStorerefname">PcapPID</stringProp>
              <stringProp name="DiameterStorevalue">${__telnetSSHGetResultLineByRegex(2,^\d+$)}</stringProp>
              <boolProp name="DiameterStoretolerant">true</boolProp>
            </com.computaris.jmeter.extractor.DiameterStore>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop Pcap" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Stop PCAP On Server" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill  ${PcapPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill  ${PcapPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.modifiers.DiameterLoad guiclass="com.computaris.jmeter.modifiers.gui.DiameterLoadGui" testclass="com.computaris.jmeter.modifiers.DiameterLoad" testname="TTS Load Variable" enabled="true">
              <stringProp name="DiameterLoaddefault"></stringProp>
              <stringProp name="DiameterLoadrefname">PcapPID</stringProp>
              <stringProp name="DiameterLoadvalue">PcapPID</stringProp>
              <boolProp name="DiameterLoadtolerant">false</boolProp>
            </com.computaris.jmeter.modifiers.DiameterLoad>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture log " enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Start NV logs" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>mkdir -p ${logpath}/${pcapdir}</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>nohup tail -f ${nvhome}/logs/*&gt;${logpath}/${pcapdir}/${pcapdir}-server.log &amp; echo $!</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>mkdir -p ${logpath}/${pcapdir}</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>nohup tail -f ${nvhome}/logs/*&gt;${logpath}/${pcapdir}/${pcapdir}-server.log &amp; echo $!</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.extractor.DiameterStore guiclass="com.computaris.jmeter.extractor.gui.DiameterStoreGui" testclass="com.computaris.jmeter.extractor.DiameterStore" testname="Store PID of log Command" enabled="true">
              <stringProp name="DiameterStoredefault"></stringProp>
              <stringProp name="DiameterStorerefname">LogPID</stringProp>
              <stringProp name="DiameterStorevalue">${__telnetSSHGetResultLineByRegex(2,^\d+$)}</stringProp>
              <boolProp name="DiameterStoretolerant">true</boolProp>
            </com.computaris.jmeter.extractor.DiameterStore>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture PD log " enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Start PD logs" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>nohup tail -f ${nvhome}/logs/netvertex-server-${serverinstancename}.log&gt;/opt/${logpath}/${pcapdir}/${logfilename}.log &amp; echo $!</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>mkdir -p ${logpath}/${pcapdir}</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>nohup tail -f ${pdhome}/logs/*&gt;${logpath}/${pcapdir}/${pcapdir}-policy-designer.log &amp; echo $!</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.extractor.DiameterStore guiclass="com.computaris.jmeter.extractor.gui.DiameterStoreGui" testclass="com.computaris.jmeter.extractor.DiameterStore" testname="Store PID of log Command" enabled="true">
              <stringProp name="DiameterStoredefault"></stringProp>
              <stringProp name="DiameterStorerefname">PDPID</stringProp>
              <stringProp name="DiameterStorevalue">${__telnetSSHGetResultLineByRegex(2,^\d+$)}</stringProp>
              <boolProp name="DiameterStoretolerant">true</boolProp>
            </com.computaris.jmeter.extractor.DiameterStore>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop NV log" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="StopNV logs" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill ${LogPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill ${LogPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.modifiers.DiameterLoad guiclass="com.computaris.jmeter.modifiers.gui.DiameterLoadGui" testclass="com.computaris.jmeter.modifiers.DiameterLoad" testname="TTS Load Variable" enabled="true">
              <stringProp name="DiameterLoaddefault"></stringProp>
              <stringProp name="DiameterLoadrefname">LogPID</stringProp>
              <stringProp name="DiameterLoadvalue">LogPID</stringProp>
              <boolProp name="DiameterLoadtolerant">false</boolProp>
            </com.computaris.jmeter.modifiers.DiameterLoad>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop PD log" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="StopPD logs" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill ${LogPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill ${PDPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.modifiers.DiameterLoad guiclass="com.computaris.jmeter.modifiers.gui.DiameterLoadGui" testclass="com.computaris.jmeter.modifiers.DiameterLoad" testname="TTS Load Variable" enabled="true">
              <stringProp name="DiameterLoaddefault"></stringProp>
              <stringProp name="DiameterLoadrefname">PDPID</stringProp>
              <stringProp name="DiameterLoadvalue">PDPID</stringProp>
              <boolProp name="DiameterLoadtolerant">false</boolProp>
            </com.computaris.jmeter.modifiers.DiameterLoad>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="NV Restart " enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="NV Restart " enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;shutdown\ abort&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>3000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; sh netvertex.sh&quot;</__commandText>
                  <__timeout>20000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;shutdown\ abort&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>3000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; sh netvertex.sh&quot;</__commandText>
                  <__timeout>20000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Tomcat log " enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Start Tomcat logs" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>nohup tail -f ${nvhome}/logs/netvertex-server-${serverinstancename}.log&gt;/opt/${logpath}/${pcapdir}/${logfilename}.log &amp; echo $!</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>/bin/mkdir -p ${logpath}/${pcapdir}</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>nohup tail -f ${tomcat_home}/logs/catalina.out&gt;${logpath}/${pcapdir}/${tomcatlogs}.log &amp; echo $!</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.extractor.DiameterStore guiclass="com.computaris.jmeter.extractor.gui.DiameterStoreGui" testclass="com.computaris.jmeter.extractor.DiameterStore" testname="Store PID of log Command" enabled="true">
              <stringProp name="DiameterStoredefault"></stringProp>
              <stringProp name="DiameterStorerefname">TomcatLogPID</stringProp>
              <stringProp name="DiameterStorevalue">${__telnetSSHGetResultLineByRegex(2,^\d+$)}</stringProp>
              <boolProp name="DiameterStoretolerant">true</boolProp>
            </com.computaris.jmeter.extractor.DiameterStore>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop Tomcat log" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Stop Tomcat logs" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill ${LogPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill ${TomcatLogPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.modifiers.DiameterLoad guiclass="com.computaris.jmeter.modifiers.gui.DiameterLoadGui" testclass="com.computaris.jmeter.modifiers.DiameterLoad" testname="TTS Load Variable" enabled="true">
              <stringProp name="DiameterLoaddefault"></stringProp>
              <stringProp name="DiameterLoadrefname">TomcatLogPID</stringProp>
              <stringProp name="DiameterLoadvalue">TomcatLogPID</stringProp>
              <boolProp name="DiameterLoadtolerant">false</boolProp>
            </com.computaris.jmeter.modifiers.DiameterLoad>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="NV Restart (shut immediate)" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="NV Restart (shut immediate)" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - netvertex -c &quot;cd /home/netvertex/netvertex662/netvertex/bin; echo &quot;shutdown\ immediate&quot; | sh cli.sh&quot; ; sleep 5</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - netvertex -c &quot;cd /home/netvertex/netvertex662/netvertex/bin; sh netvertex.sh&quot;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;shutdown\ abort&quot; | sh cli.sh&quot; ; sleep 5</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; sh netvertex.sh&quot;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="show statistics usage" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="show statistics usage" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - netvertex -c &quot;cd /home/netvertex/netvertex662/netvertex/bin; echo &quot;show\ statistics\ usage&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;show\ statistics\ usage&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="clear statistics usage" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="clear statistics usage" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - netvertex -c &quot;cd /home/netvertex/netvertex662/netvertex/bin; echo &quot;clear\ statistics\ usage&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;clear\ statistics\ usage&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="show spr-cache Stats" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="show statistics cache spr-cache" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - netvertex -c &quot;cd /home/netvertex/netvertex662/netvertex/bin; echo &quot;show\ statistics\ usage&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;show\ statistics\ cache\ spr-cache&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="clear spr-cache Stats" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="clear statistics cache spr-cache" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - netvertex -c &quot;cd /home/netvertex/netvertex662/netvertex/bin; echo &quot;show\ statistics\ usage&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;clear\ statistics\ cache\ spr-cache&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="clear spr-cache" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="clear cache spr-cache -all" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - netvertex -c &quot;cd /home/netvertex/netvertex662/netvertex/bin; echo &quot;show\ statistics\ usage&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;clear\ cache\ spr-cache\ -all&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Tomcat Restart " enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Tomcat Restart " enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;shutdown\ abort&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; sh netvertex.sh&quot;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${tomcat_home}/bin; sh shutdown.sh&quot; ; sleep 3</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${tomcat_home}/bin; sh shutdown.sh&quot; ;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${tomcat_home}/bin; rm -rf ../work/*&quot; </__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${tomcat_home}/bin; sh startup.sh&quot; ; sleep 15</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Set spr.cache-enabled = true" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Set spr.cache-enabled = true" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;vi ${nvhome}/system/misc-config.properties&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/#spr.cache-enabled = true/spr.cache-enabled = true/g</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/spr.cache-enabled = false/spr.cache-enabled = true/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:x</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Set spr.cache-enabled = false" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Set spr.cache-enabled = false" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;vi ${nvhome}/system/misc-config.properties&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/#spr.cache-enabled = true/spr.cache-enabled = false/g</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/spr.cache-enabled = true/spr.cache-enabled = false/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:x</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="serverinitiated.destination-host = true" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="serverinitiated.destination-host = true" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;vi ${nvhome}/system/misc-config.properties&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/#serverinitiated.destination-host = true/serverinitiated.destination-host = true/g</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/serverinitiated.destination-host = false/serverinitiated.destination-host = true/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/#serverinitiated.destination-host = false/serverinitiated.destination-host = true/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/#serverinitiated.destination-host = true/serverinitiated.destination-host = true/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:x</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="serverinitiated.destination-host = false" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Set spr.cache-enabled = false" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;vi ${nvhome}/system/misc-config.properties&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/#serverinitiated.destination-host = true/serverinitiated.destination-host = false/g</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/serverinitiated.destination-host = true/serverinitiated.destination-host = false/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/#serverinitiated.destination-host = false/serverinitiated.destination-host = false/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:x</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="set -Drevalidationtime.delta=0" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="-Drevalidationtime.delta=0" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;vi ${nvhome}/bin/netvertex.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/server.gcInterval=86400000/server.gcInterval=86400000 -Drevalidationtime.delta=0/g</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/server.gcInterval=86400000 -Drevalidationtime.delta=0 -Drevalidationtime.delta=0/server.gcInterval=86400000 -Drevalidationtime.delta=0/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:x</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
        <hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="end sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">false</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PD: Reload Policy" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/policy/reload/policy</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Set session.cache-enabled = true" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Set session.cache-enabled = true" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;vi ${nvhome}/system/misc-config.properties&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/session.cache-enabled = false/session.cache-enabled = true/g</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/session.cache-enabled = true/session.cache-enabled = true/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:x</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Set session.cache-enabled = false" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Set session.cache-enabled = false" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;vi ${nvhome}/system/misc-config.properties&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/session.cache-enabled = false/session.cache-enabled = false/g</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/session.cache-enabled = true/session.cache-enabled = false/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:x</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="RConf" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Rconf" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;&apos;rconf&apos;&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>20000</__timeout>
                  <__waitFor>Server Configuration Successfully Reloaded for NetVertex</__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1770785172">Server Configuration Successfully Reloaded for NetVertex</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Verify PCRF Running" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Verify PCRF Running" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;&apos;services&apos;&quot; | sh cli.sh&quot; | grep PCRF</__commandText>
                  <__timeout>30000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1079530081">Running</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Verify OfflineRnC Running" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Verify OfflineRnC Running" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;&apos;services&apos;&quot; | sh cli.sh&quot; | grep OfflineRnC</__commandText>
                  <__timeout>30000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1079530081">Running</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Verify Diameter Running" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Verify Diameter Running" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;&apos;globallisteners&apos;&quot; | sh cli.sh&quot; | grep DIAMETER</__commandText>
                  <__timeout>30000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1079530081">Running</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Verify Radius Running" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Verify Radius Running" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;&apos;globallisteners&apos;&quot; | sh cli.sh&quot; | grep RADIUS</__commandText>
                  <__timeout>30000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1079530081">Running</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
