<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.1" jmeter="3.1 r1770033">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Automation_plan_6622" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Mapping Variable" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="mapping_file_name" elementType="Argument">
            <stringProp name="Argument.name">mapping_file_name</stringProp>
            <stringProp name="Argument.value">PCC_WADL_Mapping.csv</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <kg.apc.jmeter.config.VariablesFromCSV guiclass="kg.apc.jmeter.config.VariablesFromCSVGui" testclass="kg.apc.jmeter.config.VariablesFromCSV" testname="Load Global Variable" enabled="true">
        <collectionProp name="Arguments.arguments"/>
        <stringProp name="filename">global.variables</stringProp>
        <stringProp name="variablesPrefix"></stringProp>
        <stringProp name="delimiter">::</stringProp>
        <intProp name="skipLines">0</intProp>
        <boolProp name="storeSysProp">false</boolProp>
      </kg.apc.jmeter.config.VariablesFromCSV>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="REST Default Parameters" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
        <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value">Basic YWRtaW46YWRtaW4=</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">Header Manager for REST API</stringProp>
      </HeaderManager>
      <hashTree/>
      <ConfigTestElement guiclass="com.computaris.jmeter.protocol.diameter.config.gui.DiameterConfigGui" testclass="ConfigTestElement" testname="Diameter Stack" enabled="true">
        <stringProp name="GxPCEFDiameterClient.server.0">${serverip}</stringProp>
        <stringProp name="GxPCEFDiameterClient.port.0">${diameterport}</stringProp>
        <stringProp name="GxPCEFDiameterClient.timeout.0">10000</stringProp>
        <stringProp name="GxPCEFDiameterClient.protocol.0">TCP</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.message">Capabilities-Exchange-Request</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.flagP">false</stringProp>
        <stringProp name="GxPCEFCERGxPCEFCERDiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.appID">16777238</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.0">Supported-Vendor-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.0">10415</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.1">Vendor-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.1">11</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.2">Origin-Host</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.2">${originhost}</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.3">Origin-Realm</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.3">${originrealm}</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.4">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.4">10.106.1.88</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.5">Vendor-Specific-Application-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.5">3</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.6">Acct-Application-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.6">0</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.7">Auth-Application-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.7">16777238</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.8">Vendor-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.8">10415</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.9">Product-Name</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.9">Jmeter</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.10">Origin-State-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.10">1094807040</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.11">Auth-Application-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.11">16777238</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.12">Acct-Application-Id</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.12">4</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpName.13">Firmware-Revision</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpData.13">267</stringProp>
        <stringProp name="GxPCEFCERDiameterClient.avpCounter">14</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.message">Disconnect-Peer-Request</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.flagP">false</stringProp>
        <stringProp name="GxPCEFDPRGxPCEFDPRDiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.avpData.0">${origin_host}</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.avpData.1">${originrealm}</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.avpName.2">Disconnect-Cause</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.avpData.2">2</stringProp>
        <stringProp name="GxPCEFDPRDiameterClient.avpCounter">3</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.message">Device-Watchdog-Answer</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.flagP">false</stringProp>
        <stringProp name="GxPCEFDWAGxPCEFDWADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpName.0">Result-Code</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpData.0">2001</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpName.1">Origin-Host</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpData.1">gx.elite.com</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpName.2">Origin-Realm</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpData.2">elite.com</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpName.3">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpData.3">10.106.1.142</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpName.4">Vendor-Id</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpData.4">10415</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpName.5">Product-Name</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpData.5">Jmeter</stringProp>
        <stringProp name="GxPCEFDWADiameterClient.avpCounter">6</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.message">Re-Auth-Answer</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFRAAGxPCEFRAADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.appID">16777238</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.HBHID">${__diamGetHopId(var)}</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.ETEID">${__diamGetEndId(var)}</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpData.0">${origin_host}</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpData.1">${origin_realm}</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpData.2">10.106.1.142</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpData.4">Jmeter</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpName.5">Result-Code</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpData.5">2001</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpName.6">Session-Id</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpData.6">${sessionid}</stringProp>
        <stringProp name="GxPCEFRAADiameterClient.avpCounter">7</stringProp>
        <stringProp name="GxPCEFASADiameterClient.message">Abort-Session-Answer</stringProp>
        <stringProp name="GxPCEFASADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFASAGxPCEFASADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFASADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFASADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFASADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFASADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpData.0"></stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpData.1"></stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpData.2"></stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="GxPCEFASADiameterClient.avpCounter">5</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.message">Cancel-Location-Answer</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFCLAGxPCEFCLADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpData.0"></stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpData.1"></stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpData.2"></stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="GxPCEFCLADiameterClient.avpCounter">5</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.message">Insert-Subscriber-Data-Answer</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFIDAGxPCEFIDADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpData.0"></stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpData.1"></stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpData.2"></stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="GxPCEFIDADiameterClient.avpCounter">5</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.message">Delete-Subscriber-Data-Answer</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFDSAGxPCEFDSADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpData.0"></stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpData.1"></stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpData.2"></stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="GxPCEFDSADiameterClient.avpCounter">5</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.message">Reset-Answer</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFRSAGxPCEFRSADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpData.0"></stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpData.1"></stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpData.2"></stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="GxPCEFRSADiameterClient.avpCounter">5</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.message">Registration-Termination-Answer</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFRTAGxPCEFRTADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpData.0"></stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpData.1"></stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpData.2"></stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="GxPCEFRTADiameterClient.avpCounter">5</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.message">Push-Profile-Answer</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFPPAGxPCEFPPADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpData.0"></stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpData.1"></stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpData.2"></stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="GxPCEFPPADiameterClient.avpCounter">5</stringProp>
        <stringProp name="GxPCEFSLADiameterClient.message">Spending-Limit-Answer</stringProp>
        <stringProp name="GxPCEFSLADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFSLAGxPCEFSLADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFSLADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFSLADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFSLADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFSLADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFSLADiameterClient.avpCounter">0</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.message">Session-Termination-Answer</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.flagP">true</stringProp>
        <stringProp name="GxPCEFSTAGxPCEFSTADiameterClient.flagE">false</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.flagT">false</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.appID">-1</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.HBHID">-1</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.ETEID">-1</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpData.0"></stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpData.1"></stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpData.2"></stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpData.3">0</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="GxPCEFSTADiameterClient.avpCounter">5</stringProp>
        <boolProp name="GxPCEFDiameterClient.overrideStack">true</boolProp>
        <boolProp name="GxPCEFDiameterClient.disableAutomaticBgResponder">false</boolProp>
        <boolProp name="GxPCEFDiameterClient.enablePeerStateMachine">true</boolProp>
        <stringProp name="73_PCEF_primaryDiameterClient.server.0">${serverip}</stringProp>
        <stringProp name="73_PCEF_primaryDiameterClient.port.0">${diameterport}</stringProp>
        <stringProp name="73_PCEF_primaryDiameterClient.timeout.0">3000</stringProp>
        <stringProp name="73_PCEF_primaryDiameterClient.protocol.0">TCP</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.message">Capabilities-Exchange-Request</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.flagP">false</stringProp>
        <stringProp name="73_PCEF_primaryCER73_PCEF_primaryCERDiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.appID">16777238</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.0">Supported-Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.0">10415</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.1">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.1">${73_origin_host_primary}</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.2">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.2">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.3">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.3">10.106.1.88</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.4">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.4">11</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.5">Vendor-Specific-Application-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.5">3</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.6">Acct-Application-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.6">0</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.7">Auth-Application-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.7">16777238</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.8">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.8">10415</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.9">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.9">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.10">Origin-State-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.10">1094807040</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.11">Auth-Application-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.11">16777238</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.12">Acct-Application-Id</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.12">0</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpName.13">Firmware-Revision</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpData.13">267</stringProp>
        <stringProp name="73_PCEF_primaryCERDiameterClient.avpCounter">14</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.message">Disconnect-Peer-Request</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.flagP">false</stringProp>
        <stringProp name="73_PCEF_primaryDPR73_PCEF_primaryDPRDiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.avpData.0">${73_origin_host_primary}</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.avpData.1">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.avpName.2">Disconnect-Cause</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.avpData.2">2</stringProp>
        <stringProp name="73_PCEF_primaryDPRDiameterClient.avpCounter">3</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.message">Device-Watchdog-Answer</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.flagP">false</stringProp>
        <stringProp name="73_PCEF_primaryDWA73_PCEF_primaryDWADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpName.0">Result-Code</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpData.0">2001</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpName.1">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpData.1">${73_origin_host_primary}</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpName.2">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpData.2">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpName.3">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpData.3">127.0.0.1</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpName.4">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpData.4">0</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpName.5">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpData.5">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryDWADiameterClient.avpCounter">6</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.message">Re-Auth-Answer</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primaryRAA73_PCEF_primaryRAADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpData.0">${73_origin_host_primary}</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpData.1">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpData.2">10.106.1.172</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryRAADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.message">Abort-Session-Answer</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primaryASA73_PCEF_primaryASADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpData.0">${73_origin_host_primary}</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpData.1">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpData.2">10.106.1.172</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryASADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.message">Cancel-Location-Answer</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primaryCLA73_PCEF_primaryCLADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryCLADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.message">Insert-Subscriber-Data-Answer</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primaryIDA73_PCEF_primaryIDADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryIDADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.message">Delete-Subscriber-Data-Answer</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primaryDSA73_PCEF_primaryDSADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryDSADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.message">Reset-Answer</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primaryRSA73_PCEF_primaryRSADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryRSADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.message">Registration-Termination-Answer</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primaryRTA73_PCEF_primaryRTADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryRTADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.message">Push-Profile-Answer</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primaryPPA73_PCEF_primaryPPADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primaryPPADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_primarySLADiameterClient.message">Spending-Limit-Answer</stringProp>
        <stringProp name="73_PCEF_primarySLADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primarySLA73_PCEF_primarySLADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primarySLADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primarySLADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primarySLADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primarySLADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primarySLADiameterClient.avpCounter">0</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.message">Session-Termination-Answer</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_primarySTA73_PCEF_primarySTADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_primarySTADiameterClient.avpCounter">5</stringProp>
        <boolProp name="73_PCEF_primaryDiameterClient.overrideStack">true</boolProp>
        <boolProp name="73_PCEF_primaryDiameterClient.disableAutomaticBgResponder">false</boolProp>
        <boolProp name="73_PCEF_primaryDiameterClient.enablePeerStateMachine">true</boolProp>
        <stringProp name="73_PCEF_secondaryDiameterClient.server.0">${serverip}</stringProp>
        <stringProp name="73_PCEF_secondaryDiameterClient.port.0">${diameterport}</stringProp>
        <stringProp name="73_PCEF_secondaryDiameterClient.timeout.0">3000</stringProp>
        <stringProp name="73_PCEF_secondaryDiameterClient.protocol.0">TCP</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.message">Capabilities-Exchange-Request</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.flagP">false</stringProp>
        <stringProp name="73_PCEF_secondaryCER73_PCEF_secondaryCERDiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.appID">16777238</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.0">${73_origin_host_secondary}</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.1">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.2">10.106.1.172</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.3">Supported-Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.3">10415</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.4">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.4">11</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.5">Vendor-Specific-Application-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.5">3</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.6">Acct-Application-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.6">0</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.7">Auth-Application-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.7">16777238</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.8">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.8">10415</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.9">Origin-State-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.9">1094807040</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.10">Auth-Application-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.10">16777238</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.11">Acct-Application-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.11">0</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.12">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.12">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpName.13">Firmware-Revision</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpData.13">267</stringProp>
        <stringProp name="73_PCEF_secondaryCERDiameterClient.avpCounter">14</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.message">Disconnect-Peer-Request</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.flagP">false</stringProp>
        <stringProp name="73_PCEF_secondaryDPR73_PCEF_secondaryDPRDiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.avpData.0">${73_origin_host_secondary}</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.avpData.1">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.avpName.2">Disconnect-Cause</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.avpData.2">2</stringProp>
        <stringProp name="73_PCEF_secondaryDPRDiameterClient.avpCounter">3</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.message">Device-Watchdog-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.flagP">false</stringProp>
        <stringProp name="73_PCEF_secondaryDWA73_PCEF_secondaryDWADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpName.0">Result-Code</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpData.0">2001</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpName.1">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpData.1">${73_origin_host_secondary}</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpName.2">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpData.2">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpName.3">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpData.3">10.106.1.172</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpName.4">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpData.4">0</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpName.5">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpData.5">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryDWADiameterClient.avpCounter">6</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.message">Re-Auth-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondaryRAA73_PCEF_secondaryRAADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpData.0">${73_origin_host_secondary}</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpData.1">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpData.2">10.106.1.172</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryRAADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.message">Abort-Session-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondaryASA73_PCEF_secondaryASADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpData.0">${73_origin_host_secondary}</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpData.1">${73_origin_realm}</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpData.2">10.106.1.172</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryASADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.message">Cancel-Location-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondaryCLA73_PCEF_secondaryCLADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryCLADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.message">Insert-Subscriber-Data-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondaryIDA73_PCEF_secondaryIDADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryIDADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.message">Delete-Subscriber-Data-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondaryDSA73_PCEF_secondaryDSADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryDSADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.message">Reset-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondaryRSA73_PCEF_secondaryRSADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryRSADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.message">Registration-Termination-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondaryRTA73_PCEF_secondaryRTADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryRTADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.message">Push-Profile-Answer</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondaryPPA73_PCEF_secondaryPPADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondaryPPADiameterClient.avpCounter">5</stringProp>
        <stringProp name="73_PCEF_secondarySLADiameterClient.message">Spending-Limit-Answer</stringProp>
        <stringProp name="73_PCEF_secondarySLADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondarySLA73_PCEF_secondarySLADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondarySLADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondarySLADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondarySLADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondarySLADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondarySLADiameterClient.avpCounter">0</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.message">Session-Termination-Answer</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.flagP">true</stringProp>
        <stringProp name="73_PCEF_secondarySTA73_PCEF_secondarySTADiameterClient.flagE">false</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.flagT">false</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.appID">-1</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.HBHID">-1</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.ETEID">-1</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpData.0"></stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpData.1"></stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpData.2"></stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpData.3">0</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="73_PCEF_secondarySTADiameterClient.avpCounter">5</stringProp>
        <boolProp name="73_PCEF_secondaryDiameterClient.overrideStack">true</boolProp>
        <boolProp name="73_PCEF_secondaryDiameterClient.disableAutomaticBgResponder">false</boolProp>
        <boolProp name="73_PCEF_secondaryDiameterClient.enablePeerStateMachine">true</boolProp>
        <stringProp name="RxPCEFDiameterClient.server.0">${serverip}</stringProp>
        <stringProp name="RxPCEFDiameterClient.port.0">${diameterport}</stringProp>
        <stringProp name="RxPCEFDiameterClient.timeout.0">3000</stringProp>
        <stringProp name="RxPCEFDiameterClient.protocol.0">TCP</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.message">Capabilities-Exchange-Request</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.flagP">false</stringProp>
        <stringProp name="RxPCEFCERRxPCEFCERDiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.appID">16777236</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.0">Auth-Application-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.0">16777236</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.1">Acct-Application-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.1">0</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.2">Vendor-Specific-Application-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.2">3</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.3">Acct-Application-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.4">Auth-Application-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.4">16777236</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.5">Vendor-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.5">10415</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.6">Supported-Vendor-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.6">10415</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.7">Origin-Host</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.7">${origin_host_rx}</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.8">Origin-Realm</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.8">${origin_realm_rx}</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.9">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.9">10.106.1.172</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.10">Origin-State-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.10">1094807040</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.11">Vendor-Id</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.11">11</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.12">Product-Name</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.12">Applicaion Function</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpName.13">Firmware-Revision</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpData.13">267</stringProp>
        <stringProp name="RxPCEFCERDiameterClient.avpCounter">14</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.message">Disconnect-Peer-Request</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.flagP">false</stringProp>
        <stringProp name="RxPCEFDPRRxPCEFDPRDiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.avpData.0">${origin_host_rx}</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.avpData.1">${origin_realm_rx}</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.avpName.2">Disconnect-Cause</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.avpData.2">2</stringProp>
        <stringProp name="RxPCEFDPRDiameterClient.avpCounter">3</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.message">Device-Watchdog-Answer</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.flagP">false</stringProp>
        <stringProp name="RxPCEFDWARxPCEFDWADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpName.0">Result-Code</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpData.0">2001</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpName.1">Origin-Host</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpData.1">${origin_host_rx}</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpName.2">Origin-Realm</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpData.2">${origin_realm_rx}</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpName.3">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpData.3">127.0.0.1</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpName.4">Vendor-Id</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpData.4">0</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpName.5">Product-Name</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpData.5">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFDWADiameterClient.avpCounter">6</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.message">Re-Auth-Answer</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFRAARxPCEFRAADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpData.0">${origin_host_rx}</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpData.1">${origin_realm_rx}</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpData.2">10.106.1.172</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFRAADiameterClient.avpCounter">5</stringProp>
        <stringProp name="RxPCEFASADiameterClient.message">Abort-Session-Answer</stringProp>
        <stringProp name="RxPCEFASADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFASARxPCEFASADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFASADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFASADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFASADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFASADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpData.0">${origin_host_rx}</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpData.1">${origin_realm_rx}</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpData.2">10.106.1.172</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpName.5">Result-Code</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpData.5">2001</stringProp>
        <stringProp name="RxPCEFASADiameterClient.avpCounter">6</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.message">Cancel-Location-Answer</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFCLARxPCEFCLADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpData.0"></stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpData.1"></stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpData.2"></stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFCLADiameterClient.avpCounter">5</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.message">Insert-Subscriber-Data-Answer</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFIDARxPCEFIDADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpData.0"></stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpData.1"></stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpData.2"></stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFIDADiameterClient.avpCounter">5</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.message">Delete-Subscriber-Data-Answer</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFDSARxPCEFDSADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpData.0"></stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpData.1"></stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpData.2"></stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFDSADiameterClient.avpCounter">5</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.message">Reset-Answer</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFRSARxPCEFRSADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpData.0"></stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpData.1"></stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpData.2"></stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFRSADiameterClient.avpCounter">5</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.message">Registration-Termination-Answer</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFRTARxPCEFRTADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpData.0"></stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpData.1"></stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpData.2"></stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFRTADiameterClient.avpCounter">5</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.message">Push-Profile-Answer</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFPPARxPCEFPPADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpData.0"></stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpData.1"></stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpData.2"></stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFPPADiameterClient.avpCounter">5</stringProp>
        <stringProp name="RxPCEFSLADiameterClient.message">Spending-Limit-Answer</stringProp>
        <stringProp name="RxPCEFSLADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFSLARxPCEFSLADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFSLADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFSLADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFSLADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFSLADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFSLADiameterClient.avpCounter">0</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.message">Session-Termination-Answer</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.flagP">true</stringProp>
        <stringProp name="RxPCEFSTARxPCEFSTADiameterClient.flagE">false</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.flagT">false</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.appID">-1</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.HBHID">-1</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.ETEID">-1</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpName.0">Origin-Host</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpData.0"></stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpName.1">Origin-Realm</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpData.1"></stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpName.2">Host-IP-Address</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpData.2"></stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpName.3">Vendor-Id</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpData.3">0</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpName.4">Product-Name</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpData.4">Diameter Test Tool</stringProp>
        <stringProp name="RxPCEFSTADiameterClient.avpCounter">5</stringProp>
        <boolProp name="RxPCEFDiameterClient.overrideStack">true</boolProp>
        <boolProp name="RxPCEFDiameterClient.disableAutomaticBgResponder">false</boolProp>
        <boolProp name="RxPCEFDiameterClient.enablePeerStateMachine">true</boolProp>
        <objProp>
          <name>DiameterClient.CONNECTION_IDS</name>
          <value class="java.util.ArrayList">
            <java.lang.String>GxPCEF</java.lang.String>
            <java.lang.String>73_PCEF_primary</java.lang.String>
            <java.lang.String>73_PCEF_secondary</java.lang.String>
            <java.lang.String>RxPCEF</java.lang.String>
          </value>
        </objProp>
      </ConfigTestElement>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery">Select 1 from dual</stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">DB</stringProp>
        <stringProp name="dbUrl">jdbc:oracle:thin:@${dbserverip}:${dbserverport}/${dbserversid}</stringProp>
        <stringProp name="driver">oracle.jdbc.driver.OracleDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">${dbpassword}</stringProp>
        <stringProp name="poolMax">10</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">${dbusername}</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Update Deployment Mode to PCRF" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1528899449000</longProp>
        <longProp name="ThreadGroup.end_time">1528899449000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <com.computaris.jmeter.ext.controls.ParameterizedController guiclass="com.computaris.jmeter.ext.controls.ParameterizedControllerGui" testclass="com.computaris.jmeter.ext.controls.ParameterizedController" testname="TTS Parameterized Controller" enabled="true">
          <elementProp name="ParameterizedController" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="pcapdir" elementType="Argument">
                <stringProp name="Argument.name">pcapdir</stringProp>
                <stringProp name="Argument.value">Update_System_Parameter</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </com.computaris.jmeter.ext.controls.ParameterizedController>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Start Log" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="-1227702913">WorkBench</stringProp>
              <stringProp name="-1829425330">Automation_plan_6622</stringProp>
              <stringProp name="18059174">Common Functions</stringProp>
              <stringProp name="1033451790">Capture PD log </stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Deployment Mode to PCRF" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;groups&quot;: &quot;GROUP_1&quot;,&#xd;
  &quot;systemParameters&quot;: [&#xd;
    {&#xd;
      &quot;name&quot;: &quot;Date Format&quot;,&#xd;
      &quot;description&quot;: &quot;dd : Day, MM : Month, yy : Year, hh : Hour, mm : Minutes, ss : Seconds&quot;,&#xd;
      &quot;alias&quot;: &quot;DATE_FORMAT&quot;,&#xd;
      &quot;value&quot;: &quot;MM/dd/yyyy HH:mm:ss&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;Short Date Format&quot;,&#xd;
      &quot;description&quot;: &quot;dd : Day, MM : Month, yy : Year&quot;,&#xd;
      &quot;alias&quot;: &quot;SHORT_DATE_FORMAT&quot;,&#xd;
      &quot;value&quot;: &quot;MM/dd/yyyy&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;Datasource Max Row&quot;,&#xd;
      &quot;description&quot;: &quot;Total Number of Row Display in Search&quot;,&#xd;
      &quot;alias&quot;: &quot;TOTAL_ROW&quot;,&#xd;
      &quot;value&quot;: &quot;50&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;Update Action For WS&quot;,&#xd;
      &quot;description&quot;: &quot;Update Action on Subscription or Subscriber policy change. Possible options: 0(No_Action), 1(ReAuth_Session), 2(Disconnect Session)&quot;,&#xd;
      &quot;alias&quot;: &quot;UPDATE_ACTION&quot;,&#xd;
      &quot;value&quot;: &quot;0&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;Country&quot;,&#xd;
      &quot;description&quot;: &quot;This parameter defines Country.&quot;,&#xd;
      &quot;alias&quot;: &quot;COUNTRY&quot;,&#xd;
      &quot;value&quot;: &quot;103&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;Currency&quot;,&#xd;
      &quot;description&quot;: &quot;This parameter defines the Currency.&quot;,&#xd;
      &quot;alias&quot;: &quot;CURRENCY&quot;,&#xd;
      &quot;value&quot;: &quot;INR&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;Operator&quot;,&#xd;
      &quot;description&quot;: &quot;This parameter defines Operator.&quot;,&#xd;
      &quot;alias&quot;: &quot;OPERATOR&quot;,&#xd;
      &quot;value&quot;: &quot;101&quot;&#xd;
    },&#xd;
    {&#xd;
    	&quot;name&quot;:&quot;Deployment Mode&quot;,&#xd;
    	&quot;description&quot;:&quot;Deployment mode is used to manage policy where PCC is used for Quota metering and QoS metering, PCRF is used for Quota metering and OCS is used for QoS metering. Note: System restart in required to apply this configuration&quot;,&#xd;
    	&quot;alias&quot;:&quot;DEPLOYMENT_MODE&quot;,&#xd;
    	&quot;value&quot;:&quot;PCRF&quot;&#xd;
    },&#xd;
    {&#xd;
            &quot;name&quot;: &quot;Tax(%)&quot;,&#xd;
            &quot;description&quot;: &quot;This parameter defines the value of the tax that should be applied on monetary recharge price. &quot;,&#xd;
            &quot;alias&quot;: &quot;TAX&quot;,&#xd;
            &quot;value&quot;: &quot;10&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;packageParameters&quot;: [&#xd;
    {&#xd;
      &quot;name&quot;: &quot;Param 1 Field Label&quot;,&#xd;
      &quot;description&quot;: &quot;Label of package param1 attribute. Default Param 1 if no label is configured.&quot;,&#xd;
      &quot;alias&quot;: &quot;PARAM_1&quot;,&#xd;
      &quot;value&quot;: &quot;&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;Param 2 Field Label&quot;,&#xd;
      &quot;description&quot;: &quot;Label of package param2 attribute. Default Param 2 if no label is configured.&quot;,&#xd;
      &quot;alias&quot;: &quot;PARAM_2&quot;,&#xd;
      &quot;value&quot;: &quot;&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${smserverport}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${smcontextpath}/${smapplicationname}/systemparameter/system-parameter/edit.json</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2450279">PCRF</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Stop PD Log" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="-1227702913">WorkBench</stringProp>
              <stringProp name="-1829425330">Automation_plan_6622</stringProp>
              <stringProp name="18059174">Common Functions</stringProp>
              <stringProp name="-592019242">Stop PD log</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>false</time>
            <latency>false</latency>
            <timestamp>false</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <stringProp name="TestPlan.comments">	</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="com.computaris.jmeter.visualizers.gui.DiameterDispatcherVizualizer" testclass="ResultCollector" testname="Diameter Messages" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Common Functions" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1454995107000</longProp>
        <longProp name="ThreadGroup.end_time">1454995107000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture PCAP" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Start Pcap" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>mkdir -p ${logpath}/${pcapdir}</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>nohup  /usr/sbin/tcpdump -s 0 -i any port ${diameterport} or ${syport} -w ${logpath}/${pcapdir}/${pcapdir}.pcap  &amp; echo $!</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>mkdir -p ${logpath}/${pcapdir}</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>nohup  /usr/sbin/tcpdump -s 0 -i any port ${diameterport} or ${syport} -w ${logpath}/${pcapdir}/${pcapdir}.pcap  &amp; echo $!</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.extractor.DiameterStore guiclass="com.computaris.jmeter.extractor.gui.DiameterStoreGui" testclass="com.computaris.jmeter.extractor.DiameterStore" testname="Store PID of Tcpdump Command " enabled="true">
              <stringProp name="DiameterStoredefault"></stringProp>
              <stringProp name="DiameterStorerefname">PcapPID</stringProp>
              <stringProp name="DiameterStorevalue">${__telnetSSHGetResultLineByRegex(2,^\d+$)}</stringProp>
              <boolProp name="DiameterStoretolerant">true</boolProp>
            </com.computaris.jmeter.extractor.DiameterStore>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop Pcap" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Stop PCAP On Server" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill  ${PcapPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill  ${PcapPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.modifiers.DiameterLoad guiclass="com.computaris.jmeter.modifiers.gui.DiameterLoadGui" testclass="com.computaris.jmeter.modifiers.DiameterLoad" testname="TTS Load Variable" enabled="true">
              <stringProp name="DiameterLoaddefault"></stringProp>
              <stringProp name="DiameterLoadrefname">PcapPID</stringProp>
              <stringProp name="DiameterLoadvalue">PcapPID</stringProp>
              <boolProp name="DiameterLoadtolerant">false</boolProp>
            </com.computaris.jmeter.modifiers.DiameterLoad>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture log " enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Start NV logs" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>mkdir -p ${logpath}/${pcapdir}</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>nohup tail -f ${nvhome}/logs/*&gt;${logpath}/${pcapdir}/${pcapdir}-server.log &amp; echo $!</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>mkdir -p ${logpath}/${pcapdir}</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>nohup tail -f ${nvhome}/logs/*&gt;${logpath}/${pcapdir}/${pcapdir}-server.log &amp; echo $!</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.extractor.DiameterStore guiclass="com.computaris.jmeter.extractor.gui.DiameterStoreGui" testclass="com.computaris.jmeter.extractor.DiameterStore" testname="Store PID of log Command" enabled="true">
              <stringProp name="DiameterStoredefault"></stringProp>
              <stringProp name="DiameterStorerefname">LogPID</stringProp>
              <stringProp name="DiameterStorevalue">${__telnetSSHGetResultLineByRegex(2,^\d+$)}</stringProp>
              <boolProp name="DiameterStoretolerant">true</boolProp>
            </com.computaris.jmeter.extractor.DiameterStore>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture PD log " enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Start PD logs" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>nohup tail -f ${nvhome}/logs/netvertex-server-${serverinstancename}.log&gt;/opt/${logpath}/${pcapdir}/${logfilename}.log &amp; echo $!</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>mkdir -p ${logpath}/${pcapdir}</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>nohup tail -f ${pdhome}/logs/*&gt;${logpath}/${pcapdir}/${pcapdir}-policy-designer.log &amp; echo $!</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.extractor.DiameterStore guiclass="com.computaris.jmeter.extractor.gui.DiameterStoreGui" testclass="com.computaris.jmeter.extractor.DiameterStore" testname="Store PID of log Command" enabled="true">
              <stringProp name="DiameterStoredefault"></stringProp>
              <stringProp name="DiameterStorerefname">PDPID</stringProp>
              <stringProp name="DiameterStorevalue">${__telnetSSHGetResultLineByRegex(2,^\d+$)}</stringProp>
              <boolProp name="DiameterStoretolerant">true</boolProp>
            </com.computaris.jmeter.extractor.DiameterStore>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop NV log" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="StopNV logs" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill ${LogPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill ${LogPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.modifiers.DiameterLoad guiclass="com.computaris.jmeter.modifiers.gui.DiameterLoadGui" testclass="com.computaris.jmeter.modifiers.DiameterLoad" testname="TTS Load Variable" enabled="true">
              <stringProp name="DiameterLoaddefault"></stringProp>
              <stringProp name="DiameterLoadrefname">LogPID</stringProp>
              <stringProp name="DiameterLoadvalue">LogPID</stringProp>
              <boolProp name="DiameterLoadtolerant">false</boolProp>
            </com.computaris.jmeter.modifiers.DiameterLoad>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop PD log" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="StopPD logs" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill ${LogPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill ${PDPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.modifiers.DiameterLoad guiclass="com.computaris.jmeter.modifiers.gui.DiameterLoadGui" testclass="com.computaris.jmeter.modifiers.DiameterLoad" testname="TTS Load Variable" enabled="true">
              <stringProp name="DiameterLoaddefault"></stringProp>
              <stringProp name="DiameterLoadrefname">PDPID</stringProp>
              <stringProp name="DiameterLoadvalue">PDPID</stringProp>
              <boolProp name="DiameterLoadtolerant">false</boolProp>
            </com.computaris.jmeter.modifiers.DiameterLoad>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="NV Restart " enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CLI Shutdown REST" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="parameters" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">abort</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">parameters</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${server_rest_port}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${cli_rest_url}/shutdown</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="NV Start" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;shutdown\ abort&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>3000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; sh netvertex.sh&quot;</__commandText>
                  <__timeout>20000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; sh netvertex.sh&quot;</__commandText>
                  <__timeout>20000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Capture Tomcat log " enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Start Tomcat logs" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>nohup tail -f ${nvhome}/logs/netvertex-server-${serverinstancename}.log&gt;/opt/${logpath}/${pcapdir}/${logfilename}.log &amp; echo $!</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>/bin/mkdir -p ${logpath}/${pcapdir}</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>nohup tail -f ${tomcat_home}/logs/catalina.out&gt;${logpath}/${pcapdir}/${tomcatlogs}.log &amp; echo $!</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.extractor.DiameterStore guiclass="com.computaris.jmeter.extractor.gui.DiameterStoreGui" testclass="com.computaris.jmeter.extractor.DiameterStore" testname="Store PID of log Command" enabled="true">
              <stringProp name="DiameterStoredefault"></stringProp>
              <stringProp name="DiameterStorerefname">TomcatLogPID</stringProp>
              <stringProp name="DiameterStorevalue">${__telnetSSHGetResultLineByRegex(2,^\d+$)}</stringProp>
              <boolProp name="DiameterStoretolerant">true</boolProp>
            </com.computaris.jmeter.extractor.DiameterStore>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Stop Tomcat log" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Stop Tomcat logs" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill ${LogPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>kill ${TomcatLogPID}</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree>
            <com.computaris.jmeter.modifiers.DiameterLoad guiclass="com.computaris.jmeter.modifiers.gui.DiameterLoadGui" testclass="com.computaris.jmeter.modifiers.DiameterLoad" testname="TTS Load Variable" enabled="true">
              <stringProp name="DiameterLoaddefault"></stringProp>
              <stringProp name="DiameterLoadrefname">TomcatLogPID</stringProp>
              <stringProp name="DiameterLoadvalue">TomcatLogPID</stringProp>
              <boolProp name="DiameterLoadtolerant">false</boolProp>
            </com.computaris.jmeter.modifiers.DiameterLoad>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="NV Restart (shut immediate)" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CLI Shutdown REST" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="parameters" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">abort</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">parameters</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${server_rest_port}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${cli_rest_url}/shutdown</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="NV Start" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;shutdown\ abort&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>3000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; sh netvertex.sh&quot;</__commandText>
                  <__timeout>20000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; sh netvertex.sh&quot;</__commandText>
                  <__timeout>20000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="show statistics usage" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CLI show statistics REST" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${server_rest_port}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${cli_rest_url}/show?parameters=statistics usage</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="clear statistics usage" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CLI clear statistics REST" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${server_rest_port}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${cli_rest_url}/clear?parameters=statistics usage</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2070394255">Usage statistics successfully cleared</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="show spr-cache Stats" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CLI show statistics cache spr-cache REST" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${server_rest_port}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${cli_rest_url}/show?parameters=statistics cache spr-cache</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="clear spr-cache Stats" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CLI clear statistics cache spr-cache REST" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${server_rest_port}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${cli_rest_url}/clear?parameters=statistics cache spr-cache</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-737073625">SPR cache statistics successfully cleared</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="clear spr-cache" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CLI clear cache spr-cache -all REST" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${server_rest_port}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${cli_rest_url}/clear?parameters=cache spr-cache -all</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1923322074">spr cache flushed</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Tomcat Restart " enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Tomcat Restart " enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;shutdown\ abort&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>true</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; sh netvertex.sh&quot;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${tomcat_home}/bin; sh shutdown.sh&quot; ; sleep 3</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${tomcat_home}/bin; sh shutdown.sh&quot; ;</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${tomcat_home}/bin; rm -rf ../work/*&quot; </__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${tomcat_home}/bin; sh startup.sh&quot; ; sleep 15</__commandText>
                  <__timeout>2000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Set spr.cache-enabled = true" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Set spr.cache-enabled = true" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;vi ${nvhome}/system/misc-config.properties&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/#spr.cache-enabled = true/spr.cache-enabled = true/g</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/spr.cache-enabled = false/spr.cache-enabled = true/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:x</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Reload Conf Common Function" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="-1227702913">WorkBench</stringProp>
              <stringProp name="-1829425330">Automation_plan_6622</stringProp>
              <stringProp name="18059174">Common Functions</stringProp>
              <stringProp name="77834902">RConf</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Set spr.cache-enabled = false" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Set spr.cache-enabled = false" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;vi ${nvhome}/system/misc-config.properties&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/#spr.cache-enabled = true/spr.cache-enabled = false/g</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/spr.cache-enabled = true/spr.cache-enabled = false/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:x</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Reload Conf Common Function" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="-1227702913">WorkBench</stringProp>
              <stringProp name="-1829425330">Automation_plan_6622</stringProp>
              <stringProp name="18059174">Common Functions</stringProp>
              <stringProp name="77834902">RConf</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="serverinitiated.destination-host = true" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="serverinitiated.destination-host = true" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;vi ${nvhome}/system/misc-config.properties&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/#serverinitiated.destination-host = true/serverinitiated.destination-host = true/g</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/serverinitiated.destination-host = false/serverinitiated.destination-host = true/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/#serverinitiated.destination-host = false/serverinitiated.destination-host = true/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/#serverinitiated.destination-host = true/serverinitiated.destination-host = true/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:x</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Reload Conf Common Function" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="-1227702913">WorkBench</stringProp>
              <stringProp name="-1829425330">Automation_plan_6622</stringProp>
              <stringProp name="18059174">Common Functions</stringProp>
              <stringProp name="77834902">RConf</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="serverinitiated.destination-host = false" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Set serverinitiated.destination-host = false" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;vi ${nvhome}/system/misc-config.properties&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/#serverinitiated.destination-host = true/serverinitiated.destination-host = false/g</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/serverinitiated.destination-host = true/serverinitiated.destination-host = false/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/#serverinitiated.destination-host = false/serverinitiated.destination-host = false/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:x</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Reload Conf Common Function" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="-1227702913">WorkBench</stringProp>
              <stringProp name="-1829425330">Automation_plan_6622</stringProp>
              <stringProp name="18059174">Common Functions</stringProp>
              <stringProp name="77834902">RConf</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="set -Drevalidationtime.delta=0" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="-Drevalidationtime.delta=0" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;vi ${nvhome}/bin/netvertex.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/server.gcInterval=86400000/server.gcInterval=86400000 -Drevalidationtime.delta=0/g</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/server.gcInterval=86400000 -Drevalidationtime.delta=0 -Drevalidationtime.delta=0/server.gcInterval=86400000 -Drevalidationtime.delta=0/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:x</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Reload Conf Common Function" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="-1227702913">WorkBench</stringProp>
              <stringProp name="-1829425330">Automation_plan_6622</stringProp>
              <stringProp name="18059174">Common Functions</stringProp>
              <stringProp name="77834902">RConf</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="End Sampler Simple Controller" enabled="true"/>
        <hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="end sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">false</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="PD: Reload Policy" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PD: Reload Policy" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${pdcontextpath}/rest/restful/policy/reload/policy</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Set session.cache-enabled = true" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Set session.cache-enabled = true" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;vi ${nvhome}/system/misc-config.properties&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/session.cache-enabled = false/session.cache-enabled = true/g</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/session.cache-enabled = true/session.cache-enabled = true/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:x</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Reload Conf Common Function" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="-1227702913">WorkBench</stringProp>
              <stringProp name="-1829425330">Automation_plan_6622</stringProp>
              <stringProp name="18059174">Common Functions</stringProp>
              <stringProp name="77834902">RConf</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Set session.cache-enabled = false" enabled="true"/>
        <hashTree>
          <com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler guiclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSamplerGui" testclass="com.computaris.jmeter_plugins.telnet_ssh.sampler.TelnetSSHSampler" testname="Set session.cache-enabled = false" enabled="true">
            <stringProp name="TelnetSSHSampler.SERVER_ADDRESS">${serverip}</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PORT_NUMBER">22</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_USERNAME">root</stringProp>
            <stringProp name="TelnetSSHSampler.SSH_PASSWORD">${rootpassword}</stringProp>
            <boolProp name="TelnetSSHSampler.TELNET_BUTTON_STATUS">false</boolProp>
            <boolProp name="TelnetSSHSampler.SSH_BUTTON_STATUS">true</boolProp>
            <boolProp name="TelnetSSHSampler.LOGIN_REQUIRED">true</boolProp>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>sed -i &quot;161 i serverinitiated.destination-host=true&quot; ${nvhome}/system/misc-config.properties</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;cd ${nvhome}/bin; echo &quot;rconf&quot; | sh cli.sh&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
            <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
              <name>TelnetSSHSampler.SSH_COMMANDS_TO_SENDS</name>
              <value>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>su - ${nvuser} -c &quot;vi ${nvhome}/system/misc-config.properties&quot;</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/session.cache-enabled = false/session.cache-enabled = false/g</__commandText>
                  <__timeout>1000</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:1,$s/session.cache-enabled = true/session.cache-enabled = false/g</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                <com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
                  <__commandText>:x</__commandText>
                  <__timeout>300</__timeout>
                  <__waitFor></__waitFor>
                  <__checkResult>false</__checkResult>
                  <__executionStatus>0</__executionStatus>
                  <__results/>
                  <__expectedResults/>
                </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommand>
              </value>
            </com.computaris.jmeter__plugins.telnet__ssh.common.TelnetSSHCommandsArrayListProperty>
          </com.computaris.jmeter__plugins.telnet__ssh.sampler.TelnetSSHSampler>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Reload Conf Common Function" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="-1227702913">WorkBench</stringProp>
              <stringProp name="-1829425330">Automation_plan_6622</stringProp>
              <stringProp name="18059174">Common Functions</stringProp>
              <stringProp name="77834902">RConf</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="RConf" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CLI RConf REST" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${server_rest_port}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout">20000</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${cli_rest_url}/rconf</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1770785172">Server Configuration Successfully Reloaded for NetVertex</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Verify PCRF Running" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CLI Verify PCRF Running REST" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${server_rest_port}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${cli_rest_url}/services</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2024504540">PCRF.*Running</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Verify OfflineRnC Running" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CLI Verify OfflineRnC Running REST" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${server_rest_port}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${cli_rest_url}/services</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-399345633">OfflineRnC.*Running</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Verify Diameter Running" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CLI Verify Diameter Running REST" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${server_rest_port}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${cli_rest_url}/globallisteners</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="533546614">DIAMETER.*Running</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="com.computaris.jmeter.functions.FunctionHelperHook" testclass="GenericController" testname="Verify Radius Running" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CLI Verify Radius Running REST" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverip}</stringProp>
            <stringProp name="HTTPSampler.port">${server_rest_port}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${cli_rest_url}/globallisteners</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1062068207">RADIUS.*Running</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
