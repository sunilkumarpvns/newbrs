package com.elitecore.nvsmx.snmp.mib.webservice.autogencode;

//
// Generated by mibgen version 5.1 (03/08/07) when compiling NETVERTEX-PCRF-MIB.
//

// java imports
//
import java.io.Serializable;

// jmx imports
//
import javax.management.MBeanServer;
import com.sun.management.snmp.SnmpString;
import com.sun.management.snmp.SnmpStatusException;

// jdmk imports
//
import com.sun.management.snmp.agent.SnmpMib;

/**
 * The class is used for implementing the "SubscriberProvisioningWSStatistics" group.
 * The group is defined with the following oid: 1.3.6.1.4.1.21067.4.1.3.10.
 */
public class SubscriberProvisioningWSStatistics implements SubscriberProvisioningWSStatisticsMBean, Serializable {

    /**
     * Variable for storing the value of "SubscriberProvisioningWSMigrateSubscriberTable".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.10.19".
     *
     * "The (conceptual) table listing the SubscriberProvisioningWS Method wsMigrateSubscriber ResultCodes statistics."
     *
     */
    protected TableSubscriberProvisioningWSMigrateSubscriberTable SubscriberProvisioningWSMigrateSubscriberTable;

    /**
     * Variable for storing the value of "SubscriberProvisioningWSRestoreSubscribersTable".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.10.18".
     *
     * "The (conceptual) table listing the SubscriberProvisioningWS Method wsRestoreSubscribers ResultCodes statistics."
     *
     */
    protected TableSubscriberProvisioningWSRestoreSubscribersTable SubscriberProvisioningWSRestoreSubscribersTable;

    /**
     * Variable for storing the value of "SubscriberProvisioningWSRestoreSubscriberTable".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.10.17".
     *
     * "The (conceptual) table listing the SubscriberProvisioningWS Method wsRestoreSubscriber ResultCodes statistics."
     *
     */
    protected TableSubscriberProvisioningWSRestoreSubscriberTable SubscriberProvisioningWSRestoreSubscriberTable;

    /**
     * Variable for storing the value of "SubscriberProvisioningWSPurgeAllSubscriberTable".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.10.16".
     *
     * "The (conceptual) table listing the SubscriberProvisioningWS Method wsPurgeAllSubscriber ResultCodes statistics."
     *
     */
    protected TableSubscriberProvisioningWSPurgeAllSubscriberTable SubscriberProvisioningWSPurgeAllSubscriberTable;

    /**
     * Variable for storing the value of "SubscriberProvisioningWSPurgeSubscribersTable".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.10.15".
     *
     * "The (conceptual) table listing the SubscriberProvisioningWS Method wsPurgeSubscribers ResultCodes statistics."
     *
     */
    protected TableSubscriberProvisioningWSPurgeSubscribersTable SubscriberProvisioningWSPurgeSubscribersTable;

    /**
     * Variable for storing the value of "SubscriberProvisioningWSPurgeSubscriberTable".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.10.14".
     *
     * "The (conceptual) table listing the SubscriberProvisioningWS Method wsPurgeSubscriber ResultCodes statistics."
     *
     */
    protected TableSubscriberProvisioningWSPurgeSubscriberTable SubscriberProvisioningWSPurgeSubscriberTable;

    /**
     * Variable for storing the value of "SubscriberProvisioningWSListSubscriberProfilesTable".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.10.13".
     *
     * "The (conceptual) table listing the SubscriberProvisioningWS Method wsListSubscriberProfiles ResultCodes statistics."
     *
     */
    protected TableSubscriberProvisioningWSListSubscriberProfilesTable SubscriberProvisioningWSListSubscriberProfilesTable;

    /**
     * Variable for storing the value of "SubscriberProvisioningWSGetSubscriberProfileByIDTable".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.10.12".
     *
     * "The (conceptual) table listing the SubscriberProvisioningWS Method wsGetSubscriberProfileByID ResultCodes statistics."
     *
     */
    protected TableSubscriberProvisioningWSGetSubscriberProfileByIDTable SubscriberProvisioningWSGetSubscriberProfileByIDTable;

    /**
     * Variable for storing the value of "SubscriberProvisioningWSAddSubscriberBulkTable".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.10.11".
     *
     * "The (conceptual) table listing the SubscriberProvisioningWS Method wsAddSubscriberBulk ResultCodes statistics."
     *
     */
    protected TableSubscriberProvisioningWSAddSubscriberBulkTable SubscriberProvisioningWSAddSubscriberBulkTable;

    /**
     * Variable for storing the value of "SubscriberProvisioningWSDeleteSubscriberProfilesTable".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.10.10".
     *
     * "The (conceptual) table listing the SubscriberProvisioningWS Method wsDeleteSubscriberProfiles ResultCodes statistics."
     *
     */
    protected TableSubscriberProvisioningWSDeleteSubscriberProfilesTable SubscriberProvisioningWSDeleteSubscriberProfilesTable;

    /**
     * Variable for storing the value of "SubscriberProvisioningWSDeleteSubscriberProfileTable".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.10.9".
     *
     * "The (conceptual) table listing the SubscriberProvisioningWS Method wsDeleteSubscriberProfile ResultCodes statistics."
     *
     */
    protected TableSubscriberProvisioningWSDeleteSubscriberProfileTable SubscriberProvisioningWSDeleteSubscriberProfileTable;

    /**
     * Variable for storing the value of "SubscriberProvisioningWSUpdateSubscriberProfileTable".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.10.8".
     *
     * "The (conceptual) table listing the SubscriberProvisioningWS Method wsUpdateSubscriberProfile ResultCodes statistics."
     *
     */
    protected TableSubscriberProvisioningWSUpdateSubscriberProfileTable SubscriberProvisioningWSUpdateSubscriberProfileTable;

    /**
     * Variable for storing the value of "SubscriberProvisioningWSAddSubscriberProfileTable".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.10.7".
     *
     * "The (conceptual) table listing the SubscriberProvisioningWS Method wSAddSubscriberProfile ResultCodes statistics."
     *
     */
    protected TableSubscriberProvisioningWSAddSubscriberProfileTable SubscriberProvisioningWSAddSubscriberProfileTable;

    /**
     * Variable for storing the value of "SubscriberProvisioningWSGetAlternateIdTable".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.10.28".
     *
     * "The (conceptual) table listing the SubscriberProvisioningWS Method wsGetAlternateId ResultCodes statistics."
     *
     */
    protected TableSubscriberProvisioningWSGetAlternateIdTable SubscriberProvisioningWSGetAlternateIdTable;

    /**
     * Variable for storing the value of "SubscriberProvisioningWSResultCodeWiseStatisticsTable".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.10.6".
     *
     * "The (conceptual) table listing the SubscriberProvisioningWS ResultCodes statistics."
     *
     */
    protected TableSubscriberProvisioningWSResultCodeWiseStatisticsTable SubscriberProvisioningWSResultCodeWiseStatisticsTable;

    /**
     * Variable for storing the value of "SubscriberProvisioningWSDeleteAlternateIdTable".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.10.27".
     *
     * "The (conceptual) table listing the SubscriberProvisioningWS Method wsDeleteAlternateId ResultCodes statistics."
     *
     */
    protected TableSubscriberProvisioningWSDeleteAlternateIdTable SubscriberProvisioningWSDeleteAlternateIdTable;

    /**
     * Variable for storing the value of "SubscriberProvisioningWSMethodWiseStatisticsTable".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.10.5".
     *
     * "The (conceptual) table listing the SubscriberProvisioningWS method wise counters."
     *
     */
    protected TableSubscriberProvisioningWSMethodWiseStatisticsTable SubscriberProvisioningWSMethodWiseStatisticsTable;

    /**
     * Variable for storing the value of "SubscriberProvisioningWSChangeAlternateIdStatusTable".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.10.26".
     *
     * "The (conceptual) table listing the SubscriberProvisioningWS Method wsChangeAlternateIdStatus ResultCodes statistics."
     *
     */
    protected TableSubscriberProvisioningWSChangeAlternateIdStatusTable SubscriberProvisioningWSChangeAlternateIdStatusTable;

    /**
     * Variable for storing the value of "SubscriberProvisioningWSUpdateAlternateIdTable".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.10.25".
     *
     * "The (conceptual) table listing the SubscriberProvisioningWS Method wsUpdateAlternateId ResultCodes statistics."
     *
     */
    protected TableSubscriberProvisioningWSUpdateAlternateIdTable SubscriberProvisioningWSUpdateAlternateIdTable;

    /**
     * Variable for storing the value of "SubscriberWSAvgTPS".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.10.4".
     *
     * "The average TPS in SubscriberProvisioningWS for last one minute."
     *
     */
    protected Long SubscriberWSAvgTPS = new Long(1);

    /**
     * Variable for storing the value of "SubscriberProvisioningWSAddAlternateIdTable".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.10.24".
     *
     * "The (conceptual) table listing the SubscriberProvisioningWS Method wsAddAlternateId ResultCodes statistics."
     *
     */
    protected TableSubscriberProvisioningWSAddAlternateIdTable SubscriberProvisioningWSAddAlternateIdTable;

    /**
     * Variable for storing the value of "SubscriberWSLastMinuteTotalRequests".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.10.3".
     *
     * "Total number of SubscriberProvisioningWS requests received in Last Minute by Policy Designer."
     *
     */
    protected Long SubscriberWSLastMinuteTotalRequests = new Long(1);

    /**
     * Variable for storing the value of "SubscriberWSTotalResponses".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.10.2".
     *
     * "Total number of SubscriberProvisioningWS responses given by Policy Designer."
     *
     */
    protected Long SubscriberWSTotalResponses = new Long(1);

    /**
     * Variable for storing the value of "SubscriberProvisioningWSChangeBaseProductOfferTable".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.10.23".
     *
     * "The (conceptual) table listing the SubscriberProvisioningWS Method wsChangeBaseProductOffer ResultCodes statistics."
     *
     */
    protected TableSubscriberProvisioningWSChangeBaseProductOfferTable SubscriberProvisioningWSChangeBaseProductOfferTable;

    /**
     * Variable for storing the value of "SubscriberWSTotalRequests".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.10.1".
     *
     * "Total number of SubscriberProvisioningWS requests received by Policy Designer."
     *
     */
    protected Long SubscriberWSTotalRequests = new Long(1);

    /**
     * Variable for storing the value of "SubscriberProvisioningWSChangeImsPackageTable".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.10.22".
     *
     * "The (conceptual) table listing the SubscriberProvisioningWS Method wsChangeImsPackage ResultCodes statistics."
     *
     */
    protected TableSubscriberProvisioningWSChangeImsPackageTable SubscriberProvisioningWSChangeImsPackageTable;

    /**
     * Variable for storing the value of "SubscriberProvisioningWSAddSubscribersTable".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.10.21".
     *
     * "The (conceptual) table listing the SubscriberProvisioningWS Method wsAddSubscribers ResultCodes statistics."
     *
     */
    protected TableSubscriberProvisioningWSAddSubscribersTable SubscriberProvisioningWSAddSubscribersTable;

    /**
     * Variable for storing the value of "SubscriberProvisioningWSAddSubscriberTable".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.10.20".
     *
     * "The (conceptual) table listing the SubscriberProvisioningWS Method wsAddSubscriber ResultCodes statistics."
     *
     */
    protected TableSubscriberProvisioningWSAddSubscriberTable SubscriberProvisioningWSAddSubscriberTable;


    /**
     * Constructor for the "SubscriberProvisioningWSStatistics" group.
     * If the group contains a table, the entries created through an SNMP SET will not be registered in Java DMK.
     */
    public SubscriberProvisioningWSStatistics(SnmpMib myMib) {
        SubscriberProvisioningWSMigrateSubscriberTable = new TableSubscriberProvisioningWSMigrateSubscriberTable (myMib);
        SubscriberProvisioningWSRestoreSubscribersTable = new TableSubscriberProvisioningWSRestoreSubscribersTable (myMib);
        SubscriberProvisioningWSRestoreSubscriberTable = new TableSubscriberProvisioningWSRestoreSubscriberTable (myMib);
        SubscriberProvisioningWSPurgeAllSubscriberTable = new TableSubscriberProvisioningWSPurgeAllSubscriberTable (myMib);
        SubscriberProvisioningWSPurgeSubscribersTable = new TableSubscriberProvisioningWSPurgeSubscribersTable (myMib);
        SubscriberProvisioningWSPurgeSubscriberTable = new TableSubscriberProvisioningWSPurgeSubscriberTable (myMib);
        SubscriberProvisioningWSListSubscriberProfilesTable = new TableSubscriberProvisioningWSListSubscriberProfilesTable (myMib);
        SubscriberProvisioningWSGetSubscriberProfileByIDTable = new TableSubscriberProvisioningWSGetSubscriberProfileByIDTable (myMib);
        SubscriberProvisioningWSAddSubscriberBulkTable = new TableSubscriberProvisioningWSAddSubscriberBulkTable (myMib);
        SubscriberProvisioningWSDeleteSubscriberProfilesTable = new TableSubscriberProvisioningWSDeleteSubscriberProfilesTable (myMib);
        SubscriberProvisioningWSDeleteSubscriberProfileTable = new TableSubscriberProvisioningWSDeleteSubscriberProfileTable (myMib);
        SubscriberProvisioningWSUpdateSubscriberProfileTable = new TableSubscriberProvisioningWSUpdateSubscriberProfileTable (myMib);
        SubscriberProvisioningWSAddSubscriberProfileTable = new TableSubscriberProvisioningWSAddSubscriberProfileTable (myMib);
        SubscriberProvisioningWSGetAlternateIdTable = new TableSubscriberProvisioningWSGetAlternateIdTable (myMib);
        SubscriberProvisioningWSResultCodeWiseStatisticsTable = new TableSubscriberProvisioningWSResultCodeWiseStatisticsTable (myMib);
        SubscriberProvisioningWSDeleteAlternateIdTable = new TableSubscriberProvisioningWSDeleteAlternateIdTable (myMib);
        SubscriberProvisioningWSMethodWiseStatisticsTable = new TableSubscriberProvisioningWSMethodWiseStatisticsTable (myMib);
        SubscriberProvisioningWSChangeAlternateIdStatusTable = new TableSubscriberProvisioningWSChangeAlternateIdStatusTable (myMib);
        SubscriberProvisioningWSUpdateAlternateIdTable = new TableSubscriberProvisioningWSUpdateAlternateIdTable (myMib);
        SubscriberProvisioningWSAddAlternateIdTable = new TableSubscriberProvisioningWSAddAlternateIdTable (myMib);
        SubscriberProvisioningWSChangeBaseProductOfferTable = new TableSubscriberProvisioningWSChangeBaseProductOfferTable (myMib);
        SubscriberProvisioningWSChangeImsPackageTable = new TableSubscriberProvisioningWSChangeImsPackageTable (myMib);
        SubscriberProvisioningWSAddSubscribersTable = new TableSubscriberProvisioningWSAddSubscribersTable (myMib);
        SubscriberProvisioningWSAddSubscriberTable = new TableSubscriberProvisioningWSAddSubscriberTable (myMib);
    }


    /**
     * Constructor for the "SubscriberProvisioningWSStatistics" group.
     * If the group contains a table, the entries created through an SNMP SET will be AUTOMATICALLY REGISTERED in Java DMK.
     */
    public SubscriberProvisioningWSStatistics(SnmpMib myMib, MBeanServer server) {
        SubscriberProvisioningWSMigrateSubscriberTable = new TableSubscriberProvisioningWSMigrateSubscriberTable (myMib, server);
        SubscriberProvisioningWSRestoreSubscribersTable = new TableSubscriberProvisioningWSRestoreSubscribersTable (myMib, server);
        SubscriberProvisioningWSRestoreSubscriberTable = new TableSubscriberProvisioningWSRestoreSubscriberTable (myMib, server);
        SubscriberProvisioningWSPurgeAllSubscriberTable = new TableSubscriberProvisioningWSPurgeAllSubscriberTable (myMib, server);
        SubscriberProvisioningWSPurgeSubscribersTable = new TableSubscriberProvisioningWSPurgeSubscribersTable (myMib, server);
        SubscriberProvisioningWSPurgeSubscriberTable = new TableSubscriberProvisioningWSPurgeSubscriberTable (myMib, server);
        SubscriberProvisioningWSListSubscriberProfilesTable = new TableSubscriberProvisioningWSListSubscriberProfilesTable (myMib, server);
        SubscriberProvisioningWSGetSubscriberProfileByIDTable = new TableSubscriberProvisioningWSGetSubscriberProfileByIDTable (myMib, server);
        SubscriberProvisioningWSAddSubscriberBulkTable = new TableSubscriberProvisioningWSAddSubscriberBulkTable (myMib, server);
        SubscriberProvisioningWSDeleteSubscriberProfilesTable = new TableSubscriberProvisioningWSDeleteSubscriberProfilesTable (myMib, server);
        SubscriberProvisioningWSDeleteSubscriberProfileTable = new TableSubscriberProvisioningWSDeleteSubscriberProfileTable (myMib, server);
        SubscriberProvisioningWSUpdateSubscriberProfileTable = new TableSubscriberProvisioningWSUpdateSubscriberProfileTable (myMib, server);
        SubscriberProvisioningWSAddSubscriberProfileTable = new TableSubscriberProvisioningWSAddSubscriberProfileTable (myMib, server);
        SubscriberProvisioningWSGetAlternateIdTable = new TableSubscriberProvisioningWSGetAlternateIdTable (myMib, server);
        SubscriberProvisioningWSResultCodeWiseStatisticsTable = new TableSubscriberProvisioningWSResultCodeWiseStatisticsTable (myMib, server);
        SubscriberProvisioningWSDeleteAlternateIdTable = new TableSubscriberProvisioningWSDeleteAlternateIdTable (myMib, server);
        SubscriberProvisioningWSMethodWiseStatisticsTable = new TableSubscriberProvisioningWSMethodWiseStatisticsTable (myMib, server);
        SubscriberProvisioningWSChangeAlternateIdStatusTable = new TableSubscriberProvisioningWSChangeAlternateIdStatusTable (myMib, server);
        SubscriberProvisioningWSUpdateAlternateIdTable = new TableSubscriberProvisioningWSUpdateAlternateIdTable (myMib, server);
        SubscriberProvisioningWSAddAlternateIdTable = new TableSubscriberProvisioningWSAddAlternateIdTable (myMib, server);
        SubscriberProvisioningWSChangeBaseProductOfferTable = new TableSubscriberProvisioningWSChangeBaseProductOfferTable (myMib, server);
        SubscriberProvisioningWSChangeImsPackageTable = new TableSubscriberProvisioningWSChangeImsPackageTable (myMib, server);
        SubscriberProvisioningWSAddSubscribersTable = new TableSubscriberProvisioningWSAddSubscribersTable (myMib, server);
        SubscriberProvisioningWSAddSubscriberTable = new TableSubscriberProvisioningWSAddSubscriberTable (myMib, server);
    }

    public SubscriberProvisioningWSStatistics() {
    }

    /**
     * Access the "SubscriberProvisioningWSMigrateSubscriberTable" variable.
     */
    public TableSubscriberProvisioningWSMigrateSubscriberTable accessSubscriberProvisioningWSMigrateSubscriberTable() throws SnmpStatusException {
        return SubscriberProvisioningWSMigrateSubscriberTable;
    }

    /**
     * Access the "SubscriberProvisioningWSMigrateSubscriberTable" variable as a bean indexed property.
     */
    public SubscriberWSMigrateSubscriberEntryMBean[] getSubscriberProvisioningWSMigrateSubscriberTable() throws SnmpStatusException {
        return SubscriberProvisioningWSMigrateSubscriberTable.getEntries();
    }

    /**
     * Access the "SubscriberProvisioningWSRestoreSubscribersTable" variable.
     */
    public TableSubscriberProvisioningWSRestoreSubscribersTable accessSubscriberProvisioningWSRestoreSubscribersTable() throws SnmpStatusException {
        return SubscriberProvisioningWSRestoreSubscribersTable;
    }

    /**
     * Access the "SubscriberProvisioningWSRestoreSubscribersTable" variable as a bean indexed property.
     */
    public SubscriberWSRestoreSubscribersEntryMBean[] getSubscriberProvisioningWSRestoreSubscribersTable() throws SnmpStatusException {
        return SubscriberProvisioningWSRestoreSubscribersTable.getEntries();
    }

    /**
     * Access the "SubscriberProvisioningWSRestoreSubscriberTable" variable.
     */
    public TableSubscriberProvisioningWSRestoreSubscriberTable accessSubscriberProvisioningWSRestoreSubscriberTable() throws SnmpStatusException {
        return SubscriberProvisioningWSRestoreSubscriberTable;
    }

    /**
     * Access the "SubscriberProvisioningWSRestoreSubscriberTable" variable as a bean indexed property.
     */
    public SubscriberWSRestoreSubscriberEntryMBean[] getSubscriberProvisioningWSRestoreSubscriberTable() throws SnmpStatusException {
        return SubscriberProvisioningWSRestoreSubscriberTable.getEntries();
    }

    /**
     * Access the "SubscriberProvisioningWSPurgeAllSubscriberTable" variable.
     */
    public TableSubscriberProvisioningWSPurgeAllSubscriberTable accessSubscriberProvisioningWSPurgeAllSubscriberTable() throws SnmpStatusException {
        return SubscriberProvisioningWSPurgeAllSubscriberTable;
    }

    /**
     * Access the "SubscriberProvisioningWSPurgeAllSubscriberTable" variable as a bean indexed property.
     */
    public SubscriberWSPurgeAllSubscriberEntryMBean[] getSubscriberProvisioningWSPurgeAllSubscriberTable() throws SnmpStatusException {
        return SubscriberProvisioningWSPurgeAllSubscriberTable.getEntries();
    }

    /**
     * Access the "SubscriberProvisioningWSPurgeSubscribersTable" variable.
     */
    public TableSubscriberProvisioningWSPurgeSubscribersTable accessSubscriberProvisioningWSPurgeSubscribersTable() throws SnmpStatusException {
        return SubscriberProvisioningWSPurgeSubscribersTable;
    }

    /**
     * Access the "SubscriberProvisioningWSPurgeSubscribersTable" variable as a bean indexed property.
     */
    public SubscriberWSPurgeSubscribersEntryMBean[] getSubscriberProvisioningWSPurgeSubscribersTable() throws SnmpStatusException {
        return SubscriberProvisioningWSPurgeSubscribersTable.getEntries();
    }

    /**
     * Access the "SubscriberProvisioningWSPurgeSubscriberTable" variable.
     */
    public TableSubscriberProvisioningWSPurgeSubscriberTable accessSubscriberProvisioningWSPurgeSubscriberTable() throws SnmpStatusException {
        return SubscriberProvisioningWSPurgeSubscriberTable;
    }

    /**
     * Access the "SubscriberProvisioningWSPurgeSubscriberTable" variable as a bean indexed property.
     */
    public SubscriberWSPurgeSubscriberEntryMBean[] getSubscriberProvisioningWSPurgeSubscriberTable() throws SnmpStatusException {
        return SubscriberProvisioningWSPurgeSubscriberTable.getEntries();
    }

    /**
     * Access the "SubscriberProvisioningWSListSubscriberProfilesTable" variable.
     */
    public TableSubscriberProvisioningWSListSubscriberProfilesTable accessSubscriberProvisioningWSListSubscriberProfilesTable() throws SnmpStatusException {
        return SubscriberProvisioningWSListSubscriberProfilesTable;
    }

    /**
     * Access the "SubscriberProvisioningWSListSubscriberProfilesTable" variable as a bean indexed property.
     */
    public SubscriberWSListSubscriberProfilesEntryMBean[] getSubscriberProvisioningWSListSubscriberProfilesTable() throws SnmpStatusException {
        return SubscriberProvisioningWSListSubscriberProfilesTable.getEntries();
    }

    /**
     * Access the "SubscriberProvisioningWSGetSubscriberProfileByIDTable" variable.
     */
    public TableSubscriberProvisioningWSGetSubscriberProfileByIDTable accessSubscriberProvisioningWSGetSubscriberProfileByIDTable() throws SnmpStatusException {
        return SubscriberProvisioningWSGetSubscriberProfileByIDTable;
    }

    /**
     * Access the "SubscriberProvisioningWSGetSubscriberProfileByIDTable" variable as a bean indexed property.
     */
    public SubscriberWSGetSubscriberProfileByIDEntryMBean[] getSubscriberProvisioningWSGetSubscriberProfileByIDTable() throws SnmpStatusException {
        return SubscriberProvisioningWSGetSubscriberProfileByIDTable.getEntries();
    }

    /**
     * Access the "SubscriberProvisioningWSAddSubscriberBulkTable" variable.
     */
    public TableSubscriberProvisioningWSAddSubscriberBulkTable accessSubscriberProvisioningWSAddSubscriberBulkTable() throws SnmpStatusException {
        return SubscriberProvisioningWSAddSubscriberBulkTable;
    }

    /**
     * Access the "SubscriberProvisioningWSAddSubscriberBulkTable" variable as a bean indexed property.
     */
    public SubscriberWSAddSubscriberBulkEntryMBean[] getSubscriberProvisioningWSAddSubscriberBulkTable() throws SnmpStatusException {
        return SubscriberProvisioningWSAddSubscriberBulkTable.getEntries();
    }

    /**
     * Access the "SubscriberProvisioningWSDeleteSubscriberProfilesTable" variable.
     */
    public TableSubscriberProvisioningWSDeleteSubscriberProfilesTable accessSubscriberProvisioningWSDeleteSubscriberProfilesTable() throws SnmpStatusException {
        return SubscriberProvisioningWSDeleteSubscriberProfilesTable;
    }

    /**
     * Access the "SubscriberProvisioningWSDeleteSubscriberProfilesTable" variable as a bean indexed property.
     */
    public SubscriberWSDeleteSubscriberProfilesEntryMBean[] getSubscriberProvisioningWSDeleteSubscriberProfilesTable() throws SnmpStatusException {
        return SubscriberProvisioningWSDeleteSubscriberProfilesTable.getEntries();
    }

    /**
     * Access the "SubscriberProvisioningWSDeleteSubscriberProfileTable" variable.
     */
    public TableSubscriberProvisioningWSDeleteSubscriberProfileTable accessSubscriberProvisioningWSDeleteSubscriberProfileTable() throws SnmpStatusException {
        return SubscriberProvisioningWSDeleteSubscriberProfileTable;
    }

    /**
     * Access the "SubscriberProvisioningWSDeleteSubscriberProfileTable" variable as a bean indexed property.
     */
    public SubscriberWSDeleteSubscriberProfileEntryMBean[] getSubscriberProvisioningWSDeleteSubscriberProfileTable() throws SnmpStatusException {
        return SubscriberProvisioningWSDeleteSubscriberProfileTable.getEntries();
    }

    /**
     * Access the "SubscriberProvisioningWSUpdateSubscriberProfileTable" variable.
     */
    public TableSubscriberProvisioningWSUpdateSubscriberProfileTable accessSubscriberProvisioningWSUpdateSubscriberProfileTable() throws SnmpStatusException {
        return SubscriberProvisioningWSUpdateSubscriberProfileTable;
    }

    /**
     * Access the "SubscriberProvisioningWSUpdateSubscriberProfileTable" variable as a bean indexed property.
     */
    public SubscriberWSUpdateSubscriberProfileEntryMBean[] getSubscriberProvisioningWSUpdateSubscriberProfileTable() throws SnmpStatusException {
        return SubscriberProvisioningWSUpdateSubscriberProfileTable.getEntries();
    }

    /**
     * Access the "SubscriberProvisioningWSAddSubscriberProfileTable" variable.
     */
    public TableSubscriberProvisioningWSAddSubscriberProfileTable accessSubscriberProvisioningWSAddSubscriberProfileTable() throws SnmpStatusException {
        return SubscriberProvisioningWSAddSubscriberProfileTable;
    }

    /**
     * Access the "SubscriberProvisioningWSAddSubscriberProfileTable" variable as a bean indexed property.
     */
    public SubscriberWSAddSubscriberProfileEntryMBean[] getSubscriberProvisioningWSAddSubscriberProfileTable() throws SnmpStatusException {
        return SubscriberProvisioningWSAddSubscriberProfileTable.getEntries();
    }

    /**
     * Access the "SubscriberProvisioningWSGetAlternateIdTable" variable.
     */
    public TableSubscriberProvisioningWSGetAlternateIdTable accessSubscriberProvisioningWSGetAlternateIdTable() throws SnmpStatusException {
        return SubscriberProvisioningWSGetAlternateIdTable;
    }

    /**
     * Access the "SubscriberProvisioningWSGetAlternateIdTable" variable as a bean indexed property.
     */
    public SubscriberWSGetAlternateIdEntryMBean[] getSubscriberProvisioningWSGetAlternateIdTable() throws SnmpStatusException {
        return SubscriberProvisioningWSGetAlternateIdTable.getEntries();
    }

    /**
     * Access the "SubscriberProvisioningWSResultCodeWiseStatisticsTable" variable.
     */
    public TableSubscriberProvisioningWSResultCodeWiseStatisticsTable accessSubscriberProvisioningWSResultCodeWiseStatisticsTable() throws SnmpStatusException {
        return SubscriberProvisioningWSResultCodeWiseStatisticsTable;
    }

    /**
     * Access the "SubscriberProvisioningWSResultCodeWiseStatisticsTable" variable as a bean indexed property.
     */
    public SubscriberWSResultCodeWiseEntryMBean[] getSubscriberProvisioningWSResultCodeWiseStatisticsTable() throws SnmpStatusException {
        return SubscriberProvisioningWSResultCodeWiseStatisticsTable.getEntries();
    }

    /**
     * Access the "SubscriberProvisioningWSDeleteAlternateIdTable" variable.
     */
    public TableSubscriberProvisioningWSDeleteAlternateIdTable accessSubscriberProvisioningWSDeleteAlternateIdTable() throws SnmpStatusException {
        return SubscriberProvisioningWSDeleteAlternateIdTable;
    }

    /**
     * Access the "SubscriberProvisioningWSDeleteAlternateIdTable" variable as a bean indexed property.
     */
    public SubscriberWSDeleteAlternateIdEntryMBean[] getSubscriberProvisioningWSDeleteAlternateIdTable() throws SnmpStatusException {
        return SubscriberProvisioningWSDeleteAlternateIdTable.getEntries();
    }

    /**
     * Access the "SubscriberProvisioningWSMethodWiseStatisticsTable" variable.
     */
    public TableSubscriberProvisioningWSMethodWiseStatisticsTable accessSubscriberProvisioningWSMethodWiseStatisticsTable() throws SnmpStatusException {
        return SubscriberProvisioningWSMethodWiseStatisticsTable;
    }

    /**
     * Access the "SubscriberProvisioningWSMethodWiseStatisticsTable" variable as a bean indexed property.
     */
    public SubscriberProvisioningWSMethodWiseEntryMBean[] getSubscriberProvisioningWSMethodWiseStatisticsTable() throws SnmpStatusException {
        return SubscriberProvisioningWSMethodWiseStatisticsTable.getEntries();
    }

    /**
     * Access the "SubscriberProvisioningWSChangeAlternateIdStatusTable" variable.
     */
    public TableSubscriberProvisioningWSChangeAlternateIdStatusTable accessSubscriberProvisioningWSChangeAlternateIdStatusTable() throws SnmpStatusException {
        return SubscriberProvisioningWSChangeAlternateIdStatusTable;
    }

    /**
     * Access the "SubscriberProvisioningWSChangeAlternateIdStatusTable" variable as a bean indexed property.
     */
    public SubscriberWSChangeAlternateIdStatusEntryMBean[] getSubscriberProvisioningWSChangeAlternateIdStatusTable() throws SnmpStatusException {
        return SubscriberProvisioningWSChangeAlternateIdStatusTable.getEntries();
    }

    /**
     * Access the "SubscriberProvisioningWSUpdateAlternateIdTable" variable.
     */
    public TableSubscriberProvisioningWSUpdateAlternateIdTable accessSubscriberProvisioningWSUpdateAlternateIdTable() throws SnmpStatusException {
        return SubscriberProvisioningWSUpdateAlternateIdTable;
    }

    /**
     * Access the "SubscriberProvisioningWSUpdateAlternateIdTable" variable as a bean indexed property.
     */
    public SubscriberWSUpdateAlternateIdEntryMBean[] getSubscriberProvisioningWSUpdateAlternateIdTable() throws SnmpStatusException {
        return SubscriberProvisioningWSUpdateAlternateIdTable.getEntries();
    }

    /**
     * Getter for the "SubscriberWSAvgTPS" variable.
     */
    public Long getSubscriberWSAvgTPS() throws SnmpStatusException {
        return SubscriberWSAvgTPS;
    }

    /**
     * Access the "SubscriberProvisioningWSAddAlternateIdTable" variable.
     */
    public TableSubscriberProvisioningWSAddAlternateIdTable accessSubscriberProvisioningWSAddAlternateIdTable() throws SnmpStatusException {
        return SubscriberProvisioningWSAddAlternateIdTable;
    }

    /**
     * Access the "SubscriberProvisioningWSAddAlternateIdTable" variable as a bean indexed property.
     */
    public SubscriberWSAddAlternateIdEntryMBean[] getSubscriberProvisioningWSAddAlternateIdTable() throws SnmpStatusException {
        return SubscriberProvisioningWSAddAlternateIdTable.getEntries();
    }

    /**
     * Getter for the "SubscriberWSLastMinuteTotalRequests" variable.
     */
    public Long getSubscriberWSLastMinuteTotalRequests() throws SnmpStatusException {
        return SubscriberWSLastMinuteTotalRequests;
    }

    /**
     * Getter for the "SubscriberWSTotalResponses" variable.
     */
    public Long getSubscriberWSTotalResponses() throws SnmpStatusException {
        return SubscriberWSTotalResponses;
    }

    /**
     * Access the "SubscriberProvisioningWSChangeBaseProductOfferTable" variable.
     */
    public TableSubscriberProvisioningWSChangeBaseProductOfferTable accessSubscriberProvisioningWSChangeBaseProductOfferTable() throws SnmpStatusException {
        return SubscriberProvisioningWSChangeBaseProductOfferTable;
    }

    /**
     * Access the "SubscriberProvisioningWSChangeBaseProductOfferTable" variable as a bean indexed property.
     */
    public SubscriberWSChangeBaseProductOfferEntryMBean[] getSubscriberProvisioningWSChangeBaseProductOfferTable() throws SnmpStatusException {
        return SubscriberProvisioningWSChangeBaseProductOfferTable.getEntries();
    }

    /**
     * Getter for the "SubscriberWSTotalRequests" variable.
     */
    public Long getSubscriberWSTotalRequests() throws SnmpStatusException {
        return SubscriberWSTotalRequests;
    }

    /**
     * Access the "SubscriberProvisioningWSChangeImsPackageTable" variable.
     */
    public TableSubscriberProvisioningWSChangeImsPackageTable accessSubscriberProvisioningWSChangeImsPackageTable() throws SnmpStatusException {
        return SubscriberProvisioningWSChangeImsPackageTable;
    }

    /**
     * Access the "SubscriberProvisioningWSChangeImsPackageTable" variable as a bean indexed property.
     */
    public SubscriberWSChangeImsPackageEntryMBean[] getSubscriberProvisioningWSChangeImsPackageTable() throws SnmpStatusException {
        return SubscriberProvisioningWSChangeImsPackageTable.getEntries();
    }

    /**
     * Access the "SubscriberProvisioningWSAddSubscribersTable" variable.
     */
    public TableSubscriberProvisioningWSAddSubscribersTable accessSubscriberProvisioningWSAddSubscribersTable() throws SnmpStatusException {
        return SubscriberProvisioningWSAddSubscribersTable;
    }

    /**
     * Access the "SubscriberProvisioningWSAddSubscribersTable" variable as a bean indexed property.
     */
    public SubscriberWSAddSubscribersEntryMBean[] getSubscriberProvisioningWSAddSubscribersTable() throws SnmpStatusException {
        return SubscriberProvisioningWSAddSubscribersTable.getEntries();
    }

    /**
     * Access the "SubscriberProvisioningWSAddSubscriberTable" variable.
     */
    public TableSubscriberProvisioningWSAddSubscriberTable accessSubscriberProvisioningWSAddSubscriberTable() throws SnmpStatusException {
        return SubscriberProvisioningWSAddSubscriberTable;
    }

    /**
     * Access the "SubscriberProvisioningWSAddSubscriberTable" variable as a bean indexed property.
     */
    public SubscriberWSAddSubscriberEntryMBean[] getSubscriberProvisioningWSAddSubscriberTable() throws SnmpStatusException {
        return SubscriberProvisioningWSAddSubscriberTable.getEntries();
    }

}
