package com.elitecore.nvsmx.snmp.mib.webservice.autogencode;

//
// Generated by mibgen version 5.1 (03/08/07) when compiling NETVERTEX-PCRF-MIB.
//

// java imports
//
import java.io.Serializable;

// jmx imports
//
import javax.management.MBeanServer;
import com.sun.management.snmp.SnmpString;
import com.sun.management.snmp.SnmpStatusException;

// jdmk imports
//
import com.sun.management.snmp.agent.SnmpMib;

/**
 * The class is used for implementing the "PcrfStatistics" group.
 * The group is defined with the following oid: 1.3.6.1.4.1.21067.4.1.2.1.1.
 */
public class PcrfStatistics implements PcrfStatisticsMBean, Serializable {

    /**
     * Variable for storing the value of "AvgRequestProcessingTime".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.2.1.1.9".
     *
     * "The average PCRF request prcessing time for last one minute."
     *
     */
    protected Long AvgRequestProcessingTime = new Long(1);

    /**
     * Variable for storing the value of "TotalRejectResponses".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.2.1.1.8".
     *
     * "The total number of PCRF rejhect responses given by PCRF service."
     *
     */
    protected Long TotalRejectResponses = new Long(1);

    /**
     * Variable for storing the value of "TotalSuccessResponses".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.2.1.1.7".
     *
     * "The total number of PCRF success responses given by PCRF service."
     *
     */
    protected Long TotalSuccessResponses = new Long(1);

    /**
     * Variable for storing the value of "TotalRequestDropped".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.2.1.1.6".
     *
     * "The total number of PCRF requests dropped by PCRF service."
     *
     */
    protected Long TotalRequestDropped = new Long(1);

    /**
     * Variable for storing the value of "TotalResponses".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.2.1.1.5".
     *
     * "The total number of PCRF responses given by PCRF service."
     *
     */
    protected Long TotalResponses = new Long(1);

    /**
     * Variable for storing the value of "TotalRequests".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.2.1.1.4".
     *
     * "The total number of PCRF requests received by PCRF service."
     *
     */
    protected Long TotalRequests = new Long(1);

    /**
     * Variable for storing the value of "PcrfStatisticsReset".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.2.1.1.3".
     *
     * "When set to reset(2), PCRF service statistics is reinitialized.
     * When read, one of the following values will be returned:
     * other(1) - service in some unknown state;
     * initializing(3) - service (einitializing;
     * running(4) - service currently running."
     *
     */
    protected EnumPcrfStatisticsReset PcrfStatisticsReset = new EnumPcrfStatisticsReset();

    /**
     * Variable for storing the value of "PcrfStatisticsResetTime".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.2.1.1.2".
     *
     * "This value will be the time elapsed (in hundredths of a second)
     * since the PCRF service  statistics was `reset.'"
     *
     */
    protected Long PcrfStatisticsResetTime = new Long(1);

    /**
     * Variable for storing the value of "AvgTPS".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.2.1.1.10".
     *
     * "The average TPS in PCRF service for last one minute."
     *
     */
    protected Long AvgTPS = new Long(1);

    /**
     * Variable for storing the value of "PcrfServiceUpTime".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.2.1.1.1".
     *
     * "This value will be the time elapsed (in hundredths of a second)
     * since the PCRF service started."
     *
     */
    protected Long PcrfServiceUpTime = new Long(1);


    /**
     * Constructor for the "PcrfStatistics" group.
     * If the group contains a table, the entries created through an SNMP SET will not be registered in Java DMK.
     */
    public PcrfStatistics(SnmpMib myMib) {
    }


    /**
     * Constructor for the "PcrfStatistics" group.
     * If the group contains a table, the entries created through an SNMP SET will be AUTOMATICALLY REGISTERED in Java DMK.
     */
    public PcrfStatistics(SnmpMib myMib, MBeanServer server) {
    }

    /**
     * Getter for the "AvgRequestProcessingTime" variable.
     */
    public Long getAvgRequestProcessingTime() throws SnmpStatusException {
        return AvgRequestProcessingTime;
    }

    /**
     * Getter for the "TotalRejectResponses" variable.
     */
    public Long getTotalRejectResponses() throws SnmpStatusException {
        return TotalRejectResponses;
    }

    /**
     * Getter for the "TotalSuccessResponses" variable.
     */
    public Long getTotalSuccessResponses() throws SnmpStatusException {
        return TotalSuccessResponses;
    }

    /**
     * Getter for the "TotalRequestDropped" variable.
     */
    public Long getTotalRequestDropped() throws SnmpStatusException {
        return TotalRequestDropped;
    }

    /**
     * Getter for the "TotalResponses" variable.
     */
    public Long getTotalResponses() throws SnmpStatusException {
        return TotalResponses;
    }

    /**
     * Getter for the "TotalRequests" variable.
     */
    public Long getTotalRequests() throws SnmpStatusException {
        return TotalRequests;
    }

    /**
     * Getter for the "PcrfStatisticsReset" variable.
     */
    public EnumPcrfStatisticsReset getPcrfStatisticsReset() throws SnmpStatusException {
        return PcrfStatisticsReset;
    }

    /**
     * Setter for the "PcrfStatisticsReset" variable.
     */
    public void setPcrfStatisticsReset(EnumPcrfStatisticsReset x) throws SnmpStatusException {
        PcrfStatisticsReset = x;
    }

    /**
     * Checker for the "PcrfStatisticsReset" variable.
     */
    public void checkPcrfStatisticsReset(EnumPcrfStatisticsReset x) throws SnmpStatusException {
        //
        // Add your own checking policy.
        //
    }

    /**
     * Getter for the "PcrfStatisticsResetTime" variable.
     */
    public Long getPcrfStatisticsResetTime() throws SnmpStatusException {
        return PcrfStatisticsResetTime;
    }

    /**
     * Getter for the "AvgTPS" variable.
     */
    public Long getAvgTPS() throws SnmpStatusException {
        return AvgTPS;
    }

    /**
     * Getter for the "PcrfServiceUpTime" variable.
     */
    public Long getPcrfServiceUpTime() throws SnmpStatusException {
        return PcrfServiceUpTime;
    }

}
