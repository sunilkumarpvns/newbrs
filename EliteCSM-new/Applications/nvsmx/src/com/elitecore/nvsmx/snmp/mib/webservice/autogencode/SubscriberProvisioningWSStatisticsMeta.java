package com.elitecore.nvsmx.snmp.mib.webservice.autogencode;

//
// Generated by mibgen version 5.1 (03/08/07) when compiling NETVERTEX-PCRF-MIB in standard metadata mode.
//

// java imports
//
import java.io.Serializable;

// jmx imports
//
import javax.management.MBeanServer;
import com.sun.management.snmp.SnmpCounter;
import com.sun.management.snmp.SnmpCounter64;
import com.sun.management.snmp.SnmpGauge;
import com.sun.management.snmp.SnmpInt;
import com.sun.management.snmp.SnmpUnsignedInt;
import com.sun.management.snmp.SnmpIpAddress;
import com.sun.management.snmp.SnmpTimeticks;
import com.sun.management.snmp.SnmpOpaque;
import com.sun.management.snmp.SnmpString;
import com.sun.management.snmp.SnmpStringFixed;
import com.sun.management.snmp.SnmpOid;
import com.sun.management.snmp.SnmpNull;
import com.sun.management.snmp.SnmpValue;
import com.sun.management.snmp.SnmpVarBind;
import com.sun.management.snmp.SnmpStatusException;

// jdmk imports
//
import com.sun.management.snmp.agent.SnmpMib;
import com.sun.management.snmp.agent.SnmpMibGroup;
import com.sun.management.snmp.agent.SnmpStandardObjectServer;
import com.sun.management.snmp.agent.SnmpStandardMetaServer;
import com.sun.management.snmp.agent.SnmpMibSubRequest;
import com.sun.management.snmp.agent.SnmpMibTable;
import com.sun.management.snmp.EnumRowStatus;
import com.sun.management.snmp.SnmpDefinitions;

/**
 * The class is used for representing SNMP metadata for the "SubscriberProvisioningWSStatistics" group.
 * The group is defined with the following oid: 1.3.6.1.4.1.21067.4.1.3.10.
 */
public class SubscriberProvisioningWSStatisticsMeta extends SnmpMibGroup
     implements Serializable, SnmpStandardMetaServer {

    /**
     * Constructor for the metadata associated to "SubscriberProvisioningWSStatistics".
     */
    public SubscriberProvisioningWSStatisticsMeta(SnmpMib myMib, SnmpStandardObjectServer objserv) {
        objectserver = objserv;
        try {
            registerObject(19);
            registerObject(18);
            registerObject(17);
            registerObject(16);
            registerObject(15);
            registerObject(14);
            registerObject(13);
            registerObject(12);
            registerObject(11);
            registerObject(10);
            registerObject(9);
            registerObject(8);
            registerObject(7);
            registerObject(28);
            registerObject(6);
            registerObject(27);
            registerObject(5);
            registerObject(26);
            registerObject(25);
            registerObject(4);
            registerObject(24);
            registerObject(3);
            registerObject(2);
            registerObject(23);
            registerObject(1);
            registerObject(22);
            registerObject(21);
            registerObject(20);
        } catch (IllegalAccessException e) {
            throw new RuntimeException(e.getMessage());
        }
    }

    /**
     * Get the value of a scalar variable
     */
    public SnmpValue get(long var, Object data)
        throws SnmpStatusException {
        switch((int)var) {
            case 19: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 18: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 17: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 16: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 15: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 14: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 13: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 12: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 11: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 10: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 9: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 8: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 7: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 28: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 6: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 27: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 5: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 26: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 25: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 4:
                return new SnmpCounter(node.getSubscriberWSAvgTPS());

            case 24: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 3:
                return new SnmpCounter(node.getSubscriberWSLastMinuteTotalRequests());

            case 2:
                return new SnmpCounter(node.getSubscriberWSTotalResponses());

            case 23: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 1:
                return new SnmpCounter(node.getSubscriberWSTotalRequests());

            case 22: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 21: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 20: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            default:
                break;
        }
        throw new SnmpStatusException(SnmpStatusException.noSuchObject);
    }

    /**
     * Set the value of a scalar variable
     */
    public SnmpValue set(SnmpValue x, long var, Object data)
        throws SnmpStatusException {
        switch((int)var) {
            case 19: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 18: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 17: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 16: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 15: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 14: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 13: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 12: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 11: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 10: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 9: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 8: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 7: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 28: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 6: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 27: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 5: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 26: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 25: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 4:
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);

            case 24: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 3:
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);

            case 2:
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);

            case 23: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 1:
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);

            case 22: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 21: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 20: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            default:
                break;
        }
        throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
    }

    /**
     * Check the value of a scalar variable
     */
    public void check(SnmpValue x, long var, Object data)
        throws SnmpStatusException {
        switch((int) var) {
            case 19: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 18: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 17: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 16: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 15: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 14: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 13: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 12: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 11: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 10: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 9: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 8: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 7: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 28: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 6: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 27: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 5: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 26: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 25: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 4:
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);

            case 24: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 3:
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);

            case 2:
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);

            case 23: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 1:
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);

            case 22: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 21: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            case 20: {
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
                }

            default:
                throw new SnmpStatusException(SnmpStatusException.snmpRspNotWritable);
        }
    }

    /**
     * Allow to bind the metadata description to a specific object.
     */
    protected void setInstance(SubscriberProvisioningWSStatisticsMBean var) {
        node = var;
    }


    // ------------------------------------------------------------
    // 
    // Implements the "get" method defined in "SnmpMibGroup".
    // See the "SnmpMibGroup" Javadoc API for more details.
    // 
    // ------------------------------------------------------------

    public void get(SnmpMibSubRequest req, int depth)
        throws SnmpStatusException {
        objectserver.get(this,req,depth);
    }


    // ------------------------------------------------------------
    // 
    // Implements the "set" method defined in "SnmpMibGroup".
    // See the "SnmpMibGroup" Javadoc API for more details.
    // 
    // ------------------------------------------------------------

    public void set(SnmpMibSubRequest req, int depth)
        throws SnmpStatusException {
        objectserver.set(this,req,depth);
    }


    // ------------------------------------------------------------
    // 
    // Implements the "check" method defined in "SnmpMibGroup".
    // See the "SnmpMibGroup" Javadoc API for more details.
    // 
    // ------------------------------------------------------------

    public void check(SnmpMibSubRequest req, int depth)
        throws SnmpStatusException {
        objectserver.check(this,req,depth);
    }

    /**
     * Returns true if "arc" identifies a scalar object.
     */
    public boolean isVariable(long arc) {

        switch((int)arc) {
            case 4:
            case 3:
            case 2:
            case 1:
                return true;
            default:
                break;
        }
        return false;
    }

    /**
     * Returns true if "arc" identifies a readable scalar object.
     */
    public boolean isReadable(long arc) {

        switch((int)arc) {
            case 4:
            case 3:
            case 2:
            case 1:
                return true;
            default:
                break;
        }
        return false;
    }


    // ------------------------------------------------------------
    // 
    // Implements the "skipVariable" method defined in "SnmpMibGroup".
    // See the "SnmpMibGroup" Javadoc API for more details.
    // 
    // ------------------------------------------------------------

    public boolean  skipVariable(long var, Object data, int pduVersion) {
        return false;
    }

    /**
     * Return the name of the attribute corresponding to the SNMP variable identified by "id".
     */
    public String getAttributeName(long id)
        throws SnmpStatusException {
        switch((int)id) {
            case 19: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 18: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 17: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 16: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 15: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 14: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 13: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 12: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 11: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 10: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 9: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 8: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 7: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 28: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 6: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 27: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 5: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 26: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 25: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 4:
                return "SubscriberWSAvgTPS";

            case 24: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 3:
                return "SubscriberWSLastMinuteTotalRequests";

            case 2:
                return "SubscriberWSTotalResponses";

            case 23: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 1:
                return "SubscriberWSTotalRequests";

            case 22: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 21: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            case 20: {
                throw new SnmpStatusException(SnmpStatusException.noSuchInstance);
                }

            default:
                break;
        }
        throw new SnmpStatusException(SnmpStatusException.noSuchObject);
    }

    /**
     * Returns true if "arc" identifies a table object.
     */
    public boolean isTable(long arc) {

        switch((int)arc) {
            case 19:
                return true;
            case 18:
                return true;
            case 17:
                return true;
            case 16:
                return true;
            case 15:
                return true;
            case 14:
                return true;
            case 13:
                return true;
            case 12:
                return true;
            case 11:
                return true;
            case 10:
                return true;
            case 9:
                return true;
            case 8:
                return true;
            case 7:
                return true;
            case 28:
                return true;
            case 6:
                return true;
            case 27:
                return true;
            case 5:
                return true;
            case 26:
                return true;
            case 25:
                return true;
            case 24:
                return true;
            case 23:
                return true;
            case 22:
                return true;
            case 21:
                return true;
            case 20:
                return true;
            default:
                break;
        }
        return false;
    }

    /**
     * Returns the table object identified by "arc".
     */
    public SnmpMibTable getTable(long arc) {

        switch((int)arc) {
            case 19:
                return tableSubscriberProvisioningWSMigrateSubscriberTable;
            case 18:
                return tableSubscriberProvisioningWSRestoreSubscribersTable;
            case 17:
                return tableSubscriberProvisioningWSRestoreSubscriberTable;
            case 16:
                return tableSubscriberProvisioningWSPurgeAllSubscriberTable;
            case 15:
                return tableSubscriberProvisioningWSPurgeSubscribersTable;
            case 14:
                return tableSubscriberProvisioningWSPurgeSubscriberTable;
            case 13:
                return tableSubscriberProvisioningWSListSubscriberProfilesTable;
            case 12:
                return tableSubscriberProvisioningWSGetSubscriberProfileByIDTable;
            case 11:
                return tableSubscriberProvisioningWSAddSubscriberBulkTable;
            case 10:
                return tableSubscriberProvisioningWSDeleteSubscriberProfilesTable;
            case 9:
                return tableSubscriberProvisioningWSDeleteSubscriberProfileTable;
            case 8:
                return tableSubscriberProvisioningWSUpdateSubscriberProfileTable;
            case 7:
                return tableSubscriberProvisioningWSAddSubscriberProfileTable;
            case 28:
                return tableSubscriberProvisioningWSGetAlternateIdTable;
            case 6:
                return tableSubscriberProvisioningWSResultCodeWiseStatisticsTable;
            case 27:
                return tableSubscriberProvisioningWSDeleteAlternateIdTable;
            case 5:
                return tableSubscriberProvisioningWSMethodWiseStatisticsTable;
            case 26:
                return tableSubscriberProvisioningWSChangeAlternateIdStatusTable;
            case 25:
                return tableSubscriberProvisioningWSUpdateAlternateIdTable;
            case 24:
                return tableSubscriberProvisioningWSAddAlternateIdTable;
            case 23:
                return tableSubscriberProvisioningWSChangeBaseProductOfferTable;
            case 22:
                return tableSubscriberProvisioningWSChangeImsPackageTable;
            case 21:
                return tableSubscriberProvisioningWSAddSubscribersTable;
            case 20:
                return tableSubscriberProvisioningWSAddSubscriberTable;
        default:
            break;
        }
        return null;
    }

    /**
     * Register the group's SnmpMibTable objects with the meta-data.
     */
    public void registerTableNodes(SnmpMib mib, MBeanServer server) {
        tableSubscriberProvisioningWSMigrateSubscriberTable = createSubscriberProvisioningWSMigrateSubscriberTableMetaNode("SubscriberProvisioningWSMigrateSubscriberTable", "SubscriberProvisioningWSStatistics", mib, server);
        if ( tableSubscriberProvisioningWSMigrateSubscriberTable != null)  {
            tableSubscriberProvisioningWSMigrateSubscriberTable.registerEntryNode(mib,server);
            mib.registerTableMeta("SubscriberProvisioningWSMigrateSubscriberTable", tableSubscriberProvisioningWSMigrateSubscriberTable);
        }

        tableSubscriberProvisioningWSRestoreSubscribersTable = createSubscriberProvisioningWSRestoreSubscribersTableMetaNode("SubscriberProvisioningWSRestoreSubscribersTable", "SubscriberProvisioningWSStatistics", mib, server);
        if ( tableSubscriberProvisioningWSRestoreSubscribersTable != null)  {
            tableSubscriberProvisioningWSRestoreSubscribersTable.registerEntryNode(mib,server);
            mib.registerTableMeta("SubscriberProvisioningWSRestoreSubscribersTable", tableSubscriberProvisioningWSRestoreSubscribersTable);
        }

        tableSubscriberProvisioningWSRestoreSubscriberTable = createSubscriberProvisioningWSRestoreSubscriberTableMetaNode("SubscriberProvisioningWSRestoreSubscriberTable", "SubscriberProvisioningWSStatistics", mib, server);
        if ( tableSubscriberProvisioningWSRestoreSubscriberTable != null)  {
            tableSubscriberProvisioningWSRestoreSubscriberTable.registerEntryNode(mib,server);
            mib.registerTableMeta("SubscriberProvisioningWSRestoreSubscriberTable", tableSubscriberProvisioningWSRestoreSubscriberTable);
        }

        tableSubscriberProvisioningWSPurgeAllSubscriberTable = createSubscriberProvisioningWSPurgeAllSubscriberTableMetaNode("SubscriberProvisioningWSPurgeAllSubscriberTable", "SubscriberProvisioningWSStatistics", mib, server);
        if ( tableSubscriberProvisioningWSPurgeAllSubscriberTable != null)  {
            tableSubscriberProvisioningWSPurgeAllSubscriberTable.registerEntryNode(mib,server);
            mib.registerTableMeta("SubscriberProvisioningWSPurgeAllSubscriberTable", tableSubscriberProvisioningWSPurgeAllSubscriberTable);
        }

        tableSubscriberProvisioningWSPurgeSubscribersTable = createSubscriberProvisioningWSPurgeSubscribersTableMetaNode("SubscriberProvisioningWSPurgeSubscribersTable", "SubscriberProvisioningWSStatistics", mib, server);
        if ( tableSubscriberProvisioningWSPurgeSubscribersTable != null)  {
            tableSubscriberProvisioningWSPurgeSubscribersTable.registerEntryNode(mib,server);
            mib.registerTableMeta("SubscriberProvisioningWSPurgeSubscribersTable", tableSubscriberProvisioningWSPurgeSubscribersTable);
        }

        tableSubscriberProvisioningWSPurgeSubscriberTable = createSubscriberProvisioningWSPurgeSubscriberTableMetaNode("SubscriberProvisioningWSPurgeSubscriberTable", "SubscriberProvisioningWSStatistics", mib, server);
        if ( tableSubscriberProvisioningWSPurgeSubscriberTable != null)  {
            tableSubscriberProvisioningWSPurgeSubscriberTable.registerEntryNode(mib,server);
            mib.registerTableMeta("SubscriberProvisioningWSPurgeSubscriberTable", tableSubscriberProvisioningWSPurgeSubscriberTable);
        }

        tableSubscriberProvisioningWSListSubscriberProfilesTable = createSubscriberProvisioningWSListSubscriberProfilesTableMetaNode("SubscriberProvisioningWSListSubscriberProfilesTable", "SubscriberProvisioningWSStatistics", mib, server);
        if ( tableSubscriberProvisioningWSListSubscriberProfilesTable != null)  {
            tableSubscriberProvisioningWSListSubscriberProfilesTable.registerEntryNode(mib,server);
            mib.registerTableMeta("SubscriberProvisioningWSListSubscriberProfilesTable", tableSubscriberProvisioningWSListSubscriberProfilesTable);
        }

        tableSubscriberProvisioningWSGetSubscriberProfileByIDTable = createSubscriberProvisioningWSGetSubscriberProfileByIDTableMetaNode("SubscriberProvisioningWSGetSubscriberProfileByIDTable", "SubscriberProvisioningWSStatistics", mib, server);
        if ( tableSubscriberProvisioningWSGetSubscriberProfileByIDTable != null)  {
            tableSubscriberProvisioningWSGetSubscriberProfileByIDTable.registerEntryNode(mib,server);
            mib.registerTableMeta("SubscriberProvisioningWSGetSubscriberProfileByIDTable", tableSubscriberProvisioningWSGetSubscriberProfileByIDTable);
        }

        tableSubscriberProvisioningWSAddSubscriberBulkTable = createSubscriberProvisioningWSAddSubscriberBulkTableMetaNode("SubscriberProvisioningWSAddSubscriberBulkTable", "SubscriberProvisioningWSStatistics", mib, server);
        if ( tableSubscriberProvisioningWSAddSubscriberBulkTable != null)  {
            tableSubscriberProvisioningWSAddSubscriberBulkTable.registerEntryNode(mib,server);
            mib.registerTableMeta("SubscriberProvisioningWSAddSubscriberBulkTable", tableSubscriberProvisioningWSAddSubscriberBulkTable);
        }

        tableSubscriberProvisioningWSDeleteSubscriberProfilesTable = createSubscriberProvisioningWSDeleteSubscriberProfilesTableMetaNode("SubscriberProvisioningWSDeleteSubscriberProfilesTable", "SubscriberProvisioningWSStatistics", mib, server);
        if ( tableSubscriberProvisioningWSDeleteSubscriberProfilesTable != null)  {
            tableSubscriberProvisioningWSDeleteSubscriberProfilesTable.registerEntryNode(mib,server);
            mib.registerTableMeta("SubscriberProvisioningWSDeleteSubscriberProfilesTable", tableSubscriberProvisioningWSDeleteSubscriberProfilesTable);
        }

        tableSubscriberProvisioningWSDeleteSubscriberProfileTable = createSubscriberProvisioningWSDeleteSubscriberProfileTableMetaNode("SubscriberProvisioningWSDeleteSubscriberProfileTable", "SubscriberProvisioningWSStatistics", mib, server);
        if ( tableSubscriberProvisioningWSDeleteSubscriberProfileTable != null)  {
            tableSubscriberProvisioningWSDeleteSubscriberProfileTable.registerEntryNode(mib,server);
            mib.registerTableMeta("SubscriberProvisioningWSDeleteSubscriberProfileTable", tableSubscriberProvisioningWSDeleteSubscriberProfileTable);
        }

        tableSubscriberProvisioningWSUpdateSubscriberProfileTable = createSubscriberProvisioningWSUpdateSubscriberProfileTableMetaNode("SubscriberProvisioningWSUpdateSubscriberProfileTable", "SubscriberProvisioningWSStatistics", mib, server);
        if ( tableSubscriberProvisioningWSUpdateSubscriberProfileTable != null)  {
            tableSubscriberProvisioningWSUpdateSubscriberProfileTable.registerEntryNode(mib,server);
            mib.registerTableMeta("SubscriberProvisioningWSUpdateSubscriberProfileTable", tableSubscriberProvisioningWSUpdateSubscriberProfileTable);
        }

        tableSubscriberProvisioningWSAddSubscriberProfileTable = createSubscriberProvisioningWSAddSubscriberProfileTableMetaNode("SubscriberProvisioningWSAddSubscriberProfileTable", "SubscriberProvisioningWSStatistics", mib, server);
        if ( tableSubscriberProvisioningWSAddSubscriberProfileTable != null)  {
            tableSubscriberProvisioningWSAddSubscriberProfileTable.registerEntryNode(mib,server);
            mib.registerTableMeta("SubscriberProvisioningWSAddSubscriberProfileTable", tableSubscriberProvisioningWSAddSubscriberProfileTable);
        }

        tableSubscriberProvisioningWSGetAlternateIdTable = createSubscriberProvisioningWSGetAlternateIdTableMetaNode("SubscriberProvisioningWSGetAlternateIdTable", "SubscriberProvisioningWSStatistics", mib, server);
        if ( tableSubscriberProvisioningWSGetAlternateIdTable != null)  {
            tableSubscriberProvisioningWSGetAlternateIdTable.registerEntryNode(mib,server);
            mib.registerTableMeta("SubscriberProvisioningWSGetAlternateIdTable", tableSubscriberProvisioningWSGetAlternateIdTable);
        }

        tableSubscriberProvisioningWSResultCodeWiseStatisticsTable = createSubscriberProvisioningWSResultCodeWiseStatisticsTableMetaNode("SubscriberProvisioningWSResultCodeWiseStatisticsTable", "SubscriberProvisioningWSStatistics", mib, server);
        if ( tableSubscriberProvisioningWSResultCodeWiseStatisticsTable != null)  {
            tableSubscriberProvisioningWSResultCodeWiseStatisticsTable.registerEntryNode(mib,server);
            mib.registerTableMeta("SubscriberProvisioningWSResultCodeWiseStatisticsTable", tableSubscriberProvisioningWSResultCodeWiseStatisticsTable);
        }

        tableSubscriberProvisioningWSDeleteAlternateIdTable = createSubscriberProvisioningWSDeleteAlternateIdTableMetaNode("SubscriberProvisioningWSDeleteAlternateIdTable", "SubscriberProvisioningWSStatistics", mib, server);
        if ( tableSubscriberProvisioningWSDeleteAlternateIdTable != null)  {
            tableSubscriberProvisioningWSDeleteAlternateIdTable.registerEntryNode(mib,server);
            mib.registerTableMeta("SubscriberProvisioningWSDeleteAlternateIdTable", tableSubscriberProvisioningWSDeleteAlternateIdTable);
        }

        tableSubscriberProvisioningWSMethodWiseStatisticsTable = createSubscriberProvisioningWSMethodWiseStatisticsTableMetaNode("SubscriberProvisioningWSMethodWiseStatisticsTable", "SubscriberProvisioningWSStatistics", mib, server);
        if ( tableSubscriberProvisioningWSMethodWiseStatisticsTable != null)  {
            tableSubscriberProvisioningWSMethodWiseStatisticsTable.registerEntryNode(mib,server);
            mib.registerTableMeta("SubscriberProvisioningWSMethodWiseStatisticsTable", tableSubscriberProvisioningWSMethodWiseStatisticsTable);
        }

        tableSubscriberProvisioningWSChangeAlternateIdStatusTable = createSubscriberProvisioningWSChangeAlternateIdStatusTableMetaNode("SubscriberProvisioningWSChangeAlternateIdStatusTable", "SubscriberProvisioningWSStatistics", mib, server);
        if ( tableSubscriberProvisioningWSChangeAlternateIdStatusTable != null)  {
            tableSubscriberProvisioningWSChangeAlternateIdStatusTable.registerEntryNode(mib,server);
            mib.registerTableMeta("SubscriberProvisioningWSChangeAlternateIdStatusTable", tableSubscriberProvisioningWSChangeAlternateIdStatusTable);
        }

        tableSubscriberProvisioningWSUpdateAlternateIdTable = createSubscriberProvisioningWSUpdateAlternateIdTableMetaNode("SubscriberProvisioningWSUpdateAlternateIdTable", "SubscriberProvisioningWSStatistics", mib, server);
        if ( tableSubscriberProvisioningWSUpdateAlternateIdTable != null)  {
            tableSubscriberProvisioningWSUpdateAlternateIdTable.registerEntryNode(mib,server);
            mib.registerTableMeta("SubscriberProvisioningWSUpdateAlternateIdTable", tableSubscriberProvisioningWSUpdateAlternateIdTable);
        }

        tableSubscriberProvisioningWSAddAlternateIdTable = createSubscriberProvisioningWSAddAlternateIdTableMetaNode("SubscriberProvisioningWSAddAlternateIdTable", "SubscriberProvisioningWSStatistics", mib, server);
        if ( tableSubscriberProvisioningWSAddAlternateIdTable != null)  {
            tableSubscriberProvisioningWSAddAlternateIdTable.registerEntryNode(mib,server);
            mib.registerTableMeta("SubscriberProvisioningWSAddAlternateIdTable", tableSubscriberProvisioningWSAddAlternateIdTable);
        }

        tableSubscriberProvisioningWSChangeBaseProductOfferTable = createSubscriberProvisioningWSChangeBaseProductOfferTableMetaNode("SubscriberProvisioningWSChangeBaseProductOfferTable", "SubscriberProvisioningWSStatistics", mib, server);
        if ( tableSubscriberProvisioningWSChangeBaseProductOfferTable != null)  {
            tableSubscriberProvisioningWSChangeBaseProductOfferTable.registerEntryNode(mib,server);
            mib.registerTableMeta("SubscriberProvisioningWSChangeBaseProductOfferTable", tableSubscriberProvisioningWSChangeBaseProductOfferTable);
        }

        tableSubscriberProvisioningWSChangeImsPackageTable = createSubscriberProvisioningWSChangeImsPackageTableMetaNode("SubscriberProvisioningWSChangeImsPackageTable", "SubscriberProvisioningWSStatistics", mib, server);
        if ( tableSubscriberProvisioningWSChangeImsPackageTable != null)  {
            tableSubscriberProvisioningWSChangeImsPackageTable.registerEntryNode(mib,server);
            mib.registerTableMeta("SubscriberProvisioningWSChangeImsPackageTable", tableSubscriberProvisioningWSChangeImsPackageTable);
        }

        tableSubscriberProvisioningWSAddSubscribersTable = createSubscriberProvisioningWSAddSubscribersTableMetaNode("SubscriberProvisioningWSAddSubscribersTable", "SubscriberProvisioningWSStatistics", mib, server);
        if ( tableSubscriberProvisioningWSAddSubscribersTable != null)  {
            tableSubscriberProvisioningWSAddSubscribersTable.registerEntryNode(mib,server);
            mib.registerTableMeta("SubscriberProvisioningWSAddSubscribersTable", tableSubscriberProvisioningWSAddSubscribersTable);
        }

        tableSubscriberProvisioningWSAddSubscriberTable = createSubscriberProvisioningWSAddSubscriberTableMetaNode("SubscriberProvisioningWSAddSubscriberTable", "SubscriberProvisioningWSStatistics", mib, server);
        if ( tableSubscriberProvisioningWSAddSubscriberTable != null)  {
            tableSubscriberProvisioningWSAddSubscriberTable.registerEntryNode(mib,server);
            mib.registerTableMeta("SubscriberProvisioningWSAddSubscriberTable", tableSubscriberProvisioningWSAddSubscriberTable);
        }

    }


    /**
     * Factory method for "SubscriberProvisioningWSMigrateSubscriberTable" table metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param tableName Name of the table object ("SubscriberProvisioningWSMigrateSubscriberTable")
     * @param groupName Name of the group to which this table belong ("SubscriberProvisioningWSStatistics")
     * @param mib The SnmpMib object in which this table is registered
     * @param server MBeanServer for this table entries (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "SubscriberProvisioningWSMigrateSubscriberTable" table (SubscriberProvisioningWSMigrateSubscriberTableMeta)
     * 
     **/
    protected SubscriberProvisioningWSMigrateSubscriberTableMeta createSubscriberProvisioningWSMigrateSubscriberTableMetaNode(String tableName, String groupName, SnmpMib mib, MBeanServer server)  {
        return new SubscriberProvisioningWSMigrateSubscriberTableMeta(mib, objectserver);
    }


    /**
     * Factory method for "SubscriberProvisioningWSRestoreSubscribersTable" table metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param tableName Name of the table object ("SubscriberProvisioningWSRestoreSubscribersTable")
     * @param groupName Name of the group to which this table belong ("SubscriberProvisioningWSStatistics")
     * @param mib The SnmpMib object in which this table is registered
     * @param server MBeanServer for this table entries (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "SubscriberProvisioningWSRestoreSubscribersTable" table (SubscriberProvisioningWSRestoreSubscribersTableMeta)
     * 
     **/
    protected SubscriberProvisioningWSRestoreSubscribersTableMeta createSubscriberProvisioningWSRestoreSubscribersTableMetaNode(String tableName, String groupName, SnmpMib mib, MBeanServer server)  {
        return new SubscriberProvisioningWSRestoreSubscribersTableMeta(mib, objectserver);
    }


    /**
     * Factory method for "SubscriberProvisioningWSRestoreSubscriberTable" table metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param tableName Name of the table object ("SubscriberProvisioningWSRestoreSubscriberTable")
     * @param groupName Name of the group to which this table belong ("SubscriberProvisioningWSStatistics")
     * @param mib The SnmpMib object in which this table is registered
     * @param server MBeanServer for this table entries (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "SubscriberProvisioningWSRestoreSubscriberTable" table (SubscriberProvisioningWSRestoreSubscriberTableMeta)
     * 
     **/
    protected SubscriberProvisioningWSRestoreSubscriberTableMeta createSubscriberProvisioningWSRestoreSubscriberTableMetaNode(String tableName, String groupName, SnmpMib mib, MBeanServer server)  {
        return new SubscriberProvisioningWSRestoreSubscriberTableMeta(mib, objectserver);
    }


    /**
     * Factory method for "SubscriberProvisioningWSPurgeAllSubscriberTable" table metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param tableName Name of the table object ("SubscriberProvisioningWSPurgeAllSubscriberTable")
     * @param groupName Name of the group to which this table belong ("SubscriberProvisioningWSStatistics")
     * @param mib The SnmpMib object in which this table is registered
     * @param server MBeanServer for this table entries (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "SubscriberProvisioningWSPurgeAllSubscriberTable" table (SubscriberProvisioningWSPurgeAllSubscriberTableMeta)
     * 
     **/
    protected SubscriberProvisioningWSPurgeAllSubscriberTableMeta createSubscriberProvisioningWSPurgeAllSubscriberTableMetaNode(String tableName, String groupName, SnmpMib mib, MBeanServer server)  {
        return new SubscriberProvisioningWSPurgeAllSubscriberTableMeta(mib, objectserver);
    }


    /**
     * Factory method for "SubscriberProvisioningWSPurgeSubscribersTable" table metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param tableName Name of the table object ("SubscriberProvisioningWSPurgeSubscribersTable")
     * @param groupName Name of the group to which this table belong ("SubscriberProvisioningWSStatistics")
     * @param mib The SnmpMib object in which this table is registered
     * @param server MBeanServer for this table entries (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "SubscriberProvisioningWSPurgeSubscribersTable" table (SubscriberProvisioningWSPurgeSubscribersTableMeta)
     * 
     **/
    protected SubscriberProvisioningWSPurgeSubscribersTableMeta createSubscriberProvisioningWSPurgeSubscribersTableMetaNode(String tableName, String groupName, SnmpMib mib, MBeanServer server)  {
        return new SubscriberProvisioningWSPurgeSubscribersTableMeta(mib, objectserver);
    }


    /**
     * Factory method for "SubscriberProvisioningWSPurgeSubscriberTable" table metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param tableName Name of the table object ("SubscriberProvisioningWSPurgeSubscriberTable")
     * @param groupName Name of the group to which this table belong ("SubscriberProvisioningWSStatistics")
     * @param mib The SnmpMib object in which this table is registered
     * @param server MBeanServer for this table entries (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "SubscriberProvisioningWSPurgeSubscriberTable" table (SubscriberProvisioningWSPurgeSubscriberTableMeta)
     * 
     **/
    protected SubscriberProvisioningWSPurgeSubscriberTableMeta createSubscriberProvisioningWSPurgeSubscriberTableMetaNode(String tableName, String groupName, SnmpMib mib, MBeanServer server)  {
        return new SubscriberProvisioningWSPurgeSubscriberTableMeta(mib, objectserver);
    }


    /**
     * Factory method for "SubscriberProvisioningWSListSubscriberProfilesTable" table metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param tableName Name of the table object ("SubscriberProvisioningWSListSubscriberProfilesTable")
     * @param groupName Name of the group to which this table belong ("SubscriberProvisioningWSStatistics")
     * @param mib The SnmpMib object in which this table is registered
     * @param server MBeanServer for this table entries (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "SubscriberProvisioningWSListSubscriberProfilesTable" table (SubscriberProvisioningWSListSubscriberProfilesTableMeta)
     * 
     **/
    protected SubscriberProvisioningWSListSubscriberProfilesTableMeta createSubscriberProvisioningWSListSubscriberProfilesTableMetaNode(String tableName, String groupName, SnmpMib mib, MBeanServer server)  {
        return new SubscriberProvisioningWSListSubscriberProfilesTableMeta(mib, objectserver);
    }


    /**
     * Factory method for "SubscriberProvisioningWSGetSubscriberProfileByIDTable" table metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param tableName Name of the table object ("SubscriberProvisioningWSGetSubscriberProfileByIDTable")
     * @param groupName Name of the group to which this table belong ("SubscriberProvisioningWSStatistics")
     * @param mib The SnmpMib object in which this table is registered
     * @param server MBeanServer for this table entries (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "SubscriberProvisioningWSGetSubscriberProfileByIDTable" table (SubscriberProvisioningWSGetSubscriberProfileByIDTableMeta)
     * 
     **/
    protected SubscriberProvisioningWSGetSubscriberProfileByIDTableMeta createSubscriberProvisioningWSGetSubscriberProfileByIDTableMetaNode(String tableName, String groupName, SnmpMib mib, MBeanServer server)  {
        return new SubscriberProvisioningWSGetSubscriberProfileByIDTableMeta(mib, objectserver);
    }


    /**
     * Factory method for "SubscriberProvisioningWSAddSubscriberBulkTable" table metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param tableName Name of the table object ("SubscriberProvisioningWSAddSubscriberBulkTable")
     * @param groupName Name of the group to which this table belong ("SubscriberProvisioningWSStatistics")
     * @param mib The SnmpMib object in which this table is registered
     * @param server MBeanServer for this table entries (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "SubscriberProvisioningWSAddSubscriberBulkTable" table (SubscriberProvisioningWSAddSubscriberBulkTableMeta)
     * 
     **/
    protected SubscriberProvisioningWSAddSubscriberBulkTableMeta createSubscriberProvisioningWSAddSubscriberBulkTableMetaNode(String tableName, String groupName, SnmpMib mib, MBeanServer server)  {
        return new SubscriberProvisioningWSAddSubscriberBulkTableMeta(mib, objectserver);
    }


    /**
     * Factory method for "SubscriberProvisioningWSDeleteSubscriberProfilesTable" table metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param tableName Name of the table object ("SubscriberProvisioningWSDeleteSubscriberProfilesTable")
     * @param groupName Name of the group to which this table belong ("SubscriberProvisioningWSStatistics")
     * @param mib The SnmpMib object in which this table is registered
     * @param server MBeanServer for this table entries (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "SubscriberProvisioningWSDeleteSubscriberProfilesTable" table (SubscriberProvisioningWSDeleteSubscriberProfilesTableMeta)
     * 
     **/
    protected SubscriberProvisioningWSDeleteSubscriberProfilesTableMeta createSubscriberProvisioningWSDeleteSubscriberProfilesTableMetaNode(String tableName, String groupName, SnmpMib mib, MBeanServer server)  {
        return new SubscriberProvisioningWSDeleteSubscriberProfilesTableMeta(mib, objectserver);
    }


    /**
     * Factory method for "SubscriberProvisioningWSDeleteSubscriberProfileTable" table metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param tableName Name of the table object ("SubscriberProvisioningWSDeleteSubscriberProfileTable")
     * @param groupName Name of the group to which this table belong ("SubscriberProvisioningWSStatistics")
     * @param mib The SnmpMib object in which this table is registered
     * @param server MBeanServer for this table entries (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "SubscriberProvisioningWSDeleteSubscriberProfileTable" table (SubscriberProvisioningWSDeleteSubscriberProfileTableMeta)
     * 
     **/
    protected SubscriberProvisioningWSDeleteSubscriberProfileTableMeta createSubscriberProvisioningWSDeleteSubscriberProfileTableMetaNode(String tableName, String groupName, SnmpMib mib, MBeanServer server)  {
        return new SubscriberProvisioningWSDeleteSubscriberProfileTableMeta(mib, objectserver);
    }


    /**
     * Factory method for "SubscriberProvisioningWSUpdateSubscriberProfileTable" table metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param tableName Name of the table object ("SubscriberProvisioningWSUpdateSubscriberProfileTable")
     * @param groupName Name of the group to which this table belong ("SubscriberProvisioningWSStatistics")
     * @param mib The SnmpMib object in which this table is registered
     * @param server MBeanServer for this table entries (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "SubscriberProvisioningWSUpdateSubscriberProfileTable" table (SubscriberProvisioningWSUpdateSubscriberProfileTableMeta)
     * 
     **/
    protected SubscriberProvisioningWSUpdateSubscriberProfileTableMeta createSubscriberProvisioningWSUpdateSubscriberProfileTableMetaNode(String tableName, String groupName, SnmpMib mib, MBeanServer server)  {
        return new SubscriberProvisioningWSUpdateSubscriberProfileTableMeta(mib, objectserver);
    }


    /**
     * Factory method for "SubscriberProvisioningWSAddSubscriberProfileTable" table metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param tableName Name of the table object ("SubscriberProvisioningWSAddSubscriberProfileTable")
     * @param groupName Name of the group to which this table belong ("SubscriberProvisioningWSStatistics")
     * @param mib The SnmpMib object in which this table is registered
     * @param server MBeanServer for this table entries (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "SubscriberProvisioningWSAddSubscriberProfileTable" table (SubscriberProvisioningWSAddSubscriberProfileTableMeta)
     * 
     **/
    protected SubscriberProvisioningWSAddSubscriberProfileTableMeta createSubscriberProvisioningWSAddSubscriberProfileTableMetaNode(String tableName, String groupName, SnmpMib mib, MBeanServer server)  {
        return new SubscriberProvisioningWSAddSubscriberProfileTableMeta(mib, objectserver);
    }


    /**
     * Factory method for "SubscriberProvisioningWSGetAlternateIdTable" table metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param tableName Name of the table object ("SubscriberProvisioningWSGetAlternateIdTable")
     * @param groupName Name of the group to which this table belong ("SubscriberProvisioningWSStatistics")
     * @param mib The SnmpMib object in which this table is registered
     * @param server MBeanServer for this table entries (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "SubscriberProvisioningWSGetAlternateIdTable" table (SubscriberProvisioningWSGetAlternateIdTableMeta)
     * 
     **/
    protected SubscriberProvisioningWSGetAlternateIdTableMeta createSubscriberProvisioningWSGetAlternateIdTableMetaNode(String tableName, String groupName, SnmpMib mib, MBeanServer server)  {
        return new SubscriberProvisioningWSGetAlternateIdTableMeta(mib, objectserver);
    }


    /**
     * Factory method for "SubscriberProvisioningWSResultCodeWiseStatisticsTable" table metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param tableName Name of the table object ("SubscriberProvisioningWSResultCodeWiseStatisticsTable")
     * @param groupName Name of the group to which this table belong ("SubscriberProvisioningWSStatistics")
     * @param mib The SnmpMib object in which this table is registered
     * @param server MBeanServer for this table entries (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "SubscriberProvisioningWSResultCodeWiseStatisticsTable" table (SubscriberProvisioningWSResultCodeWiseStatisticsTableMeta)
     * 
     **/
    protected SubscriberProvisioningWSResultCodeWiseStatisticsTableMeta createSubscriberProvisioningWSResultCodeWiseStatisticsTableMetaNode(String tableName, String groupName, SnmpMib mib, MBeanServer server)  {
        return new SubscriberProvisioningWSResultCodeWiseStatisticsTableMeta(mib, objectserver);
    }


    /**
     * Factory method for "SubscriberProvisioningWSDeleteAlternateIdTable" table metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param tableName Name of the table object ("SubscriberProvisioningWSDeleteAlternateIdTable")
     * @param groupName Name of the group to which this table belong ("SubscriberProvisioningWSStatistics")
     * @param mib The SnmpMib object in which this table is registered
     * @param server MBeanServer for this table entries (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "SubscriberProvisioningWSDeleteAlternateIdTable" table (SubscriberProvisioningWSDeleteAlternateIdTableMeta)
     * 
     **/
    protected SubscriberProvisioningWSDeleteAlternateIdTableMeta createSubscriberProvisioningWSDeleteAlternateIdTableMetaNode(String tableName, String groupName, SnmpMib mib, MBeanServer server)  {
        return new SubscriberProvisioningWSDeleteAlternateIdTableMeta(mib, objectserver);
    }


    /**
     * Factory method for "SubscriberProvisioningWSMethodWiseStatisticsTable" table metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param tableName Name of the table object ("SubscriberProvisioningWSMethodWiseStatisticsTable")
     * @param groupName Name of the group to which this table belong ("SubscriberProvisioningWSStatistics")
     * @param mib The SnmpMib object in which this table is registered
     * @param server MBeanServer for this table entries (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "SubscriberProvisioningWSMethodWiseStatisticsTable" table (SubscriberProvisioningWSMethodWiseStatisticsTableMeta)
     * 
     **/
    protected SubscriberProvisioningWSMethodWiseStatisticsTableMeta createSubscriberProvisioningWSMethodWiseStatisticsTableMetaNode(String tableName, String groupName, SnmpMib mib, MBeanServer server)  {
        return new SubscriberProvisioningWSMethodWiseStatisticsTableMeta(mib, objectserver);
    }


    /**
     * Factory method for "SubscriberProvisioningWSChangeAlternateIdStatusTable" table metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param tableName Name of the table object ("SubscriberProvisioningWSChangeAlternateIdStatusTable")
     * @param groupName Name of the group to which this table belong ("SubscriberProvisioningWSStatistics")
     * @param mib The SnmpMib object in which this table is registered
     * @param server MBeanServer for this table entries (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "SubscriberProvisioningWSChangeAlternateIdStatusTable" table (SubscriberProvisioningWSChangeAlternateIdStatusTableMeta)
     * 
     **/
    protected SubscriberProvisioningWSChangeAlternateIdStatusTableMeta createSubscriberProvisioningWSChangeAlternateIdStatusTableMetaNode(String tableName, String groupName, SnmpMib mib, MBeanServer server)  {
        return new SubscriberProvisioningWSChangeAlternateIdStatusTableMeta(mib, objectserver);
    }


    /**
     * Factory method for "SubscriberProvisioningWSUpdateAlternateIdTable" table metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param tableName Name of the table object ("SubscriberProvisioningWSUpdateAlternateIdTable")
     * @param groupName Name of the group to which this table belong ("SubscriberProvisioningWSStatistics")
     * @param mib The SnmpMib object in which this table is registered
     * @param server MBeanServer for this table entries (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "SubscriberProvisioningWSUpdateAlternateIdTable" table (SubscriberProvisioningWSUpdateAlternateIdTableMeta)
     * 
     **/
    protected SubscriberProvisioningWSUpdateAlternateIdTableMeta createSubscriberProvisioningWSUpdateAlternateIdTableMetaNode(String tableName, String groupName, SnmpMib mib, MBeanServer server)  {
        return new SubscriberProvisioningWSUpdateAlternateIdTableMeta(mib, objectserver);
    }


    /**
     * Factory method for "SubscriberProvisioningWSAddAlternateIdTable" table metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param tableName Name of the table object ("SubscriberProvisioningWSAddAlternateIdTable")
     * @param groupName Name of the group to which this table belong ("SubscriberProvisioningWSStatistics")
     * @param mib The SnmpMib object in which this table is registered
     * @param server MBeanServer for this table entries (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "SubscriberProvisioningWSAddAlternateIdTable" table (SubscriberProvisioningWSAddAlternateIdTableMeta)
     * 
     **/
    protected SubscriberProvisioningWSAddAlternateIdTableMeta createSubscriberProvisioningWSAddAlternateIdTableMetaNode(String tableName, String groupName, SnmpMib mib, MBeanServer server)  {
        return new SubscriberProvisioningWSAddAlternateIdTableMeta(mib, objectserver);
    }


    /**
     * Factory method for "SubscriberProvisioningWSChangeBaseProductOfferTable" table metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param tableName Name of the table object ("SubscriberProvisioningWSChangeBaseProductOfferTable")
     * @param groupName Name of the group to which this table belong ("SubscriberProvisioningWSStatistics")
     * @param mib The SnmpMib object in which this table is registered
     * @param server MBeanServer for this table entries (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "SubscriberProvisioningWSChangeBaseProductOfferTable" table (SubscriberProvisioningWSChangeBaseProductOfferTableMeta)
     * 
     **/
    protected SubscriberProvisioningWSChangeBaseProductOfferTableMeta createSubscriberProvisioningWSChangeBaseProductOfferTableMetaNode(String tableName, String groupName, SnmpMib mib, MBeanServer server)  {
        return new SubscriberProvisioningWSChangeBaseProductOfferTableMeta(mib, objectserver);
    }


    /**
     * Factory method for "SubscriberProvisioningWSChangeImsPackageTable" table metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param tableName Name of the table object ("SubscriberProvisioningWSChangeImsPackageTable")
     * @param groupName Name of the group to which this table belong ("SubscriberProvisioningWSStatistics")
     * @param mib The SnmpMib object in which this table is registered
     * @param server MBeanServer for this table entries (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "SubscriberProvisioningWSChangeImsPackageTable" table (SubscriberProvisioningWSChangeImsPackageTableMeta)
     * 
     **/
    protected SubscriberProvisioningWSChangeImsPackageTableMeta createSubscriberProvisioningWSChangeImsPackageTableMetaNode(String tableName, String groupName, SnmpMib mib, MBeanServer server)  {
        return new SubscriberProvisioningWSChangeImsPackageTableMeta(mib, objectserver);
    }


    /**
     * Factory method for "SubscriberProvisioningWSAddSubscribersTable" table metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param tableName Name of the table object ("SubscriberProvisioningWSAddSubscribersTable")
     * @param groupName Name of the group to which this table belong ("SubscriberProvisioningWSStatistics")
     * @param mib The SnmpMib object in which this table is registered
     * @param server MBeanServer for this table entries (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "SubscriberProvisioningWSAddSubscribersTable" table (SubscriberProvisioningWSAddSubscribersTableMeta)
     * 
     **/
    protected SubscriberProvisioningWSAddSubscribersTableMeta createSubscriberProvisioningWSAddSubscribersTableMetaNode(String tableName, String groupName, SnmpMib mib, MBeanServer server)  {
        return new SubscriberProvisioningWSAddSubscribersTableMeta(mib, objectserver);
    }


    /**
     * Factory method for "SubscriberProvisioningWSAddSubscriberTable" table metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param tableName Name of the table object ("SubscriberProvisioningWSAddSubscriberTable")
     * @param groupName Name of the group to which this table belong ("SubscriberProvisioningWSStatistics")
     * @param mib The SnmpMib object in which this table is registered
     * @param server MBeanServer for this table entries (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "SubscriberProvisioningWSAddSubscriberTable" table (SubscriberProvisioningWSAddSubscriberTableMeta)
     * 
     **/
    protected SubscriberProvisioningWSAddSubscriberTableMeta createSubscriberProvisioningWSAddSubscriberTableMetaNode(String tableName, String groupName, SnmpMib mib, MBeanServer server)  {
        return new SubscriberProvisioningWSAddSubscriberTableMeta(mib, objectserver);
    }

    protected SubscriberProvisioningWSStatisticsMBean node;
    protected SnmpStandardObjectServer objectserver = null;
    protected SubscriberProvisioningWSMigrateSubscriberTableMeta tableSubscriberProvisioningWSMigrateSubscriberTable = null;
    protected SubscriberProvisioningWSRestoreSubscribersTableMeta tableSubscriberProvisioningWSRestoreSubscribersTable = null;
    protected SubscriberProvisioningWSRestoreSubscriberTableMeta tableSubscriberProvisioningWSRestoreSubscriberTable = null;
    protected SubscriberProvisioningWSPurgeAllSubscriberTableMeta tableSubscriberProvisioningWSPurgeAllSubscriberTable = null;
    protected SubscriberProvisioningWSPurgeSubscribersTableMeta tableSubscriberProvisioningWSPurgeSubscribersTable = null;
    protected SubscriberProvisioningWSPurgeSubscriberTableMeta tableSubscriberProvisioningWSPurgeSubscriberTable = null;
    protected SubscriberProvisioningWSListSubscriberProfilesTableMeta tableSubscriberProvisioningWSListSubscriberProfilesTable = null;
    protected SubscriberProvisioningWSGetSubscriberProfileByIDTableMeta tableSubscriberProvisioningWSGetSubscriberProfileByIDTable = null;
    protected SubscriberProvisioningWSAddSubscriberBulkTableMeta tableSubscriberProvisioningWSAddSubscriberBulkTable = null;
    protected SubscriberProvisioningWSDeleteSubscriberProfilesTableMeta tableSubscriberProvisioningWSDeleteSubscriberProfilesTable = null;
    protected SubscriberProvisioningWSDeleteSubscriberProfileTableMeta tableSubscriberProvisioningWSDeleteSubscriberProfileTable = null;
    protected SubscriberProvisioningWSUpdateSubscriberProfileTableMeta tableSubscriberProvisioningWSUpdateSubscriberProfileTable = null;
    protected SubscriberProvisioningWSAddSubscriberProfileTableMeta tableSubscriberProvisioningWSAddSubscriberProfileTable = null;
    protected SubscriberProvisioningWSGetAlternateIdTableMeta tableSubscriberProvisioningWSGetAlternateIdTable = null;
    protected SubscriberProvisioningWSResultCodeWiseStatisticsTableMeta tableSubscriberProvisioningWSResultCodeWiseStatisticsTable = null;
    protected SubscriberProvisioningWSDeleteAlternateIdTableMeta tableSubscriberProvisioningWSDeleteAlternateIdTable = null;
    protected SubscriberProvisioningWSMethodWiseStatisticsTableMeta tableSubscriberProvisioningWSMethodWiseStatisticsTable = null;
    protected SubscriberProvisioningWSChangeAlternateIdStatusTableMeta tableSubscriberProvisioningWSChangeAlternateIdStatusTable = null;
    protected SubscriberProvisioningWSUpdateAlternateIdTableMeta tableSubscriberProvisioningWSUpdateAlternateIdTable = null;
    protected SubscriberProvisioningWSAddAlternateIdTableMeta tableSubscriberProvisioningWSAddAlternateIdTable = null;
    protected SubscriberProvisioningWSChangeBaseProductOfferTableMeta tableSubscriberProvisioningWSChangeBaseProductOfferTable = null;
    protected SubscriberProvisioningWSChangeImsPackageTableMeta tableSubscriberProvisioningWSChangeImsPackageTable = null;
    protected SubscriberProvisioningWSAddSubscribersTableMeta tableSubscriberProvisioningWSAddSubscribersTable = null;
    protected SubscriberProvisioningWSAddSubscriberTableMeta tableSubscriberProvisioningWSAddSubscriberTable = null;
}
