package com.elitecore.nvsmx.snmp.mib.webservice.autogencode;

//
// Generated by mibgen version 5.1 (03/08/07) when compiling NETVERTEX-PCRF-MIB.
//

// java imports
//
import java.io.Serializable;

// jmx imports
//
import javax.management.MBeanServer;
import com.sun.management.snmp.SnmpString;
import com.sun.management.snmp.SnmpStatusException;

// jdmk imports
//
import com.sun.management.snmp.agent.SnmpMib;

/**
 * The class is used for implementing the "SessionManagementWSStatistics" group.
 * The group is defined with the following oid: 1.3.6.1.4.1.21067.4.1.3.11.
 */
public class SessionManagementWSStatistics implements SessionManagementWSStatisticsMBean, Serializable {

	public SessionManagementWSStatistics() {
		// TODO Auto-generated constructor stub
	}
    /**
     * Variable for storing the value of "SessionManagementWSReauthSessionBySubscriberIDTable".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.11.9".
     *
     * "The (conceptual) table listing the SessionManagementWS Method wsReauthSessionsBySubscriberIdentity ResultCodes statistics."
     *
     */
    protected TableSessionManagementWSReauthSessionBySubscriberIDTable SessionManagementWSReauthSessionBySubscriberIDTable;

    /**
     * Variable for storing the value of "SessionManagementWSGetSessionsByIPTable".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.11.8".
     *
     * "The (conceptual) table listing the SessionManagementWS Method wsGetSessionsByIP ResultCodes statistics."
     *
     */
    protected TableSessionManagementWSGetSessionsByIPTable SessionManagementWSGetSessionsByIPTable;

    /**
     * Variable for storing the value of "SessionManagementWSGetSessionsBySubscriberIDTable".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.11.7".
     *
     * "The (conceptual) table listing the SessionManagementWS Method wsGetSessionsBySubscriberIdentity ResultCodes statistics."
     *
     */
    protected TableSessionManagementWSGetSessionsBySubscriberIDTable SessionManagementWSGetSessionsBySubscriberIDTable;

    /**
     * Variable for storing the value of "SessionManagementWSResultCodeWiseStatisticsTable".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.11.6".
     *
     * "The (conceptual) table listing the SessionManagementWS ResultCodes statistics."
     *
     */
    protected TableSessionManagementWSResultCodeWiseStatisticsTable SessionManagementWSResultCodeWiseStatisticsTable;

    /**
     * Variable for storing the value of "SessionManagementWSMethodWiseStatisticsTable".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.11.5".
     *
     * "The (conceptual) table listing the SessionManagementWS method wise statistics."
     *
     */
    protected TableSessionManagementWSMethodWiseStatisticsTable SessionManagementWSMethodWiseStatisticsTable;

    /**
     * Variable for storing the value of "SessionWSAvgTPS".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.11.4".
     *
     * "The average TPS in SessionManagementWS for last one minute."
     *
     */
    protected Long SessionWSAvgTPS = new Long(1);

    /**
     * Variable for storing the value of "SessionWSLastMinuteTotalRequests".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.11.3".
     *
     * "Total number of SessionManagementWS requests received in Last Minute by Policy Designer."
     *
     */
    protected Long SessionWSLastMinuteTotalRequests = new Long(1);

    /**
     * Variable for storing the value of "SessionWSTotalResponses".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.11.2".
     *
     * "Total number of SessionManagementWS responses given by Policy Designer."
     *
     */
    protected Long SessionWSTotalResponses = new Long(1);

    /**
     * Variable for storing the value of "SessionWSTotalRequests".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.11.1".
     *
     * "Total number of SessionManagementWS requests received by Policy Designer."
     *
     */
    protected Long SessionWSTotalRequests = new Long(1);

    /**
     * Variable for storing the value of "SessionManagementWSReauthSessionsByCoreSessionIDTable".
     * The variable is identified by: "1.3.6.1.4.1.21067.4.1.3.11.10".
     *
     * "The (conceptual) table listing the SessionManagementWS Method wsReauthSessionsByCoreSessionId ResultCodes statistics."
     *
     */
    protected TableSessionManagementWSReauthSessionsByCoreSessionIDTable SessionManagementWSReauthSessionsByCoreSessionIDTable;


    /**
     * Constructor for the "SessionManagementWSStatistics" group.
     * If the group contains a table, the entries created through an SNMP SET will not be registered in Java DMK.
     */
    public SessionManagementWSStatistics(SnmpMib myMib) {
        SessionManagementWSReauthSessionBySubscriberIDTable = new TableSessionManagementWSReauthSessionBySubscriberIDTable (myMib);
        SessionManagementWSGetSessionsByIPTable = new TableSessionManagementWSGetSessionsByIPTable (myMib);
        SessionManagementWSGetSessionsBySubscriberIDTable = new TableSessionManagementWSGetSessionsBySubscriberIDTable (myMib);
        SessionManagementWSResultCodeWiseStatisticsTable = new TableSessionManagementWSResultCodeWiseStatisticsTable (myMib);
        SessionManagementWSMethodWiseStatisticsTable = new TableSessionManagementWSMethodWiseStatisticsTable (myMib);
        SessionManagementWSReauthSessionsByCoreSessionIDTable = new TableSessionManagementWSReauthSessionsByCoreSessionIDTable (myMib);
    }


    /**
     * Constructor for the "SessionManagementWSStatistics" group.
     * If the group contains a table, the entries created through an SNMP SET will be AUTOMATICALLY REGISTERED in Java DMK.
     */
    public SessionManagementWSStatistics(SnmpMib myMib, MBeanServer server) {
        SessionManagementWSReauthSessionBySubscriberIDTable = new TableSessionManagementWSReauthSessionBySubscriberIDTable (myMib, server);
        SessionManagementWSGetSessionsByIPTable = new TableSessionManagementWSGetSessionsByIPTable (myMib, server);
        SessionManagementWSGetSessionsBySubscriberIDTable = new TableSessionManagementWSGetSessionsBySubscriberIDTable (myMib, server);
        SessionManagementWSResultCodeWiseStatisticsTable = new TableSessionManagementWSResultCodeWiseStatisticsTable (myMib, server);
        SessionManagementWSMethodWiseStatisticsTable = new TableSessionManagementWSMethodWiseStatisticsTable (myMib, server);
        SessionManagementWSReauthSessionsByCoreSessionIDTable = new TableSessionManagementWSReauthSessionsByCoreSessionIDTable (myMib, server);
    }

    /**
     * Access the "SessionManagementWSReauthSessionBySubscriberIDTable" variable.
     */
    public TableSessionManagementWSReauthSessionBySubscriberIDTable accessSessionManagementWSReauthSessionBySubscriberIDTable() throws SnmpStatusException {
        return SessionManagementWSReauthSessionBySubscriberIDTable;
    }

    /**
     * Access the "SessionManagementWSReauthSessionBySubscriberIDTable" variable as a bean indexed property.
     */
    public SessionWSReauthSessionBySubscriberIDEntryMBean[] getSessionManagementWSReauthSessionBySubscriberIDTable() throws SnmpStatusException {
        return SessionManagementWSReauthSessionBySubscriberIDTable.getEntries();
    }

    /**
     * Access the "SessionManagementWSGetSessionsByIPTable" variable.
     */
    public TableSessionManagementWSGetSessionsByIPTable accessSessionManagementWSGetSessionsByIPTable() throws SnmpStatusException {
        return SessionManagementWSGetSessionsByIPTable;
    }

    /**
     * Access the "SessionManagementWSGetSessionsByIPTable" variable as a bean indexed property.
     */
    public SessionWSGetSessionsByIPEntryMBean[] getSessionManagementWSGetSessionsByIPTable() throws SnmpStatusException {
        return SessionManagementWSGetSessionsByIPTable.getEntries();
    }

    /**
     * Access the "SessionManagementWSGetSessionsBySubscriberIDTable" variable.
     */
    public TableSessionManagementWSGetSessionsBySubscriberIDTable accessSessionManagementWSGetSessionsBySubscriberIDTable() throws SnmpStatusException {
        return SessionManagementWSGetSessionsBySubscriberIDTable;
    }

    /**
     * Access the "SessionManagementWSGetSessionsBySubscriberIDTable" variable as a bean indexed property.
     */
    public SessionWSGetSessionsBySubscriberIDEntryMBean[] getSessionManagementWSGetSessionsBySubscriberIDTable() throws SnmpStatusException {
        return SessionManagementWSGetSessionsBySubscriberIDTable.getEntries();
    }

    /**
     * Access the "SessionManagementWSResultCodeWiseStatisticsTable" variable.
     */
    public TableSessionManagementWSResultCodeWiseStatisticsTable accessSessionManagementWSResultCodeWiseStatisticsTable() throws SnmpStatusException {
        return SessionManagementWSResultCodeWiseStatisticsTable;
    }

    /**
     * Access the "SessionManagementWSResultCodeWiseStatisticsTable" variable as a bean indexed property.
     */
    public SessionWSResultCodeWiseEntryMBean[] getSessionManagementWSResultCodeWiseStatisticsTable() throws SnmpStatusException {
        return SessionManagementWSResultCodeWiseStatisticsTable.getEntries();
    }

    /**
     * Access the "SessionManagementWSMethodWiseStatisticsTable" variable.
     */
    public TableSessionManagementWSMethodWiseStatisticsTable accessSessionManagementWSMethodWiseStatisticsTable() throws SnmpStatusException {
        return SessionManagementWSMethodWiseStatisticsTable;
    }

    /**
     * Access the "SessionManagementWSMethodWiseStatisticsTable" variable as a bean indexed property.
     */
    public SessionManagementWSMethodWiseEntryMBean[] getSessionManagementWSMethodWiseStatisticsTable() throws SnmpStatusException {
        return SessionManagementWSMethodWiseStatisticsTable.getEntries();
    }

    /**
     * Getter for the "SessionWSAvgTPS" variable.
     */
    public Long getSessionWSAvgTPS() throws SnmpStatusException {
        return SessionWSAvgTPS;
    }

    /**
     * Getter for the "SessionWSLastMinuteTotalRequests" variable.
     */
    public Long getSessionWSLastMinuteTotalRequests() throws SnmpStatusException {
        return SessionWSLastMinuteTotalRequests;
    }

    /**
     * Getter for the "SessionWSTotalResponses" variable.
     */
    public Long getSessionWSTotalResponses() throws SnmpStatusException {
        return SessionWSTotalResponses;
    }

    /**
     * Getter for the "SessionWSTotalRequests" variable.
     */
    public Long getSessionWSTotalRequests() throws SnmpStatusException {
        return SessionWSTotalRequests;
    }

    /**
     * Access the "SessionManagementWSReauthSessionsByCoreSessionIDTable" variable.
     */
    public TableSessionManagementWSReauthSessionsByCoreSessionIDTable accessSessionManagementWSReauthSessionsByCoreSessionIDTable() throws SnmpStatusException {
        return SessionManagementWSReauthSessionsByCoreSessionIDTable;
    }

    /**
     * Access the "SessionManagementWSReauthSessionsByCoreSessionIDTable" variable as a bean indexed property.
     */
    public SessionWSReauthSessionsByCoreSessionIDEntryMBean[] getSessionManagementWSReauthSessionsByCoreSessionIDTable() throws SnmpStatusException {
        return SessionManagementWSReauthSessionsByCoreSessionIDTable.getEntries();
    }

}
