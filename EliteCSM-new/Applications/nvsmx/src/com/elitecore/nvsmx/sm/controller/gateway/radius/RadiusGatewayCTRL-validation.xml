<!DOCTYPE validators PUBLIC "-//Apache Struts//XWork Validator 1.0.2//EN" "http://struts.apache.org/dtds/xwork-validator-1.0.2.dtd">

<validators>

	<field name="name">
		<field-validator type="requiredstring" short-circuit="true">
			<message>${getText("error.required.field", {getText("radius.gateway.name")})}</message>
		</field-validator>

		<field-validator type="stringlength">
			<param name="minLength">2</param>
			<param name="maxLength">100</param>
			<param name="trim">true</param>
			<message>${getText("error.length", {getText("radius.gateway.name")})}</message>
		</field-validator>
		
		<field-validator type="regex">
        	<param name="regex"><![CDATA[^[a-zA-Z0-9]+.*[a-zA-Z0-9]+$]]></param>
    		<message>${getText("invalid.name", {getText("radius.gateway.name")})}</message>
        </field-validator>		
	</field>
	<field name="radiusGatewayProfileId">
		<field-validator type="requiredstring" short-circuit="true">
			<message>${getText("error.required.field", {getText("radius.gateway.radiusprofile")})}</message>
		</field-validator>
	</field>
	<field name="sharedSecret">
		<field-validator type="requiredstring" short-circuit="true">
			<message>${getText("error.required.field", {getText("radius.gateway.sharedSecret")})}</message>
		</field-validator>
		<field-validator type="stringlength" short-circuit="true">
			<param name="maxLength">40</param>
			<message>${getText("error.max.length",{getText("radius.gateway.sharedSecret")})}</message>
		</field-validator>
	</field>

	<field name="connectionURL">
		<field-validator type="requiredstring" short-circuit="true">
			<message>${getText("error.required.field", {getText("radius.gateway.connectionURL")})}</message>
		</field-validator>
		<field-validator type="stringlength" short-circuit="true">
			<param name="maxLength">45</param>
			<message>${getText("error.max.length",{getText("radius.gateway.connectionURL")})}</message>
		</field-validator>
	</field>

	<field name="minLocalPort">
		<field-validator type="int" short-circuit="true">
			<param name="min">0</param>
			<param name="max">99999999</param>
			<message>${getText("error.numeric.range",{getText("radius.gateway.minLocalPort")})}</message>
		</field-validator>
	</field>

	<field name="policyEnforcementMethod">
		<field-validator type="requiredstring" short-circuit="true">
			<message>${getText("error.required.field", {getText("radius.gateway.policyEnforcementMethod")})}</message>
		</field-validator>
		<field-validator type="fieldexpression" short-circuit="true">
			<param name="expression"><![CDATA[((policyEnforcementMethod == 'COA') || (policyEnforcementMethod == 'ACCESS_ACCEPT') || (policyEnforcementMethod == 'Cisco_SCE_API') || (policyEnforcementMethod == 'NONE'))]]></param>
			<message>${getText("invalid.input.policyenforcement")}</message>
		</field-validator>

	</field>
</validators>