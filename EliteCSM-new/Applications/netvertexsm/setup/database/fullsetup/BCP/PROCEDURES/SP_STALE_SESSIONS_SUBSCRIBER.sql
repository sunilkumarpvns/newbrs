spool SP_STALE_SESSIONS_SUBSCRIBER.log

--PROCEDURE SP_STALE_SESSIONS_SUBSCRIBER
CREATE OR REPLACE PROCEDURE SP_STALE_SESSIONS_SUBSCRIBER
AS
  CNT       NUMBER := 0;
  SUC       NUMBER := 0;
  STIME     NUMBER := DBMS_UTILITY.GET_TIME;
  ETIME     NUMBER;
  TME_TAKEN NUMBER;
  INST      NUMBER := DBMS_UTILITY.CURRENT_INSTANCE;
  GX_CNT    NUMBER :=0;
  RX_CNT    NUMBER :=0;
BEGIN
  /*  EliteCSM NetVertex Module
  EliteCore Technologies Pvt. Ltd. */
  FOR REC IN
  (SELECT CORESESSIONID
  FROM TBLMCORESESSIONS
  WHERE LASTUPDATETIME < SYSTIMESTAMP - INTERVAL '24' HOUR
  )
  LOOP
    CNT:=CNT+1;
    DELETE FROM TBLMSESSIONRULE R WHERE R.SESSIONID = REC.CORESESSIONID;
    DELETE FROM TBLMCORESESSIONS C WHERE C.CORESESSIONID = REC.CORESESSIONID;
    SUC:=SUC+SQL%ROWCOUNT;
    COMMIT;
  END LOOP;
  SELECT PKG_PCRF_SCHEDULER_KPI.FUNC_CHECK_PARTITION('TBLMSESSIONRULE')
  INTO RX_CNT
  FROM DUAL;
  SELECT PKG_PCRF_SCHEDULER_KPI.FUNC_CHECK_PARTITION('TBLMCORESESSIONS')
  INTO GX_CNT
  FROM DUAL;
  ETIME    := DBMS_UTILITY.GET_TIME;
  TME_TAKEN:=ROUND((ETIME - STIME)/100,1);
  IF RX_CNT=1 AND GX_CNT=1 THEN
    RX_CNT :=1;
  ELSE
    RX_CNT :=0;
  END IF;
  PKG_PCRF_SCHEDULER_KPI.SP_SCHEDULER_GENERAL (CNT,SUC,INST,'JOB_SP_STALE_SESSIONS_SPR',TME_TAKEN,RX_CNT);
END;
/

BEGIN
DBMS_SCHEDULER.CREATE_JOB (
   job_name           =>  'JOB_SP_STALE_SESSIONS_SPR',
   job_type           =>  'STORED_PROCEDURE',
   job_action         =>  'SP_STALE_SESSIONS_SUBSCRIBER',
   start_date         =>  SYSTIMESTAMP,
   repeat_interval    =>  'FREQ=DAILY; BYHOUR=5; BYMINUTE=4;',   
   end_date           =>   NULL,
    enabled           =>   TRUE,
   comments           =>  'Purge the stale sessions for gx and rx.....');
END;
/

spool off;