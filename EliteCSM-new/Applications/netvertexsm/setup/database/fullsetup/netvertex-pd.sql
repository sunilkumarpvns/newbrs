-- noinspection SqlDialectInspectionForFile

SET SERVEROUTPUT ON
WHENEVER SQLERROR EXIT SQL.SQLCODE ROLLBACK;
BEGIN

IF sys_context('userenv','current_schema') IN ('SYS','SYSTEM','OUTLN','DBSNMP','SYSMAN','ORACLE_OCM',
'DIP','APPQOSSYS','FLOWS_FILES','MDSYS','ORDSYS','SCOTT','HR','EXFSYS','WMSYS','XS$NULL','ORDDATA',
'MDDATA','CTXSYS','ANONYMOUS','XDB','APEX_PUBLIC_USER','SPATIAL_CSW_ADMIN_USR','SPATIAL_WFS_ADMIN_USR',
'ORDPLUGINS','OWBSYS','SI_INFORMTN_SCHEMA','OLAPSYS') THEN

 Raise_Application_Error (-20343, 'You are connected in Oracle Schemas ,Please switch the proper netvertex schema name.');

END IF;
END;
/

-- TABLE SCHEMA


CREATE TABLE TBLM_SYSTEM_PARAMETER(
	ALIAS VARCHAR(50),
	VALUE VARCHAR(255),
  CONSTRAINT PK_MSYSTEM_PARAMETER PRIMARY KEY (ALIAS)
  ) ;

COMMENT ON TABLE TBLM_SYSTEM_PARAMETER IS 'Stores System level configuration paramater';
COMMENT ON COLUMN TBLM_SYSTEM_PARAMETER.ALIAS IS 'Stores unique identity';
COMMENT ON COLUMN TBLM_SYSTEM_PARAMETER.VALUE IS 'Stores value of the parameter';

CREATE TABLE TBLM_PASSWORD_POLICY(
    ID                  VARCHAR(36),
    PASSWORD_RANGE      VARCHAR(6),
    ALPHABET_RANGE      NUMERIC(2),
    DIGIT_RANGE         NUMERIC(2),
    SPECIAL_CHAR_RANGE  NUMERIC(2),
    PROHIBITED_CHARS    VARCHAR(50),
    PASSWORD_VALIDITY   NUMERIC(18),
    HISTORICAL_PASSWORDS NUMERIC(2) DEFAULT 1 NOT NULL,
    CHANGE_PWD_ON_FIRST_LOGIN VARCHAR(6),
    CONSTRAINT PK_MPASSWORD_POLICY PRIMARY KEY (ID)
);

COMMENT ON TABLE TBLM_PASSWORD_POLICY IS 'Stores password policy configuration';
COMMENT ON COLUMN TBLM_PASSWORD_POLICY.ID IS 'Stores UNIQUE IDENTITY';
COMMENT ON COLUMN TBLM_PASSWORD_POLICY.PASSWORD_RANGE IS 'Stores password character range e.g 8-10 character';
COMMENT ON COLUMN TBLM_PASSWORD_POLICY.ALPHABET_RANGE IS 'Stores alphabet range';
COMMENT ON COLUMN TBLM_PASSWORD_POLICY.DIGIT_RANGE IS 'Stores digit range';
COMMENT ON COLUMN TBLM_PASSWORD_POLICY.SPECIAL_CHAR_RANGE  IS 'Stores special character range';
COMMENT ON COLUMN TBLM_PASSWORD_POLICY.PROHIBITED_CHARS IS 'Stores prohibited characters';
COMMENT ON COLUMN TBLM_PASSWORD_POLICY.PASSWORD_VALIDITY IS 'Stores password validity period';
COMMENT ON COLUMN TBLM_PASSWORD_POLICY.HISTORICAL_PASSWORDS IS 'Stored historical passwords';
COMMENT ON COLUMN TBLM_PASSWORD_POLICY.CHANGE_PWD_ON_FIRST_LOGIN IS 'Stored staff should change password on first login';


INSERT INTO TBLM_PASSWORD_POLICY VALUES(1,'5-50',1,1,1,'$@',180,1,'True');



---------------------------------------------------
--   END DATA FOR TABLE TBLMSYSTEMPARAMETER
---------------------------------------------------


COMMIT;

CREATE TABLE TBLM_STAFF_PROFILE_PICTURE(
ID VARCHAR(36) NOT NULL,
PROFILE_PICTURE BLOB,
CONSTRAINT PK_STAFF_PROFILE_PICTURE PRIMARY KEY(ID)
);

COMMENT ON TABLE TBLM_STAFF_PROFILE_PICTURE IS 'Stores staff profile picture detail';
COMMENT ON COLUMN TBLM_STAFF_PROFILE_PICTURE.ID IS 'Stores unique identity';
COMMENT ON COLUMN TBLM_STAFF_PROFILE_PICTURE.PROFILE_PICTURE IS 'Stores profile picture';



CREATE TABLE TBLM_STAFF(
  ID                      VARCHAR(36),
  NAME                    VARCHAR(60)	NOT NULL,
  USER_NAME               VARCHAR(18)	NOT NULL,
  PASSWORD                VARCHAR(50)	NOT NULL,
  EMAIL_ADDRESS           VARCHAR(50) NOT NULL,
  PHONE                   VARCHAR(20),
  LAST_LOGIN_TIME         DATE,
  MOBILE                  VARCHAR(20),
  STATUS_CHANGE_DATE      DATE,
  STATUS                  VARCHAR(12) DEFAULT 'ACTIVE',
  SYSTEM_GENERATED        CHAR(1)  DEFAULT 'N' NOT NULL,
  LAST_LOGIN_DURATION     NUMERIC(10),
  PASSWORD_CHANGE_DATE     DATE,
  PASSWORD_VALIDITY_PERIOD  NUMERIC(5),
  RECENT_PASSWORDS         VARCHAR(1550),
  PROFILE_PICTURE_ID      VARCHAR(36),
  CREATED_DATE            TIMESTAMP,
  CREATED_BY     VARCHAR(36),
  MODIFIED_DATE           TIMESTAMP,
  MODIFIED_BY    VARCHAR(36),
  CONSTRAINT PK_STAFF PRIMARY KEY (ID),
  CONSTRAINT FK1_STAFF FOREIGN KEY (CREATED_BY) REFERENCES TBLM_STAFF (ID),
  CONSTRAINT FK2_STAFF FOREIGN KEY (MODIFIED_BY) REFERENCES TBLM_STAFF (ID)
) ;



COMMENT ON TABLE TBLM_STAFF IS 'Stores SM Staff details';
COMMENT ON COLUMN TBLM_STAFF.ID IS 'Stores unique identity';
COMMENT ON COLUMN TBLM_STAFF.NAME IS 'Stores staff name';
COMMENT ON COLUMN TBLM_STAFF.USER_NAME IS 'Stores staff unique username which is used to login to SM';
COMMENT ON COLUMN TBLM_STAFF.PASSWORD IS 'Stores staff password which is used while login to SM';
COMMENT ON COLUMN TBLM_STAFF.EMAIL_ADDRESS IS 'Store staff email address';
COMMENT ON COLUMN TBLM_STAFF.PHONE IS 'Stores staff phone number';
COMMENT ON COLUMN TBLM_STAFF.MOBILE IS 'Stores staff mobile number';
COMMENT ON COLUMN TBLM_STAFF.STATUS_CHANGE_DATE IS 'Stores the date on which staff staus change from active to inactive';
COMMENT ON COLUMN TBLM_STAFF.STATUS IS 'Stores staff status which can be ACTIVE/INACTIVE';
COMMENT ON COLUMN TBLM_STAFF.SYSTEM_GENERATED IS 'Stores whether this staff is generated by system or not ';
COMMENT ON COLUMN TBLM_STAFF.LAST_LOGIN_TIME IS 'Stores the time on which staff last login';
COMMENT ON COLUMN TBLM_STAFF.LAST_LOGIN_DURATION IS 'Stores the last login duration';
COMMENT ON COLUMN TBLM_STAFF.PASSWORD_CHANGE_DATE IS 'Stores the date on which staff password changes';
COMMENT ON COLUMN TBLM_STAFF.PASSWORD_VALIDITY_PERIOD IS 'Store validity of password controlled by system parameter';
COMMENT ON COLUMN TBLM_STAFF.PROFILE_PICTURE_ID IS 'Stores profile picture id for this staff';
COMMENT ON COLUMN TBLM_STAFF.RECENT_PASSWORDS IS 'Stores recent passwords which staff used to login';
COMMENT ON COLUMN TBLM_STAFF.CREATED_DATE IS 'Stores date on which this staff created';
COMMENT ON COLUMN TBLM_STAFF.CREATED_BY IS 'Stores which staff created this staff';
COMMENT ON COLUMN TBLM_STAFF.MODIFIED_DATE IS 'Stores on which date this staff modified';
COMMENT ON COLUMN TBLM_STAFF.MODIFIED_BY IS 'Stores which staff modified this staff';


INSERT INTO TBLM_STAFF (ID, NAME, USER_NAME, CREATED_DATE, PASSWORD, MODIFIED_DATE, EMAIL_ADDRESS, PHONE, LAST_LOGIN_TIME, MOBILE, STATUS_CHANGE_DATE, CREATED_BY, MODIFIED_BY, SYSTEM_GENERATED)
VALUES
  (1, 'Admin Admin', 'admin', CURRENT_TIMESTAMP , '][Vxe[8A',
      NULL, 'billingadmin@domain.com', '6603050',
      NULL, NULL,
      NULL,  '1', '1', 'N');
COMMIT;


CREATE TABLE TBLM_ROLE(
  ID                   VARCHAR(36),
  NAME                 VARCHAR(50)	NOT NULL,
  DESCRIPTION          VARCHAR(255),
  SYSTEM_GENERATED     CHAR(1) DEFAULT 'N' NOT NULL,
  STATUS               VARCHAR(12) DEFAULT 'ACTIVE',
  CREATED_DATE         TIMESTAMP,
  CREATED_BY  VARCHAR(36),
  MODIFIED_DATE        TIMESTAMP,
  MODIFIED_BY VARCHAR(36),
  CONSTRAINT PK_ROLE PRIMARY KEY (ID),
  CONSTRAINT FK1_ROLE FOREIGN KEY (CREATED_BY)  REFERENCES TBLM_STAFF (ID),
  CONSTRAINT FK2_ROLE FOREIGN KEY (MODIFIED_BY) REFERENCES TBLM_STAFF (ID)
) ;

 COMMENT ON TABLE TBLM_ROLE IS 'Stores Aceess Role Details';
 COMMENT ON COLUMN TBLM_ROLE.ID IS 'Stores unique identity of this role';
 COMMENT ON COLUMN TBLM_ROLE.NAME IS 'Stores unique role name';
 COMMENT ON COLUMN TBLM_ROLE.DESCRIPTION IS 'Stores description of this role';
 COMMENT ON COLUMN TBLM_ROLE.SYSTEM_GENERATED IS 'Stores whether this role is generated by system or not';
 COMMENT ON COLUMN TBLM_ROLE.STATUS IS  'Stores role status which can be ACTIVE/INACTIVE';
 COMMENT ON COLUMN TBLM_ROLE.CREATED_DATE IS 'Stores date on which this role created';
 COMMENT ON COLUMN TBLM_ROLE.CREATED_BY IS 'Stores which staff created this role';
 COMMENT ON COLUMN TBLM_ROLE.MODIFIED_DATE IS 'stores on which date this role modified';
 COMMENT ON COLUMN TBLM_ROLE.MODIFIED_BY IS 'Stores which staff modified this role';

INSERT INTO TBLM_ROLE (ID,NAME,DESCRIPTION,SYSTEM_GENERATED,CREATED_DATE,CREATED_BY,MODIFIED_DATE,MODIFIED_BY)
VALUES(1,'Admin','desc:Admin Role','Y',CURRENT_TIMESTAMP ,'1',CURRENT_TIMESTAMP ,'1');
INSERT INTO TBLM_ROLE (ID,NAME,DESCRIPTION,SYSTEM_GENERATED,CREATED_DATE,CREATED_BY,MODIFIED_DATE,MODIFIED_BY)
VALUES(2,'Support','desc:Support Role','Y',CURRENT_TIMESTAMP ,'1',CURRENT_TIMESTAMP ,'1');
INSERT INTO TBLM_ROLE (ID,NAME,DESCRIPTION,SYSTEM_GENERATED,CREATED_DATE,CREATED_BY,MODIFIED_DATE,MODIFIED_BY)
VALUES(3,'Operator','desc:Operator Role','Y',CURRENT_TIMESTAMP ,'1',CURRENT_TIMESTAMP ,'1');

 
CREATE TABLE TBLM_ROLE_MODULE_ACTIONS_REL(
  ID              VARCHAR(36) NOT NULL,
  MODULE_NAME     VARCHAR(50) NOT NULL,
  ACTIONS         VARCHAR(255),
  ROLE_ID         VARCHAR(36) NOT NULL,
  CONSTRAINT PK_MROLE_MODULE_ACTIONS_REL PRIMARY KEY (ID),
  CONSTRAINT FK_MROLE_MODULE_ACTIONS_REL FOREIGN KEY (ROLE_ID) REFERENCES TBLM_ROLE(ID)
);

COMMENT ON TABLE TBLM_ROLE_MODULE_ACTIONS_REL IS 'Stores relation between role and module specific access rights';
COMMENT ON COLUMN TBLM_ROLE_MODULE_ACTIONS_REL.MODULE_NAME IS 'Stores module name for which access rights is stored';
COMMENT ON COLUMN TBLM_ROLE_MODULE_ACTIONS_REL.ACTIONS IS 'Stores action available for this module name';
COMMENT ON COLUMN TBLM_ROLE_MODULE_ACTIONS_REL.ROLE_ID IS 'Stores foreign key relation to role';

INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('1','1','DATAPKG','CREATE,DELETE,EXPORT,IMPORT,UPDATE,UPDATE_BASIC_DETAIL,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('2','1','QUOTAPROFILE','CREATE,DELETE,UPDATE,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('3','1','QOSPROFILE','CREATE,DELETE,MANAGEORDER,UPDATE,UPDATE_BASIC_DETAIL,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('5','1','PCCRULE','CREATE,DELETE,UPDATE,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('6','1','NOTIFICATION','CREATE,DELETE,UPDATE,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('7','1','SUBSCRIBER','CREATE,DELETE,UPDATE,CREATE_SUBSCRIBER,VIEW_SUBSCRIBER,DELETE_SUBSCRIBER,UPDATE_SUBSCRIBER,PURGE_SUBSCRIBER,RESTORE_SUBSCRIBER,SUBSCRIBE_ADDON,UNSUBSCRIBE_ADDON,VIEW_DELETED_SUBSCRIBER,VIEW_SUBSCRIPTION,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('8','1','NOTIFICATIONTEMPLATE','CREATE,DELETE,UPDATE,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('9','1','IMSPKG','CREATE,DELETE,EXPORT,IMPORT,UPDATE,UPDATE_BASIC_DETAIL,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('10','1','IMSPKGSERVICE','CREATE,DELETE,UPDATE,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('11','1','GLOBALPCCRULE','CREATE,DELETE,EXPORT,IMPORT,UPDATE,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('12','1','EMERGENCYPKG','CREATE,DELETE,MANAGEORDER,UPDATE,IMPORT,EXPORT,UPDATE_BASIC_DETAIL,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('13','1','EMERGENCYQOSPROFILE','CREATE,DELETE,MANAGEORDER,UPDATE,UPDATE_BASIC_DETAIL,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('14','1','EMERGENCYPCCRULE','CREATE,DELETE,UPDATE,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('15','1','PROMOTIONALPKG','CREATE,DELETE,MANAGEORDER,UPDATE,IMPORT,EXPORT,UPDATE_BASIC_DETAIL,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('16','1','PROMOTIONALQOSPROFILE','CREATE,DELETE,MANAGEORDER,UPDATE,UPDATE_BASIC_DETAIL,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('17','1','PROMOTIONALQUOTAPROFILE','CREATE,DELETE,UPDATE,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('18','1','PROMOTIONALNOTIFICATION','CREATE,DELETE,UPDATE,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('19','1','PROMOTIONALPCCRULE','CREATE,DELETE,UPDATE,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES('20','1','RATINGGROUP','CREATE,DELETE,EXPORT,IMPORT,UPDATE,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('21','1','CHARGINGRULEBASENAME','CREATE,DELETE,EXPORT,IMPORT,UPDATE,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('22','1','SUBSCRIBERSESSION','REAUTH,DELETE,DISCONNECT,SEARCH,');

--ACCESS RIGHTS OF POLICY DESIGNER TO Support
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('23','2','SUBSCRIBER','VIEW_SUBSCRIBER,VIEW_DELETED_SUBSCRIBER,VIEW_SUBSCRIPTION,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('24','2','SUBSCRIBERSESSION','REAUTH,DELETE,DISCONNECT,SEARCH,');

--ACCESS RIGHTS OF POLICY DESIGNER TO Operator Role
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('25','3','DATAPKG','UPDATE,UPDATE_BASIC_DETAIL,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('26','3','QUOTAPROFILE','UPDATE,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('27','3','QOSPROFILE','UPDATE,UPDATE_BASIC_DETAIL,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('28','3','PCCRULE','UPDATE,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('29','3','NOTIFICATION','UPDATE,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('30','3','SUBSCRIBER','UPDATE,VIEW_SUBSCRIBER,UPDATE_SUBSCRIBER,VIEW_DELETED_SUBSCRIBER,VIEW_SUBSCRIPTION,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('31','3','NOTIFICATIONTEMPLATE','UPDATE,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('32','3','IMSPKG','UPDATE,UPDATE_BASIC_DETAIL,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('33','3','IMSPKGSERVICE','UPDATE,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('34','3','GLOBALPCCRULE','UPDATE,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('35','3','EMERGENCYPKG','UPDATE,UPDATE_BASIC_DETAIL,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('36','3','EMERGENCYQOSPROFILE','UPDATE,UPDATE_BASIC_DETAIL,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('37','3','EMERGENCYPCCRULE','UPDATE,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('38','3','PROMOTIONALPKG','UPDATE,UPDATE_BASIC_DETAIL,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('39','3','PROMOTIONALQOSPROFILE','UPDATE,UPDATE_BASIC_DETAIL,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('40','3','PROMOTIONALQUOTAPROFILE','UPDATE,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('41','3','PROMOTIONALNOTIFICATION','UPDATE,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('42','3','PROMOTIONALPCCRULE','UPDATE,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('43','3','RATINGGROUP','UPDATE,');

INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('44','3','CHARGINGRULEBASENAME','UPDATE,');
INSERT INTO TBLM_ROLE_MODULE_ACTIONS_REL (ID,ROLE_ID,MODULE_NAME,ACTIONS) VALUES ('45','3','SUBSCRIBERSESSION','REAUTH,DELETE,DISCONNECT,SEARCH,');

COMMIT;

CREATE TABLE TBLM_GROUP(
    ID                   VARCHAR(36) NOT NULL,
    NAME                 VARCHAR(50) NOT NULL,
    DESCRIPTION          VARCHAR(255),
    STATUS               VARCHAR(12) DEFAULT 'ACTIVE',
    CREATED_DATE         TIMESTAMP,
    CREATED_BY  VARCHAR(36),
    MODIFIED_DATE        TIMESTAMP,
    MODIFIED_BY VARCHAR(36),
    CONSTRAINT PK_GROUP PRIMARY KEY (ID),
    CONSTRAINT FK1_GROUP FOREIGN KEY (CREATED_BY) REFERENCES TBLM_STAFF (ID),
    CONSTRAINT FK2_GROUP FOREIGN KEY (MODIFIED_BY) REFERENCES TBLM_STAFF (ID)
);

CREATE TABLE TBLM_STAFF_GROUP_ROLE_REL(
  ID          VARCHAR(36),
  STAFF_ID    VARCHAR(36),
  GROUP_ID    VARCHAR(36),
  ROLE_ID     VARCHAR(36),
  CONSTRAINT PK_STAFF_GROUP_ROLE_REL PRIMARY KEY (ID),
  CONSTRAINT FK1_STAFF_GROUP_ROLE_REL FOREIGN KEY (STAFF_ID)  REFERENCES TBLM_STAFF  (ID),
  CONSTRAINT FK2_STAFF_GROUP_ROLE_REL FOREIGN KEY (GROUP_ID)  REFERENCES TBLM_GROUP  (ID),
  CONSTRAINT FK3_STAFF_GROUP_ROLE_REL FOREIGN KEY (ROLE_ID) REFERENCES TBLM_ROLE (ID)
);

COMMENT ON TABLE TBLM_STAFF_GROUP_ROLE_REL IS 'Stores relation between staff, role and access group ';
COMMENT ON COLUMN TBLM_STAFF_GROUP_ROLE_REL.STAFF_ID IS 'Stores staff id';
COMMENT ON COLUMN TBLM_STAFF_GROUP_ROLE_REL.GROUP_ID IS 'Stores group id in which staff-id staff belongs';
COMMENT ON COLUMN TBLM_STAFF_GROUP_ROLE_REL.ROLE_ID IS 'Stores role id of role which is assignes to staff-id staff';


INSERT INTO TBLM_GROUP(ID,NAME,DESCRIPTION,CREATED_DATE,CREATED_BY,MODIFIED_DATE,MODIFIED_BY) values('1','DefaultGroup','created by super admin',CURRENT_TIMESTAMP,1,NULL,NULL);


INSERT INTO TBLM_STAFF_GROUP_ROLE_REL (ID,STAFF_ID,GROUP_ID,ROLE_ID) VALUES(1,1,'1',1);

COMMIT;
-- MAIN AUDIT TABLE WHICH WILL MAINTAIN THE AUDIT INFORMATION FOR ACTIVITY PERFORM BY THE STAFF IN NVSMX

CREATE TABLE TBLM_AUDIT(
    ID                  VARCHAR(36),
	ACTION_ID           VARCHAR(36) NOT NULL,
	AUDIT_DATE          TIMESTAMP NOT NULL,
	RESOURCE_ID         VARCHAR(36),
	ACTUAL_RESOURCE_ID  VARCHAR(36),
	RESOURCE_CLASS      VARCHAR(100),
	ACTUAL_RESOURCE_CLASS VARCHAR(100),
	AUDITABLE_RESOURCE_NAME VARCHAR(100),
	STAFF_ID           VARCHAR(36) NOT NULL,
	CLIENT_IP          VARCHAR(64),
	DIFFERENCE         BLOB,
	HIERARCHY          VARCHAR(500), -- HEIRARCHY STARTING FROM ENTITY TO PACKAGE
	MESSAGE            VARCHAR(500), -- AUDITING MESSAGE FOR THE ENTITY
	CONSTRAINT PK_AUDIT PRIMARY KEY (ID),
	CONSTRAINT FK_AUDIT FOREIGN KEY (STAFF_ID) REFERENCES TBLM_STAFF (ID)
);

COMMENT ON TABLE TBLM_AUDIT IS 'Store audit details';
COMMENT ON COLUMN TBLM_AUDIT.ID IS 'Store unique id';
COMMENT ON COLUMN TBLM_AUDIT.ACTION_ID IS 'Store One of the id from Audit Action which are CREATE(0),VIEW(1),UPDATE(2) and  DELETE(3)';
COMMENT ON COLUMN TBLM_AUDIT.AUDIT_DATE IS 'Store Date on which this audit performed';
COMMENT ON COLUMN TBLM_AUDIT.RESOURCE_ID IS 'Store id of the parent resource of the actual resource e.g pkg id in case quota profile changes';
COMMENT ON COLUMN TBLM_AUDIT.ACTUAL_RESOURCE_ID IS 'Store Actual resource on which any action has performed';
COMMENT ON COLUMN TBLM_AUDIT.RESOURCE_CLASS IS 'Store fully qualified class name of the resource';
COMMENT ON COLUMN TBLM_AUDIT.ACTUAL_RESOURCE_CLASS IS 'Store fully qualified class name of the actual resource';
COMMENT ON COLUMN TBLM_AUDIT.AUDITABLE_RESOURCE_NAME IS 'Store Name of the parent resource name i.e resource name ';
COMMENT ON COLUMN TBLM_AUDIT.STAFF_ID IS 'Store id of the staff who has performed some action';
COMMENT ON COLUMN TBLM_AUDIT.CLIENT_IP IS 'Store ip of the system from modification has been made';
COMMENT ON COLUMN TBLM_AUDIT.DIFFERENCE IS 'Store difference in json form with old and new value';
COMMENT ON COLUMN TBLM_AUDIT.HIERARCHY IS 'Store hierarchy from auditable resource to actual resource';
COMMENT ON COLUMN TBLM_AUDIT.MESSAGE IS 'Store Audit Message ';

-- PACKAGE MODULE
CREATE TABLE TBLM_PACKAGE
  (
    ID                      VARCHAR(36),
    NAME                    VARCHAR(100) NOT NULL,
    STATUS                  VARCHAR(12) DEFAULT 'ACTIVE',
    DESCRIPTION             VARCHAR(2000),
    TYPE                    VARCHAR(32),
    PACKAGE_MODE            VARCHAR(12) DEFAULT 'DESIGN',
    VALIDITY_PERIOD         NUMERIC(8),
    VALIDITY_PERIOD_UNIT    VARCHAR(20),
    PRICE                   NUMERIC(12,2),
    USAGE_RESET_INTERVAL    NUMERIC(8),
    EXCLUSIVE_ADDON         NUMERIC(1),
    MULTIPLE_SUBSCRIPTION   NUMERIC(1),
    REPLACEABLE_BY_ADDON    NUMERIC(1),
    AVAILABILITY_START_DATE TIMESTAMP,
    AVAILABILITY_END_DATE   TIMESTAMP,
    QUOTA_PROFILE_TYPE      VARCHAR(50) DEFAULT 'RnC_BASED',
    GRACE_PERIOD            NUMERIC(10),
    GRACE_PERIOD_UNIT       VARCHAR(10),
    GROUPS               VARCHAR(400),
    ORDER_NO             NUMERIC(6) DEFAULT 0,
    PARAM_1                VARCHAR(100),
    PARAM_2                VARCHAR(100),
	CURRENCY               VARCHAR(5) NOT NULL,
    CREATED_DATE         TIMESTAMP,
    CREATED_BY  VARCHAR(36),
    MODIFIED_DATE        TIMESTAMP,
    MODIFIED_BY VARCHAR(36),
	PREFER_PROMOTIONAL_QOS NUMERIC(1) DEFAULT 0,
	TARIFF_SWITCH_SUPPORT  NUMERIC(1) DEFAULT 1,
    CONSTRAINT PK_PACKAGE PRIMARY KEY (ID),
    CONSTRAINT FK1_PACKAGE FOREIGN KEY (CREATED_BY) REFERENCES TBLM_STAFF (ID),
    CONSTRAINT FK2_PACKAGE FOREIGN KEY (MODIFIED_BY) REFERENCES TBLM_STAFF (ID)
  );

-- QUOTA PROFILE
CREATE TABLE TBLM_QUOTA_PROFILE
  (
    ID                  VARCHAR(36),
    NAME                VARCHAR(100) NOT NULL,
    STATUS              VARCHAR(12) DEFAULT 'ACTIVE',
    PACKAGE_ID          VARCHAR(36) NOT NULL,
    DESCRIPTION         VARCHAR(2000),
    USAGE_AVAILABILITY  NUMERIC DEFAULT '1',
    BALANCE_LEVEL        VARCHAR(5) DEFAULT 'HSQ',
    CREATED_DATE         TIMESTAMP,
    CREATED_BY  VARCHAR(36),
    MODIFIED_DATE        TIMESTAMP,
    MODIFIED_BY VARCHAR(36),
    CONSTRAINT PK_QUOTA_PROFILE PRIMARY KEY(ID),
    CONSTRAINT FK1_QUOTA_PROFILE FOREIGN KEY (PACKAGE_ID) REFERENCES TBLM_PACKAGE(ID),
    CONSTRAINT FK2_QUOTA_PROFILE FOREIGN KEY (CREATED_BY) REFERENCES TBLM_STAFF (ID),
    CONSTRAINT FK3_QUOTA_PROFILE FOREIGN KEY (MODIFIED_BY) REFERENCES TBLM_STAFF (ID)
  );

 -- QUOTA PROFILE
CREATE TABLE TBLM_SY_QUOTA_PROFILE
  (
    ID                  VARCHAR(36),
    NAME                VARCHAR(100) NOT NULL,
    STATUS              VARCHAR(12) DEFAULT 'ACTIVE',
    PACKAGE_ID          VARCHAR(36) NOT NULL,
    DESCRIPTION         VARCHAR(2000),
    CREATED_DATE         TIMESTAMP,
    CREATED_BY  VARCHAR(36),
    MODIFIED_DATE        TIMESTAMP,
    MODIFIED_BY VARCHAR(36),
    CONSTRAINT PK_SY_QUOTA_PROFILE PRIMARY KEY(ID),
    CONSTRAINT FK1_SY_QUOTA_PROFILE FOREIGN KEY (PACKAGE_ID) REFERENCES TBLM_PACKAGE(ID),
    CONSTRAINT FK2_SY_QUOTA_PROFILE FOREIGN KEY (CREATED_BY) REFERENCES TBLM_STAFF (ID),
    CONSTRAINT FK3_SY_QUOTA_PROFILE FOREIGN KEY (MODIFIED_BY) REFERENCES TBLM_STAFF (ID)
  );


-- FOR SERVICE TYPE
CREATE TABLE TBLM_DATA_SERVICE_TYPE
  (
    ID                  VARCHAR(36),
    NAME                VARCHAR(50) NOT NULL,
    STATUS               VARCHAR(12) DEFAULT 'ACTIVE',
    DESCRIPTION         VARCHAR(2000),
    SERVICE_IDENTIFIER  NUMERIC(10),
    GROUPS              VARCHAR(400),
    CREATED_DATE         TIMESTAMP,
    CREATED_BY  VARCHAR(36),
    MODIFIED_DATE        TIMESTAMP,
    MODIFIED_BY VARCHAR(36),
    CONSTRAINT PK_DATA_SERVICE_TYPE PRIMARY KEY (ID),
    CONSTRAINT FK2_DATA_SERVICE_TYPE FOREIGN KEY (CREATED_BY) REFERENCES TBLM_STAFF (ID),
    CONSTRAINT FK3_DATA_SERVICE_TYPE FOREIGN KEY (MODIFIED_BY) REFERENCES TBLM_STAFF (ID)
  );

-- QUOTA PROFILE DETAIL
CREATE TABLE TBLM_QUOTA_PROFILE_DETAIL
  (
    ID                      VARCHAR(36) NOT NULL,
    FUP_LEVEL               NUMERIC(2), -- FOR MENTIONING (0)HSQ,(1)FUP1,(2)FUP2,...(N)FUPN
    QUOTA_PROFILE_ID        VARCHAR(36) NOT NULL,
    SERVICE_TYPE_ID         VARCHAR(36),
    AGGREGATION_KEY         VARCHAR(20),
    TOTAL                   NUMERIC(18),
    TOTAL_UNIT              VARCHAR(10),
    UPLOAD                  NUMERIC(18),
    UPLOAD_UNIT             VARCHAR(10),
    DOWNLOAD                NUMERIC(18),
    DOWNLOAD_UNIT           VARCHAR(10),
    TIME                    NUMERIC(18),
    TIME_UNIT               VARCHAR(20),
    CONSTRAINT PK_QUOTA_PROFILE_DETAIL PRIMARY KEY(ID),
    CONSTRAINT FK1_QUOTA_PROFILE_DETAIL FOREIGN KEY (QUOTA_PROFILE_ID) REFERENCES TBLM_QUOTA_PROFILE(ID),
    CONSTRAINT FK2_QUOTA_PROFILE_DETAIL FOREIGN KEY (SERVICE_TYPE_ID) REFERENCES TBLM_DATA_SERVICE_TYPE(ID)
  );
-- SY_QUOTA_PROFILE

CREATE TABLE TBLM_SY_QUOTA_PROFILE_DETAIL
  (
    ID                   VARCHAR(36) NOT NULL,
    SY_QUOTA_PROFILE_ID  VARCHAR(36) NOT NULL,
    SERVICE_TYPE_ID      VARCHAR(36),
    COUNTER_NAME         VARCHAR(100),
    HSQ_VALUE            VARCHAR(100),
    FUP1_VALUE           VARCHAR(100),
    FUP2_VALUE           VARCHAR(100),
    COUNTER_PRESENT      NUMERIC(1),
    CONSTRAINT PK_SY_QUOTA_PROFILE_DETAIL PRIMARY KEY(ID),
    CONSTRAINT FK1_SY_QUOTA_PROFILE_DETAIL FOREIGN KEY (SY_QUOTA_PROFILE_ID) REFERENCES TBLM_SY_QUOTA_PROFILE(ID),
    CONSTRAINT FK2_SY_QUOTA_PROFILE_DETAIL FOREIGN KEY (SERVICE_TYPE_ID) REFERENCES TBLM_DATA_SERVICE_TYPE(ID)
  );


-- FOR DEFAULT SERVICE DATA FLOW RELATION WITH SERVICE TYPE
CREATE TABLE TBLM_DEF_SERVICE_DATA_FLOW
  (
    ID               VARCHAR(36) NOT NULL,
    FLOW_ACCESS      VARCHAR(100),
    SOURCE_IP        VARCHAR(100),
    SOURCE_PORT      VARCHAR(100),
    DESTINATION_IP   VARCHAR(100),
    DESTINATION_PORT VARCHAR(100),
    SERVICE_TYPE_ID  VARCHAR(36),
    PROTOCOL         VARCHAR(50),
    CONSTRAINT PK_DEF_SERVICE_DATA_FLOW PRIMARY KEY (ID),
    CONSTRAINT FK1_DEF_SERVICE_DATA_FLOW FOREIGN KEY (SERVICE_TYPE_ID) REFERENCES TBLM_DATA_SERVICE_TYPE (ID)
  );


-- FOR RATING GROUP
CREATE TABLE TBLM_RATING_GROUP
  (
    ID                  VARCHAR(36),
    NAME                VARCHAR(100) NOT NULL,
    STATUS               VARCHAR(12) DEFAULT 'ACTIVE',
    DESCRIPTION         VARCHAR(2000),
    IDENTIFIER          NUMERIC(18) NOT NULL,
    GROUPS              VARCHAR(400),
    CREATED_DATE         TIMESTAMP,
    CREATED_BY  VARCHAR(36),
    MODIFIED_DATE        TIMESTAMP,
    MODIFIED_BY VARCHAR(36),
    CONSTRAINT PK_RATING_GROUP PRIMARY KEY (ID),
    CONSTRAINT FK1_RATING_GROUP FOREIGN KEY (CREATED_BY) REFERENCES TBLM_STAFF (ID),
    CONSTRAINT FK2_RATING_GROUP FOREIGN KEY (MODIFIED_BY) REFERENCES TBLM_STAFF (ID)
  );

-- FOR SERVICE TYPE RATING GROUP RELATION
CREATE TABLE TBLM_SERVICE_RATING_GRP_REL
  (
    SERVICE_TYPE_ID VARCHAR(36),
    RATING_GROUP_ID VARCHAR(36),
    CONSTRAINT FK1_SERVICE_RATING_GRP_REL FOREIGN KEY (SERVICE_TYPE_ID) REFERENCES TBLM_DATA_SERVICE_TYPE (ID),
    CONSTRAINT FK2_SERVICE_RATING_GRP_REL FOREIGN KEY (RATING_GROUP_ID) REFERENCES TBLM_RATING_GROUP(ID)
  );

-- FOR SESSION USAGE SUMMARY(USAGE METERING)
CREATE TABLE TBLM_USAGE
  (
    ID                     VARCHAR(36),
    SUBSCRIBER_ID          VARCHAR(255),
    PACKAGE_ID             VARCHAR(36),
    SUBSCRIPTION_ID        VARCHAR(36), -- (CAN BE OPTIONAL)
    QUOTA_PROFILE_ID       VARCHAR(36),
    SERVICE_ID             VARCHAR(36), -- (ALL/SPECIFIC SERVICE -ID)
    DAILY_TOTAL            NUMERIC,
    DAILY_UPLOAD           NUMERIC,
    DAILY_DOWNLOAD         NUMERIC,
    DAILY_TIME             NUMERIC,
    WEEKLY_TOTAL           NUMERIC,
    WEEKLY_UPLOAD          NUMERIC,
    WEEKLY_DOWNLOAD        NUMERIC,
    WEEKLY_TIME            NUMERIC,
    BILLING_CYCLE_TOTAL    NUMERIC,
    BILLING_CYCLE_UPLOAD   NUMERIC,
    BILLING_CYCLE_DOWNLOAD NUMERIC,
    BILLING_CYCLE_TIME     NUMERIC,
    CUSTOM_TOTAL           NUMERIC,
    CUSTOM_UPLOAD          NUMERIC,
    CUSTOM_DOWNLOAD        NUMERIC,
    CUSTOM_TIME            NUMERIC,
    DAILY_RESET_TIME       TIMESTAMP,
    WEEKLY_RESET_TIME      TIMESTAMP,
    CUSTOM_RESET_TIME      TIMESTAMP,
    BILLING_CYCLE_RESET_TIME TIMESTAMP,
    LAST_UPDATE_TIME       TIMESTAMP,
    CONSTRAINT PK_USAGE PRIMARY KEY(ID)
  );

  CREATE TABLE TBLM_USAGE_HISTORY (
  	CREATE_DATE   				TIMESTAMP,
    ID 							VARCHAR(36),
	SUBSCRIBER_ID				VARCHAR(255),
	PACKAGE_ID 					VARCHAR(36),
	SUBSCRIPTION_ID 			VARCHAR(36),
	QUOTA_PROFILE_ID 			VARCHAR(36),
	SERVICE_ID 					VARCHAR(36),
	DAILY_TOTAL 				NUMERIC,
	DAILY_UPLOAD 				NUMERIC,
	DAILY_DOWNLOAD 				NUMERIC,
	DAILY_TIME 					NUMERIC,
	WEEKLY_TOTAL 				NUMERIC,
	WEEKLY_UPLOAD 				NUMERIC,
	WEEKLY_DOWNLOAD 			NUMERIC,
	WEEKLY_TIME 				NUMERIC,
	BILLING_CYCLE_TOTAL 		NUMERIC,
	BILLING_CYCLE_UPLOAD 		NUMERIC,
	BILLING_CYCLE_DOWNLOAD 		NUMERIC,
	BILLING_CYCLE_TIME 			NUMERIC,
	CUSTOM_TOTAL 				NUMERIC,
	CUSTOM_UPLOAD 				NUMERIC,
	CUSTOM_DOWNLOAD 			NUMERIC,
	CUSTOM_TIME 				NUMERIC,
	DAILY_RESET_TIME 			TIMESTAMP,
	WEEKLY_RESET_TIME 			TIMESTAMP,
	CUSTOM_RESET_TIME 			TIMESTAMP,
	BILLING_CYCLE_RESET_TIME 	TIMESTAMP,
	LAST_UPDATE_TIME 			TIMESTAMP
   );

--RATING AND CHARGING BASED QUOTA PROFILE DETAIL

CREATE TABLE TBLM_RnC_QUOTA_PROFILE(
  ID                    VARCHAR(36),
  NAME                  VARCHAR(100) NOT NULL,
  STATUS                VARCHAR(12) DEFAULT 'ACTIVE',
  PACKAGE_ID            VARCHAR(36) NOT NULL,
  DESCRIPTION           VARCHAR(2000),
  CREATED_DATE          TIMESTAMP,
  CREATED_BY   VARCHAR(36),
  MODIFIED_DATE         TIMESTAMP,
  MODIFIED_BY  VARCHAR(36),
 CONSTRAINT PK_RnC_QUOTA_PROFILE PRIMARY KEY(ID),
 CONSTRAINT FK1_RnC_QUOTA_PROFILE FOREIGN KEY (PACKAGE_ID) REFERENCES TBLM_PACKAGE(ID),
 CONSTRAINT FK2_RnC_QUOTA_PROFILE FOREIGN KEY (CREATED_BY) REFERENCES TBLM_STAFF (ID),
 CONSTRAINT FK3_RnC_QUOTA_PROFILE FOREIGN KEY (MODIFIED_BY) REFERENCES TBLM_STAFF (ID)
);

COMMENT ON TABLE TBLM_RnC_QUOTA_PROFILE IS 'Store basic detail information for the Rating And Charging Based Quota Profile';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE.ID IS 'Store unique identity';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE.NAME IS 'Store name identity';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE.STATUS IS 'Store status i.e. ACTIVE/DELETED';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE.PACKAGE_ID IS 'Store Package ID i.e. Parent Package ID from TBLM_PACKAGE';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE.DESCRIPTION IS 'Store description';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE.CREATED_DATE IS 'Store Created Date';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE.CREATED_BY IS 'Store id of staff who created it';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE.MODIFIED_DATE IS 'Store Modified Date';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE.MODIFIED_BY IS 'Store id of staff who modified it';

--DETAIL INFORMATION OF RATING AND CHARGING QUOTA PROFILE

CREATE TABLE TBLM_RnC_QUOTA_PROFILE_DETAIL(
  ID                      VARCHAR(36),
  FUP_LEVEL               NUMERIC(2),
  QUOTA_PROFILE_ID        VARCHAR(36) NOT NULL,
  TOTAL_VOLUME            NUMERIC(18),
  DL_VOLUME               NUMERIC(18),
  UL_VOLUME               NUMERIC(18),
  VOLUME_UNIT             VARCHAR(10),
  TIME_QUOTA              NUMERIC(18),
  TIME_QUOTA_UNIT         VARCHAR(20),
  PULSE_VOLUME            NUMERIC(18),
  PULSE_VOLUME_UNIT       VARCHAR(10),
  PULSE_TIME              NUMERIC(18),
  PULSE_TIME_UNIT         VARCHAR(20),
  RATE                    NUMERIC(12,2),
  RATE_UNIT               VARCHAR(10),
  DAILY_TOTAL_LIMIT       NUMERIC(18),
  DAILY_DL_LIMIT          NUMERIC(18),
  DAILY_UL_LIMIT          NUMERIC(18),
  DAILY_UNIT              VARCHAR(10),
  DAILY_TIME              NUMERIC(18),
  DAILY_TIME_UNIT         VARCHAR(20),
  WEEKLY_TOTAL_LIMIT      NUMERIC(18),
  WEEKLY_DL_LIMIT         NUMERIC(18),
  WEEKLY_UL_LIMIT         NUMERIC(18),
  WEEKLY_UNIT             VARCHAR(10),
  WEEKLY_TIME             NUMERIC(18),
  WEEKLY_TIME_UNIT        VARCHAR(20),
  SERVICE_TYPE_ID         VARCHAR(36),
  RATING_GROUP_ID         VARCHAR(36),
  CONSTRAINT PK_RnC_QUOTA_PROFILE_DETAIL PRIMARY KEY(ID),
  CONSTRAINT FK1_RnC_QUOTA_PROFILE_DETAIL FOREIGN KEY (QUOTA_PROFILE_ID) REFERENCES TBLM_RnC_QUOTA_PROFILE(ID),
  CONSTRAINT FK2_RnC_QUOTA_PROFILE_DETAIL FOREIGN KEY (SERVICE_TYPE_ID) REFERENCES TBLM_DATA_SERVICE_TYPE(ID),
  CONSTRAINT FK3_RnC_QUOTA_PROFILE_DETAIL FOREIGN KEY (RATING_GROUP_ID) REFERENCES TBLM_RATING_GROUP(ID)
);

COMMENT ON TABLE TBLM_RnC_QUOTA_PROFILE_DETAIL IS 'Store Service and Rating wise configuration information for the Rating And Charging Based Quota Profile';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE_DETAIL.ID IS 'Store unique identity';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE_DETAIL.FUP_LEVEL IS 'Store FUP Level i.e. (0)HSQ,(1)FUP1,(2)FUP2,(N)FUPN';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE_DETAIL.QUOTA_PROFILE_ID IS 'Store Parent Quota Profile ID from TBLM_QUOTA_PROFILE';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE_DETAIL.TOTAL_VOLUME IS 'Store total volume';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE_DETAIL.DL_VOLUME IS 'Store download volume';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE_DETAIL.UL_VOLUME IS 'Store upload volume';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE_DETAIL.VOLUME_UNIT IS 'Store volume unit';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE_DETAIL.TIME_QUOTA IS 'Store time base quota';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE_DETAIL.TIME_QUOTA_UNIT IS 'Store time base quota unit';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE_DETAIL.PULSE_VOLUME IS 'Store volume base pulse';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE_DETAIL.PULSE_VOLUME_UNIT IS 'Store volume base pulse unit';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE_DETAIL.PULSE_TIME IS 'Store time base pulse';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE_DETAIL.PULSE_TIME_UNIT IS 'Store time base pulse unit';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE_DETAIL.RATE IS 'Store the rate value';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE_DETAIL.RATE_UNIT IS 'Store rate unit';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE_DETAIL.DAILY_TOTAL_LIMIT IS 'Store volume base daily total usage limit';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE_DETAIL.DAILY_DL_LIMIT IS 'Store volume base daily download usage limit';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE_DETAIL.DAILY_UL_LIMIT IS 'Store volume base daily upload usage limit';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE_DETAIL.DAILY_UNIT IS 'Store volume base daily usage limit unit';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE_DETAIL.DAILY_TIME IS 'Store time base daily usage limit';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE_DETAIL.DAILY_TIME_UNIT IS 'Store time base daily usage limit unit';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE_DETAIL.WEEKLY_TOTAL_LIMIT IS 'Store volume base weekly total usage limit';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE_DETAIL.WEEKLY_DL_LIMIT IS 'Store volume base weekly download usage limit';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE_DETAIL.WEEKLY_UL_LIMIT IS 'Store volume base weekly upload usage limit';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE_DETAIL.WEEKLY_UNIT IS 'Store volume base weekly usage limit unit';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE_DETAIL.WEEKLY_TIME IS 'Store time based weekly usage limit';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE_DETAIL.WEEKLY_TIME_UNIT IS 'Store time based weekly usage limit unit';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE_DETAIL.SERVICE_TYPE_ID IS 'Store Service Type ID from TBLM_DATA_SERVICE_TYPE table';
COMMENT ON COLUMN TBLM_RnC_QUOTA_PROFILE_DETAIL.RATING_GROUP_ID IS 'Store Rating Group ID from TBLM_RATING_GROUP table';

-- FOR QOS PROFILE
CREATE TABLE TBLM_QOS_PROFILE
  (
    ID                  VARCHAR(36),
    NAME                VARCHAR(100) NOT NULL,
    STATUS              VARCHAR(12) DEFAULT 'ACTIVE',
    DESCRIPTION         VARCHAR(2000),
    QUOTA_PROFILE_ID    VARCHAR(36), -- RELATION WITH QUOTA PROFILE
    SY_QUOTA_PROFILE_ID VARCHAR(36), -- RELATION WITH SY QUOTA PROFILE
    RNC_PROFILE_ID VARCHAR(36),      --RELATION WITH RnC QUOTA_PROFILE
    PACKAGE_ID          VARCHAR(36) ,
    ACCESS_NETWORK      VARCHAR(150),
    ADVANCED_CONDITION  VARCHAR(1000),
    DURATION            NUMERIC(18),
    ORDER_NO            NUMERIC(3),
    CREATED_DATE         TIMESTAMP,
    CREATED_BY  VARCHAR(36),
    MODIFIED_DATE        TIMESTAMP,
    MODIFIED_BY VARCHAR(36),
    CONSTRAINT PK_QOS_PROFILE PRIMARY KEY(ID),
    CONSTRAINT FK1_QOS_PROFILE FOREIGN KEY (QUOTA_PROFILE_ID) REFERENCES TBLM_QUOTA_PROFILE (ID),
    CONSTRAINT FK2_QOS_PROFILE FOREIGN KEY (PACKAGE_ID) REFERENCES TBLM_PACKAGE (ID),
    CONSTRAINT FK3_QOS_PROFILE FOREIGN KEY (CREATED_BY) REFERENCES TBLM_STAFF (ID),
    CONSTRAINT FK4_QOS_PROFILE FOREIGN KEY (MODIFIED_BY) REFERENCES TBLM_STAFF (ID),
    CONSTRAINT FK5_QOS_PROFILE FOREIGN KEY (SY_QUOTA_PROFILE_ID) REFERENCES TBLM_SY_QUOTA_PROFILE (ID),
    CONSTRAINT FK6_QOS_PROFILE FOREIGN KEY (RNC_PROFILE_ID) REFERENCES TBLM_RnC_QUOTA_PROFILE (ID)
   );

-- FOR QOS PROFILE DETAIL
CREATE TABLE TBLM_QOS_PROFILE_DETAIL
  (
    ID                  VARCHAR(36),
    QCI                 NUMERIC(2),
    FUP_LEVEL           NUMERIC(2), -- FOR MENTIONING (0)HSQ,(1)FUP1,(2)FUP2,...(N)FUPN
    ACTION              NUMERIC(1) DEFAULT 0,
    REJECT_CAUSE        VARCHAR(256),
    AAMBRDL             NUMERIC(10),
    AAMBRDL_UNIT        VARCHAR(5),
    AAMBRUL             NUMERIC(10),
    AAMBRUL_UNIT        VARCHAR(5),
    MBRDL               NUMERIC(10),
    MBRDL_UNIT          VARCHAR(5),
    MBRUL               NUMERIC(10),
    MBRUL_UNIT          VARCHAR(5),
    PRE_CAPABILITY      NUMERIC(1),
    PRE_VULNERABILITY   NUMERIC(1),
    PRIORITY_LEVEL      NUMERIC(2),
    REDIRECT_URL        VARCHAR(4000),
    USAGE_MONITORING    NUMERIC(1),
    SLICE_TOTAL         NUMERIC(18),
    SLICE_TOTAL_UNIT    VARCHAR(10),
    SLICE_UPLOAD        NUMERIC(18),
    SLICE_UPLOAD_UNIT   VARCHAR(10),
    SLICE_DOWNLOAD      NUMERIC(18),
    SLICE_DOWNLOAD_UNIT VARCHAR(10),
    SLICE_TIME          NUMERIC(18),
    SLICE_TIME_UNIT     VARCHAR(10),
    QOS_PROFILE_ID      VARCHAR(36), --RELATION WITH QOS PROFILE
    CONSTRAINT PK_QOS_PROFILE_DETAIL PRIMARY KEY(ID),
    CONSTRAINT FK_QOS_PROFILE_DETAIL FOREIGN KEY (QOS_PROFILE_ID) REFERENCES TBLM_QOS_PROFILE(ID)
  );

-- FOR TIME BASE CONDITION FOR QOS PROFILE
CREATE TABLE TBLM_TIME_PERIOD
  (
    ID                  VARCHAR(36),
    MOY                 VARCHAR(100),
    DOM                 VARCHAR(100),
    DOW                 VARCHAR(100),
    TIME_PERIOD         VARCHAR(100),
    QOS_PROFILE_ID      VARCHAR(36), -- RELATION WITH QOS PROFILE
    CONSTRAINT PK_TIME_PERIOD PRIMARY KEY (ID),
    CONSTRAINT FK1_TIME_PERIOD FOREIGN KEY (QOS_PROFILE_ID) REFERENCES TBLM_QOS_PROFILE(ID)
  );

-- FOR PCCRULE
CREATE TABLE TBLM_PCC_RULE
  (
    ID                      VARCHAR(36),
    NAME                    VARCHAR(100) NOT NULL,
    STATUS                  VARCHAR(12) DEFAULT 'ACTIVE',
    PRECEDENCE              NUMERIC(3,0),
    CHARGING_MODE           NUMERIC(2),
    CHARGING_KEY            VARCHAR(100),
    MONITORING_KEY          VARCHAR(100) NOT NULL,
    SPONSOR_IDENTITY        VARCHAR(100),
    APP_SERVICE_PROVIDER_ID VARCHAR(100),
    FLOW_STATUS             NUMERIC(1),
    SERVICE_TYPE_ID         VARCHAR(36),
    SERVICE_IDENTIFIER      VARCHAR(12),
    USAGE_MONITORING        NUMERIC(1),
    QCI                     NUMERIC(2),
    ARP                     NUMERIC(2),
    PRE_CAPABILITY          NUMERIC(1),
    PRE_VULNERABILITY       NUMERIC(1),
    GBRDL                   NUMERIC(10,0),
    GBRDL_UNIT              VARCHAR(5),
    GBRUL                   NUMERIC(10,0),
    GBRUL_UNIT              VARCHAR(5),
    MBRDL                   NUMERIC(10,0),
    MBRDL_UNIT              VARCHAR(5),
    MBRUL                   NUMERIC(10,0),
    MBRUL_UNIT              VARCHAR(5),
    TYPE                    VARCHAR(25),
    SLICE_TOTAL             NUMERIC(18),
    SLICE_TOTAL_UNIT        VARCHAR(10),
    SLICE_UPLOAD            NUMERIC(18),
    SLICE_UPLOAD_UNIT       VARCHAR(10),
    SLICE_DOWNLOAD          NUMERIC(18),
    SLICE_DOWNLOAD_UNIT     VARCHAR(10),
    SLICE_TIME              NUMERIC(18),
    SLICE_TIME_UNIT         VARCHAR(10),
    QOS_PROFILE_DETAIL_ID   VARCHAR(36),
    SCOPE                   VARCHAR(8),
    GROUPS                  VARCHAR(400),
    CREATED_DATE         TIMESTAMP,
    CREATED_BY  VARCHAR(36),
    MODIFIED_DATE        TIMESTAMP,
    MODIFIED_BY VARCHAR(36),
    CONSTRAINT PK_PCC_RULE PRIMARY KEY (ID),
    CONSTRAINT FK1_PCC_RULE FOREIGN KEY (SERVICE_TYPE_ID) REFERENCES TBLM_DATA_SERVICE_TYPE(ID),
    CONSTRAINT FK2_PCC_RULE FOREIGN KEY (QOS_PROFILE_DETAIL_ID) REFERENCES TBLM_QOS_PROFILE_DETAIL(ID),
    CONSTRAINT FK3_PCC_RULE FOREIGN KEY (CREATED_BY) REFERENCES TBLM_STAFF (ID),
    CONSTRAINT FK4_PCC_RULE FOREIGN KEY (MODIFIED_BY) REFERENCES TBLM_STAFF (ID)
 );


  CREATE TABLE TBLM_QOS_PROFILE_PCC_RELATION(
   QOS_PROFILE_DETAIL_ID VARCHAR(36),
   PCC_RULE_ID           VARCHAR(36),
   CONSTRAINT FK1_QOS_PROFILE_PCC_RELATION FOREIGN  KEY (QOS_PROFILE_DETAIL_ID) REFERENCES TBLM_QOS_PROFILE_DETAIL(ID),
   CONSTRAINT FK2_QOS_PROFILE_PCC_RELATION FOREIGN  KEY (PCC_RULE_ID) REFERENCES TBLM_PCC_RULE(ID),
   CONSTRAINT UK_QOS_PROFILE_PCC_RELATION  UNIQUE (QOS_PROFILE_DETAIL_ID,PCC_RULE_ID)
  );


-- FOR SERVICE DATA FLOW RELATION WITH PCC RULE FOR SELECTED SERVICE TYPE
  CREATE TABLE TBLM_SERVICE_DATA_FLOW
  (
    ID               VARCHAR(36) NOT NULL,
    FLOW_ACCESS      VARCHAR(100),
    SOURCE_IP        VARCHAR(100),
    SOURCE_PORT      VARCHAR(100),
    DESTINATION_IP   VARCHAR(100),
    DESTINATION_PORT VARCHAR(100),
    PCC_RULE_ID      VARCHAR(36),
    PROTOCOL         VARCHAR(50),
    CONSTRAINT PK_SERVICE_DATA_FLOW PRIMARY KEY (ID),
    CONSTRAINT FK1_SERVICE_DATA_FLOW FOREIGN KEY (PCC_RULE_ID) REFERENCES TBLM_PCC_RULE (ID)
  );



-- FOR PACKAGE (ADD ON) SUSBCRIPTION DETAILS
CREATE TABLE TBLM_SUBSCRIPTION(
    SUBSCRIPTION_ID      VARCHAR(36),
	SUBSCRIBER_ID        VARCHAR(256) NOT NULL,
	ADDON_ID             VARCHAR(36) NOT NULL,
	START_TIME           TIMESTAMP,
	END_TIME             TIMESTAMP,
    STATUS               CHAR(1) DEFAULT '0',
    SERVER_INSTANCE_ID   NUMERIC,
    PARENT_IDENTITY      VARCHAR(256),
    REJECT_REASON        VARCHAR(1024),
    SUBSCRIPTION_TIME    TIMESTAMP,
    LAST_UPDATE_TIME     TIMESTAMP,
    PRIORITY             NUMERIC(5,0),
    USAGE_RESET_DATE     TIMESTAMP,
    PARAM1               VARCHAR(256),
    PARAM2               VARCHAR(256),
    CONSTRAINT PK_SUBSCRIPTION PRIMARY KEY(SUBSCRIPTION_ID)
    );


-- For maintaing Subscription histoty
CREATE TABLE TBLM_SUBSCRIPTION_HISTORY
(
  SUBSCRIBER_ID     VARCHAR(256) NOT NULL,
  ADDON_ID          VARCHAR(36) NOT NULL,
  START_TIME        TIMESTAMP,
  END_TIME          TIMESTAMP,
  LAST_UPDATE_TIME  TIMESTAMP,
  STATUS            VARCHAR(32) NOT NULL,
  SUBSCRIPTION_ID   VARCHAR(36),
  PARENT_IDENTITY   VARCHAR(256),
  SUBSCRIPTION_TIME TIMESTAMP,
  REJECT_REASON VARCHAR(1024)
);

 -- For Test Subscriber

CREATE TABLE TBLM_TEST_SUBSCRIBER(
  SUBSCRIBER_IDENTITY VARCHAR(255),
CONSTRAINT PK_TEST_SUBSCRIBER PRIMARY KEY (SUBSCRIBER_IDENTITY)
);

CREATE TABLE TBLM_NOTIFICATION_TEMPLATE(
	ID			         VARCHAR(36),
	NAME 			     VARCHAR(128),
	STATUS               VARCHAR(12) DEFAULT 'ACTIVE',
	SUBJECT			     VARCHAR(256),
	TEMPLATE_DATA		 VARCHAR(4000),
	TEMPLATE_TYPE		 VARCHAR(30),
	GROUPS               VARCHAR(400),
	CREATED_DATE         TIMESTAMP,
    CREATED_BY  VARCHAR(36),
    MODIFIED_DATE        TIMESTAMP,
    MODIFIED_BY VARCHAR(36),
    CONSTRAINT PK_NOTIFICATION_TEMPLATE PRIMARY KEY (ID),
	CONSTRAINT FK1_NOTIFICATION_TEMPLATE FOREIGN KEY (CREATED_BY) REFERENCES TBLM_STAFF (ID),
    CONSTRAINT FK2_NOTIFICATION_TEMPLATE FOREIGN KEY (MODIFIED_BY) REFERENCES TBLM_STAFF (ID)
 );

-- Notification Module
CREATE TABLE TBLM_USAGE_NOTIFICATION
 (
  ID                   VARCHAR(36),
  NAME                 VARCHAR(100),
  STATUS               VARCHAR(12) DEFAULT 'ACTIVE',
  DESCRIPTION          VARCHAR(2000),
  NOTIFICATION_TYPE    VARCHAR(50),
  PACKAGE_ID           VARCHAR(36) NOT NULL,
  QUOTA_PROFILE_ID     VARCHAR(36) NOT NULL,
  SERVICE_TYPE_ID      VARCHAR(36),
  METERING_TYPE        VARCHAR(30),
  THRESHOLD            NUMERIC(20),
  AGGREGATION_KEY      VARCHAR(20),
  EMAIL_TEMPLATE_ID    VARCHAR(36),
  SMS_TEMPLATE_ID      VARCHAR(36),
  CREATED_DATE         TIMESTAMP,
  CREATED_BY  VARCHAR(36),
  MODIFIED_DATE        TIMESTAMP,
  MODIFIED_BY VARCHAR(36),
  CONSTRAINT PK_USAGE_NOTIFICATION PRIMARY KEY(ID),
  CONSTRAINT FK1_USAGE_NOTIFICATION FOREIGN KEY (PACKAGE_ID) REFERENCES TBLM_PACKAGE(ID),
  CONSTRAINT FK2_USAGE_NOTIFICATION FOREIGN KEY (QUOTA_PROFILE_ID)REFERENCES TBLM_QUOTA_PROFILE(ID),
  CONSTRAINT FK3_USAGE_NOTIFICATION FOREIGN KEY (SERVICE_TYPE_ID) REFERENCES TBLM_DATA_SERVICE_TYPE(ID),
  CONSTRAINT FK4_USAGE_NOTIFICATION FOREIGN KEY (EMAIL_TEMPLATE_ID)REFERENCES TBLM_NOTIFICATION_TEMPLATE(ID),
  CONSTRAINT FK5_USAGE_NOTIFICATION FOREIGN KEY (SMS_TEMPLATE_ID) REFERENCES TBLM_NOTIFICATION_TEMPLATE(ID),
  CONSTRAINT FK6_USAGE_NOTIFICATION FOREIGN KEY (CREATED_BY) REFERENCES TBLM_STAFF (ID),
  CONSTRAINT FK7_USAGE_NOTIFICATION FOREIGN KEY (MODIFIED_BY) REFERENCES TBLM_STAFF (ID)
);

-- IMS Package Module
CREATE TABLE TBLM_IMS_PACKAGE
(
    ID                      VARCHAR(36),
    NAME                    VARCHAR(100) NOT NULL,
    STATUS                  VARCHAR(12) DEFAULT 'ACTIVE',
    DESCRIPTION             VARCHAR(2000),
    TYPE                    VARCHAR(32),
    PACKAGE_MODE            VARCHAR(12) DEFAULT 'TEST',
    VALIDITY_PERIOD         NUMERIC(8),
    VALIDITY_PERIOD_UNIT    VARCHAR(20),
    PRICE                   NUMERIC(12,2),
    MULTIPLE_SUBSCRIPTION   NUMERIC(1),
    GROUPS                  VARCHAR(400),
    CREATED_DATE            TIMESTAMP,
    CREATED_BY     VARCHAR(36),
    MODIFIED_DATE           TIMESTAMP,
    MODIFIED_BY    VARCHAR(36),
    CONSTRAINT PK_IMS_PACKAGE PRIMARY KEY (ID),
    CONSTRAINT FK1_IMS_PACKAGE FOREIGN KEY (CREATED_BY) REFERENCES TBLM_STAFF (ID),
    CONSTRAINT FK2_IMS_PACKAGE FOREIGN KEY (MODIFIED_BY) REFERENCES TBLM_STAFF (ID)
);

CREATE TABLE TBLM_IMS_PACKAGE_SERVICE
(
    ID                  VARCHAR(36),
    NAME                VARCHAR(100) NOT NULL,
    MEDIA_TYPE_ID       VARCHAR(36),
    APP_FUNCTION_ID     VARCHAR(100),
    EXPRESSION          VARCHAR(1000),
    ACTION              NUMERIC(1) DEFAULT 0,
    STATUS 				VARCHAR(12) DEFAULT 'ACTIVE',
    IMS_PACKAGE_ID      VARCHAR(36) NOT NULL,
    CREATED_DATE            TIMESTAMP,
    CREATED_BY     VARCHAR(36),
    MODIFIED_DATE           TIMESTAMP,
    MODIFIED_BY    VARCHAR(36),
    CONSTRAINT PK_IMS_PACKAGE_SERVICE PRIMARY KEY(ID),
    CONSTRAINT FK1_IMS_PACKAGE_SERVICE FOREIGN KEY (IMS_PACKAGE_ID) REFERENCES TBLM_IMS_PACKAGE(ID),
    CONSTRAINT FK2_IMS_PACKAGE_SERVICE FOREIGN KEY (CREATED_BY) REFERENCES TBLM_STAFF (ID),
    CONSTRAINT FK3_IMS_PACKAGE_SERVICE FOREIGN KEY (MODIFIED_BY) REFERENCES TBLM_STAFF (ID)
);

CREATE TABLE TBLM_IMS_PACKAGE_PCC_ATTRIBUTE
(
    ID                  VARCHAR(36),
    ATTRIBUTE           VARCHAR(50),
    EXPRESSION          VARCHAR(1000),
    ACTION              VARCHAR(30),
    VALUE               VARCHAR(250),
    ORDER_NO            NUMERIC(4),
    IMS_PACKAGE_SERVICE_ID     VARCHAR(36) NOT NULL,
    CONSTRAINT PK_IMS_PACKAGE_PCC_ATTRIBUTE PRIMARY KEY(ID),
    CONSTRAINT FK_IMS_PACKAGE_PCC_ATTRIBUTE FOREIGN KEY (IMS_PACKAGE_SERVICE_ID) REFERENCES TBLM_IMS_PACKAGE_SERVICE (ID)
);

CREATE TABLE TBLM_MEDIA_TYPE
(
   ID                  VARCHAR(36),
   NAME                VARCHAR(50) NOT NULL,
   STATUS              VARCHAR(12) DEFAULT 'ACTIVE',
   MEDIA_IDENTIFIER  NUMERIC(10),
   CONSTRAINT PK_MEDIA_TYPE PRIMARY KEY (ID)
);

-- Top up qos profile
CREATE TABLE TBLM_TOPUP_QOS_PROFILE(
	ID						VARCHAR(36),
	QOS_PROFILE_NAMES       VARCHAR(4000),
	PACKAGE_ID		        VARCHAR(36),
	CONSTRAINT PK_TOPUP_QOS_PROFILE PRIMARY KEY (ID),
	CONSTRAINT FK1_TOPUP_QOS_PROFILE FOREIGN KEY(PACKAGE_ID) REFERENCES TBLM_PACKAGE (ID)
);

CREATE TABLE TBLM_TOPUP_QOS_MULTIPLIER(
	ID VARCHAR(36),
	FUP_LEVEL NUMERIC(1),
	MULTIPLIER NUMERIC(4,2),
	PACKAGE_ID  VARCHAR(36),
	CONSTRAINT PK_TOPUP_QOS_MULTIPLIER PRIMARY KEY(ID),
	CONSTRAINT FK1_TOPUP_QOS_MULTIPLIER FOREIGN KEY(PACKAGE_ID) REFERENCES TBLM_PACKAGE(ID)
);

CREATE TABLE TBLM_TOPUP_SERVICE_MULTIPLIER(
	ID                    			VARCHAR(36),
	SERVICE_ID            			VARCHAR(36),
	MULTIPLER            			NUMERIC(4,2),
	TOPUP_QOS_MULTIPLIER_ID  		VARCHAR(36),
	CONSTRAINT PK_TOPUP_SERVICE_MULTIPLIER PRIMARY KEY(ID),
	CONSTRAINT FK1_TOPUP_SERVICE_MULTIPLIER FOREIGN KEY(SERVICE_ID) REFERENCES TBLM_DATA_SERVICE_TYPE(ID),
	CONSTRAINT FK2_TOPUP_SERVICE_MULTIPLIER FOREIGN KEY(TOPUP_QOS_MULTIPLIER_ID) REFERENCES TBLM_TOPUP_QOS_MULTIPLIER(ID)
);

CREATE TABLE TBLM_RESET_USAGE_REQ(
 BILLING_CYCLE_ID            VARCHAR(36),
 SUBSCRIBER_IDENTITY         VARCHAR(36),
 ALTERNATE_IDENTITY          VARCHAR(36) ,
 BILLING_CYCLE_DATE          TIMESTAMP(6),
 CREATED_DATE                TIMESTAMP(6),
 STATUS                      VARCHAR(1),
 SERVER_INSTANCE_ID          VARCHAR(8),
 PACKAGE_ID                  VARCHAR(36),
 RESET_REASON                VARCHAR(256),
 PARAM1                      VARCHAR(256),
 PARAM2                      VARCHAR(256),
 PARAM3                      VARCHAR(256),
 PRODUCT_OFFER_ID            VARCHAR(36),
CONSTRAINT PK_RESET_USAGE_REQ PRIMARY KEY(BILLING_CYCLE_ID)
);

-- PROCEDURES & TRIGGERS

CREATE OR REPLACE TRIGGER TRG_SUBSCRIPTION_HISTORY_DEL
AFTER DELETE ON TBLM_SUBSCRIPTION FOR EACH ROW
BEGIN
    IF DELETING THEN
          INSERT INTO TBLM_SUBSCRIPTION_HISTORY
         (	SUBSCRIBER_ID      ,
          ADDON_ID             ,
          START_TIME           ,
		  END_TIME             ,
		  LAST_UPDATE_TIME     ,
		  STATUS               ,
		  SUBSCRIPTION_ID      ,
		  PARENT_IDENTITY      ,
		  SUBSCRIPTION_TIME    ,
		  REJECT_REASON

)
		  VALUES( :OLD.SUBSCRIBER_ID      ,
				  :OLD.ADDON_ID           ,
				  :OLD.START_TIME         ,
				  :OLD.END_TIME           ,
				  :OLD.LAST_UPDATE_TIME   ,
				  :OLD.STATUS             ,
				  :OLD.SUBSCRIPTION_ID    ,
				  :OLD.PARENT_IDENTITY    ,
				  :OLD.SUBSCRIPTION_TIME  ,
				  :OLD.PARAM1
                );
    END IF;

END;
/


-- INDEXES

ALTER TABLE TBLM_SUBSCRIPTION INITRANS 200;

CREATE INDEX IDX_SUBSCRIPTION_SUBHISTORY ON TBLM_SUBSCRIPTION_HISTORY(SUBSCRIPTION_ID);
ALTER TABLE TBLM_SUBSCRIPTION_HISTORY INITRANS 200;
ALTER INDEX IDX_SUBSCRIPTION_SUBHISTORY INITRANS 200;



-- STATIC DBCS
-- PREDEFINED CONFIGURATIONS FOR SERVICE TYPES

INSERT INTO TBLM_DATA_SERVICE_TYPE (ID, NAME, DESCRIPTION, SERVICE_IDENTIFIER, GROUPS) VALUES ('SERVICE_TYPE_1', 'All-Service', 'All Service',1,'1');
INSERT INTO TBLM_DATA_SERVICE_TYPE (ID, NAME, DESCRIPTION, SERVICE_IDENTIFIER, GROUPS) VALUES ('SERVICE_TYPE_2', 'FTP', 'File Transfer Protocol transfers files between clients and servers',2,'1');
INSERT INTO TBLM_DATA_SERVICE_TYPE (ID, NAME, DESCRIPTION, SERVICE_IDENTIFIER, GROUPS) VALUES ('SERVICE_TYPE_3', 'HTTP', 'Hypertext Transfer Protocol for web browser connections',3,'1');
INSERT INTO TBLM_DATA_SERVICE_TYPE (ID, NAME, DESCRIPTION, SERVICE_IDENTIFIER, GROUPS) VALUES ('SERVICE_TYPE_4', 'HTTPS', 'HTTP over SSL (Secure Sockets Layer) for encrypted browsing',4,'1');
INSERT INTO TBLM_DATA_SERVICE_TYPE (ID, NAME, DESCRIPTION, SERVICE_IDENTIFIER, GROUPS) VALUES ('SERVICE_TYPE_5', 'SSH', 'Secure Shell',5,'1');
INSERT INTO TBLM_DATA_SERVICE_TYPE (ID, NAME, DESCRIPTION, SERVICE_IDENTIFIER, GROUPS) VALUES ('SERVICE_TYPE_6', 'SCP', 'Secure Copy',6,'1');
INSERT INTO TBLM_DATA_SERVICE_TYPE (ID, NAME, DESCRIPTION, SERVICE_IDENTIFIER, GROUPS) VALUES ('SERVICE_TYPE_7', 'TELNET', 'Telnet allows a user to log in remotely',7,'1');
INSERT INTO TBLM_DATA_SERVICE_TYPE (ID, NAME, DESCRIPTION, SERVICE_IDENTIFIER, GROUPS) VALUES ('SERVICE_TYPE_8', 'SMTP', 'Simple Mail Transfer Protocol for sending mail server to server or client to server',8,'1');
INSERT INTO TBLM_DATA_SERVICE_TYPE (ID, NAME, DESCRIPTION, SERVICE_IDENTIFIER, GROUPS) VALUES ('SERVICE_TYPE_9', 'DNS', 'Domain Name Service for domain name resolution',9,'1');
INSERT INTO TBLM_DATA_SERVICE_TYPE (ID, NAME, DESCRIPTION, SERVICE_IDENTIFIER, GROUPS) VALUES ('SERVICE_TYPE_10', 'TFTP', 'Trivial File Transfer Protocol transfers files between servers and client without user login',10,'1');
INSERT INTO TBLM_DATA_SERVICE_TYPE (ID, NAME, DESCRIPTION, SERVICE_IDENTIFIER, GROUPS) VALUES ('SERVICE_TYPE_11', 'POP3', 'Post Office Protocol -Email clients retrieve email from servers',11,'1');
INSERT INTO TBLM_DATA_SERVICE_TYPE (ID, NAME, DESCRIPTION, SERVICE_IDENTIFIER, GROUPS) VALUES ('SERVICE_TYPE_12', 'NNTP', 'Network News Transfer Protocol transfers news group messages',12,'1');
INSERT INTO TBLM_DATA_SERVICE_TYPE (ID, NAME, DESCRIPTION, SERVICE_IDENTIFIER, GROUPS) VALUES ('SERVICE_TYPE_13', 'NTP', 'Network Time Protocol - synchronize the time clock on TCP/IP hosts',13,'1');
INSERT INTO TBLM_DATA_SERVICE_TYPE (ID, NAME, DESCRIPTION, SERVICE_IDENTIFIER, GROUPS) VALUES ('SERVICE_TYPE_14', 'NetBIOS', 'NetBIOS Service for Microsoft File and Print Sharing',14,'1');
INSERT INTO TBLM_DATA_SERVICE_TYPE (ID, NAME, DESCRIPTION, SERVICE_IDENTIFIER, GROUPS) VALUES ('SERVICE_TYPE_15', 'IMAP', 'Internet Message Access Protocol to access email messages while leaving them on the server',15,'1');
INSERT INTO TBLM_DATA_SERVICE_TYPE (ID, NAME, DESCRIPTION, SERVICE_IDENTIFIER, GROUPS) VALUES ('SERVICE_TYPE_16', 'SNMP', 'Simple Network Management Protocol for Network management to remotely monitor network devices',16,'1');
INSERT INTO TBLM_DATA_SERVICE_TYPE (ID, NAME, DESCRIPTION, SERVICE_IDENTIFIER, GROUPS) VALUES ('SERVICE_TYPE_17', 'LDAP', 'Lightweight Directory Access Protocol to search and update information in directories',22,'1');
INSERT INTO TBLM_DATA_SERVICE_TYPE (ID, NAME, DESCRIPTION, SERVICE_IDENTIFIER, GROUPS) VALUES ('SERVICE_TYPE_18', 'SMB', 'When NetBIOS support is disabled, Microsoft File and Print Sharing uses this port',17,'1');
INSERT INTO TBLM_DATA_SERVICE_TYPE (ID, NAME, DESCRIPTION, SERVICE_IDENTIFIER, GROUPS) VALUES ('SERVICE_TYPE_19', 'IGMP', 'Internet Group Multicast Protocol to register as members of a multicast group',18,'1');
INSERT INTO TBLM_DATA_SERVICE_TYPE (ID, NAME, DESCRIPTION, SERVICE_IDENTIFIER, GROUPS) VALUES ('SERVICE_TYPE_20', 'LPR', 'Line Printer Protocol used to communicate between LPR client and LPD Line Printer Daemon Server. Typically Unix/Linux',19,'1');
INSERT INTO TBLM_DATA_SERVICE_TYPE (ID, NAME, DESCRIPTION, SERVICE_IDENTIFIER, GROUPS) VALUES ('SERVICE_TYPE_21', 'YAHOO-MESSENGER', 'Yahoo messenger for chatting purpose',20,'1');
INSERT INTO TBLM_DATA_SERVICE_TYPE (ID, NAME, DESCRIPTION, SERVICE_IDENTIFIER, GROUPS) VALUES ('SERVICE_TYPE_22', 'E-MAIL', 'E-MAIL',21,'1');

-- PREDEFINED CONFIGURATIONS FOR RATING GROUP
INSERT INTO TBLM_RATING_GROUP (ID,NAME,DESCRIPTION,IDENTIFIER,GROUPS) VALUES ('RATING_GROUP_1','Default_Rating_Group','', 0,'1');


-- PREDEFINED CONFIGURATIONS FOR SERVICE TYPE &  RATING GROUP
INSERT INTO TBLM_SERVICE_RATING_GRP_REL (RATING_GROUP_ID,SERVICE_TYPE_ID) VALUES ('RATING_GROUP_1','SERVICE_TYPE_1');
INSERT INTO TBLM_SERVICE_RATING_GRP_REL (RATING_GROUP_ID,SERVICE_TYPE_ID) VALUES ('RATING_GROUP_1','SERVICE_TYPE_2');
INSERT INTO TBLM_SERVICE_RATING_GRP_REL (RATING_GROUP_ID,SERVICE_TYPE_ID) VALUES ('RATING_GROUP_1','SERVICE_TYPE_3');
INSERT INTO TBLM_SERVICE_RATING_GRP_REL (RATING_GROUP_ID,SERVICE_TYPE_ID) VALUES ('RATING_GROUP_1','SERVICE_TYPE_4');
INSERT INTO TBLM_SERVICE_RATING_GRP_REL (RATING_GROUP_ID,SERVICE_TYPE_ID) VALUES ('RATING_GROUP_1','SERVICE_TYPE_5');
INSERT INTO TBLM_SERVICE_RATING_GRP_REL (RATING_GROUP_ID,SERVICE_TYPE_ID) VALUES ('RATING_GROUP_1','SERVICE_TYPE_6');
INSERT INTO TBLM_SERVICE_RATING_GRP_REL (RATING_GROUP_ID,SERVICE_TYPE_ID) VALUES ('RATING_GROUP_1','SERVICE_TYPE_7');
INSERT INTO TBLM_SERVICE_RATING_GRP_REL (RATING_GROUP_ID,SERVICE_TYPE_ID) VALUES ('RATING_GROUP_1','SERVICE_TYPE_8');
INSERT INTO TBLM_SERVICE_RATING_GRP_REL (RATING_GROUP_ID,SERVICE_TYPE_ID) VALUES ('RATING_GROUP_1','SERVICE_TYPE_9');
INSERT INTO TBLM_SERVICE_RATING_GRP_REL (RATING_GROUP_ID,SERVICE_TYPE_ID) VALUES ('RATING_GROUP_1','SERVICE_TYPE_10');
INSERT INTO TBLM_SERVICE_RATING_GRP_REL (RATING_GROUP_ID,SERVICE_TYPE_ID) VALUES ('RATING_GROUP_1','SERVICE_TYPE_11');
INSERT INTO TBLM_SERVICE_RATING_GRP_REL (RATING_GROUP_ID,SERVICE_TYPE_ID) VALUES ('RATING_GROUP_1','SERVICE_TYPE_12');
INSERT INTO TBLM_SERVICE_RATING_GRP_REL (RATING_GROUP_ID,SERVICE_TYPE_ID) VALUES ('RATING_GROUP_1','SERVICE_TYPE_13');
INSERT INTO TBLM_SERVICE_RATING_GRP_REL (RATING_GROUP_ID,SERVICE_TYPE_ID) VALUES ('RATING_GROUP_1','SERVICE_TYPE_14');
INSERT INTO TBLM_SERVICE_RATING_GRP_REL (RATING_GROUP_ID,SERVICE_TYPE_ID) VALUES ('RATING_GROUP_1','SERVICE_TYPE_15');
INSERT INTO TBLM_SERVICE_RATING_GRP_REL (RATING_GROUP_ID,SERVICE_TYPE_ID) VALUES ('RATING_GROUP_1','SERVICE_TYPE_16');
INSERT INTO TBLM_SERVICE_RATING_GRP_REL (RATING_GROUP_ID,SERVICE_TYPE_ID) VALUES ('RATING_GROUP_1','SERVICE_TYPE_17');
INSERT INTO TBLM_SERVICE_RATING_GRP_REL (RATING_GROUP_ID,SERVICE_TYPE_ID) VALUES ('RATING_GROUP_1','SERVICE_TYPE_18');
INSERT INTO TBLM_SERVICE_RATING_GRP_REL (RATING_GROUP_ID,SERVICE_TYPE_ID) VALUES ('RATING_GROUP_1','SERVICE_TYPE_19');
INSERT INTO TBLM_SERVICE_RATING_GRP_REL (RATING_GROUP_ID,SERVICE_TYPE_ID) VALUES ('RATING_GROUP_1','SERVICE_TYPE_20');
INSERT INTO TBLM_SERVICE_RATING_GRP_REL (RATING_GROUP_ID,SERVICE_TYPE_ID) VALUES ('RATING_GROUP_1','SERVICE_TYPE_21');
INSERT INTO TBLM_SERVICE_RATING_GRP_REL (RATING_GROUP_ID,SERVICE_TYPE_ID) VALUES ('RATING_GROUP_1','SERVICE_TYPE_22');


-- PREDEFINED CONFIGURATIONS FOR DEFAULT SERVICE DATA FLOW
INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (1,'permit in','any',' ','any',' ','SERVICE_TYPE_1','ip');
INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (2,'permit out','any',' ','any',' ','SERVICE_TYPE_1','ip');

INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (3,'permit in','any',' ','any','20-21','SERVICE_TYPE_2','6');
INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (4,'permit out','any','20-21','any',' ','SERVICE_TYPE_2','6');

INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (5,'permit in','any',' ','any','80','SERVICE_TYPE_3','6');
INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (6,'permit out','any','80','any',' ','SERVICE_TYPE_3','6');

INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (7,'permit in','any',' ','any','443','SERVICE_TYPE_4','ip');
INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (8,'permit out','any','443','any',' ','SERVICE_TYPE_4','ip');

INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (9,'permit in','any',' ','any','22','SERVICE_TYPE_5','6');
INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (10,'permit out','any','22','any',' ','SERVICE_TYPE_5','6');

INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (11,'permit in','any',' ','any','22','SERVICE_TYPE_6','6');
INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (12,'permit out','any','22','any',' ','SERVICE_TYPE_6','6');

INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (13,'permit in','any',' ','any','23','SERVICE_TYPE_7','6');
INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (14,'permit out','any','23','any',' ','SERVICE_TYPE_7','6');

INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (15,'permit in','any',' ','any','25','SERVICE_TYPE_8','6');
INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (16,'permit out','any','25','any',' ','SERVICE_TYPE_8','6');

INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (17,'permit in','any',' ','any','53','SERVICE_TYPE_9','ip');
INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (18,'permit out','any','53','any',' ','SERVICE_TYPE_9','ip');

INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (19,'permit in','any',' ','any','69','SERVICE_TYPE_10','17');
INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (20,'permit out','any','69','any',' ','SERVICE_TYPE_10','17');

INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (21,'permit in','any',' ','any','110','SERVICE_TYPE_11','6');
INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (22,'permit out','any','110','any',' ','SERVICE_TYPE_11','6');

INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (23,'permit in','any',' ','any','119','SERVICE_TYPE_12','17');
INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (24,'permit out','any','119','any',' ','SERVICE_TYPE_12','17');

INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (25,'permit in','any',' ','any','123','SERVICE_TYPE_13','17');
INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (26,'permit out','any','123','any',' ','SERVICE_TYPE_13','17');

INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (27,'permit in','any',' ','any','137-139','SERVICE_TYPE_14','ip');
INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (28,'permit out','any','137-139','any',' ','SERVICE_TYPE_14','ip');

INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (29,'permit in','any',' ','any','143','SERVICE_TYPE_15','6');
INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (30,'permit out','any','143','any',' ','SERVICE_TYPE_15','6');

INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (31,'permit in','any',' ','any','161','SERVICE_TYPE_16','17');
INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (32,'permit out','any','161','any',' ','SERVICE_TYPE_16','17');

INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (33,'permit in','any',' ','any','389','SERVICE_TYPE_17','6');
INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (34,'permit out','any','389','any',' ','SERVICE_TYPE_17','6');

INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (35,'permit in','any',' ','any','445','SERVICE_TYPE_18','6');
INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (36,'permit out','any','445','any',' ','SERVICE_TYPE_18','6');

INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (37,'permit in','any',' ','any','463','SERVICE_TYPE_19','17');
INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (38,'permit out','any','463','any',' ','SERVICE_TYPE_19','17');

INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (39,'permit in','any',' ','any','515','SERVICE_TYPE_20','6');
INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (40,'permit out','any','515','any',' ','SERVICE_TYPE_20','6');

INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (41,'permit in','any',' ','any','5010','SERVICE_TYPE_21','6');
INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (42,'permit out','any','5010','any',' ','SERVICE_TYPE_21','6');

INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (43,'permit in','any',' ','any','25','SERVICE_TYPE_22','6');
INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (44,'permit out','any','25','any',' ','SERVICE_TYPE_22','6');
INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (45,'permit in','any',' ','any','110','SERVICE_TYPE_22','6');
INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (46,'permit out','any','110','any',' ','SERVICE_TYPE_22','6');
INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (47,'permit in','any',' ','any','143','SERVICE_TYPE_22','6');
INSERT INTO TBLM_DEF_SERVICE_DATA_FLOW (ID,FLOW_ACCESS,SOURCE_IP,SOURCE_PORT,DESTINATION_IP,DESTINATION_PORT,SERVICE_TYPE_ID,PROTOCOL)
VALUES (48,'permit out','any','143','any',' ','SERVICE_TYPE_22','6');

-- For MEDIA TYPE
INSERT INTO TBLM_MEDIA_TYPE (ID, NAME, MEDIA_IDENTIFIER) VALUES ('MEDIA_TYPE_1','AUDIO',0);
INSERT INTO TBLM_MEDIA_TYPE (ID, NAME, MEDIA_IDENTIFIER) VALUES ('MEDIA_TYPE_2','VIDEO',1);
INSERT INTO TBLM_MEDIA_TYPE (ID, NAME, MEDIA_IDENTIFIER) VALUES ('MEDIA_TYPE_3','DATA',2);
INSERT INTO TBLM_MEDIA_TYPE (ID, NAME, MEDIA_IDENTIFIER) VALUES ('MEDIA_TYPE_4','APPLICATION',3);
INSERT INTO TBLM_MEDIA_TYPE (ID, NAME, MEDIA_IDENTIFIER) VALUES ('MEDIA_TYPE_5','CONTROL',4);
INSERT INTO TBLM_MEDIA_TYPE (ID, NAME, MEDIA_IDENTIFIER) VALUES ('MEDIA_TYPE_6','TEXT',5);
INSERT INTO TBLM_MEDIA_TYPE (ID, NAME, MEDIA_IDENTIFIER) VALUES ('MEDIA_TYPE_7','MESSAGE',6);
INSERT INTO TBLM_MEDIA_TYPE (ID, NAME, MEDIA_IDENTIFIER) VALUES ('MEDIA_TYPE_4294967295','OTHER',4294967295);

COMMIT;


DECLARE
 counter NUMBER := 1;
 pkgid VARCHAR(36);
BEGIN

  FOR REC IN
  (SELECT * FROM TBLM_QOS_PROFILE WHERE STATUS != 'DELETED' ORDER by PACKAGE_ID, CREATED_DATE)
  LOOP

    IF pkgid IS NULL THEN
    	counter:=1;
    ELSIF pkgid = REC.PACKAGE_ID THEN
    	counter:= counter+1;
    ELSE
    	counter:=1;
    END IF;

    update TBLM_QOS_PROFILE set ORDER_NO=counter where id=REC.ID;
    pkgid := REC.PACKAGE_ID;

    COMMIT;

 END LOOP;
END;
/

CREATE TABLE TBLM_PKG_GROUP_ORDER(
  ID                 VARCHAR(36),
  PKG_ID        VARCHAR(36),
  GROUP_ID   VARCHAR(36),
  ORDER_NO  NUMERIC(6) DEFAULT 0,
  TYPE           VARCHAR(32),
  CONSTRAINT PK_PKG_GROUP_ORDER PRIMARY KEY (ID),
  CONSTRAINT FK_PKG_GROUP_ORDER FOREIGN KEY (PKG_ID) REFERENCES TBLM_PACKAGE(ID)
);

---------------------------------------------------
--   TABLES RELATED CHARGING RULE INSTALL
---------------------------------------------------

CREATE TABLE TBLM_CHARGING_RULE_BASE_NAME (
  ID            VARCHAR(36),
  NAME          VARCHAR(100) NOT NULL,
  DESCRIPTION   VARCHAR(2000),
  STATUS                  VARCHAR(12) DEFAULT 'ACTIVE',
  GROUPS                  VARCHAR(400),
  CREATED_DATE            TIMESTAMP,
  CREATED_BY     VARCHAR(36),
  MODIFIED_DATE           TIMESTAMP,
  MODIFIED_BY    VARCHAR(36),
  CONSTRAINT PK_CHARGING_RULE_BASE_NAME PRIMARY KEY (ID)
);

CREATE TABLE TBLM_CHARGING_RULE_SERVICETYPE (
  ID                VARCHAR(36),
  SERVICE_TYPE_ID   VARCHAR(36) NOT NULL,
  MONITORING_KEY    VARCHAR(100) NOT NULL,
  CHARGING_RULE_BASE_NAME_ID VARCHAR(36) NOT NULL,
  SLICE_TOTAL       NUMERIC(18),
  SLICE_TOTAL_UNIT  VARCHAR(10),
  SLICE_UPLOAD      NUMERIC(18),
  SLICE_UPLOAD_UNIT VARCHAR(10),
  SLICE_DOWNLOAD          NUMERIC(18),
  SLICE_DOWNLOAD_UNIT     VARCHAR(10),
  SLICE_TIME              NUMERIC(18),
  SLICE_TIME_UNIT         VARCHAR(10),
  CONSTRAINT PK_CHARGING_RULE_SERVICETYPE PRIMARY KEY (ID),
  CONSTRAINT FK1_CHARGING_RULE_SERVICETYPE FOREIGN KEY (SERVICE_TYPE_ID) REFERENCES TBLM_DATA_SERVICE_TYPE(ID),
  CONSTRAINT FK2_CHARGING_RULE_SERVICETYPE FOREIGN KEY (CHARGING_RULE_BASE_NAME_ID) REFERENCES TBLM_CHARGING_RULE_BASE_NAME(ID)
);


CREATE TABLE TBLM_QOS_PROFILE_CRBN_REL(
  QOS_PROFILE_DETAIL_ID VARCHAR(36),
  CHARGING_RULE_BASE_NAME_ID           VARCHAR(36),
  CONSTRAINT FK1_QOS_PROFILE_CRBN_REL FOREIGN  KEY (QOS_PROFILE_DETAIL_ID) REFERENCES TBLM_QOS_PROFILE_DETAIL(ID),
  CONSTRAINT FK2_QOS_PROFILE_CRBN_REL FOREIGN  KEY (CHARGING_RULE_BASE_NAME_ID) REFERENCES TBLM_CHARGING_RULE_BASE_NAME(ID),
  CONSTRAINT UK_QOS_PROFILE_CRBN_REL  UNIQUE (QOS_PROFILE_DETAIL_ID,CHARGING_RULE_BASE_NAME_ID)
);

CREATE TABLE TBLM_PD_CONTEXT_INFORMATION(
  id VARCHAR(36),
  HOST_NAME VARCHAR(50),
  IP_ADDRESSES varchar(200),
  PORT VARCHAR(5),
  CONTEXT_PATH VARCHAR(20),
  DEPLOYMENT_PATH VARCHAR(200),
  LAST_UPDATE_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  STATUS VARCHAR(10) DEFAULT 'SHUTDOWN',
  CONSTRAINT PK_PD_CONTEXT_INFORMATION PRIMARY KEY (id)
  );

  -- NEW SM MODULE DBCs
  
  
CREATE TABLE TBLM_DATABASE_DS (
  ID                    VARCHAR(36),
  NAME                  VARCHAR(100) NOT NULL,
  STATUS                VARCHAR(12) DEFAULT 'ACTIVE',
  GROUPS                VARCHAR(400),
  CONNECTION_URL        VARCHAR(2000) NOT NULL,
  USERNAME              VARCHAR(200)	NOT NULL,
  PASSWORD              VARCHAR(200)	NOT NULL,
  MINIMUM_POOL          NUMERIC DEFAULT 1 NOT NULL,
  MAXIMUM_POOL          NUMERIC DEFAULT 1 NOT NULL,
  STATUS_CHECK_DURATION NUMERIC DEFAULT 120 NOT NULL,
  QUERY_TIMEOUT         NUMERIC DEFAULT 1000 NOT NULL,
  CREATED_DATE          TIMESTAMP,
  CREATED_BY   VARCHAR(36),
  MODIFIED_DATE         TIMESTAMP,
  MODIFIED_BY  VARCHAR(36),
  CONSTRAINT PK_DATABASE_DS PRIMARY KEY (ID),
  CONSTRAINT FK1_DATABASE_DS FOREIGN KEY (CREATED_BY) REFERENCES TBLM_STAFF (ID),
  CONSTRAINT FK2_DATABASE_DS FOREIGN KEY (MODIFIED_BY) REFERENCES TBLM_STAFF (ID)
);

COMMENT ON TABLE TBLM_DATABASE_DS IS 'Store Database Datasource related information';
COMMENT ON COLUMN TBLM_DATABASE_DS.ID IS 'Store unique identity';
COMMENT ON COLUMN TBLM_DATABASE_DS.NAME IS 'Store unique name';
COMMENT ON COLUMN TBLM_DATABASE_DS.STATUS IS 'Store status i.e. ACTIVE';
COMMENT ON COLUMN TBLM_DATABASE_DS.GROUPS IS 'Store list of group ids';
COMMENT ON COLUMN TBLM_DATABASE_DS.CONNECTION_URL IS 'Store connection URL of database';
COMMENT ON COLUMN TBLM_DATABASE_DS.USERNAME IS 'Store user name of database datasource';
COMMENT ON COLUMN TBLM_DATABASE_DS.PASSWORD IS 'Store password of database datasource';
COMMENT ON COLUMN TBLM_DATABASE_DS.MINIMUM_POOL IS 'Store minimum connection of database datasource';
COMMENT ON COLUMN TBLM_DATABASE_DS.MAXIMUM_POOL IS 'Store maximum connection of database datasource';
COMMENT ON COLUMN TBLM_DATABASE_DS.STATUS_CHECK_DURATION IS 'Store the integer value to check connection';
COMMENT ON COLUMN TBLM_DATABASE_DS.QUERY_TIMEOUT IS 'Store integer value of query timeout';
COMMENT ON COLUMN TBLM_DATABASE_DS.CREATED_DATE IS 'Store Created Date';
COMMENT ON COLUMN TBLM_DATABASE_DS.CREATED_BY IS 'Store id of staff who created it';
COMMENT ON COLUMN TBLM_DATABASE_DS.MODIFIED_DATE IS 'Store Modified Date';
COMMENT ON COLUMN TBLM_DATABASE_DS.MODIFIED_BY IS 'Store id of staff who modified it';



INSERT INTO TBLM_DATABASE_DS (ID,NAME,CONNECTION_URL,USERNAME,PASSWORD,MINIMUM_POOL,MAXIMUM_POOL,STATUS_CHECK_DURATION,QUERY_TIMEOUT,CREATED_DATE,CREATED_BY)
VALUES (1,'DefaultDatabaseDatasource','jdbc:oracle:thin:@127.0.0.1:1521:orcl','netvertex','fqZ4hqZ}hKZ8',1,10,120,1000,CURRENT_TIMESTAMP,1);

COMMIT;

CREATE TABLE TBLM_LDAP_DS (
  ID                    VARCHAR(36),
  NAME                  VARCHAR(100) NOT NULL,
  STATUS                VARCHAR(12) DEFAULT 'ACTIVE',
  GROUPS                VARCHAR(400),
  ADDRESS               VARCHAR(256) NOT NULL,
  QUERY_TIMEOUT         NUMERIC DEFAULT 1000 NOT NULL,
  SIZE_LIMIT            NUMERIC	NOT NULL,
  ADMINISTRATOR         VARCHAR(300) NOT NULL,
  PASSWORD              VARCHAR(50)	NOT NULL,
  USER_DN_PREFIX        VARCHAR(100) NOT NULL ,
  MINIMUM_POOL          NUMERIC DEFAULT 1 NOT NULL,
  MAXIMUM_POOL          NUMERIC DEFAULT 1 NOT NULL,
  STATUS_CHECK_DURATION NUMERIC DEFAULT 120 NOT NULL,
  CREATED_DATE          TIMESTAMP,
  CREATED_BY   VARCHAR(36),
  MODIFIED_DATE         TIMESTAMP,
  MODIFIED_BY  VARCHAR(36),
  CONSTRAINT PK_LDAP_DS PRIMARY KEY (ID),
  CONSTRAINT FK1_LDAP_DS FOREIGN KEY (CREATED_BY) REFERENCES TBLM_STAFF (ID),
  CONSTRAINT FK2_LDAP_DS FOREIGN KEY (MODIFIED_BY) REFERENCES TBLM_STAFF (ID)
);

COMMENT ON TABLE TBLM_LDAP_DS IS 'Store LDAP Datasource related information';
COMMENT ON COLUMN TBLM_LDAP_DS.ID IS 'Store unique identity';
COMMENT ON COLUMN TBLM_LDAP_DS.NAME IS 'Store unique name';
COMMENT ON COLUMN TBLM_LDAP_DS.STATUS IS 'Store status i.e. ACTIVE';
COMMENT ON COLUMN TBLM_LDAP_DS.GROUPS IS 'Store list of group ids';
COMMENT ON COLUMN TBLM_LDAP_DS.ADDRESS IS 'Store address of LDAP datasource';
COMMENT ON COLUMN TBLM_LDAP_DS.QUERY_TIMEOUT IS 'Store integer value of query timeout';
COMMENT ON COLUMN TBLM_LDAP_DS.SIZE_LIMIT IS 'Store size limit of LDAP';
COMMENT ON COLUMN TBLM_LDAP_DS.ADMINISTRATOR IS 'Store name of administrator';
COMMENT ON COLUMN TBLM_LDAP_DS.PASSWORD IS 'Store password of LDAP datasource';
COMMENT ON COLUMN TBLM_LDAP_DS.USER_DN_PREFIX IS 'Store user distinguished name for authentication, the default prefix will be user identity(uid=)';
COMMENT ON COLUMN TBLM_LDAP_DS.MINIMUM_POOL IS 'Store minimum connection of database datasource';
COMMENT ON COLUMN TBLM_LDAP_DS.MAXIMUM_POOL IS 'Store maximum connection of database datasource';
COMMENT ON COLUMN TBLM_LDAP_DS.STATUS_CHECK_DURATION IS 'Store the integer value to check connection';
COMMENT ON COLUMN TBLM_LDAP_DS.CREATED_DATE IS 'Store Created Date';
COMMENT ON COLUMN TBLM_LDAP_DS.CREATED_BY IS 'Store id of staff who created it';
COMMENT ON COLUMN TBLM_LDAP_DS.MODIFIED_DATE IS 'Store Modified Date';
COMMENT ON COLUMN TBLM_LDAP_DS.MODIFIED_BY IS 'Store id of staff who modified it';


CREATE TABLE TBLM_LDAP_BASE_DN_DETAIL(
  ID                    VARCHAR(36),
  SEARCH_BASE_DN  	    VARCHAR(300),
  LDAP_DS_ID	 	        VARCHAR(36) NOT NULL,
  CONSTRAINT PK_LDAP_BASE_DN_DETAIL PRIMARY KEY (ID),
  CONSTRAINT FK1_LDAP_BASE_DN_DETAI FOREIGN KEY (LDAP_DS_ID) REFERENCES TBLM_LDAP_DS(ID)
);
COMMENT ON TABLE TBLM_LDAP_BASE_DN_DETAIL IS 'Store LDAP Base DN related information,Base DN is the point from where a server will search for users';
COMMENT ON COLUMN TBLM_LDAP_BASE_DN_DETAIL.ID IS 'Store unique identity';
COMMENT ON COLUMN TBLM_LDAP_BASE_DN_DETAIL.SEARCH_BASE_DN IS 'Store name of Base DN';


-----------------------------------------------
-- EMAIL AGENT
-----------------------------------------------
CREATE TABLE TBLM_EMAIL_AGENT(
  ID VARCHAR(36),
  EMAIL_HOST VARCHAR(255),
  EMAIL_USERNAME VARCHAR(20),
  EMAIL_PASSWORD VARCHAR(20),
  EMAIL_FROM_ADDRESS VARCHAR(255),
  EMAIL_CONNECTION_TIMOUT NUMERIC,
  STATUS 	VARCHAR(12) DEFAULT 'ACTIVE',
  GROUPS				VARCHAR(400),
  CREATED_DATE         TIMESTAMP,
  CREATED_BY  VARCHAR(36),
  MODIFIED_DATE        TIMESTAMP,
  MODIFIED_BY VARCHAR(36),
  CONSTRAINT PK_TBLM_EMAIL_AGENT  PRIMARY KEY (ID),
  CONSTRAINT FK1_TBLM_EMAIL_AGENT FOREIGN KEY (CREATED_BY) REFERENCES TBLM_STAFF (ID),
  CONSTRAINT FK2_TBLM_EMAIL_AGENT FOREIGN KEY (MODIFIED_BY) REFERENCES TBLM_STAFF (ID)
);

COMMENT ON TABLE TBLM_EMAIL_AGENT IS 'Store configuration of email agent';
COMMENT ON COLUMN TBLM_EMAIL_AGENT.ID IS 'Store unique id for email agent';
COMMENT ON COLUMN TBLM_EMAIL_AGENT.EMAIL_HOST IS 'Store email host server address';
COMMENT ON COLUMN TBLM_EMAIL_AGENT.EMAIL_USERNAME IS 'Store email host username';
COMMENT ON COLUMN TBLM_EMAIL_AGENT.EMAIL_PASSWORD IS 'Store email password';
COMMENT ON COLUMN TBLM_EMAIL_AGENT.EMAIL_FROM_ADDRESS IS 'Store email address of the sending person';
COMMENT ON COLUMN TBLM_EMAIL_AGENT.EMAIL_CONNECTION_TIMOUT IS 'Store time out value while connecting';
COMMENT ON COLUMN TBLM_EMAIL_AGENT.STATUS IS 'Store status from one the value active/inactive/deleted';
COMMENT ON COLUMN TBLM_EMAIL_AGENT.GROUPS IS 'Store MVNO group in which this agent belong';
COMMENT ON COLUMN TBLM_EMAIL_AGENT.CREATED_DATE IS 'Store Date on which this agent created';
COMMENT ON COLUMN TBLM_EMAIL_AGENT.CREATED_BY IS 'Store id of the staff who created this agent';
COMMENT ON COLUMN TBLM_EMAIL_AGENT.MODIFIED_DATE IS 'Store Date on which this agent modified';
COMMENT ON COLUMN TBLM_EMAIL_AGENT.MODIFIED_BY IS 'Store id of the staff who modified this agent';

--------------------------------------------------
-- SMS AGENT
-------------------------------------------------
CREATE TABLE TBLM_SMS_GATEWAY(
  ID VARCHAR(36),
  SMS_PROTOCOL VARCHAR(5),
  SMPP_USERNAME VARCHAR(20), --smpp configuration
  SMPP_PASSWORD VARCHAR(20),
  SMPP_CONNECTION_URL VARCHAR(100),
  SMPP_SYSTEM_TYPE VARCHAR(50),
  SMPP_TRANSACTION_TIMEOUT NUMERIC,
  SMPP_MESSAGING_MODE VARCHAR(50),
  SMPP_MAX_TIMEOUT_COUNT NUMERIC(5),
  SMPP_VALIDITY_PERIOD NUMERIC(5),
  SMPP_SOURCE_ADDRESS VARCHAR(255),
  SMPP_SRC_ADDRESS_TON VARCHAR(255),
  SMPP_SRC_ADDRESS_NPI VARCHAR(255),
  SMPP_DEST_ADDRESS_TON VARCHAR(255),
  SMPP_DEST_ADDRESS_NPI VARCHAR(255),
  HTTP_PASSWORD VARCHAR(20),
  HTTP_DELIVERY_REPORT_URL VARCHAR(255),
  STATUS 	VARCHAR(12) DEFAULT 'ACTIVE',
  GROUPS				VARCHAR(400),
  CREATED_DATE         TIMESTAMP,
  CREATED_BY  VARCHAR(36),
  MODIFIED_DATE        TIMESTAMP,
  MODIFIED_BY VARCHAR(36),
  CONSTRAINT PK_TBLM_SMS_GATEWAY  PRIMARY KEY (ID),
  CONSTRAINT FK1_TBLM_SMS_GATEWAY FOREIGN KEY (CREATED_BY) REFERENCES TBLM_STAFF (ID),
  CONSTRAINT FK2_TBLM_SMS_GATEWAY FOREIGN KEY (MODIFIED_BY) REFERENCES TBLM_STAFF (ID)
);



-------------------------------------------------------------
-- VENDOR CREATION
----------------------------------------------------------
CREATE TABLE TBLM_VENDOR(
    ID                VARCHAR(36),
    NAME              VARCHAR(255)    NOT NULL,
    DESCRIPTION             VARCHAR(255),
    CONSTRAINT PK_VENDOR PRIMARY KEY (ID)
);

-----------------------------------------------------------
-- SERVER CERTIFICATE CREATION
----------------------------------------------------------

CREATE TABLE TBLM_SERVER_CERTIFICATE(
    ID VARCHAR(36),
    NAME VARCHAR(255),
    CERTIFICATE BLOB,
    CERTIFICATE_FILE_NAME VARCHAR(64),
    PRIVATE_KEY BLOB,
    PRIVATE_KEY_PASSWORD  VARCHAR(64),
    PRIVATE_KEY_ALGORITHM VARCHAR(16) DEFAULT 'RSA',
    PRIVATE_KEY_FILE_NAME VARCHAR(64),
    STATUS 		  VARCHAR(12) DEFAULT 'ACTIVE',
    CREATED_BY VARCHAR(36),
    CREATED_DATE  TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    MODIFIED_BY VARCHAR(36),
    MODIFIED_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_SERVER_CERTIFICATE PRIMARY KEY (ID),
    CONSTRAINT FK1_SERVER_CERTIFICATE FOREIGN KEY (CREATED_BY) REFERENCES TBLM_STAFF(ID),
    CONSTRAINT FK2_SERVER_CERTIFICATE FOREIGN KEY (MODIFIED_BY) REFERENCES TBLM_STAFF(ID)
);



------------------------------------------------------
-- DIAMETER GATEWAY PROFILE CONFIGURATION
------------------------------------------------------
CREATE TABLE TBLM_DIAMETER_GATEWAY_PROFILE(
  ID               		VARCHAR(36),
  TYPE 			VARCHAR(40),
  NAME			VARCHAR(255) NOT NULL,
  STATUS 				VARCHAR(12) DEFAULT 'ACTIVE',
  GROUPS				VARCHAR(400),
  VENDOR_ID                	VARCHAR(36) NOT NULL,
  FIRMWARE                	VARCHAR(40),
  DESCRIPTION             	VARCHAR(2000),
  USAGE_REPORTING_TYPE 	VARCHAR(32) DEFAULT 'NON_CUMULATIVE' NOT NULL,
  REVALIDATION_MODE 		VARCHAR(64) DEFAULT 'CLIENT_INITIATED' NOT NULL,
  SOCKET_RECEIVE_BUFFER_SIZE 	NUMERIC(10) DEFAULT -1,
  SOCKET_SEND_BUFFER_SIZE    	NUMERIC(10) DEFAULT -1,
  TCP_NAGLE_ALGORITHM       	VARCHAR(8)  DEFAULT 'true',
  INIT_CONNECTION_DURATION  	NUMERIC(10),
  SESSION_CLEANUP_ON_CER     	VARCHAR(6) DEFAULT 'true',
  SESSION_CLEANUP_ON_DPR 	VARCHAR(6) DEFAULT 'true',
  CER_AVPS                VARCHAR(2000),
  DPR_AVPS                VARCHAR(2000),
  DWR_AVPS                VARCHAR(2000),
  SEND_DPR_CLOSE_EVENT    VARCHAR(6) DEFAULT 'false',
  SUPPORTED_VENDOR_LIST     	VARCHAR(255),
  SUPPORTED_STANDARD       	VARCHAR(20)  DEFAULT 'RELEASE_9',
  CHARGING_RULE_INSTALL_MODE		VARCHAR(255) DEFAULT 'GROUPED',
  TIMEOUT 				NUMERIC  DEFAULT 3000,
  GX_APPLICATION_ID 			VARCHAR(60),
  GY_APPLICATION_ID 			VARCHAR(60),
  RX_APPLICATION_ID 			VARCHAR(60),
  S9_APPLICATION_ID 			VARCHAR(60),
  DW_INTERVAL 					NUMERIC(10),
  SY_APPLICATION_ID             VARCHAR(60),
  UM_STANDARD                  VARCHAR(20) DEFAULT 'TGPPR9',
  SESSION_LOOKUP_KEY 			VARCHAR(100) DEFAULT 'CS.SessionIPv4,CS.SessionIPv6' NOT NULL,
  MODIFIED_BY	VARCHAR(36),
  CREATED_BY		VARCHAR(36),
  MODIFIED_DATE       	TIMESTAMP,
  CREATED_DATE             	TIMESTAMP,
  CONSTRAINT PK_DIA_GATEWAY_PROFILE PRIMARY KEY (ID),
  CONSTRAINT FK1_DIA_GATEWAY_PROFILE  FOREIGN KEY (VENDOR_ID) REFERENCES TBLM_VENDOR(ID),
  CONSTRAINT FK2_DIA_GATEWAY_PROFILE FOREIGN KEY (MODIFIED_BY) REFERENCES TBLM_STAFF (ID),
  CONSTRAINT FK3_DIA_GATEWAY_PROFILE FOREIGN KEY (CREATED_BY) REFERENCES TBLM_STAFF (ID)
);


-----------------------------------------------------------------
-- RADIUS GATEWAY PROFILE CONFIGURATION
-----------------------------------------------------------------

CREATE TABLE TBLM_RADIUS_GATEWAY_PROFILE(
  ID                          VARCHAR(36),
  TYPE 			VARCHAR(40),
  NAME			VARCHAR(255) NOT NULL,
  STATUS 				VARCHAR(12) DEFAULT 'ACTIVE',
  GROUPS				VARCHAR(400),
  VENDOR_ID                	VARCHAR(36) NOT NULL,
  FIRMWARE                	VARCHAR(40),
  DESCRIPTION             	VARCHAR(2000),
  USAGE_REPORTING_TYPE 	VARCHAR(32) DEFAULT 'NON_CUMULATIVE' NOT NULL,
  REVALIDATION_MODE 		VARCHAR(64) DEFAULT 'CLIENT_INITIATED' NOT NULL,
  SUPPORTED_VENDOR_LIST     VARCHAR(255),
  SEND_ACCOUNTING_RESPONSE  VARCHAR(6) DEFAULT 'true',
  TIMEOUT 			NUMERIC DEFAULT 3000,
  MAX_REQUEST_TIMEOUT 	NUMERIC DEFAULT 1000,
  STATUS_CHECK_DURATION 	NUMERIC(8) DEFAULT 60,
  IS_ICMP_PING_ENABLED	VARCHAR(6) DEFAULT 'false',
  RETRY_COUNT 				NUMERIC(8) DEFAULT 0,
  INTERIM_INTERVAL          NUMERIC(5),
  MODIFIED_BY	VARCHAR(36),
  CREATED_BY		VARCHAR(36),
  MODIFIED_DATE       	TIMESTAMP,
  CREATED_DATE             	TIMESTAMP,
  CONSTRAINT PK_RAD_GATEWAY_PROFILE PRIMARY KEY (ID),
  CONSTRAINT FK1_RAD_GATEWAY_PROFILE  FOREIGN KEY (VENDOR_ID) REFERENCES TBLM_VENDOR(ID),
  CONSTRAINT FK2_RAD_GATEWAY_PROFILE FOREIGN KEY (MODIFIED_BY) REFERENCES TBLM_STAFF (ID),
  CONSTRAINT FK3_RAD_GATEWAY_PROFILE FOREIGN KEY (CREATED_BY) REFERENCES TBLM_STAFF (ID)
);


-----------------------------------------------------
-- PACKET MAPPING
---------------------------------------------------

CREATE TABLE TBLM_PACKET_MAPPING(
    	ID                       VARCHAR(36),
    	NAME                     VARCHAR(255),
    	DESCRIPTION              VARCHAR(2000),
    	COMM_PROTOCOL            VARCHAR(15),
    	PACKET_TYPE              VARCHAR(15),
    	TYPE                     VARCHAR(15),
      APPLICATION_TYPE         VARCHAR(10),
      STATUS 			             VARCHAR(12) DEFAULT 'ACTIVE',
      GROUPS				           VARCHAR(400),
    	CREATED_DATE		         TIMESTAMP,
    	CREATED_BY	     VARCHAR(36),
	    MODIFIED_DATE		         TIMESTAMP,
	    MODIFIED_BY	   VARCHAR(36),
    	CONSTRAINT PK_PACKET_MAPPING PRIMARY KEY (ID),
    	CONSTRAINT FK1_PACKET_MAPPING FOREIGN KEY (MODIFIED_BY) REFERENCES TBLM_STAFF (ID),
		CONSTRAINT FK2_PACKET_MAPPING FOREIGN KEY (CREATED_BY) REFERENCES TBLM_STAFF (ID)
);

-------------------------------------------------------
-- PCC RULE MAPPING
-------------------------------------------------------
CREATE TABLE TBLM_PCCRULE_MAPPING(
	ID   VARCHAR(36),
	NAME               VARCHAR(255),
	DESCRIPTION        VARCHAR(2000),
	TYPE               VARCHAR(100),
	STATUS 		   VARCHAR(12) DEFAULT 'ACTIVE',
	GROUPS				VARCHAR(400),
	CREATED_DATE		TIMESTAMP,
	CREATED_BY	     	VARCHAR(36),
	MODIFIED_DATE		TIMESTAMP,
	MODIFIED_BY	   		VARCHAR(36),
	CONSTRAINT PK_PCCRULE_MAPPING PRIMARY KEY (ID),
	CONSTRAINT FK1_PCCRULE_MAPPING FOREIGN KEY (CREATED_BY) REFERENCES TBLM_STAFF (ID),
	CONSTRAINT FK2_PCCRULE_MAPPING FOREIGN KEY (MODIFIED_BY) REFERENCES TBLM_STAFF (ID)
);


--------------------------------------------------
-- ATTRIBUTE MAPPING FOR PACKET MAPPING
---------------------------------------------------
CREATE TABLE TBLM_ATTRIBUTE_MAPPING(
    ID                  VARCHAR(36),
    ATTRIBUTE           VARCHAR(100),
    POLICY_KEY          VARCHAR(4000),
    DEFAULT_VALUE       VARCHAR(1000),
    VALUE_MAPPING       VARCHAR(1000),
    PACKET_MAP_ID       VARCHAR(36),
    PCCRULE_MAP_ID      VARCHAR(36),
    ORDER_NUMBER 			  NUMERIC(4),
    CONSTRAINT PK_ATTRIBUTE_MAPPING PRIMARY KEY (ID),
    CONSTRAINT FK1_ATTRIBUTE_MAPPING FOREIGN KEY (PACKET_MAP_ID) REFERENCES TBLM_PACKET_MAPPING (ID),
    CONSTRAINT FK2_ATTRIBUTE_MAPPING FOREIGN KEY (PCCRULE_MAP_ID) REFERENCES TBLM_PCCRULE_MAPPING (ID)
);



--------------------------------------------------------
---- DIAMETER GATEWAY PROFILE PACKET MAPPTING RELATION
--------------------------------------------------------
CREATE TABLE TBLM_DIA_GW_PROFILE_PACKET_MAP(
  ID                  VARCHAR(36),
  DIAMETER_PROFILE_ID          VARCHAR(36),
  CONDITION           VARCHAR(4000),
  ORDER_NUMBER         NUMERIC(4),
  PACKET_MAP_ID             VARCHAR(36),
  CONSTRAINT PK_DIA_GW_PROFILE_PACKET_MAP PRIMARY KEY (ID),
  CONSTRAINT FK1_DIA_GW_PROFILE_PACKET_MAP FOREIGN KEY (DIAMETER_PROFILE_ID) REFERENCES TBLM_DIAMETER_GATEWAY_PROFILE (ID) ON DELETE CASCADE,
  CONSTRAINT FK2_DIA_GW_PROFILE_PACKET_MAP FOREIGN KEY (PACKET_MAP_ID) REFERENCES TBLM_PACKET_MAPPING (ID) ON DELETE CASCADE
);

--------------------------------------------------------
---- RADIUS GATEWAY PROFILE PACKET MAPPTING RELATION
--------------------------------------------------------
CREATE TABLE TBLM_RAD_GW_PROFILE_PACKET_MAP(
  ID                  VARCHAR(36),
  RADIUS_PROFILE_ID   VARCHAR(36),
  CONDITION           VARCHAR(4000),
  ORDER_NUMBER        NUMERIC(4),
  PACKET_MAP_ID       VARCHAR(36),
  CONSTRAINT PK_RAD_GW_PROFILE_PACKET_MAP PRIMARY KEY (ID),
  CONSTRAINT FK1_RAD_GW_PROFILE_PACKET_MAP FOREIGN KEY (RADIUS_PROFILE_ID) REFERENCES TBLM_RADIUS_GATEWAY_PROFILE (ID) ON DELETE CASCADE,
  CONSTRAINT FK2_RAD_GW_PROFILE_PACKET_MAP FOREIGN KEY (PACKET_MAP_ID) REFERENCES TBLM_PACKET_MAPPING (ID) ON DELETE CASCADE
);

---------------------------------------------------------------------
-- DIAMETER GATEWAY PROFILE PCC RULE MAPPING
---------------------------------------------------------------------

CREATE TABLE TBLM_DIA_GW_PROFILE_RULE_MAP(
  ID  VARCHAR(36),
  DIAMETER_PROFILE_ID                   VARCHAR(36),
  PCCRULE_MAPPING_ID            VARCHAR(36),
  ACCESS_NETWORK_TYPE           VARCHAR(4000),
  ORDER_NUMBER                 NUMERIC(4),
  CONSTRAINT PK_DIA_GW_PROFILE_RULE_MAP PRIMARY KEY (ID),
  CONSTRAINT FK1_DIA_GW_PROFILE_RULE_MAP FOREIGN KEY (DIAMETER_PROFILE_ID) REFERENCES TBLM_DIAMETER_GATEWAY_PROFILE (ID),
  CONSTRAINT FK2_DIA_GW_PROFILE_RULE_MAP FOREIGN KEY (PCCRULE_MAPPING_ID) REFERENCES TBLM_PCCRULE_MAPPING(ID)
);


---------------------------------------------------------------------
-- RADIUS GATEWAY PROFILE PCC RULE MAPPING
---------------------------------------------------------------------

CREATE TABLE TBLM_RAD_GW_PROFILE_RULE_MAP(
  ID  VARCHAR(36),
  RADIUS_PROFILE_ID                   VARCHAR(36),
  PCCRULE_MAPPING_ID            VARCHAR(36),
  ACCESS_NETWORK_TYPE           VARCHAR(4000), --??
  ORDER_NUMBER                 NUMERIC(4),
  CONSTRAINT PK_RAD_GW_PROFILE_RULE_MAP PRIMARY KEY (ID),
  CONSTRAINT FK1_RAD_GW_PROFILE_RULE_MAP FOREIGN KEY (RADIUS_PROFILE_ID) REFERENCES TBLM_RADIUS_GATEWAY_PROFILE (ID),
  CONSTRAINT FK2_RAD_GW_PROFILE_RULE_MAP FOREIGN KEY (PCCRULE_MAPPING_ID) REFERENCES TBLM_PCCRULE_MAPPING(ID)
);


-------------------------------------------------------------------
--- DIAMETER GATEWAY CONFIGURATION
-----------------------------------------------------------------

CREATE TABLE TBLM_DIAMETER_GATEWAY(
  ID               VARCHAR(36),
  NAME 			VARCHAR(255) NOT NULL UNIQUE,
  DIAMETER_PROFILE_ID               VARCHAR(36),
  DESCRIPTION             VARCHAR(2000),
  POLICY_ENFORCEMENT_METHOD VARCHAR(64),
  CONNECTION_URL           VARCHAR(45),
  HOST_IDENTITY             VARCHAR(40),
  REALM                     VARCHAR(40),
  LOCAL_ADDRESS             VARCHAR(64),
  REQUEST_TIMEOUT           NUMERIC DEFAULT 3000,
  RETRANSMISSION_COUNT      NUMERIC DEFAULT 0,
  ALTERNATE_HOST_ID          VARCHAR(36),
  STATUS 			              VARCHAR(12) DEFAULT 'ACTIVE',
  GROUPS				       VARCHAR(400),
  CREATED_DATE				TIMESTAMP,
  CREATED_BY	VARCHAR(36),
  MODIFIED_DATE			TIMESTAMP,
  MODIFIED_BY	VARCHAR(36),
  CONSTRAINT PK_DIAMETER_GATEWAY PRIMARY KEY (ID),
  CONSTRAINT FK1_DIAMETER_GATEWAY  FOREIGN KEY (DIAMETER_PROFILE_ID) REFERENCES TBLM_DIAMETER_GATEWAY_PROFILE(ID) ON DELETE CASCADE,
  CONSTRAINT FK3_DIAMETER_GATEWAY FOREIGN KEY (MODIFIED_BY) REFERENCES TBLM_STAFF (ID),
  CONSTRAINT FK4_DIAMETER_GATEWAY FOREIGN KEY (CREATED_BY) REFERENCES TBLM_STAFF (ID)
);

-----------------------------------------------------------
-- RADIUS GATEWAY CONFIGURATION
----------------------------------------------------------

CREATE TABLE TBLM_RADIUS_GATEWAY(
  ID               VARCHAR(36),
  NAME 			VARCHAR(255) NOT NULL UNIQUE,
  RADIUS_PROFILE_ID               VARCHAR(36) ,
  DESCRIPTION             VARCHAR(2000),
  POLICY_ENFORCEMENT_METHOD VARCHAR(64),
  CONNECTION_URL           VARCHAR(45),
  SHARED_SECRET            VARCHAR(40),
  MIN_LOCAL_PORT 	    	NUMERIC(8),
  STATUS 			VARCHAR(12) DEFAULT 'ACTIVE',
  GROUPS				VARCHAR(400),
  CREATED_DATE				TIMESTAMP,
  CREATED_BY		VARCHAR(36),
  MODIFIED_DATE			TIMESTAMP,
  MODIFIED_BY	VARCHAR(36),
  CONSTRAINT PK_RADIUS_GATEWAY PRIMARY KEY (ID),
  CONSTRAINT FK1_RADIUS_GATEWAY  FOREIGN KEY (RADIUS_PROFILE_ID) REFERENCES TBLM_RADIUS_GATEWAY_PROFILE(ID) ON DELETE CASCADE,
  CONSTRAINT FK3_RADIUS_GATEWAY FOREIGN KEY (MODIFIED_BY) REFERENCES TBLM_STAFF (ID),
  CONSTRAINT FK4_RADIUS_GATEWAY FOREIGN KEY (CREATED_BY) REFERENCES TBLM_STAFF (ID)
);


CREATE TABLE TBLD_GATEWAY_GROOVY_SCRIPT(
    ID	    		VARCHAR(36) NOT NULL,
    DIAMETER_GW_PROFILE_ID      VARCHAR(36),
    RADIUS_GW_PROFILE_ID        VARCHAR(36),
    ORDER_NUMBER     	    	NUMERIC(4),
    SCRIPT_NAME  	    	VARCHAR(2048),
    ARGUMENT  	    	    VARCHAR(2048),
    CONSTRAINT PK_GATEWAY_GROOVY_SCRIPT PRIMARY KEY (ID),
    CONSTRAINT FK1_GATEWAY_GROOVY_SCRIPT FOREIGN KEY (DIAMETER_GW_PROFILE_ID) REFERENCES TBLM_DIAMETER_GATEWAY_PROFILE(ID),
    CONSTRAINT FK2_GATEWAY_GROOVY_SCRIPT FOREIGN KEY (RADIUS_GW_PROFILE_ID) REFERENCES TBLM_RADIUS_GATEWAY_PROFILE(ID)
);


INSERT INTO TBLM_VENDOR (ID,NAME,DESCRIPTION) VALUES('9','CISCO','CISCO');
INSERT INTO TBLM_VENDOR (ID,NAME,DESCRIPTION) VALUES('2011','Huawei','Huawei');
INSERT INTO TBLM_VENDOR (ID,NAME,DESCRIPTION) VALUES('2636','Juniper','Juniper');
INSERT INTO TBLM_VENDOR (ID,NAME,DESCRIPTION) VALUES('193','Ericsson','Ericsson');
INSERT INTO TBLM_VENDOR (ID,NAME,DESCRIPTION) VALUES('999999999999','Other','Other');
COMMIT;


CREATE TABLE TBLM_SESSION_CONFIGURATION(
  ID                      VARCHAR(36),
  DATABASE_ID             VARCHAR(36) NOT NULL,
  BATCH_UPDATE            NUMERIC DEFAULT '1',
  BATCH_SIZE              NUMERIC,
  BATCH_UPDATE_INTERVAL   NUMERIC,
  QUERY_TIMEOUT           NUMERIC,
  CREATED_DATE            TIMESTAMP,
  CREATED_BY     VARCHAR(36),
  MODIFIED_DATE           TIMESTAMP,
  MODIFIED_BY    VARCHAR(36),
  CONSTRAINT PK_SESSION_CONFIGURATION PRIMARY KEY (ID),
  CONSTRAINT FK1_SESSION_CONFIGURATION FOREIGN KEY (CREATED_BY) REFERENCES TBLM_STAFF (ID),
  CONSTRAINT FK2_SESSION_CONFIGURATION FOREIGN KEY (MODIFIED_BY) REFERENCES TBLM_STAFF (ID),
  CONSTRAINT FK3_SESSION_CONFIGURATION FOREIGN KEY (DATABASE_ID) REFERENCES TBLM_DATABASE_DS (ID)
);

CREATE TABLE TBLM_SESSION_FIELD_MAPPING(
  ID              VARCHAR(36),
  REFERRING_ATTR  VARCHAR(40),
  FIELD_NAME      VARCHAR(20),
  DATA_TYPE       NUMERIC,
  SESSION_CONF_ID VARCHAR(36) NOT NULL ,
  CONSTRAINT PK_SESSION_FIELD_MAPPING PRIMARY KEY (ID),
  CONSTRAINT FK1_SESSION_FIELD_MAPPING FOREIGN KEY (SESSION_CONF_ID) REFERENCES TBLM_SESSION_CONFIGURATION (ID)
);

INSERT INTO TBLM_SESSION_CONFIGURATION (ID,DATABASE_ID,BATCH_UPDATE,CREATED_DATE,CREATED_BY) VALUES ('1','1',1,CURRENT_TIMESTAMP ,'1');
COMMIT;

CREATE TABLE TBLM_SERVER_INSTANCE_GROUP(
	ID                   VARCHAR(36),
	NAME                 VARCHAR(255),
	GROUPS        VARCHAR(400),
	ORDER_NO             NUMERIC(3)  DEFAULT 0,
	SESSION_SYNCHRONIZATION VARCHAR(6) DEFAULT 'FALSE',
	SESSION_DATA_SOURCE_ID VARCHAR(255),
	CREATED_DATE         TIMESTAMP,
	CREATED_BY          VARCHAR(36),
	MODIFIED_DATE        TIMESTAMP,
	MODIFIED_BY         VARCHAR(36),
	CONSTRAINT PK_SERVER_INSTANCE_GROUP PRIMARY KEY (ID),
	CONSTRAINT UK_SERVER_INSTANCE_GROUP UNIQUE  (NAME),
	CONSTRAINT FK1_SERVER_INSTANCE_GROUP FOREIGN KEY (CREATED_BY) REFERENCES TBLM_STAFF (ID),
	CONSTRAINT FK2_SERVER_INSTANCE_GROUP FOREIGN KEY (MODIFIED_BY) REFERENCES TBLM_STAFF (ID)
);


CREATE TABLE TBLM_SERVER_INSTANCE (
  ID VARCHAR(36),
  NAME VARCHAR(255)		NOT NULL,
  DESCRIPTION VARCHAR(255),
  JMX_URL VARCHAR(255)		NOT NULL,
  JAVA_HOME VARCHAR(255),
  SERVER_HOME VARCHAR(255),
  SNMP_URL VARCHAR(100) DEFAULT '0.0.0.0:1161',
  REST_API_URL VARCHAR(100) DEFAULT '0.0.0.0:9000',
  DIA_IS_ENABLE VARCHAR(6) DEFAULT 'true',
  DIA_URL VARCHAR(255) DEFAULT '0.0.0.0:3868',
  DIA_ORIGIN_HOST VARCHAR(255) DEFAULT 'netvertex.sterlite.com',
  DIA_ORIGIN_REALM VARCHAR(255) DEFAULT 'sterlite.com',
  RAD_IS_ENABLE VARCHAR(6) DEFAULT 'false',
  RAD_URL VARCHAR(255) DEFAULT '0.0.0.0:2813',
  EMAIL_AGENT_ID VARCHAR(36),
  SMS_GATEWAY_ID VARCHAR(36),
  STATUS 				VARCHAR(12) DEFAULT 'ACTIVE',
  CREATED_DATE         TIMESTAMP,
  CREATED_BY  VARCHAR(36),
  MODIFIED_DATE        TIMESTAMP,
  MODIFIED_BY VARCHAR(36),
  CONSTRAINT PK_SERVER_INSTANCE  PRIMARY KEY (ID),
  CONSTRAINT UK1_SERVER_INSTANCE UNIQUE (NAME),
  CONSTRAINT FK1_SERVER_INSTANCE FOREIGN KEY (EMAIL_AGENT_ID) REFERENCES TBLM_EMAIL_AGENT (ID),
  CONSTRAINT FK2_SERVER_INSTANCE FOREIGN KEY (SMS_GATEWAY_ID) REFERENCES TBLM_SMS_GATEWAY (ID),
  CONSTRAINT FK4_SERVER_INSTANCE FOREIGN KEY (CREATED_BY) REFERENCES TBLM_STAFF (ID),
  CONSTRAINT FK5_SERVER_INSTANCE FOREIGN KEY (MODIFIED_BY) REFERENCES TBLM_STAFF (ID)
);


CREATE TABLE TBLM_SERVER_INSTANCE_GROUP_REL(
  ID                        VARCHAR(36),
  SERVER_INSTANCE_GROUP_ID  VARCHAR(36),
  SERVER_INSTANCE_ID     VARCHAR(36),
  SERVER_WEIGHTAGE          NUMERIC(2),
  CONSTRAINT PK_SERVER_INSTANCE_GROUP_REL PRIMARY KEY (SERVER_INSTANCE_GROUP_ID, SERVER_INSTANCE_ID),
  CONSTRAINT FK1_SERVER_INSTANCE_GROUP_REL FOREIGN KEY (SERVER_INSTANCE_GROUP_ID) REFERENCES TBLM_SERVER_INSTANCE_GROUP(ID),
  CONSTRAINT FK2_SERVER_INSTANCE_GROUP_REL FOREIGN KEY (SERVER_INSTANCE_ID) REFERENCES TBLM_SERVER_INSTANCE(id)
);


CREATE TABLE TBLM_SERVER_PROFILE (
  ID VARCHAR(36),
  LOG_LEVEL VARCHAR(6) DEFAULT 'INFO',
  ROLLING_TYPE NUMERIC DEFAULT 1,
  ROLLING_UNITS NUMERIC DEFAULT 5,
  MAX_ROLLED_UNITS NUMERIC DEFAULT 1,
  DIA_QUEUE_SIZE NUMERIC DEFAULT 10000,
  DIA_MINIMUM_THREADS NUMERIC DEFAULT 5,
  DIA_MAXIMUM_THREADS NUMERIC DEFAULT 10,
  DIA_DW_INTERVAL NUMERIC DEFAULT 60,
  DIA_DUPLICATE_REQ_CHECK VARCHAR(6) DEFAULT 'false',
  DIA_DUPLICATE_REQ_PURGE_INTRVL NUMERIC DEFAULT 15,
  DIA_SESSION_CLEAN_UP_INTERVAL NUMERIC DEFAULT 86400,
  DIA_SESSION_TIMEOUT NUMERIC DEFAULT 86400,
  RAD_QUEUE_SIZE NUMERIC DEFAULT 10000,
  RAD_MINIMUM_THREADS NUMERIC DEFAULT 5,
  RAD_MAXIMUM_THREADS NUMERIC DEFAULT 10,
  RAD_DUPLICATE_REQ_CHECK VARCHAR(6) DEFAULT 'false',
  RAD_DUPLICATE_REQ_PURGE_INTRVL NUMERIC DEFAULT 15,
  NOTIF_SRVC_EXEC_PERIOD NUMERIC DEFAULT 30,
  MAX_PARALLEL_EXECUTION NUMERIC DEFAULT 5,
  BATCH_SIZE NUMERIC DEFAULT 10,
  PCRF_SERVICE_QUEUE_SIZE NUMERIC DEFAULT 10000,
  PCRF_SERVICE_MAXIMUM_THREADS NUMERIC DEFAULT 10,
  PCRF_SERVICE_MINIMUM_THREADS NUMERIC DEFAULT 5,
  PCRF_SRVC_WRKR_THREAD_PRIORITY NUMERIC DEFAULT 7,
  CREATED_DATE         TIMESTAMP,
  CREATED_BY           VARCHAR(36),
  MODIFIED_DATE        TIMESTAMP,
  MODIFIED_BY          VARCHAR(36),
  CONSTRAINT PK_SERVER_PROFILE  PRIMARY KEY (ID)
);


INSERT INTO TBLM_SERVER_PROFILE ( ID, LOG_LEVEL ,ROLLING_TYPE , ROLLING_UNITS , MAX_ROLLED_UNITS,
DIA_QUEUE_SIZE , DIA_MINIMUM_THREADS , DIA_MAXIMUM_THREADS , 
DIA_DW_INTERVAL ,DIA_DUPLICATE_REQ_CHECK ,DIA_DUPLICATE_REQ_PURGE_INTRVL , 
DIA_SESSION_CLEAN_UP_INTERVAL , DIA_SESSION_TIMEOUT ,RAD_QUEUE_SIZE , 
RAD_MINIMUM_THREADS , RAD_MAXIMUM_THREADS , RAD_DUPLICATE_REQ_CHECK , 
RAD_DUPLICATE_REQ_PURGE_INTRVL ,NOTIF_SRVC_EXEC_PERIOD , MAX_PARALLEL_EXECUTION , 
BATCH_SIZE ,PCRF_SERVICE_QUEUE_SIZE , PCRF_SERVICE_MAXIMUM_THREADS , 
PCRF_SERVICE_MINIMUM_THREADS , PCRF_SRVC_WRKR_THREAD_PRIORITY ,CREATED_DATE , CREATED_BY )
values (1,'INFO',1,5,1,10000,5,10,60,'false',15,86400, 86400, 10000,5, 10, 'false',15,30,5,10,10000,10,5,7,CURRENT_TIMESTAMP,'1');
COMMIT;



CREATE TABLE TBLM_DEVICE_PROFILE (
	ID VARCHAR(36),
	STATUS VARCHAR(12) DEFAULT 'ACTIVE',
	TAC NUMERIC(8),
	BRAND VARCHAR(512),
	MODEL VARCHAR(512),
	HARDWARE_TYPE VARCHAR(512),
	OS VARCHAR(512),
	YEAR  NUMERIC(4),
	ADDITIONAL_INFORMATION VARCHAR(200),
	CREATED_DATE TIMESTAMP,
	CREATED_BY VARCHAR(36),
	MODIFIED_DATE TIMESTAMP,
	MODIFIED_BY VARCHAR(36),
	CONSTRAINT PK_DEVICE_PROFILE PRIMARY KEY (ID),
	CONSTRAINT FK1_DEVICE_PROFILE FOREIGN KEY (CREATED_BY) REFERENCES TBLM_STAFF(ID),
	CONSTRAINT FK2_DEVICE_PROFILE FOREIGN KEY (MODIFIED_BY) REFERENCES TBLM_STAFF(ID)
);

-- FK INDEX
create index IDXR7_MUSAGENOTIFICATION ON TBLM_USAGE_NOTIFICATION (MODIFIED_BY);
create index IDXR1_MNOTIFICATIONTEMPL ON TBLM_NOTIFICATION_TEMPLATE (CREATED_BY);
create index IDXR1_MIMSPACKAGESERV ON TBLM_IMS_PACKAGE_SERVICE (IMS_PACKAGE_ID);
create index IDXR1_MPCCRULE ON TBLM_PCC_RULE (SERVICE_TYPE_ID);
create index IDXR1_MPACKAGE ON TBLM_PACKAGE (CREATED_BY);
create index IDXR4_MUSAGENOTIFICATION ON TBLM_USAGE_NOTIFICATION (EMAIL_TEMPLATE_ID);
create index IDXR2_MQUOTAPROFILEDETL ON TBLM_QUOTA_PROFILE_DETAIL (SERVICE_TYPE_ID);
create index IDXR2_MPACKAGE ON TBLM_PACKAGE (MODIFIED_BY);
create index IDXR1_MUSAGENOTIFICATION ON TBLM_USAGE_NOTIFICATION (PACKAGE_ID);
create index IDXR2_MIMSPACKAGE ON TBLM_IMS_PACKAGE (MODIFIED_BY);
create index IDXR2_MQUOTAPROFILE ON TBLM_QUOTA_PROFILE (CREATED_BY);
create index IDXR1_MDEVICE_PROFILE ON TBLM_DEVICE_PROFILE (CREATED_BY);
create index IDXR2_MDEVICE_PROFILE ON TBLM_DEVICE_PROFILE (MODIFIED_BY);


CREATE TABLE TBLM_SP_INTERFACE (
  ID 				        VARCHAR(36),
  NAME           		VARCHAR(100) NOT NULL,
  STATUS            VARCHAR(12) DEFAULT 'ACTIVE',
  GROUPS            VARCHAR(400),
  DESCRIPTION       VARCHAR(2000),
  SP_INTERFACE_TYPE VARCHAR(30) NOT NULL ,
  CREATED_DATE      TIMESTAMP,
  CREATED_BY  	    VARCHAR(36),
  MODIFIED_DATE     TIMESTAMP,
  MODIFIED_BY 	    VARCHAR(36),
  CONSTRAINT PK_SP_INTERFACE PRIMARY KEY (ID),
  CONSTRAINT FK1_SP_INTERFACE FOREIGN KEY (CREATED_BY) REFERENCES TBLM_STAFF (ID),
  CONSTRAINT FK2_SP_INTERFACE FOREIGN KEY (MODIFIED_BY) REFERENCES TBLM_STAFF (ID)
);

create index IDXR1_MSP_INTERFACE ON TBLM_SP_INTERFACE (CREATED_BY);
create index IDXR2_MSP_INTERFACE ON TBLM_SP_INTERFACE (MODIFIED_BY);

COMMENT ON TABLE TBLM_SP_INTERFACE IS 'Store basic detail of Sp Interface';
COMMENT ON COLUMN TBLM_SP_INTERFACE.ID IS 'Store unique identity';
COMMENT ON COLUMN TBLM_SP_INTERFACE.NAME IS 'Store unique name';
COMMENT ON COLUMN TBLM_SP_INTERFACE.DESCRIPTION IS 'Store additional information about entity';
COMMENT ON COLUMN TBLM_SP_INTERFACE.STATUS IS 'Store status i.e. ACTIVE';
COMMENT ON COLUMN TBLM_SP_INTERFACE.GROUPS IS 'Store list of group ids';
COMMENT ON COLUMN TBLM_SP_INTERFACE.SP_INTERFACE_TYPE IS 'Store type od Sp interface. possible values will be DB_SP_INTERFACE/LDAP_SP_INTERFACE';
COMMENT ON COLUMN TBLM_SP_INTERFACE.CREATED_DATE IS 'Store Date on which this entity created';
COMMENT ON COLUMN TBLM_SP_INTERFACE.CREATED_BY IS 'Store id of the staff who created this entity';
COMMENT ON COLUMN TBLM_SP_INTERFACE.MODIFIED_DATE IS 'Store Date on which this entity modified';
COMMENT ON COLUMN TBLM_SP_INTERFACE.MODIFIED_BY IS 'Store id of the staff who modified this entity';


CREATE TABLE TBLM_DB_SP_INTERFACE(
  ID 				      VARCHAR(36),
  DATABASE_ID	    VARCHAR(36),
  TABLE_NAME 	    VARCHAR(32),
  IDENTITY_FIELD  VARCHAR(50),
  MAX_QUERY_TIMEOUT_COUNT 	NUMERIC,
  SP_INTERFACE_ID VARCHAR(36) ,
  CONSTRAINT PK_DB_SP_INTERFACE PRIMARY KEY (ID),
  CONSTRAINT FK1_DB_SP_INTERFACE  FOREIGN KEY (DATABASE_ID) REFERENCES TBLM_DATABASE_DS (ID),
  CONSTRAINT FK2_DB_SP_INTERFACE  FOREIGN KEY (SP_INTERFACE_ID) REFERENCES TBLM_SP_INTERFACE (ID)
);

create index IDXR1_MDB_SP_INTERFACE ON TBLM_DB_SP_INTERFACE (DATABASE_ID);
create index IDXR2_MDB_SP_INTERFACE ON TBLM_DB_SP_INTERFACE (SP_INTERFACE_ID)

COMMENT ON TABLE TBLM_DB_SP_INTERFACE IS 'Store detail of DB Sp Interface';
COMMENT ON COLUMN TBLM_DB_SP_INTERFACE.ID IS 'Store unique identity';
COMMENT ON COLUMN TBLM_DB_SP_INTERFACE.DATABASE_ID IS 'Store database datasource id';
COMMENT ON COLUMN TBLM_DB_SP_INTERFACE.TABLE_NAME IS 'Store table name of related database datasource';
COMMENT ON COLUMN TBLM_DB_SP_INTERFACE.IDENTITY_FIELD IS 'Store column name of related database datasource';
COMMENT ON COLUMN TBLM_DB_SP_INTERFACE.MAX_QUERY_TIMEOUT_COUNT IS 'Store maximum timeout count for query';
COMMENT ON COLUMN TBLM_DB_SP_INTERFACE.SP_INTERFACE_ID IS 'Store sp interface id';

CREATE TABLE TBLM_LDAP_SP_INTERFACE(
  ID 				          VARCHAR(36),
  LDAP_ID			        VARCHAR(36),
  EXPIRYDATE_PATTERN 	VARCHAR(25),
  PASSWORD_DECRYPT_TYPE NUMERIC,
  QUERY_MAX_EXEC_TIME	NUMERIC,
  SP_INTERFACE_ID 		VARCHAR(36) ,
  CONSTRAINT PK_LDAP_SP_INTERFACE PRIMARY KEY (ID),
  CONSTRAINT FK1_LDAP_SP_INTERFACE  FOREIGN KEY (LDAP_ID) REFERENCES TBLM_LDAP_DS (ID),
  CONSTRAINT FK2_LDAP_SP_INTERFACE  FOREIGN KEY (SP_INTERFACE_ID) REFERENCES TBLM_SP_INTERFACE (ID)
);

create index IDXR1_LDAP_SP_INTERFACE ON TBLM_LDAP_SP_INTERFACE (LDAP_ID);
create index IDXR2_LDAP_SP_INTERFACE ON TBLM_LDAP_SP_INTERFACE (SP_INTERFACE_ID);


COMMENT ON TABLE TBLM_LDAP_SP_INTERFACE IS 'Store detail of Ldap Sp Interface';
COMMENT ON COLUMN TBLM_LDAP_SP_INTERFACE.ID IS 'Store unique identity';
COMMENT ON COLUMN TBLM_LDAP_SP_INTERFACE.EXPIRYDATE_PATTERN IS 'Store date pattern of expiry';
COMMENT ON COLUMN TBLM_LDAP_SP_INTERFACE.PASSWORD_DECRYPT_TYPE IS 'Store password decrypt type';
COMMENT ON COLUMN TBLM_LDAP_SP_INTERFACE.LDAP_ID IS 'Store ldap datasource id';
COMMENT ON COLUMN TBLM_LDAP_SP_INTERFACE.QUERY_MAX_EXEC_TIME IS 'Store maximum execution time for query';
COMMENT ON COLUMN TBLM_LDAP_SP_INTERFACE.SP_INTERFACE_ID IS 'Store sp interface id';

CREATE TABLE TBLM_SP_INTERFACE_FIELD_MAP(
  ID 			      VARCHAR(36),
  LOGICAL_NAME 	VARCHAR(50),
  FIELD_NAME 	  VARCHAR(50),
  SP_INTERFACE_TYPE_ID   VARCHAR(36),
  CONSTRAINT PK_SP_INTERFACE_FIELD_MAP PRIMARY KEY (ID)
);

COMMENT ON TABLE TBLM_SP_INTERFACE_FIELD_MAP IS 'Store field mapping information of Sp interface';
COMMENT ON COLUMN TBLM_SP_INTERFACE_FIELD_MAP.ID IS 'Store unique identity';
COMMENT ON COLUMN TBLM_SP_INTERFACE_FIELD_MAP.LOGICAL_NAME IS 'Store logical name of the field';
COMMENT ON COLUMN TBLM_SP_INTERFACE_FIELD_MAP.FIELD_NAME IS 'Store field name for defined mapping';
COMMENT ON COLUMN TBLM_SP_INTERFACE_FIELD_MAP.SP_INTERFACE_TYPE_ID IS 'Store id of Sp interface type i.e either of DB Sp Interface or LDAP Sp Interface';

CREATE TABLE TBLM_SPR(
  ID                  VARCHAR(36),
  NAME                VARCHAR(100) NOT NULL,
  DESCRIPTION         VARCHAR(2000),
  DATABASE_ID         VARCHAR(36) NOT NULL,
  SP_INTERFACE_ID     VARCHAR(36),
  BATCH_SIZE          NUMERIC DEFAULT 100,
  ALTERNATE_ID_FIELD  VARCHAR(255),
  GROUPS              VARCHAR(400),
  STATUS               VARCHAR(12) DEFAULT 'ACTIVE',
  CREATED_DATE        TIMESTAMP,
  CREATED_BY          VARCHAR(36),
  MODIFIED_DATE       TIMESTAMP,
  MODIFIED_BY         VARCHAR(36),
  CONSTRAINT PK_SPR PRIMARY KEY(ID),
  CONSTRAINT FK1_SPR FOREIGN KEY(DATABASE_ID) REFERENCES TBLM_DATABASE_DS(ID),
  CONSTRAINT FK2_SPR FOREIGN KEY(SP_INTERFACE_ID) REFERENCES TBLM_SP_INTERFACE(ID),
  CONSTRAINT FK3_SPR FOREIGN KEY (CREATED_BY) REFERENCES TBLM_STAFF (ID),
  CONSTRAINT FK4_SPR FOREIGN KEY (MODIFIED_BY) REFERENCES TBLM_STAFF (ID)
);

create index IDXR1_MSPR ON TBLM_SPR (DATABASE_ID);
create index IDXR2_MSPR ON TBLM_SPR (SP_INTERFACE_ID);
create index IDXR3_MSPR ON TBLM_SPR (CREATED_BY);
create index IDXR4_MSPR ON TBLM_SPR (MODIFIED_BY);

COMMENT ON TABLE TBLM_SPR IS 'Store detail information of Sp Interface';
COMMENT ON COLUMN TBLM_SPR.ID IS 'Store unique identity';
COMMENT ON COLUMN TBLM_SPR.NAME IS 'Store unique name';
COMMENT ON COLUMN TBLM_SPR.DESCRIPTION IS 'Store additional information about entity';
COMMENT ON COLUMN TBLM_SPR.GROUPS IS 'Store list of group ids';
COMMENT ON COLUMN TBLM_SPR.DATABASE_ID IS 'Store database datasource id';
COMMENT ON COLUMN TBLM_SPR.SP_INTERFACE_ID IS 'Store sp interface id';
COMMENT ON COLUMN TBLM_SPR.BATCH_SIZE IS 'Store batch size';
COMMENT ON COLUMN TBLM_SPR.ALTERNATE_ID_FIELD IS 'Store alternate id field';
COMMENT ON COLUMN TBLM_SPR.CREATED_DATE IS 'Store Date on which this entity created';
COMMENT ON COLUMN TBLM_SPR.CREATED_BY IS 'Store id of the staff who created this entity';
COMMENT ON COLUMN TBLM_SPR.MODIFIED_DATE IS 'Store Date on which this entity modified';
COMMENT ON COLUMN TBLM_SPR.MODIFIED_BY IS 'Store id of the staff who modified this entity';

CREATE TABLE TBLM_DDF_TABLE(
  ID                   VARCHAR(36),
  GROUPS              VARCHAR(400),
  DEFAULT_SPR_ID       VARCHAR(36),
  STRIP_PREFIXES       VARCHAR(100),
  CREATED_DATE         TIMESTAMP,
  CREATED_BY           VARCHAR(36),
  MODIFIED_DATE        TIMESTAMP,
  MODIFIED_BY          VARCHAR(36),
  CONSTRAINT PK_DDF_TABLE PRIMARY KEY(ID),
  CONSTRAINT FK1_DDF_TABLE FOREIGN KEY (DEFAULT_SPR_ID) REFERENCES TBLM_SPR (ID),
  CONSTRAINT FK2_DDF_TABLE FOREIGN KEY (CREATED_BY) REFERENCES TBLM_STAFF (ID),
  CONSTRAINT FK3_DDF_TABLE FOREIGN KEY (MODIFIED_BY) REFERENCES TBLM_STAFF (ID)
);

create index IDXR2_MDDF_TABLE ON TBLM_DDF_TABLE (DEFAULT_SPR_ID);
create index IDXR1_MDDF_TABLE ON TBLM_DDF_TABLE (CREATED_BY);
create index IDXR3_MDDF_TABLE ON TBLM_DDF_TABLE (MODIFIED_BY);

COMMENT ON TABLE TBLM_DDF_TABLE IS 'Store basic detail information of ddf';
COMMENT ON COLUMN TBLM_DDF_TABLE.ID IS 'Store unique identity';
COMMENT ON COLUMN TBLM_DDF_TABLE.GROUPS IS 'Store list of group ids';
COMMENT ON COLUMN TBLM_DDF_TABLE.DEFAULT_SPR_ID IS 'Store default spr id';
COMMENT ON COLUMN TBLM_DDF_TABLE.STRIP_PREFIXES IS 'Store strip prefixes';
COMMENT ON COLUMN TBLM_DDF_TABLE.CREATED_DATE IS 'Store Date on which this entity created';
COMMENT ON COLUMN TBLM_DDF_TABLE.CREATED_BY IS 'Store id of the staff who created this entity';
COMMENT ON COLUMN TBLM_DDF_TABLE.MODIFIED_DATE IS 'Store Date on which this entity modified';
COMMENT ON COLUMN TBLM_DDF_TABLE.MODIFIED_BY IS 'Store id of the staff who modified this entity';
--DEFAULT ENTRY FOR DDF
INSERT INTO TBLM_DDF_TABLE (ID,CREATED_DATE,CREATED_BY) VALUES ('1',CURRENT_TIMESTAMP,'1');
COMMIT;

-- FOR DDF TO SPR RELATION TABLE

CREATE TABLE TBLM_DDF_SPR_REL(
  ID                    VARCHAR(36) NOT NULL ,
  IDENTITY_PATTERN      VARCHAR(255),
  SPR_ID                VARCHAR(36),
  ORDER_NO              NUMERIC,
  DDF_TABLE_ID          VARCHAR(36),
  CONSTRAINT PK_DDF_SPR_REL PRIMARY KEY(ID),
  CONSTRAINT FK1_DDF_SPR_REL FOREIGN KEY (SPR_ID) REFERENCES TBLM_SPR(ID),
  CONSTRAINT FK2_DDF_SPR_REL FOREIGN KEY (DDF_TABLE_ID) REFERENCES TBLM_DDF_TABLE(ID)
);

create index IDXR1_MDDF_SPR_REL ON TBLM_DDF_SPR_REL (SPR_ID);
create index IDXR2_MDDF_SPR_REL ON TBLM_DDF_SPR_REL (DDF_TABLE_ID);

COMMENT ON TABLE TBLM_DDF_SPR_REL IS 'Store information about ddf spr relation';
COMMENT ON COLUMN TBLM_DDF_SPR_REL.ID IS 'Store unique identity';
COMMENT ON COLUMN TBLM_DDF_SPR_REL.IDENTITY_PATTERN IS 'Store identity pattern for ddf';
COMMENT ON COLUMN TBLM_DDF_SPR_REL.SPR_ID IS 'Store spr id for ddf';
COMMENT ON COLUMN TBLM_DDF_SPR_REL.ORDER_NO IS 'Store order number';
COMMENT ON COLUMN TBLM_DDF_SPR_REL.DDF_TABLE_ID IS 'Store ddf table id';


CREATE TABLE TBLM_DRIVER(
  ID 		              VARCHAR(36),
  NAME                VARCHAR(100) NOT NULL,
  DESCRIPTION         VARCHAR(2000),
  STATUS              VARCHAR(12) DEFAULT 'ACTIVE',
  GROUPS              VARCHAR(400),
  DRIVER_TYPE         VARCHAR(50),
  CREATED_DATE        TIMESTAMP,
  CREATED_BY          VARCHAR(36),
  MODIFIED_DATE       TIMESTAMP,
  MODIFIED_BY         VARCHAR(36),
  CONSTRAINT PK_DRIVER PRIMARY KEY (ID),
  CONSTRAINT FK1_DRIVER FOREIGN KEY (CREATED_BY) REFERENCES TBLM_STAFF (ID),
  CONSTRAINT FK2_DRIVER FOREIGN KEY (MODIFIED_BY) REFERENCES TBLM_STAFF (ID)
);

create index IDXR1_M_DRIVER ON TBLM_DRIVER (CREATED_BY);
create index IDXR2_M_DRIVER ON TBLM_DRIVER (MODIFIED_BY);

COMMENT ON TABLE TBLM_DRIVER IS 'Store basic detail';
COMMENT ON COLUMN TBLM_DRIVER.ID IS 'Store unique identity';
COMMENT ON COLUMN TBLM_DRIVER.NAME IS 'Store unique name';
COMMENT ON COLUMN TBLM_DRIVER.DESCRIPTION IS 'Store additional information about entity';
COMMENT ON COLUMN TBLM_DRIVER.STATUS IS 'Store status i.e. ACTIVE';
COMMENT ON COLUMN TBLM_DRIVER.GROUPS IS 'Store list of group ids';
COMMENT ON COLUMN TBLM_DRIVER.DRIVER_TYPE IS 'Store type of driver. possible values will be Csv Driver/DB CDR Driver';
COMMENT ON COLUMN TBLM_DRIVER.CREATED_DATE IS 'Store Date on which this entity created';
COMMENT ON COLUMN TBLM_DRIVER.CREATED_BY IS 'Store id of the staff who created this entity';
COMMENT ON COLUMN TBLM_DRIVER.MODIFIED_DATE IS 'Store Date on which this entity modified';
COMMENT ON COLUMN TBLM_DRIVER.MODIFIED_BY IS 'Store id of the staff who modified this entity';


CREATE TABLE TBLM_CSV_DRIVER(
  ID			            VARCHAR(36),
  DRIVER_ID 		      VARCHAR(36),
  HEADER 			        VARCHAR(6),
  DELIMITER			      VARCHAR(1),
  TIMESTAMP_FORMAT		VARCHAR(128),
  FILE_NAME			      VARCHAR(64),
  FILE_LOCATION		    VARCHAR(512),
  PREFIX_FILE_NAME		VARCHAR(64),
  DEFAULT_FOLDER_NAME	VARCHAR(64),
  FOLDER_NAME			    VARCHAR(64),
  TIME_BOUNDARY			  NUMERIC,
  TIME_BASED_ROLLING_UNIT NUMERIC,
  SIZE_BASED_ROLLING_UNIT NUMERIC,
  RECORD_BASED_ROLLING_UNIT NUMERIC,
  SEQUENCE_RANGE		  VARCHAR(40),
  SEQUENCE_POSITION		VARCHAR(40),
  SEQUENCE_GLOBALIZATION	VARCHAR(6),
  ALLOCATING_PROTOCOL		VARCHAR(16),
  ADDRESS			VARCHAR(255),
  REMOTE_FILE_LOCATION		VARCHAR(512),
  USERNAME			VARCHAR(64),
  PASSWORD			VARCHAR(64),
  POST_OPERATION		VARCHAR(32),
  ARCHIVE_LOCATION		VARCHAR(255),
  FAILOVER_TIME		NUMERIC(10),
  REPORTING_TYPE		VARCHAR(20),
  INPUT_OCTETS_HEADER		VARCHAR(30),
  OUTPUT_OCTETS_HEADER		VARCHAR(30),
  TOTAL_OCTETS_HEADER		VARCHAR(30),
  USAGE_TIME_HEADER		VARCHAR(30),
  USAGE_KEY_HEADER		VARCHAR(30),
  CONSTRAINT PK_CSV_DRIVER PRIMARY KEY (ID),
  CONSTRAINT FK1_CSV_DRIVER FOREIGN KEY  (DRIVER_ID) REFERENCES TBLM_DRIVER(ID)
);

create index IDXR1_MCSV_DRIVER ON TBLM_CSV_DRIVER (DRIVER_ID);
COMMENT ON TABLE TBLM_CSV_DRIVER IS 'Store csv driver related information';
COMMENT ON COLUMN TBLM_CSV_DRIVER.ID IS 'Store unique identity';
COMMENT ON COLUMN TBLM_CSV_DRIVER.DRIVER_ID IS 'Store id of parent table';
COMMENT ON COLUMN TBLM_CSV_DRIVER.HEADER IS 'Store true/false value for header';
COMMENT ON COLUMN TBLM_CSV_DRIVER.DELIMITER IS 'Store delimiter for separator';
COMMENT ON COLUMN TBLM_CSV_DRIVER.TIMESTAMP_FORMAT IS 'Store time stamp format';
COMMENT ON COLUMN TBLM_CSV_DRIVER.FILE_NAME IS 'Store file name';
COMMENT ON COLUMN TBLM_CSV_DRIVER.FILE_LOCATION IS 'Store location of the file';
COMMENT ON COLUMN TBLM_CSV_DRIVER.PREFIX_FILE_NAME IS 'Store prefix for the file name';
COMMENT ON COLUMN TBLM_CSV_DRIVER.DEFAULT_FOLDER_NAME IS 'Store default folder name';
COMMENT ON COLUMN TBLM_CSV_DRIVER.FOLDER_NAME IS 'Store folder name';
COMMENT ON COLUMN TBLM_CSV_DRIVER.TIME_BOUNDARY IS 'Store time boundary in minutes';
COMMENT ON COLUMN TBLM_CSV_DRIVER.TIME_BASED_ROLLING_UNIT IS 'Store time based rolling unit';
COMMENT ON COLUMN TBLM_CSV_DRIVER.SIZE_BASED_ROLLING_UNIT IS 'Store size based rolling unit';
COMMENT ON COLUMN TBLM_CSV_DRIVER.RECORD_BASED_ROLLING_UNIT IS 'Store record base rolling unit';
COMMENT ON COLUMN TBLM_CSV_DRIVER.SEQUENCE_RANGE IS 'Store sequence range';
COMMENT ON COLUMN TBLM_CSV_DRIVER.SEQUENCE_POSITION IS 'Store sequence position, possible value is suffix or prefix';
COMMENT ON COLUMN TBLM_CSV_DRIVER.SEQUENCE_GLOBALIZATION IS 'Store sequence globalization possible value is true or false ';
COMMENT ON COLUMN TBLM_CSV_DRIVER.ALLOCATING_PROTOCOL IS 'Store file allocationg protocol , possible values are FTP, SMTP and LOCAL';
COMMENT ON COLUMN TBLM_CSV_DRIVER.ADDRESS IS 'Store address';
COMMENT ON COLUMN TBLM_CSV_DRIVER.REMOTE_FILE_LOCATION IS 'Store remote file location';
COMMENT ON COLUMN TBLM_CSV_DRIVER.USERNAME IS 'Store user name';
COMMENT ON COLUMN TBLM_CSV_DRIVER.PASSWORD IS 'Store encrypted password';
COMMENT ON COLUMN TBLM_CSV_DRIVER.POST_OPERATION IS 'Store post operation';
COMMENT ON COLUMN TBLM_CSV_DRIVER.ARCHIVE_LOCATION IS 'Store archive location';
COMMENT ON COLUMN TBLM_CSV_DRIVER.FAILOVER_TIME IS 'Store fail over time';
COMMENT ON COLUMN TBLM_CSV_DRIVER.REPORTING_TYPE IS 'Store reporting type, possible values are usage metering base and MSCC base';
COMMENT ON COLUMN TBLM_CSV_DRIVER.INPUT_OCTETS_HEADER IS 'Store input octet header';
COMMENT ON COLUMN TBLM_CSV_DRIVER.OUTPUT_OCTETS_HEADER IS 'Store output octet header';
COMMENT ON COLUMN TBLM_CSV_DRIVER.TOTAL_OCTETS_HEADER IS 'Store total octet header';
COMMENT ON COLUMN TBLM_CSV_DRIVER.USAGE_TIME_HEADER IS 'Store usage time header';
COMMENT ON COLUMN TBLM_CSV_DRIVER.USAGE_KEY_HEADER IS 'Store usage key header';


CREATE TABLE TBLM_CSV_DRIVER_FIELD_MAP(
  ID                VARCHAR(36),
  HEADER_FIELD		  VARCHAR(255),
  PCRFKEY			      VARCHAR(255),
  CSV_DRIVER_ID		  VARCHAR(36),
  ORDER_NO          NUMERIC,
  CONSTRAINT PK_CSV_DRIVER_FIELD_MAP PRIMARY KEY (ID)
);

COMMENT ON TABLE TBLM_CSV_DRIVER_FIELD_MAP IS 'Store csv driver field mapping related information';
COMMENT ON COLUMN TBLM_CSV_DRIVER_FIELD_MAP.ID IS 'Store unique identity';
COMMENT ON COLUMN TBLM_CSV_DRIVER_FIELD_MAP.HEADER_FIELD IS 'Store header field';
COMMENT ON COLUMN TBLM_CSV_DRIVER_FIELD_MAP.PCRFKEY IS 'Store PCRF key';
COMMENT ON COLUMN TBLM_CSV_DRIVER_FIELD_MAP.CSV_DRIVER_ID IS 'Store parent table id of csv driver';
COMMENT ON COLUMN TBLM_CSV_DRIVER_FIELD_MAP.ORDER_NO IS 'Store order no';

CREATE TABLE  TBLM_CSV_DRIVER_STRIP_MAP (
  ID                VARCHAR(36),
  PCRFKEY			    VARCHAR(255),
  PATTERN	 	        VARCHAR(8),
  SEPARATOR	 	      VARCHAR(1),
  CSV_DRIVER_ID		  VARCHAR(36),
  CONSTRAINT PK_CSV_STRIP_MAP PRIMARY KEY (ID)
);

COMMENT ON TABLE TBLM_CSV_DRIVER_STRIP_MAP IS 'Store csv driver strip mapping related information';
COMMENT ON COLUMN TBLM_CSV_DRIVER_STRIP_MAP.ID IS 'Store unique identity';
COMMENT ON COLUMN TBLM_CSV_DRIVER_STRIP_MAP.PCRFKEY IS 'Store PCRF key';
COMMENT ON COLUMN TBLM_CSV_DRIVER_STRIP_MAP.PATTERN IS 'Store pattern';
COMMENT ON COLUMN TBLM_CSV_DRIVER_STRIP_MAP.SEPARATOR IS 'Store separator';
COMMENT ON COLUMN TBLM_CSV_DRIVER_STRIP_MAP.CSV_DRIVER_ID IS 'Store parent table id of csv driver';

CREATE TABLE TBLM_DB_CDR_DRIVER(
  ID                            VARCHAR(36),
  DATABASE_ID            	      VARCHAR(36),
  MAX_QUERY_TIMEOUT_COUNT	      NUMERIC,
  BATCH_UPDATE		              VARCHAR(6),
  BATCH_SIZE			              NUMERIC,
  BATCH_UPDATE_INTERVAL		      NUMERIC,
  BATCH_UPDATE_QUERY_TIMEOUT		NUMERIC,
  TABLE_NAME			              VARCHAR(30),
  IDENTITY_FIELD		            VARCHAR(30),
  SEQUENCE_NAME		              VARCHAR(30),
  STORE_ALL_CDR			            VARCHAR(6),
  TIMESTAMP_FIELD_NAME		      VARCHAR(128),
  REPORTING_TYPE		            VARCHAR(20),
  SESSION_ID_FIELD_NAME		      VARCHAR(30),
  CREATE_DATE_FIELD_NAME		    VARCHAR(30),
  LAST_MODIFIED_DATE_FIELD_NAME	VARCHAR(30),
  INPUT_OCTETS_FIELD_NAME	      VARCHAR(30),
  OUTPUT_OCTETS_FIELD_NAME	    VARCHAR(30),
  TOTAL_OCTETS_FIELD_NAME	      VARCHAR(30),
  USAGE_TIME_FIELD_NAME		      VARCHAR(30),
  USAGE_KEY_FIELD_NAME		      VARCHAR(30),
  DRIVER_ID		                  VARCHAR(36),
  CONSTRAINT PK_DB_CDR_DRIVER PRIMARY KEY (ID),
  CONSTRAINT FK1_DB_CDR_DRIVER  FOREIGN KEY (DATABASE_ID) REFERENCES TBLM_DATABASE_DS (ID),
  CONSTRAINT FK2_DB_CDR_DRIVER  FOREIGN KEY (DRIVER_ID) REFERENCES TBLM_DRIVER (ID)
);

create index IDXR1_MDB_CDR_DRIVER ON TBLM_DB_CDR_DRIVER (DATABASE_ID);
create index IDXR2_MDB_CDR_DRIVER ON TBLM_DB_CDR_DRIVER (DRIVER_ID);
COMMENT ON TABLE TBLM_DB_CDR_DRIVER IS 'Store db cdr driver field mapping related information';
COMMENT ON COLUMN TBLM_DB_CDR_DRIVER.ID IS 'Store unique identity';
COMMENT ON COLUMN TBLM_DB_CDR_DRIVER.DATABASE_ID IS 'Store database datasource id';
COMMENT ON COLUMN TBLM_DB_CDR_DRIVER.MAX_QUERY_TIMEOUT_COUNT IS 'Store maximum timeout count of query';
COMMENT ON COLUMN TBLM_DB_CDR_DRIVER.BATCH_UPDATE IS 'Store batch update, possible value is true or false';
COMMENT ON COLUMN TBLM_DB_CDR_DRIVER.BATCH_SIZE IS 'Store batch size';
COMMENT ON COLUMN TBLM_DB_CDR_DRIVER.BATCH_UPDATE_INTERVAL IS 'Store batch update interval';
COMMENT ON COLUMN TBLM_DB_CDR_DRIVER.BATCH_UPDATE_QUERY_TIMEOUT IS 'Store batch update query timeout';
COMMENT ON COLUMN TBLM_DB_CDR_DRIVER.TABLE_NAME IS 'Store table name';
COMMENT ON COLUMN TBLM_DB_CDR_DRIVER.IDENTITY_FIELD IS 'Store identity field';
COMMENT ON COLUMN TBLM_DB_CDR_DRIVER.SEQUENCE_NAME IS 'Store sequence name';
COMMENT ON COLUMN TBLM_DB_CDR_DRIVER.STORE_ALL_CDR IS 'Store all cdr information , possible value is true or false';
COMMENT ON COLUMN TBLM_DB_CDR_DRIVER.TIMESTAMP_FIELD_NAME IS 'Store timestamp field name';
COMMENT ON COLUMN TBLM_DB_CDR_DRIVER.REPORTING_TYPE IS 'Store reporting type, possible values are usage metering base and MSCC base';
COMMENT ON COLUMN TBLM_DB_CDR_DRIVER.SESSION_ID_FIELD_NAME IS 'Store session id field name';
COMMENT ON COLUMN TBLM_DB_CDR_DRIVER.CREATE_DATE_FIELD_NAME IS 'Store created date field name';
COMMENT ON COLUMN TBLM_DB_CDR_DRIVER.LAST_MODIFIED_DATE_FIELD_NAME IS 'Store last modfied date field name';
COMMENT ON COLUMN TBLM_DB_CDR_DRIVER.INPUT_OCTETS_FIELD_NAME IS 'Store input octet field name';
COMMENT ON COLUMN TBLM_DB_CDR_DRIVER.OUTPUT_OCTETS_FIELD_NAME IS 'Store output octet field na,e';
COMMENT ON COLUMN TBLM_DB_CDR_DRIVER.TOTAL_OCTETS_FIELD_NAME IS 'Store total octet field name';
COMMENT ON COLUMN TBLM_DB_CDR_DRIVER.USAGE_TIME_FIELD_NAME IS 'Store usage time field name';
COMMENT ON COLUMN TBLM_DB_CDR_DRIVER.USAGE_KEY_FIELD_NAME IS 'Store usage key field name';
COMMENT ON COLUMN TBLM_DB_CDR_DRIVER.DRIVER_ID IS 'Store id of parent table';



CREATE TABLE TBLM_DB_CDR_DRIVER_FIELD_MAP(
  ID	              VARCHAR(36),
  PCRFKEY		        VARCHAR(255),
  DB_FIELD		        VARCHAR(30),
  DATA_TYPE		      VARCHAR(64),
  DEFAULT_VALUE		  VARCHAR(256),
  DB_CDR_DRIVER_ID  VARCHAR(36),
  CONSTRAINT PK_DB_CDR_FIELD_MAP PRIMARY KEY (ID)
);

COMMENT ON TABLE TBLM_DB_CDR_DRIVER_FIELD_MAP IS 'Store db cdr driver field mapping related information';
COMMENT ON COLUMN TBLM_DB_CDR_DRIVER_FIELD_MAP.ID IS 'Store unique identity';
COMMENT ON COLUMN TBLM_DB_CDR_DRIVER_FIELD_MAP.PCRFKEY IS 'Store PCRF key';
COMMENT ON COLUMN TBLM_DB_CDR_DRIVER_FIELD_MAP.DB_FIELD IS 'Store DB Field';
COMMENT ON COLUMN TBLM_DB_CDR_DRIVER_FIELD_MAP.DATA_TYPE IS 'Store data type, possible value is String or Timestamp';
COMMENT ON COLUMN TBLM_DB_CDR_DRIVER_FIELD_MAP.DEFAULT_VALUE IS 'Store default value';
COMMENT ON COLUMN TBLM_DB_CDR_DRIVER_FIELD_MAP.DB_CDR_DRIVER_ID IS 'Store parent table id of db cdr driver';

CREATE TABLE TBLM_ALERT_LISTENER_INSTANCE(
      ID                 VARCHAR(36),
      NAME               VARCHAR(100),
      TYPE               VARCHAR(7),
      ENABALED           CHAR(1) DEFAULT 'Y',
      FILE_NAME          VARCHAR(100),
      ROLLING_TYPE       NUMERIC(3) DEFAULT 1 ,
      ROLLING_UNIT       NUMERIC(12) DEFAULT 5,
      MAX_ROLLING_UNIT   NUMERIC(12) DEFAULT 10,
      COMP_ROLLING_UNIT  VARCHAR(6) DEFAULT 'false',
      TRAP_SERVER        VARCHAR(100),
      TRAP_VERSION       VARCHAR(50),
      COMMUNITY          VARCHAR(50),
      ADVANCE_TRAP       VARCHAR(8),
      SNMP_REQUEST_TYPE  NUMERIC(2,0),
      TIME_OUT           NUMERIC(8,0),
      RETRY_COUNT  	 NUMERIC(2,0),
      CREATED_DATE       TIMESTAMP,
      CREATED_BY         VARCHAR(36),
      MODIFIED_DATE      TIMESTAMP,
      MODIFIED_BY        VARCHAR(36),
      CONSTRAINT PK_ALERT_LISTENER_INSTANCE PRIMARY KEY (ID),
      CONSTRAINT FK1_ALERT_LISTENER_INSTANCE FOREIGN KEY (CREATED_BY) REFERENCES TBLM_STAFF (ID),
      CONSTRAINT FK2_ALERT_LISTENER_INSTANCE FOREIGN KEY (MODIFIED_BY) REFERENCES TBLM_STAFF (ID)
);

create index IDXR1_MALERT_LISTENER_INSTANCE ON TBLM_ALERT_LISTENER_INSTANCE (CREATED_BY);
create index IDXR2_MALERT_LISTENER_INSTANCE ON TBLM_ALERT_LISTENER_INSTANCE (MODIFIED_BY);

COMMENT ON TABLE TBLM_ALERT_LISTENER_INSTANCE IS 'Stores ALERT configuration Information';
COMMENT ON COLUMN TBLM_ALERT_LISTENER_INSTANCE.ID IS 'Stores UNIQUE IDENTITY';
COMMENT ON COLUMN TBLM_ALERT_LISTENER_INSTANCE.NAME IS 'Stores alert listener instance name';
COMMENT ON COLUMN TBLM_ALERT_LISTENER_INSTANCE.TYPE IS 'Stores alert listener type FILE/TRAP';
COMMENT ON COLUMN TBLM_ALERT_LISTENER_INSTANCE.ENABALED IS 'Stores whether this instance enabled or not';
COMMENT ON COLUMN TBLM_ALERT_LISTENER_INSTANCE.FILE_NAME IS 'Stores file Name for file type listener';
COMMENT ON COLUMN TBLM_ALERT_LISTENER_INSTANCE.ROLLING_TYPE IS 'Stores file rolling type size/time';
COMMENT ON COLUMN TBLM_ALERT_LISTENER_INSTANCE.ROLLING_UNIT IS 'Stores file rolling unit';
COMMENT ON COLUMN TBLM_ALERT_LISTENER_INSTANCE.MAX_ROLLING_UNIT IS 'Stores max rolling unit';
COMMENT ON COLUMN TBLM_ALERT_LISTENER_INSTANCE.COMP_ROLLING_UNIT IS 'Stores whether compressed rolling unit';
COMMENT ON COLUMN TBLM_ALERT_LISTENER_INSTANCE.TRAP_SERVER IS 'Stores trap server IP';
COMMENT ON COLUMN TBLM_ALERT_LISTENER_INSTANCE.TRAP_VERSION IS 'Stores trap version  V1 or V2c';
COMMENT ON COLUMN TBLM_ALERT_LISTENER_INSTANCE.COMMUNITY IS 'Stores community type';
COMMENT ON COLUMN TBLM_ALERT_LISTENER_INSTANCE.ADVANCE_TRAP IS 'Enable advanced trap true/false';
COMMENT ON COLUMN TBLM_ALERT_LISTENER_INSTANCE.SNMP_REQUEST_TYPE IS 'Stores SNMP request type TRAP/INFORM';
COMMENT ON COLUMN TBLM_ALERT_LISTENER_INSTANCE.TIME_OUT IS 'Stores timeout value';
COMMENT ON COLUMN TBLM_ALERT_LISTENER_INSTANCE.RETRY_COUNT IS 'Stores no of retry count';
COMMENT ON COLUMN TBLM_ALERT_LISTENER_INSTANCE.CREATED_DATE IS 'Stores created date';
COMMENT ON COLUMN TBLM_ALERT_LISTENER_INSTANCE.CREATED_BY IS 'Stores id of staff who created this entity';
COMMENT ON COLUMN TBLM_ALERT_LISTENER_INSTANCE.MODIFIED_DATE IS 'Stores modified date';
COMMENT ON COLUMN TBLM_ALERT_LISTENER_INSTANCE.MODIFIED_BY IS 'Stores id of staff who modified this entity';