<%@ page errorPage="/jsp/dashboardwidgets/WidgetsErrorHandler.jsp" %>
<LINK REL ="stylesheet" TYPE="text/css" HREF="${pageContext.request.contextPath}/css/dashboard/widjettable.css?time"+new Date().getTime()/>

<% String acctRadClientWidgetID = request.getParameter("widgetId");%>
<div id="radAcctClient" style="overflow: auto; " class="widget-class">
	<div id="progressDivId<%=acctRadClientWidgetID%>" style="height: 200px;width: 100%;display: table;background-position: center;vertical-align: middle;text-align:center; " align="center">
 		<div style="display: table-cell;vertical-align: middle;">
 			<img src="<%=request.getContextPath()%>/images/loading1.gif" align="center" style="vertical-align: middle;"/>
 		</div>
	</div>
</div>	

<input type="hidden" name="editJsp" value="jsp/dashboardwidgets/aaawidgets/EditAcctClientDetailsWidget.jsp?widgetId=<%=acctRadClientWidgetID%>" id="editJsp">
<span id="exportbtn_<%=acctRadClientWidgetID%>"></span>
<script>
var acctRadClientWidgetID=<%=acctRadClientWidgetID%>;
var confObj = getWidgetConfiguration(acctRadClientWidgetID);  <%-- Use ConfObj to retrive configuration --%>
var interval = 1;
var clientsIp ="";
var acctClientName = "";
if(confObj != null) {
	interval =  confObj.get("REFRESHINTERVAL");
	clientsIp = confObj.get("CLIENTS");
	acctClientName=confObj.get("NAME");
}
var parentID = "radAcctClient_" + acctRadClientWidgetID + "_" +  new Date().getTime();  //  $('#radAcctClient').parent().parent().attr("id");
$('#radAcctClient').attr("id", parentID);
var data = {
		header : {
			id : parentID,
			type : "RAD_ACCT_CLIENT"
		},
		body : {
			interval : interval,
			aaaServerIds:clientsIp
		}
};
	
getDashBoardSocket().register($("#"+parentID).createDefaultTableWidget(interval));
getDashBoardSocket().sendRequest(data);

var pageIndex =1;
$('#exportbtn_'+<%=acctRadClientWidgetID%>).click(function(){
	var acctClientArrays = getAcctClientsDetails();
	
	var acctClientsDoc = new jsPDF('landscape');
	
	acctClientsDoc.setProperties({
        title: acctClientName,
        subject: 'Widget Type Name : Generated on '+getDateTime(),           
        author: 'AutoGenerated',
        keywords: 'generated, javascript, web 2.0, ajax',
        creator: 'EliteCSM SM'
    });
	
	//create new canvas
    var image1 = new Image();
    var canvas1 = document.createElement("canvas");
    var context1 = canvas1.getContext('2d');
    image1.src = '<%=request.getContextPath()%>/images/elitecore_logo_new.png';
    canvas1.height=77;
    canvas1.width=213;
    
    context1.drawImage(image1,0,0,213,77);
    var nextcontent = canvas1.toDataURL('image/jpeg');
	
	acctClientsDoc.addImage(nextcontent, 'JPEG',5 ,1,30.43,11);
	
	acctClientsDoc.setFontSize(8);
	acctClientsDoc.setTextColor(0); 
	    
	var pageWidth= acctClientsDoc.internal.pageSize.width;
	var pageHeight= acctClientsDoc.internal.pageSize.height;
	    
	 acctClientsDoc.text(pageWidth-50,10, "Generated on : " + getDateTime());
	    
	 acctClientsDoc.setDrawColor(192,192,192); 
	 acctClientsDoc.line(5,12 , pageWidth-5,12);
	     
	 acctClientsDoc.text(pageWidth-20,pageHeight - 5, "Page : "+pageIndex );
	 acctClientsDoc.line(5,pageHeight - 8 , pageWidth-5,pageHeight - 8);

	 acctClientsDoc.setDrawColor(0);
	 acctClientsDoc.setFillColor(1,81,152);
	 acctClientsDoc.rect(5, 25, pageWidth-10, 5, 'F');
	    
	 acctClientsDoc.setFontSize(8);
	 acctClientsDoc.setTextColor(255);  
	    
	 acctClientsDoc.text((pageWidth/2)-20, 28.5, acctClientName + " Details");
	 
	 //ESI Name - Rectangle
	 acctClientsDoc.setDrawColor(217,230,246);
	 acctClientsDoc.setFillColor(217,230,246);
	 console.log("pagewidth : " +pageWidth);
	 acctClientsDoc.rect(5, 35, pageWidth-10, 10, 'FD');
	 
	 acctClientsDoc.setFontSize(7);
	 acctClientsDoc.setFontType("bold");
	 acctClientsDoc.setTextColor(0); 
	 var splitTitle = acctClientsDoc.splitTextToSize("Client IP", 20);
	 acctClientsDoc.text(6, 39, splitTitle);
	 
	 splitTitle = acctClientsDoc.splitTextToSize( "Duplicate Access Request", 20);
	 acctClientsDoc.text(37, 38.5, splitTitle);
	 
	 splitTitle = acctClientsDoc.splitTextToSize( "Server Response", 25);
	 acctClientsDoc.text(68, 38.5, splitTitle);
	 
	 splitTitle = acctClientsDoc.splitTextToSize( "Server Request", 20);
	 acctClientsDoc.text(100, 38.5, splitTitle);
	 
	 splitTitle = acctClientsDoc.splitTextToSize( "No Records", 20);
	 acctClientsDoc.text(130, 38.5, splitTitle);
	 
	 splitTitle = acctClientsDoc.splitTextToSize( "Malformed Access Requests", 25);
	 acctClientsDoc.text(158, 38.5, splitTitle);
	 
	 splitTitle = acctClientsDoc.splitTextToSize( "Bad Authenticators", 25);
	 acctClientsDoc.text(192, 38.5, splitTitle);
	 
	 splitTitle = acctClientsDoc.splitTextToSize( "Packets Dropped", 25);
	 acctClientsDoc.text(228, 38.5, splitTitle);
	 
	 splitTitle = acctClientsDoc.splitTextToSize( "Unknown Types", 20);
	 acctClientsDoc.text(260, 38.5, splitTitle);
	  	 
	 acctClientsDoc.setTextColor(0);  
	 acctClientsDoc.setFontType("normal");
	 var flag=1;
	    
	 var yIndex=52;
	 
	  //generate Table
	  $.each(acctClientArrays,function(key,value){
		  if (yIndex >= pageHeight-10)
	    	{
			    acctClientsDoc.addPage('a4','l');
		    	yIndex = 10; // Restart height position
	    		pageWidth= acctClientsDoc.internal.pageSize.width;
	    		pageHeight= acctClientsDoc.internal.pageSize.height;
	    	    pageIndex++;
	    	    acctClientsDoc.text(pageWidth-20,pageHeight - 5, "Page : "+pageIndex );
	    	    acctClientsDoc.line(5,pageHeight - 8 , pageWidth-5,pageHeight - 8);
	    	 
	    	} 
		  
  		  splitTitle = acctClientsDoc.splitTextToSize( value.radiusAccClientAddress, 25);
  		  acctClientsDoc.text(6, yIndex-3, splitTitle);
  		  
  		  
   		 if( !(value.radiusAccServDupRequests == undefined)){
   			var accessRequestLength = value.radiusAccServDupRequests.toString().length;
   		  	var charWidth = 1.70;
   		  	var str = reverse(value.radiusAccServDupRequests.toString());
   		  	for(var i = accessRequestLength-1 ; i >= 0 ; i--){			  
   				  acctClientsDoc.text(55- charWidth * i, yIndex-2, str[i]);
   		 	}
   		 }else{
   			 var string="-";
 			 var dmRequestLength = string.length;
 			 var charWidth = 1.25;
 			 var str = reverse(string);
 			 for(var i= dmRequestLength - 1;i>=0; i--){
 				 acctClientsDoc.setTextColor(0);
 				 acctClientsDoc.text(55 - charWidth * i, yIndex-2, str[i]);
 			 } 
   		 }
   		 
   		 if( !(value.radiusAccServResponses == undefined)){
    			var accessRequestLength = value.radiusAccServResponses.toString().length;
    		  	var charWidth = 1.70;
    		  	var str = reverse(value.radiusAccServResponses.toString());
    		  	for(var i = accessRequestLength-1 ; i >= 0 ; i--){			  
    				  acctClientsDoc.text(87- charWidth * i, yIndex-2, str[i]);
    		 	}
    		 }else{
    			 var string="-";
  			 var dmRequestLength = string.length;
  			 var charWidth = 1.25;
  			 var str = reverse(string);
  			 for(var i= dmRequestLength - 1;i>=0; i--){
  				 acctClientsDoc.setTextColor(0);
  				 acctClientsDoc.text(87 - charWidth * i, yIndex-2, str[i]);
  			 } 
    	 }
   		 
   		if( !(value.radiusAccServRequests == undefined)){
			var accessRequestLength = value.radiusAccServRequests.toString().length;
		  	var charWidth = 1.70;
		  	var str = reverse(value.radiusAccServRequests.toString());
		  	for(var i = accessRequestLength-1 ; i >= 0 ; i--){			  
				  acctClientsDoc.text(117- charWidth * i, yIndex-2, str[i]);
		 	}
		 }else{
			 var string="-";
			 var dmRequestLength = string.length;
			 var charWidth = 1.25;
			 var str = reverse(string);
			 for(var i= dmRequestLength - 1;i>=0; i--){
				 acctClientsDoc.setTextColor(0);
				 acctClientsDoc.text(117 - charWidth * i, yIndex-2, str[i]);
			 } 
	    }
   		
   		
   		if( !(value.radiusAccServNoRecords == undefined)){
			var accessRequestLength = value.radiusAccServNoRecords.toString().length;
		  	var charWidth = 1.70;
		  	var str = reverse(value.radiusAccServNoRecords.toString());
		  	for(var i = accessRequestLength-1 ; i >= 0 ; i--){			  
				  acctClientsDoc.text(142.5- charWidth * i, yIndex-2, str[i]);
		 	}
		 }else{
			 var string="-";
			 var dmRequestLength = string.length;
			 var charWidth = 1.25;
			 var str = reverse(string);
			 for(var i= dmRequestLength - 1;i>=0; i--){
				 acctClientsDoc.setTextColor(0);
				 acctClientsDoc.text(142.5 - charWidth * i, yIndex-2, str[i]);
			 } 
	    }
   		
   		
   		if( !(value.radiusAccServMalformedRequests == undefined)){
			var accessRequestLength = value.radiusAccServMalformedRequests.toString().length;
		  	var charWidth = 1.70;
		  	var str = reverse(value.radiusAccServMalformedRequests.toString());
		  	for(var i = accessRequestLength-1 ; i >= 0 ; i--){			  
				  acctClientsDoc.text(179- charWidth * i, yIndex-2, str[i]);
		 	}
		 }else{
			 var string="-";
			 var dmRequestLength = string.length;
			 var charWidth = 1.25;
			 var str = reverse(string);
			 for(var i= dmRequestLength - 1;i>=0; i--){
				 acctClientsDoc.setTextColor(0);
				 acctClientsDoc.text(179 - charWidth * i, yIndex-2, str[i]);
			 } 
	    }
   		
   		
   		if( !(value.radiusAccServBadAuthenticators == undefined)){
			var accessRequestLength = value.radiusAccServBadAuthenticators.toString().length;
		  	var charWidth = 1.70;
		  	var str = reverse(value.radiusAccServBadAuthenticators.toString());
		  	for(var i = accessRequestLength-1 ; i >= 0 ; i--){			  
				  acctClientsDoc.text(213.5- charWidth * i, yIndex-2, str[i]);
		 	}
		 }else{
			 var string="-";
			 var dmRequestLength = string.length;
			 var charWidth = 1.25;
			 var str = reverse(string);
			 for(var i= dmRequestLength - 1;i>=0; i--){
				 acctClientsDoc.setTextColor(0);
				 acctClientsDoc.text(213.5 - charWidth * i, yIndex-2, str[i]);
			 } 
	    }
   		
   		if( !(value.radiusAccServPacketsDropped == undefined)){
			var accessRequestLength = value.radiusAccServPacketsDropped.toString().length;
		  	var charWidth = 1.70;
		  	var str = reverse(value.radiusAccServPacketsDropped.toString());
		  	for(var i = accessRequestLength-1 ; i >= 0 ; i--){			  
				  acctClientsDoc.text(247.5- charWidth * i, yIndex-2, str[i]);
		 	}
		 }else{
			 var string="-";
			 var dmRequestLength = string.length;
			 var charWidth = 1.25;
			 var str = reverse(string);
			 for(var i= dmRequestLength - 1;i>=0; i--){
				 acctClientsDoc.setTextColor(0);
				 acctClientsDoc.text(247.5 - charWidth * i, yIndex-2, str[i]);
			 } 
	    }
   		
   		if( !(value.radiusAccServUnknownTypes == undefined)){
			var accessRequestLength = value.radiusAccServUnknownTypes.toString().length;
		  	var charWidth = 1.70;
		  	var str = reverse(value.radiusAccServUnknownTypes.toString());
		  	for(var i = accessRequestLength-1 ; i >= 0 ; i--){			  
				  acctClientsDoc.text(277.5- charWidth * i, yIndex-2, str[i]);
		 	}
		 }else{
			 var string="-";
			 var dmRequestLength = string.length;
			 var charWidth = 1.25;
			 var str = reverse(string);
			 for(var i= dmRequestLength - 1;i>=0; i--){
				 acctClientsDoc.setTextColor(0);
				 acctClientsDoc.text(277.5 - charWidth * i, yIndex-2, str[i]);
			 } 
	    }
		  
		  acctClientsDoc.setDrawColor(192,192,192); 
		  acctClientsDoc.line(5, yIndex, pageWidth-5, yIndex);
		  yIndex=yIndex+7;
		  
	  }); 
	 
	 
	 var data = acctClientsDoc.output();
	 var buffer = new ArrayBuffer(data.length);
	 var array = new Uint8Array(buffer);

	 for (var i = 0; i < data.length; i++) {
	      array[i] = data.charCodeAt(i);
	 }

	 var blob = new Blob(
	       [array],
	       {type: 'application/pdf', encoding: 'raw'}
	 );
	
	 saveAs(blob, acctClientName+'.pdf');
});

function reverse(s){
    return s.split("").reverse().join("");
}

function getAcctClientsDetails(){
    var jResponseData="";
	$.ajax({
		url:'<%=request.getContextPath()%>/dashboardConfiguration.do?method=getAcctClientData',
	    type:'GET',
	    async:false,
	    data:{serverIds:clientsIp},
	    success: function(esiDataList){
	    	if(esiDataList != null)
	    	 jResponseData=esiDataList;  	
	    }
	}); 
	console.log(jResponseData);
	return jResponseData;
}

function getDateTime() {
    var now     = new Date(); 
    var year    = now.getFullYear();
    var month   = now.getMonth()+1; 
    var day     = now.getDate();
    var hour    = now.getHours();
    var minute  = now.getMinutes();
    var second  = now.getSeconds(); 
    if(month.toString().length == 1) {
        var month = '0'+month;
    }
    if(day.toString().length == 1) {
        var day = '0'+day;
    }   
    if(hour.toString().length == 1) {
        var hour = '0'+hour;
    }
    if(minute.toString().length == 1) {
        var minute = '0'+minute;
    }
    if(second.toString().length == 1) {
        var second = '0'+second;
    }   
    var dateTime = day+'/'+month+'/'+year+' '+hour+':'+minute+':'+second;   
     return dateTime;
}
</script>
