<%@ page errorPage="/jsp/dashboardwidgets/WidgetsErrorHandler.jsp" %>
<LINK REL ="stylesheet" TYPE="text/css" HREF="${pageContext.request.contextPath}/css/dashboard/widjettable.css"/>

<% String radDynaAuthClientWidgetID = request.getParameter("widgetId");%>
<div id="radDynaAuthClient" style="overflow: auto; " class="widget-class">
	<div id="progressDivId<%=radDynaAuthClientWidgetID%>" style="height: 200px;width: 100%;display: table;background-position: center;vertical-align: middle;text-align:center; " align="center">
 		<div style="display: table-cell;vertical-align: middle;">
 			<img src="<%=request.getContextPath()%>/images/loading1.gif" align="center" style="vertical-align: middle;"/>
 		</div>
	</div>
</div>	

<input type="hidden" name="editJsp" value="jsp/dashboardwidgets/aaawidgets/EditDynaAuthClientDetailsWidget.jsp?widgetId=<%=radDynaAuthClientWidgetID%>" id="editJsp">
<span id="exportbtn_<%=radDynaAuthClientWidgetID%>"></span>
 
<script>
var radDynaAuthClientWidgetID=<%=radDynaAuthClientWidgetID%>;
var confObj = getWidgetConfiguration(radDynaAuthClientWidgetID);  <%-- Use ConfObj to retrive configuration --%>
var interval = 1;
var dynaAuthClientIp ="";
var dynaAuthWidgteName="";
if(confObj != null) {
	interval =  confObj.get("REFRESHINTERVAL");
	dynaAuthClientIp = confObj.get("CLIENTS");
	dynaAuthWidgteName=confObj.get("NAME");
}
var parentID = "radDynaAuthClient_" + radDynaAuthClientWidgetID + "_" +  new Date().getTime();  //  $('#radDynaAuthClient').parent().parent().attr("id");
$('#radDynaAuthClient').attr("id", parentID);
var data = {
		header : {
			id : parentID,
			type : "RAD_DYNA_AUTH_CLIENT"
		},
		body : {
			interval : interval,
			aaaServerIds:dynaAuthClientIp
		}
};
	
getDashBoardSocket().register($("#"+parentID).createDefaultTableWidget(interval));
getDashBoardSocket().sendRequest(data);

/** Export Widget Functionality */
 $('#exportbtn_'+<%=radDynaAuthClientWidgetID%>).click(function(){
		var pageIndex=1;
		var dynaAuthClientArray = getDynaAuthClientDetailsTable();
		
		var generatePdfDoc = new jsPDF('landscape');
		
		generatePdfDoc.setProperties({
	        title: dynaAuthWidgteName,
	        subject: 'Widget Type Name : Generated on '+getDateTime(),           
	        author: 'AutoGenerated',
	        keywords: 'generated, javascript, web 2.0, ajax',
	        creator: 'EliteCSM SM'
	   });

		
		//create new canvas
	    var image1 = new Image();
	    var canvas1 = document.createElement("canvas");
	    var context1 = canvas1.getContext('2d');
	    canvas1.height=77;
	    canvas1.width=213;
	    image1.src =  $('#elitecore_Image').attr('src');
		 
	    context1.drawImage(image1,0,0,213,77);
	    var nextcontent = canvas1.toDataURL('image/jpeg');
	    
	    generatePdfDoc.addImage(nextcontent, 'JPEG',5 ,1,30.43,11);
		
		generatePdfDoc.setFontSize(8);
		generatePdfDoc.setTextColor(0); 
		    
		var pageWidth= generatePdfDoc.internal.pageSize.width;
		var pageHeight= generatePdfDoc.internal.pageSize.height;
		    
		generatePdfDoc.text(pageWidth-50,10, "Generated on : " + getDateTime());
		    
		generatePdfDoc.setDrawColor(192,192,192); 
		generatePdfDoc.line(5,12 , pageWidth-5,12);
		    
		generatePdfDoc.text(pageWidth-20,pageHeight - 5, "Page : "+pageIndex );
		generatePdfDoc.line(5,pageHeight - 8 , pageWidth-5,pageHeight - 8);

		generatePdfDoc.setDrawColor(0);
		generatePdfDoc.setFillColor(1,81,152);
		generatePdfDoc.rect(5, 25, pageWidth-10, 5, 'F');
		    
		generatePdfDoc.setFontSize(8);
		generatePdfDoc.setTextColor(255);  
		    
		generatePdfDoc.text((pageWidth/2)-20, 28.5, dynaAuthWidgteName + " Details");
		 
		 //ESI Name - Rectangle
		generatePdfDoc.setDrawColor(217,230,246);
		generatePdfDoc.setFillColor(217,230,246);
		console.log("pagewidth : " +pageWidth);
		generatePdfDoc.rect(5, 35, pageWidth-10, 7, 'FD');
		
		generatePdfDoc.setFontSize(7);
		
		generatePdfDoc.setFontType("bold");
		generatePdfDoc.setTextColor(0); 
		var splitTitle = generatePdfDoc.splitTextToSize("Clients", 20);
		generatePdfDoc.text(7, 40, splitTitle);
		
		splitTitle = generatePdfDoc.splitTextToSize( "Type", 15);
		generatePdfDoc.text(25, 40, "Type");
		
		splitTitle = generatePdfDoc.splitTextToSize( "Request", 15);
		generatePdfDoc.text(40, 40, "Request");
		 
		splitTitle = generatePdfDoc.splitTextToSize( "Ack", 25);
		generatePdfDoc.text(65, 40, "Ack");
		 
		splitTitle = generatePdfDoc.splitTextToSize( "Nack", 15);
		generatePdfDoc.text(87, 40, "Nack");
		 
		splitTitle = generatePdfDoc.splitTextToSize( "Request Dropped", 15);
		generatePdfDoc.text(112, 40, "Request Dropped");
		 
		splitTitle = generatePdfDoc.splitTextToSize( "Duplicate Request", 15);
		generatePdfDoc.text(148, 40, "Duplicate Request");
		 
		splitTitle = generatePdfDoc.splitTextToSize( "Malformed Requests", 25);
		generatePdfDoc.text(188, 40, "Malformed Requests");
		 
		splitTitle = generatePdfDoc.splitTextToSize( "Bad Authenticators", 20);
		generatePdfDoc.text(225, 40, "Bad Authenticators");
		 
		splitTitle = generatePdfDoc.splitTextToSize( "Unknown Types Request", 25);
		generatePdfDoc.text(260, 40, "Unknown Types Request");
		 
		generatePdfDoc.setTextColor(0);  
		generatePdfDoc.setFontType("normal");
		var flag=1;
		var yIndex=55;
		  
		//generate Table
		$.each(dynaAuthClientArray,function(key,value){
		if (yIndex >= pageHeight-10)
		   	{
			    generatePdfDoc.addPage('a4','l');
		    	yIndex = 10; // Restart height position
		   		pageWidth= generatePdfDoc.internal.pageSize.width;
		   		pageHeight= generatePdfDoc.internal.pageSize.height;
		   	    pageIndex++;
		   	    generatePdfDoc.text(pageWidth-20,pageHeight - 5, "Page : "+pageIndex );
		   	    generatePdfDoc.line(5,pageHeight - 8 , pageWidth-5,pageHeight - 8);
		   	 
		   	}  
		 
		  splitTitle = generatePdfDoc.splitTextToSize(value.radiusDynAuthClientAddress, 15);
		  generatePdfDoc.setTextColor(0);
		  generatePdfDoc.text(7, yIndex-7, splitTitle);
		  generatePdfDoc.setDrawColor(217,230,246);
		  generatePdfDoc.setFillColor(217,230,246);
		  
		  generatePdfDoc.setTextColor(1, 82, 152);
		  generatePdfDoc.text(26, yIndex-8, "DM");
		  generatePdfDoc.text(26, yIndex-2, "COA");
		  
		  //Disconnect Request
		  if( !(value.ServDupDisconRequests == undefined)){
		      var dmRequestLength = value.ServDupDisconRequests.toString().length;
		      var charWidth = 1.25;
		      var str = reverse(value.ServDupDisconRequests.toString());
		      for(var i= dmRequestLength - 1;i>=0; i--){
		    	  generatePdfDoc.setTextColor(0);
		    	  generatePdfDoc.text(48.5 - charWidth * i, yIndex-8, str[i]);
		       }
		  }else{
			   var string="-";
			   var dmRequestLength = string.length;
			      var charWidth = 1.25;
			      var str = reverse(string);
			      for(var i= dmRequestLength - 1;i>=0; i--){
			    	  generatePdfDoc.setTextColor(0);
			    	  generatePdfDoc.text(48.5 - charWidth * i, yIndex-8, str[i]);
			       }
		  }
		 
		  //COA Request
		  if( !(value.ServDupCoARequests == undefined)){
			      var dmRequestLength = value.ServDupCoARequests.toString().length;
			      var charWidth = 1.25;
			      var str = reverse(value.ServDupCoARequests.toString());
			      for(var i= dmRequestLength - 1;i>=0; i--){
			    	  generatePdfDoc.setTextColor(0);
			    	  generatePdfDoc.text(48.5 - charWidth * i, yIndex-2, str[i]);
			       }
			  }else{
				   var string="-";
				   var dmRequestLength = string.length;
				      var charWidth = 1.25;
				      var str = reverse(string);
				      for(var i= dmRequestLength - 1;i>=0; i--){
				    	  generatePdfDoc.setTextColor(0);
				    	  generatePdfDoc.text(48.5 - charWidth * i, yIndex-2, str[i]);
				       }
			}
		  
		  //Disconnect Ack
		  if( !(value.radiusDynAuthServDisconAcks == undefined)){
			      var dmRequestLength = value.radiusDynAuthServDisconAcks.toString().length;
			      var charWidth = 1.25;
			      var str = reverse(value.radiusDynAuthServDisconAcks.toString());
			      for(var i= dmRequestLength - 1;i>=0; i--){
			    	  generatePdfDoc.setTextColor(0);
			    	  generatePdfDoc.text(68 - charWidth * i, yIndex-8, str[i]);
			       }
		  }else{
				   var string="-";
				   var dmRequestLength = string.length;
				      var charWidth = 1.25;
				      var str = reverse(string);
				      for(var i= dmRequestLength - 1;i>=0; i--){
				    	  generatePdfDoc.setTextColor(0);
				    	  generatePdfDoc.text(68 - charWidth * i, yIndex-8, str[i]);
				       }
		  }
		  
		  
		  //COA Ack
		  if( !(value.radiusDynAuthServCoAAcks == undefined)){
			      var dmRequestLength = value.radiusDynAuthServCoAAcks.toString().length;
			      var charWidth = 1.25;
			      var str = reverse(value.radiusDynAuthServCoAAcks.toString());
			      for(var i= dmRequestLength - 1;i>=0; i--){
			    	  generatePdfDoc.setTextColor(0);
			    	  generatePdfDoc.text(68 - charWidth * i, yIndex-2, str[i]);
			       }
		  }else{
				   var string="-";
				   var dmRequestLength = string.length;
				      var charWidth = 1.25;
				      var str = reverse(string);
				      for(var i= dmRequestLength - 1;i>=0; i--){
				    	  generatePdfDoc.setTextColor(0);
				    	  generatePdfDoc.text(68 - charWidth * i, yIndex-2, str[i]);
				       }
		  }
			 
		  //Disconnect Nack
		  if( !(value.radiusDynAuthServDisconNaks == undefined)){
			      var dmRequestLength = value.radiusDynAuthServDisconNaks.toString().length;
			      var charWidth = 1.25;
			      var str = reverse(value.radiusDynAuthServDisconNaks.toString());
			      for(var i= dmRequestLength - 1;i>=0; i--){
			    	  generatePdfDoc.setTextColor(0);
			    	  generatePdfDoc.text(92 - charWidth * i, yIndex-8, str[i]);
			       }
		  }else{
				   var string="-";
				   var dmRequestLength = string.length;
				      var charWidth = 1.25;
				      var str = reverse(string);
				      for(var i= dmRequestLength - 1;i>=0; i--){
				    	  generatePdfDoc.setTextColor(0);
				    	  generatePdfDoc.text(92 - charWidth * i, yIndex-8, str[i]);
				       }
		  }
		  
		  //Coa Nack
		  if( !(value.radiusDynAuthServCoANaks == undefined)){
			      var dmRequestLength = value.radiusDynAuthServCoANaks.toString().length;
			      var charWidth = 1.25;
			      var str = reverse(value.radiusDynAuthServCoANaks.toString());
			      for(var i= dmRequestLength - 1;i>=0; i--){
			    	  generatePdfDoc.setTextColor(0);
			    	  generatePdfDoc.text(92 - charWidth * i, yIndex-2, str[i]);
			       }
		  }else{
				   var string="-";
				   var dmRequestLength = string.length;
				      var charWidth = 1.25;
				      var str = reverse(string);
				      for(var i= dmRequestLength - 1;i>=0; i--){
				    	  generatePdfDoc.setTextColor(0);
				    	  generatePdfDoc.text(92 - charWidth * i, yIndex-2, str[i]);
				       }
		  }
		  
		  
		  //Disconnect Request Dropped
		  if( !(value.ServDisconPacketsDropped == undefined)){
		      var dmRequestLength = value.ServDisconPacketsDropped.toString().length;
		      var charWidth = 1.25;
		      var str = reverse(value.ServDisconPacketsDropped.toString());
		      for(var i= dmRequestLength - 1;i>=0; i--){
		    	  generatePdfDoc.setTextColor(0);
		    	  generatePdfDoc.text(131.5 - charWidth * i, yIndex-8, str[i]);
		       }
		  }else{
			   var string="-";
			   var dmRequestLength = string.length;
			      var charWidth = 1.25;
			      var str = reverse(string);
			      for(var i= dmRequestLength - 1;i>=0; i--){
			    	  generatePdfDoc.setTextColor(0);
			    	  generatePdfDoc.text(131.5 - charWidth * i, yIndex-8, str[i]);
			       }
		  }
		 
		  //COA Request Dropped
		  if( !(value.ServCoAPacketsDropped == undefined)){
			      var dmRequestLength = value.ServCoAPacketsDropped.toString().length;
			      var charWidth = 1.25;
			      var str = reverse(value.ServCoAPacketsDropped.toString());
			      for(var i= dmRequestLength - 1;i>=0; i--){
			    	  generatePdfDoc.setTextColor(0);
			    	  generatePdfDoc.text(131.5 - charWidth * i, yIndex-2, str[i]);
			       }
			  }else{
				   var string="-";
				   var dmRequestLength = string.length;
				      var charWidth = 1.25;
				      var str = reverse(string);
				      for(var i= dmRequestLength - 1;i>=0; i--){
				    	  generatePdfDoc.setTextColor(0);
				    	  generatePdfDoc.text(131.5 - charWidth * i, yIndex-2, str[i]);
				       }
			}
		  
		  
		  //Disconnect Duplicate Request
		  if( !(value.ServDupDisconRequests == undefined)){
		      var dmRequestLength = value.ServDupDisconRequests.toString().length;
		      var charWidth = 1.25;
		      var str = reverse(value.ServDupDisconRequests.toString());
		      for(var i= dmRequestLength - 1;i>=0; i--){
		    	  generatePdfDoc.setTextColor(0);
		    	  generatePdfDoc.text(168.5 - charWidth * i, yIndex-8, str[i]);
		       }
		  }else{
			   var string="-";
			   var dmRequestLength = string.length;
			      var charWidth = 1.25;
			      var str = reverse(string);
			      for(var i= dmRequestLength - 1;i>=0; i--){
			    	  generatePdfDoc.setTextColor(0);
			    	  generatePdfDoc.text(168.5 - charWidth * i, yIndex-8, str[i]);
			       }
		  }
		 
		  //COA Duplicate Request
		  if( !(value.ServDupCoARequests == undefined)){
			      var dmRequestLength = value.ServDupCoARequests.toString().length;
			      var charWidth = 1.25;
			      var str = reverse(value.ServDupCoARequests.toString());
			      for(var i= dmRequestLength - 1;i>=0; i--){
			    	  generatePdfDoc.setTextColor(0);
			    	  generatePdfDoc.text(168.5 - charWidth * i, yIndex-2, str[i]);
			       }
			  }else{
				   var string="-";
				   var dmRequestLength = string.length;
				      var charWidth = 1.25;
				      var str = reverse(string);
				      for(var i= dmRequestLength - 1;i>=0; i--){
				    	  generatePdfDoc.setTextColor(0);
				    	  generatePdfDoc.text(168.5 - charWidth * i, yIndex-2, str[i]);
				       }
			}
		  
		  
		  //DM Malformed Request
		  if( !(value.ServMalformedDisconRequests == undefined)){
		      var dmRequestLength = value.ServMalformedDisconRequests.toString().length;
		      var charWidth = 1.25;
		      var str = reverse(value.ServMalformedDisconRequests.toString());
		      for(var i= dmRequestLength - 1;i>=0; i--){
		    	  generatePdfDoc.setTextColor(0);
		    	  generatePdfDoc.text(211 - charWidth * i, yIndex-8, str[i]);
		       }
		  }else{
			   var string="-";
			   var dmRequestLength = string.length;
			      var charWidth = 1.25;
			      var str = reverse(string);
			      for(var i= dmRequestLength - 1;i>=0; i--){
			    	  generatePdfDoc.setTextColor(0);
			    	  generatePdfDoc.text(211 - charWidth * i, yIndex-8, str[i]);
			       }
		  }
		 
		  //COA  Malformed Request
		  if( !(value.ServMalformedCoARequests == undefined)){
			      var dmRequestLength = value.ServMalformedCoARequests.toString().length;
			      var charWidth = 1.25;
			      var str = reverse(value.ServMalformedCoARequests.toString());
			      for(var i= dmRequestLength - 1;i>=0; i--){
			    	  generatePdfDoc.setTextColor(0);
			    	  generatePdfDoc.text(211 - charWidth * i, yIndex-2, str[i]);
			       }
			  }else{
				   var string="-";
				   var dmRequestLength = string.length;
				      var charWidth = 1.25;
				      var str = reverse(string);
				      for(var i= dmRequestLength - 1;i>=0; i--){
				    	  generatePdfDoc.setTextColor(0);
				    	  generatePdfDoc.text(211 - charWidth * i, yIndex-2, str[i]);
				       }
			}
		  
		  
		  
		  //DM bad Authenticator
		  if( !(value.ServDisconBadAuthenticators == undefined)){
		      var dmRequestLength = value.ServDisconBadAuthenticators.toString().length;
		      var charWidth = 1.25;
		      var str = reverse(value.ServDisconBadAuthenticators.toString());
		      for(var i= dmRequestLength - 1;i>=0; i--){
		    	  generatePdfDoc.setTextColor(0);
		    	  generatePdfDoc.text(247 - charWidth * i, yIndex-8, str[i]);
		       }
		  }else{
			   var string="-";
			   var dmRequestLength = string.length;
			      var charWidth = 1.25;
			      var str = reverse(string);
			      for(var i= dmRequestLength - 1;i>=0; i--){
			    	  generatePdfDoc.setTextColor(0);
			    	  generatePdfDoc.text(247 - charWidth * i, yIndex-8, str[i]);
			       }
		  }
		 
		  //COA  bad Authenticator
		  if( !(value.ServCoABadAuthenticators == undefined)){
			      var dmRequestLength = value.ServCoABadAuthenticators.toString().length;
			      var charWidth = 1.25;
			      var str = reverse(value.ServCoABadAuthenticators.toString());
			      for(var i= dmRequestLength - 1;i>=0; i--){
			    	  generatePdfDoc.setTextColor(0);
			    	  generatePdfDoc.text(247 - charWidth * i, yIndex-2, str[i]);
			       }
			  }else{
				   var string="-";
				   var dmRequestLength = string.length;
				      var charWidth = 1.25;
				      var str = reverse(string);
				      for(var i= dmRequestLength - 1;i>=0; i--){
				    	  generatePdfDoc.setTextColor(0);
				    	  generatePdfDoc.text(247 - charWidth * i, yIndex-2, str[i]);
				       }
			}
		  
		 //Unknown Type Request
		  if( !(value.radiusDynAuthServUnknownTypes == undefined)){
		      var dmRequestLength = value.radiusDynAuthServUnknownTypes.toString().length;
		      var charWidth = 1.25;
		      var str = reverse(value.radiusDynAuthServUnknownTypes.toString());
		      for(var i= dmRequestLength - 1;i>=0; i--){
		    	  generatePdfDoc.setTextColor(0);
		    	  generatePdfDoc.text(275 - charWidth * i, yIndex-5, str[i]);
		       }
		  }else{
			   var string="-";
			   var dmRequestLength = string.length;
			      var charWidth = 1.25;
			      var str = reverse(string);
			      for(var i= dmRequestLength - 1;i>=0; i--){
			    	  generatePdfDoc.setTextColor(0);
			    	  generatePdfDoc.text(275 - charWidth * i, yIndex-5, str[i]);
			       }
		  }
		  
		  generatePdfDoc.setDrawColor(192,192,192); 
		  generatePdfDoc.line(5, yIndex, pageWidth-5, yIndex);
		  generatePdfDoc.line(23, yIndex-6.3, pageWidth-41, yIndex-6.3);
		  generatePdfDoc.line(256, 42,256,yIndex);
		  yIndex=yIndex+12;
			  
		  }); 
		  yIndex=yIndex-12;
		  generatePdfDoc.line(23, 42, 23, yIndex);
		  generatePdfDoc.line(35, 42, 35, yIndex);
		  
		 var data = generatePdfDoc.output();
		 var buffer = new ArrayBuffer(data.length);
		 var array = new Uint8Array(buffer);

		 for (var i = 0; i < data.length; i++) {
		      array[i] = data.charCodeAt(i);
		 }

		 var blob = new Blob(
		       [array],
		       {type: 'application/pdf', encoding: 'raw'}
		 );
		
		 saveAs(blob, dynaAuthWidgteName+'.pdf');
	});
	
 	generatePdfDoc.setDrawColor(192,192,192); 
	generatePdfDoc.line(5, 42, pageWidth-5, 42);

	function reverse(s){
	    return s.split("").reverse().join("");
	}

	function getDynaAuthClientDetailsTable(){
	    var jResponseData="";
		$.ajax({
			url:'<%=request.getContextPath()%>/dashboardConfiguration.do?method=getDynaClientData',
		    type:'GET',
		    async:false,
		    data:{serverIds:dynaAuthClientIp},
		    success: function(esiDataList){
		    	if(esiDataList != null)
		    	 jResponseData=esiDataList;  	
		    }
		}); 
		return jResponseData;
	}

	function getDateTime() {
	    var now     = new Date(); 
	    var year    = now.getFullYear();
	    var month   = now.getMonth()+1; 
	    var day     = now.getDate();
	    var hour    = now.getHours();
	    var minute  = now.getMinutes();
	    var second  = now.getSeconds(); 
	    if(month.toString().length == 1) {
	        var month = '0'+month;
	    }
	    if(day.toString().length == 1) {
	        var day = '0'+day;
	    }   
	    if(hour.toString().length == 1) {
	        var hour = '0'+hour;
	    }
	    if(minute.toString().length == 1) {
	        var minute = '0'+minute;
	    }
	    if(second.toString().length == 1) {
	        var second = '0'+second;
	    }   
	    var dateTime = day+'/'+month+'/'+year+' '+hour+':'+minute+':'+second;   
	     return dateTime;
	}

</script>
