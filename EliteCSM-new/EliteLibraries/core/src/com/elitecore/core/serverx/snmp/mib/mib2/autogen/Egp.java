package com.elitecore.core.serverx.snmp.mib.mib2.autogen;

//
// Generated by mibgen version 5.1 (03/08/07) when compiling RFC1213-MIB.
//

// java imports
//
import java.io.Serializable;

import javax.management.MBeanServer;

import com.sun.management.snmp.SnmpStatusException;
import com.sun.management.snmp.agent.SnmpMib;

/**
 * The class is used for implementing the "Egp" group.
 * The group is defined with the following oid: 1.3.6.1.2.1.8.
 */
public class Egp implements EgpMBean, Serializable {

    /**
     * Variable for storing the value of "EgpAs".
     * The variable is identified by: "1.3.6.1.2.1.8.6".
     *
     * "The autonomous system number of this EGP entity."
     *
     */
    protected Integer EgpAs = new Integer(1);

    /**
     * Variable for storing the value of "EgpNeighTable".
     * The variable is identified by: "1.3.6.1.2.1.8.5".
     *
     * "The EGP neighbor table."
     *
     */
    protected TableEgpNeighTable EgpNeighTable;

    /**
     * Variable for storing the value of "EgpOutErrors".
     * The variable is identified by: "1.3.6.1.2.1.8.4".
     *
     * "The number of locally generated EGP messages not
     * sent due to resource limitations within an EGP
     * entity."
     *
     */
    protected Long EgpOutErrors = new Long(1);

    /**
     * Variable for storing the value of "EgpOutMsgs".
     * The variable is identified by: "1.3.6.1.2.1.8.3".
     *
     * "The total number of locally generated EGP
     * messages."
     *
     */
    protected Long EgpOutMsgs = new Long(1);

    /**
     * Variable for storing the value of "EgpInErrors".
     * The variable is identified by: "1.3.6.1.2.1.8.2".
     *
     * "The number of EGP messages received that proved
     * to be in error."
     *
     */
    protected Long EgpInErrors = new Long(1);

    /**
     * Variable for storing the value of "EgpInMsgs".
     * The variable is identified by: "1.3.6.1.2.1.8.1".
     *
     * "The number of EGP messages received without
     * error."
     *
     */
    protected Long EgpInMsgs = new Long(1);


    /**
     * Constructor for the "Egp" group.
     * If the group contains a table, the entries created through an SNMP SET will not be registered in Java DMK.
     */
    public Egp(SnmpMib myMib) {
        EgpNeighTable = new TableEgpNeighTable (myMib);
    }


    /**
     * Constructor for the "Egp" group.
     * If the group contains a table, the entries created through an SNMP SET will be AUTOMATICALLY REGISTERED in Java DMK.
     */
    public Egp(SnmpMib myMib, MBeanServer server) {
        EgpNeighTable = new TableEgpNeighTable (myMib, server);
    }

    /**
     * Getter for the "EgpAs" variable.
     */
    public Integer getEgpAs() throws SnmpStatusException {
        return EgpAs;
    }

    /**
     * Access the "EgpNeighTable" variable.
     */
    public TableEgpNeighTable accessEgpNeighTable() throws SnmpStatusException {
        return EgpNeighTable;
    }

    /**
     * Access the "EgpNeighTable" variable as a bean indexed property.
     */
    public EgpNeighEntryMBean[] getEgpNeighTable() throws SnmpStatusException {
        return EgpNeighTable.getEntries();
    }

    /**
     * Getter for the "EgpOutErrors" variable.
     */
    public Long getEgpOutErrors() throws SnmpStatusException {
        return EgpOutErrors;
    }

    /**
     * Getter for the "EgpOutMsgs" variable.
     */
    public Long getEgpOutMsgs() throws SnmpStatusException {
        return EgpOutMsgs;
    }

    /**
     * Getter for the "EgpInErrors" variable.
     */
    public Long getEgpInErrors() throws SnmpStatusException {
        return EgpInErrors;
    }

    /**
     * Getter for the "EgpInMsgs" variable.
     */
    public Long getEgpInMsgs() throws SnmpStatusException {
        return EgpInMsgs;
    }

}
