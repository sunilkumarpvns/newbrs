package com.elitecore.core.serverx.snmp.mib.mib2.autogen;

//
// Generated by mibgen version 5.1 (03/08/07) when compiling RFC1213-MIB in standard metadata mode.
//

// java imports
//
import java.io.Serializable;
import java.util.Hashtable;

import javax.management.InstanceAlreadyExistsException;
import javax.management.MBeanServer;
import javax.management.ObjectName;

import com.sun.management.snmp.agent.SnmpMib;
import com.sun.management.snmp.agent.SnmpMibTable;
import com.sun.management.snmp.agent.SnmpStandardObjectServer;

/**
 * The class is used for representing "RFC1213-MIB".
 * You can edit the file if you want to modify the behavior of the MIB.
 */
public class RFC1213_MIB extends SnmpMib implements Serializable {

    /**
     * Default constructor. Initialize the Mib tree.
     */
    public RFC1213_MIB() {
        mibName = "RFC1213_MIB";
    }

    /**
     * Initialization of the MIB with no registration in Java DMK.
     */
    public void init() throws IllegalAccessException {
        // Allow only one initialization of the MIB.
        //
        if (isInitialized == true) {
            return ;
        }

        try  {
            populate(null, null);
        } catch(IllegalAccessException x)  {
            throw x;
        } catch(RuntimeException x)  {
            throw x;
        } catch(Exception x)  {
            throw new Error(x.getMessage());
        }

        isInitialized = true;
    }

    /**
     * Initialization of the MIB with AUTOMATIC REGISTRATION in Java DMK.
     */
    public ObjectName preRegister(MBeanServer server, ObjectName name)
            throws Exception {
        // Allow only one initialization of the MIB.
        //
        if (isInitialized == true) {
            throw new InstanceAlreadyExistsException();
        }

        // Initialize MBeanServer information.
        //
        this.server = server;

        populate(server, name);

        isInitialized = true;
        return name;
    }

    /**
     * Initialization of the MIB with no registration in Java DMK.
     */
    public void populate(MBeanServer server, ObjectName name) 
        throws Exception {
        // Allow only one initialization of the MIB.
        //
        if (isInitialized == true) {
            return ;
        }

        if (objectserver == null) 
            objectserver = new SnmpStandardObjectServer();

        // Initialization of the "Egp" group.
        // To disable support of this group, redefine the 
        // "createEgpMetaNode()" factory method, and make it return "null"
        //
        initEgp(server);

        // Initialization of the "Udp" group.
        // To disable support of this group, redefine the 
        // "createUdpMetaNode()" factory method, and make it return "null"
        //
        initUdp(server);

        // Initialization of the "Tcp" group.
        // To disable support of this group, redefine the 
        // "createTcpMetaNode()" factory method, and make it return "null"
        //
        initTcp(server);

        // Initialization of the "Icmp" group.
        // To disable support of this group, redefine the 
        // "createIcmpMetaNode()" factory method, and make it return "null"
        //
        initIcmp(server);

        // Initialization of the "Ip" group.
        // To disable support of this group, redefine the 
        // "createIpMetaNode()" factory method, and make it return "null"
        //
        initIp(server);

        // Initialization of the "At" group.
        // To disable support of this group, redefine the 
        // "createAtMetaNode()" factory method, and make it return "null"
        //
        initAt(server);

        // Initialization of the "Snmp" group.
        // To disable support of this group, redefine the 
        // "createSnmpMetaNode()" factory method, and make it return "null"
        //
        initSnmp(server);

        // Initialization of the "Interfaces" group.
        // To disable support of this group, redefine the 
        // "createInterfacesMetaNode()" factory method, and make it return "null"
        //
        initInterfaces(server);

        // Initialization of the "System" group.
        // To disable support of this group, redefine the 
        // "createSystemMetaNode()" factory method, and make it return "null"
        //
        initSystem(server);

        isInitialized = true;
    }


    // ------------------------------------------------------------
    // 
    // Initialization of the "Egp" group.
    // 
    // ------------------------------------------------------------


    /**
     * Initialization of the "Egp" group.
     * 
     * To disable support of this group, redefine the 
     * "createEgpMetaNode()" factory method, and make it return "null"
     * 
     * @param server    MBeanServer for this group (may be null)
     * 
     **/
    protected void initEgp(MBeanServer server) 
        throws Exception {
        final String oid = getGroupOid("Egp", "1.3.6.1.2.1.8");
        ObjectName objname = null;
        if (server != null) {
            objname = getGroupObjectName("Egp", oid, mibName + ":name=com.elitecore.core.serverx.snmp.mib.mib2.autogen.Egp");
        }
        final EgpMeta meta = createEgpMetaNode("Egp", oid, objname, server);
        if (meta != null) {
            meta.registerTableNodes( this, server );

            // Note that when using standard metadata,
            // the returned object must implement the "EgpMBean"
            // interface.
            //
            final EgpMBean group = (EgpMBean) createEgpMBean("Egp", oid, objname, server);
            meta.setInstance( group );
            registerGroupNode("Egp", oid, objname, meta, group, server);
        }
    }


    /**
     * Factory method for "Egp" group metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param groupName Name of the group ("Egp")
     * @param groupOid  OID of this group
     * @param groupObjname ObjectName for this group (may be null)
     * @param server    MBeanServer for this group (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "Egp" group (EgpMeta)
     * 
     **/
    protected EgpMeta createEgpMetaNode(String groupName,
                String groupOid, ObjectName groupObjname, MBeanServer server)  {
        return new EgpMeta(this, objectserver);
    }


    /**
     * Factory method for "Egp" group MBean.
     * 
     * You can redefine this method if you need to replace the default
     * generated MBean class with your own customized class.
     * 
     * @param groupName Name of the group ("Egp")
     * @param groupOid  OID of this group
     * @param groupObjname ObjectName for this group (may be null)
     * @param server    MBeanServer for this group (may be null)
     * 
     * @return An instance of the MBean class generated for the
     *         "Egp" group (Egp)
     * 
     * Note that when using standard metadata,
     * the returned object must implement the "EgpMBean"
     * interface.
     **/
    protected Object createEgpMBean(String groupName,
                String groupOid,  ObjectName groupObjname, MBeanServer server)  {

        // Note that when using standard metadata,
        // the returned object must implement the "EgpMBean"
        // interface.
        //
        if (server != null) 
            return new Egp(this,server);
        else 
            return new Egp(this);
    }


    // ------------------------------------------------------------
    // 
    // Initialization of the "Udp" group.
    // 
    // ------------------------------------------------------------


    /**
     * Initialization of the "Udp" group.
     * 
     * To disable support of this group, redefine the 
     * "createUdpMetaNode()" factory method, and make it return "null"
     * 
     * @param server    MBeanServer for this group (may be null)
     * 
     **/
    protected void initUdp(MBeanServer server) 
        throws Exception {
        final String oid = getGroupOid("Udp", "1.3.6.1.2.1.7");
        ObjectName objname = null;
        if (server != null) {
            objname = getGroupObjectName("Udp", oid, mibName + ":name=com.elitecore.core.serverx.snmp.mib.mib2.autogen.Udp");
        }
        final UdpMeta meta = createUdpMetaNode("Udp", oid, objname, server);
        if (meta != null) {
            meta.registerTableNodes( this, server );

            // Note that when using standard metadata,
            // the returned object must implement the "UdpMBean"
            // interface.
            //
            final UdpMBean group = (UdpMBean) createUdpMBean("Udp", oid, objname, server);
            meta.setInstance( group );
            registerGroupNode("Udp", oid, objname, meta, group, server);
        }
    }


    /**
     * Factory method for "Udp" group metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param groupName Name of the group ("Udp")
     * @param groupOid  OID of this group
     * @param groupObjname ObjectName for this group (may be null)
     * @param server    MBeanServer for this group (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "Udp" group (UdpMeta)
     * 
     **/
    protected UdpMeta createUdpMetaNode(String groupName,
                String groupOid, ObjectName groupObjname, MBeanServer server)  {
        return new UdpMeta(this, objectserver);
    }


    /**
     * Factory method for "Udp" group MBean.
     * 
     * You can redefine this method if you need to replace the default
     * generated MBean class with your own customized class.
     * 
     * @param groupName Name of the group ("Udp")
     * @param groupOid  OID of this group
     * @param groupObjname ObjectName for this group (may be null)
     * @param server    MBeanServer for this group (may be null)
     * 
     * @return An instance of the MBean class generated for the
     *         "Udp" group (Udp)
     * 
     * Note that when using standard metadata,
     * the returned object must implement the "UdpMBean"
     * interface.
     **/
    protected Object createUdpMBean(String groupName,
                String groupOid,  ObjectName groupObjname, MBeanServer server)  {

        // Note that when using standard metadata,
        // the returned object must implement the "UdpMBean"
        // interface.
        //
        if (server != null) 
            return new Udp(this,server);
        else 
            return new Udp(this);
    }


    // ------------------------------------------------------------
    // 
    // Initialization of the "Tcp" group.
    // 
    // ------------------------------------------------------------


    /**
     * Initialization of the "Tcp" group.
     * 
     * To disable support of this group, redefine the 
     * "createTcpMetaNode()" factory method, and make it return "null"
     * 
     * @param server    MBeanServer for this group (may be null)
     * 
     **/
    protected void initTcp(MBeanServer server) 
        throws Exception {
        final String oid = getGroupOid("Tcp", "1.3.6.1.2.1.6");
        ObjectName objname = null;
        if (server != null) {
            objname = getGroupObjectName("Tcp", oid, mibName + ":name=com.elitecore.core.serverx.snmp.mib.mib2.autogen.Tcp");
        }
        final TcpMeta meta = createTcpMetaNode("Tcp", oid, objname, server);
        if (meta != null) {
            meta.registerTableNodes( this, server );

            // Note that when using standard metadata,
            // the returned object must implement the "TcpMBean"
            // interface.
            //
            final TcpMBean group = (TcpMBean) createTcpMBean("Tcp", oid, objname, server);
            meta.setInstance( group );
            registerGroupNode("Tcp", oid, objname, meta, group, server);
        }
    }


    /**
     * Factory method for "Tcp" group metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param groupName Name of the group ("Tcp")
     * @param groupOid  OID of this group
     * @param groupObjname ObjectName for this group (may be null)
     * @param server    MBeanServer for this group (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "Tcp" group (TcpMeta)
     * 
     **/
    protected TcpMeta createTcpMetaNode(String groupName,
                String groupOid, ObjectName groupObjname, MBeanServer server)  {
        return new TcpMeta(this, objectserver);
    }


    /**
     * Factory method for "Tcp" group MBean.
     * 
     * You can redefine this method if you need to replace the default
     * generated MBean class with your own customized class.
     * 
     * @param groupName Name of the group ("Tcp")
     * @param groupOid  OID of this group
     * @param groupObjname ObjectName for this group (may be null)
     * @param server    MBeanServer for this group (may be null)
     * 
     * @return An instance of the MBean class generated for the
     *         "Tcp" group (Tcp)
     * 
     * Note that when using standard metadata,
     * the returned object must implement the "TcpMBean"
     * interface.
     **/
    protected Object createTcpMBean(String groupName,
                String groupOid,  ObjectName groupObjname, MBeanServer server)  {

        // Note that when using standard metadata,
        // the returned object must implement the "TcpMBean"
        // interface.
        //
        if (server != null) 
            return new Tcp(this,server);
        else 
            return new Tcp(this);
    }


    // ------------------------------------------------------------
    // 
    // Initialization of the "Icmp" group.
    // 
    // ------------------------------------------------------------


    /**
     * Initialization of the "Icmp" group.
     * 
     * To disable support of this group, redefine the 
     * "createIcmpMetaNode()" factory method, and make it return "null"
     * 
     * @param server    MBeanServer for this group (may be null)
     * 
     **/
    protected void initIcmp(MBeanServer server) 
        throws Exception {
        final String oid = getGroupOid("Icmp", "1.3.6.1.2.1.5");
        ObjectName objname = null;
        if (server != null) {
            objname = getGroupObjectName("Icmp", oid, mibName + ":name=com.elitecore.core.serverx.snmp.mib.mib2.autogen.Icmp");
        }
        final IcmpMeta meta = createIcmpMetaNode("Icmp", oid, objname, server);
        if (meta != null) {
            meta.registerTableNodes( this, server );

            // Note that when using standard metadata,
            // the returned object must implement the "IcmpMBean"
            // interface.
            //
            final IcmpMBean group = (IcmpMBean) createIcmpMBean("Icmp", oid, objname, server);
            meta.setInstance( group );
            registerGroupNode("Icmp", oid, objname, meta, group, server);
        }
    }


    /**
     * Factory method for "Icmp" group metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param groupName Name of the group ("Icmp")
     * @param groupOid  OID of this group
     * @param groupObjname ObjectName for this group (may be null)
     * @param server    MBeanServer for this group (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "Icmp" group (IcmpMeta)
     * 
     **/
    protected IcmpMeta createIcmpMetaNode(String groupName,
                String groupOid, ObjectName groupObjname, MBeanServer server)  {
        return new IcmpMeta(this, objectserver);
    }


    /**
     * Factory method for "Icmp" group MBean.
     * 
     * You can redefine this method if you need to replace the default
     * generated MBean class with your own customized class.
     * 
     * @param groupName Name of the group ("Icmp")
     * @param groupOid  OID of this group
     * @param groupObjname ObjectName for this group (may be null)
     * @param server    MBeanServer for this group (may be null)
     * 
     * @return An instance of the MBean class generated for the
     *         "Icmp" group (Icmp)
     * 
     * Note that when using standard metadata,
     * the returned object must implement the "IcmpMBean"
     * interface.
     **/
    protected Object createIcmpMBean(String groupName,
                String groupOid,  ObjectName groupObjname, MBeanServer server)  {

        // Note that when using standard metadata,
        // the returned object must implement the "IcmpMBean"
        // interface.
        //
        if (server != null) 
            return new Icmp(this,server);
        else 
            return new Icmp(this);
    }


    // ------------------------------------------------------------
    // 
    // Initialization of the "Ip" group.
    // 
    // ------------------------------------------------------------


    /**
     * Initialization of the "Ip" group.
     * 
     * To disable support of this group, redefine the 
     * "createIpMetaNode()" factory method, and make it return "null"
     * 
     * @param server    MBeanServer for this group (may be null)
     * 
     **/
    protected void initIp(MBeanServer server) 
        throws Exception {
        final String oid = getGroupOid("Ip", "1.3.6.1.2.1.4");
        ObjectName objname = null;
        if (server != null) {
            objname = getGroupObjectName("Ip", oid, mibName + ":name=com.elitecore.core.serverx.snmp.mib.mib2.autogen.Ip");
        }
        final IpMeta meta = createIpMetaNode("Ip", oid, objname, server);
        if (meta != null) {
            meta.registerTableNodes( this, server );

            // Note that when using standard metadata,
            // the returned object must implement the "IpMBean"
            // interface.
            //
            final IpMBean group = (IpMBean) createIpMBean("Ip", oid, objname, server);
            meta.setInstance( group );
            registerGroupNode("Ip", oid, objname, meta, group, server);
        }
    }


    /**
     * Factory method for "Ip" group metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param groupName Name of the group ("Ip")
     * @param groupOid  OID of this group
     * @param groupObjname ObjectName for this group (may be null)
     * @param server    MBeanServer for this group (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "Ip" group (IpMeta)
     * 
     **/
    protected IpMeta createIpMetaNode(String groupName,
                String groupOid, ObjectName groupObjname, MBeanServer server)  {
        return new IpMeta(this, objectserver);
    }


    /**
     * Factory method for "Ip" group MBean.
     * 
     * You can redefine this method if you need to replace the default
     * generated MBean class with your own customized class.
     * 
     * @param groupName Name of the group ("Ip")
     * @param groupOid  OID of this group
     * @param groupObjname ObjectName for this group (may be null)
     * @param server    MBeanServer for this group (may be null)
     * 
     * @return An instance of the MBean class generated for the
     *         "Ip" group (Ip)
     * 
     * Note that when using standard metadata,
     * the returned object must implement the "IpMBean"
     * interface.
     **/
    protected Object createIpMBean(String groupName,
                String groupOid,  ObjectName groupObjname, MBeanServer server)  {

        // Note that when using standard metadata,
        // the returned object must implement the "IpMBean"
        // interface.
        //
        if (server != null) 
            return new Ip(this,server);
        else 
            return new Ip(this);
    }


    // ------------------------------------------------------------
    // 
    // Initialization of the "At" group.
    // 
    // ------------------------------------------------------------


    /**
     * Initialization of the "At" group.
     * 
     * To disable support of this group, redefine the 
     * "createAtMetaNode()" factory method, and make it return "null"
     * 
     * @param server    MBeanServer for this group (may be null)
     * 
     **/
    protected void initAt(MBeanServer server) 
        throws Exception {
        final String oid = getGroupOid("At", "1.3.6.1.2.1.3");
        ObjectName objname = null;
        if (server != null) {
            objname = getGroupObjectName("At", oid, mibName + ":name=com.elitecore.core.serverx.snmp.mib.mib2.autogen.At");
        }
        final AtMeta meta = createAtMetaNode("At", oid, objname, server);
        if (meta != null) {
            meta.registerTableNodes( this, server );

            // Note that when using standard metadata,
            // the returned object must implement the "AtMBean"
            // interface.
            //
            final AtMBean group = (AtMBean) createAtMBean("At", oid, objname, server);
            meta.setInstance( group );
            registerGroupNode("At", oid, objname, meta, group, server);
        }
    }


    /**
     * Factory method for "At" group metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param groupName Name of the group ("At")
     * @param groupOid  OID of this group
     * @param groupObjname ObjectName for this group (may be null)
     * @param server    MBeanServer for this group (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "At" group (AtMeta)
     * 
     **/
    protected AtMeta createAtMetaNode(String groupName,
                String groupOid, ObjectName groupObjname, MBeanServer server)  {
        return new AtMeta(this, objectserver);
    }


    /**
     * Factory method for "At" group MBean.
     * 
     * You can redefine this method if you need to replace the default
     * generated MBean class with your own customized class.
     * 
     * @param groupName Name of the group ("At")
     * @param groupOid  OID of this group
     * @param groupObjname ObjectName for this group (may be null)
     * @param server    MBeanServer for this group (may be null)
     * 
     * @return An instance of the MBean class generated for the
     *         "At" group (At)
     * 
     * Note that when using standard metadata,
     * the returned object must implement the "AtMBean"
     * interface.
     **/
    protected Object createAtMBean(String groupName,
                String groupOid,  ObjectName groupObjname, MBeanServer server)  {

        // Note that when using standard metadata,
        // the returned object must implement the "AtMBean"
        // interface.
        //
        if (server != null) 
            return new At(this,server);
        else 
            return new At(this);
    }


    // ------------------------------------------------------------
    // 
    // Initialization of the "Snmp" group.
    // 
    // ------------------------------------------------------------


    /**
     * Initialization of the "Snmp" group.
     * 
     * To disable support of this group, redefine the 
     * "createSnmpMetaNode()" factory method, and make it return "null"
     * 
     * @param server    MBeanServer for this group (may be null)
     * 
     **/
    protected void initSnmp(MBeanServer server) 
        throws Exception {
        final String oid = getGroupOid("Snmp", "1.3.6.1.2.1.11");
        ObjectName objname = null;
        if (server != null) {
            objname = getGroupObjectName("Snmp", oid, mibName + ":name=com.elitecore.core.serverx.snmp.mib.mib2.autogen.Snmp");
        }
        final SnmpMeta meta = createSnmpMetaNode("Snmp", oid, objname, server);
        if (meta != null) {
            meta.registerTableNodes( this, server );

            // Note that when using standard metadata,
            // the returned object must implement the "SnmpMBean"
            // interface.
            //
            final SnmpMBean group = (SnmpMBean) createSnmpMBean("Snmp", oid, objname, server);
            meta.setInstance( group );
            registerGroupNode("Snmp", oid, objname, meta, group, server);
        }
    }


    /**
     * Factory method for "Snmp" group metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param groupName Name of the group ("Snmp")
     * @param groupOid  OID of this group
     * @param groupObjname ObjectName for this group (may be null)
     * @param server    MBeanServer for this group (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "Snmp" group (SnmpMeta)
     * 
     **/
    protected SnmpMeta createSnmpMetaNode(String groupName,
                String groupOid, ObjectName groupObjname, MBeanServer server)  {
        return new SnmpMeta(this, objectserver);
    }


    /**
     * Factory method for "Snmp" group MBean.
     * 
     * You can redefine this method if you need to replace the default
     * generated MBean class with your own customized class.
     * 
     * @param groupName Name of the group ("Snmp")
     * @param groupOid  OID of this group
     * @param groupObjname ObjectName for this group (may be null)
     * @param server    MBeanServer for this group (may be null)
     * 
     * @return An instance of the MBean class generated for the
     *         "Snmp" group (Snmp)
     * 
     * Note that when using standard metadata,
     * the returned object must implement the "SnmpMBean"
     * interface.
     **/
    protected Object createSnmpMBean(String groupName,
                String groupOid,  ObjectName groupObjname, MBeanServer server)  {

        // Note that when using standard metadata,
        // the returned object must implement the "SnmpMBean"
        // interface.
        //
        if (server != null) 
            return new Snmp(this,server);
        else 
            return new Snmp(this);
    }


    // ------------------------------------------------------------
    // 
    // Initialization of the "Interfaces" group.
    // 
    // ------------------------------------------------------------


    /**
     * Initialization of the "Interfaces" group.
     * 
     * To disable support of this group, redefine the 
     * "createInterfacesMetaNode()" factory method, and make it return "null"
     * 
     * @param server    MBeanServer for this group (may be null)
     * 
     **/
    protected void initInterfaces(MBeanServer server) 
        throws Exception {
        final String oid = getGroupOid("Interfaces", "1.3.6.1.2.1.2");
        ObjectName objname = null;
        if (server != null) {
            objname = getGroupObjectName("Interfaces", oid, mibName + ":name=com.elitecore.core.serverx.snmp.mib.mib2.autogen.Interfaces");
        }
        final InterfacesMeta meta = createInterfacesMetaNode("Interfaces", oid, objname, server);
        if (meta != null) {
            meta.registerTableNodes( this, server );

            // Note that when using standard metadata,
            // the returned object must implement the "InterfacesMBean"
            // interface.
            //
            final InterfacesMBean group = (InterfacesMBean) createInterfacesMBean("Interfaces", oid, objname, server);
            meta.setInstance( group );
            registerGroupNode("Interfaces", oid, objname, meta, group, server);
        }
    }


    /**
     * Factory method for "Interfaces" group metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param groupName Name of the group ("Interfaces")
     * @param groupOid  OID of this group
     * @param groupObjname ObjectName for this group (may be null)
     * @param server    MBeanServer for this group (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "Interfaces" group (InterfacesMeta)
     * 
     **/
    protected InterfacesMeta createInterfacesMetaNode(String groupName,
                String groupOid, ObjectName groupObjname, MBeanServer server)  {
        return new InterfacesMeta(this, objectserver);
    }


    /**
     * Factory method for "Interfaces" group MBean.
     * 
     * You can redefine this method if you need to replace the default
     * generated MBean class with your own customized class.
     * 
     * @param groupName Name of the group ("Interfaces")
     * @param groupOid  OID of this group
     * @param groupObjname ObjectName for this group (may be null)
     * @param server    MBeanServer for this group (may be null)
     * 
     * @return An instance of the MBean class generated for the
     *         "Interfaces" group (Interfaces)
     * 
     * Note that when using standard metadata,
     * the returned object must implement the "InterfacesMBean"
     * interface.
     **/
    protected Object createInterfacesMBean(String groupName,
                String groupOid,  ObjectName groupObjname, MBeanServer server)  {

        // Note that when using standard metadata,
        // the returned object must implement the "InterfacesMBean"
        // interface.
        //
        if (server != null) 
            return new Interfaces(this,server);
        else 
            return new Interfaces(this);
    }


    // ------------------------------------------------------------
    // 
    // Initialization of the "System" group.
    // 
    // ------------------------------------------------------------


    /**
     * Initialization of the "System" group.
     * 
     * To disable support of this group, redefine the 
     * "createSystemMetaNode()" factory method, and make it return "null"
     * 
     * @param server    MBeanServer for this group (may be null)
     * 
     **/
    protected void initSystem(MBeanServer server) 
        throws Exception {
        final String oid = getGroupOid("System", "1.3.6.1.2.1.1");
        ObjectName objname = null;
        if (server != null) {
            objname = getGroupObjectName("System", oid, mibName + ":name=com.elitecore.core.serverx.snmp.mib.mib2.autogen.System");
        }
        final SystemMeta meta = createSystemMetaNode("System", oid, objname, server);
        if (meta != null) {
            meta.registerTableNodes( this, server );

            // Note that when using standard metadata,
            // the returned object must implement the "SystemMBean"
            // interface.
            //
            final SystemMBean group = (SystemMBean) createSystemMBean("System", oid, objname, server);
            meta.setInstance( group );
            registerGroupNode("System", oid, objname, meta, group, server);
        }
    }


    /**
     * Factory method for "System" group metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param groupName Name of the group ("System")
     * @param groupOid  OID of this group
     * @param groupObjname ObjectName for this group (may be null)
     * @param server    MBeanServer for this group (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "System" group (SystemMeta)
     * 
     **/
    protected SystemMeta createSystemMetaNode(String groupName,
                String groupOid, ObjectName groupObjname, MBeanServer server)  {
        return new SystemMeta(this, objectserver);
    }


    /**
     * Factory method for "System" group MBean.
     * 
     * You can redefine this method if you need to replace the default
     * generated MBean class with your own customized class.
     * 
     * @param groupName Name of the group ("System")
     * @param groupOid  OID of this group
     * @param groupObjname ObjectName for this group (may be null)
     * @param server    MBeanServer for this group (may be null)
     * 
     * @return An instance of the MBean class generated for the
     *         "System" group (System)
     * 
     * Note that when using standard metadata,
     * the returned object must implement the "SystemMBean"
     * interface.
     **/
    protected Object createSystemMBean(String groupName,
                String groupOid,  ObjectName groupObjname, MBeanServer server)  {

        // Note that when using standard metadata,
        // the returned object must implement the "SystemMBean"
        // interface.
        //
        if (server != null) 
            return new System(this,server);
        else 
            return new System(this);
    }


    // ------------------------------------------------------------
    // 
    // Implements the "registerTableMeta" method defined in "SnmpMib".
    // See the "SnmpMib" Javadoc API for more details.
    // 
    // ------------------------------------------------------------

    public void registerTableMeta( String name, SnmpMibTable meta) {
        if (metadatas == null) return;
        if (name == null) return;
        metadatas.put(name,meta);
    }


    // ------------------------------------------------------------
    // 
    // Implements the "getRegisteredTableMeta" method defined in "SnmpMib".
    // See the "SnmpMib" Javadoc API for more details.
    // 
    // ------------------------------------------------------------

    public SnmpMibTable getRegisteredTableMeta( String name ) {
        if (metadatas == null) return null;
        if (name == null) return null;
        return (SnmpMibTable) metadatas.get(name);
    }

    public SnmpStandardObjectServer getStandardObjectServer() {
        if (objectserver == null) 
            objectserver = new SnmpStandardObjectServer();
        return objectserver;
    }

    private boolean isInitialized = false;

    protected SnmpStandardObjectServer objectserver;

    protected final Hashtable metadatas = new Hashtable();
}
