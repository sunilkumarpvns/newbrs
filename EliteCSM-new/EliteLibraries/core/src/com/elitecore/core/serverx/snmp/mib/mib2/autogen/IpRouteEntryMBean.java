package com.elitecore.core.serverx.snmp.mib.mib2.autogen;

//
// Generated by mibgen version 5.1 (03/08/07) when compiling RFC1213-MIB in standard metadata mode.
//


// jmx imports
//
import com.sun.management.snmp.SnmpStatusException;

/**
 * This interface is used for representing the remote management interface for the "IpRouteEntry" MBean.
 */
public interface IpRouteEntryMBean {

    /**
     * Getter for the "IpRouteProto" variable.
     */
    public EnumIpRouteProto getIpRouteProto() throws SnmpStatusException;

    /**
     * Getter for the "IpRouteType" variable.
     */
    public EnumIpRouteType getIpRouteType() throws SnmpStatusException;

    /**
     * Setter for the "IpRouteType" variable.
     */
    public void setIpRouteType(EnumIpRouteType x) throws SnmpStatusException;

    /**
     * Checker for the "IpRouteType" variable.
     */
    public void checkIpRouteType(EnumIpRouteType x) throws SnmpStatusException;

    /**
     * Getter for the "IpRouteNextHop" variable.
     */
    public String getIpRouteNextHop() throws SnmpStatusException;

    /**
     * Setter for the "IpRouteNextHop" variable.
     */
    public void setIpRouteNextHop(String x) throws SnmpStatusException;

    /**
     * Checker for the "IpRouteNextHop" variable.
     */
    public void checkIpRouteNextHop(String x) throws SnmpStatusException;

    /**
     * Getter for the "IpRouteMetric4" variable.
     */
    public Integer getIpRouteMetric4() throws SnmpStatusException;

    /**
     * Setter for the "IpRouteMetric4" variable.
     */
    public void setIpRouteMetric4(Integer x) throws SnmpStatusException;

    /**
     * Checker for the "IpRouteMetric4" variable.
     */
    public void checkIpRouteMetric4(Integer x) throws SnmpStatusException;

    /**
     * Getter for the "IpRouteMetric3" variable.
     */
    public Integer getIpRouteMetric3() throws SnmpStatusException;

    /**
     * Setter for the "IpRouteMetric3" variable.
     */
    public void setIpRouteMetric3(Integer x) throws SnmpStatusException;

    /**
     * Checker for the "IpRouteMetric3" variable.
     */
    public void checkIpRouteMetric3(Integer x) throws SnmpStatusException;

    /**
     * Getter for the "IpRouteMetric2" variable.
     */
    public Integer getIpRouteMetric2() throws SnmpStatusException;

    /**
     * Setter for the "IpRouteMetric2" variable.
     */
    public void setIpRouteMetric2(Integer x) throws SnmpStatusException;

    /**
     * Checker for the "IpRouteMetric2" variable.
     */
    public void checkIpRouteMetric2(Integer x) throws SnmpStatusException;

    /**
     * Getter for the "IpRouteInfo" variable.
     */
    public String getIpRouteInfo() throws SnmpStatusException;

    /**
     * Getter for the "IpRouteMetric1" variable.
     */
    public Integer getIpRouteMetric1() throws SnmpStatusException;

    /**
     * Setter for the "IpRouteMetric1" variable.
     */
    public void setIpRouteMetric1(Integer x) throws SnmpStatusException;

    /**
     * Checker for the "IpRouteMetric1" variable.
     */
    public void checkIpRouteMetric1(Integer x) throws SnmpStatusException;

    /**
     * Getter for the "IpRouteMetric5" variable.
     */
    public Integer getIpRouteMetric5() throws SnmpStatusException;

    /**
     * Setter for the "IpRouteMetric5" variable.
     */
    public void setIpRouteMetric5(Integer x) throws SnmpStatusException;

    /**
     * Checker for the "IpRouteMetric5" variable.
     */
    public void checkIpRouteMetric5(Integer x) throws SnmpStatusException;

    /**
     * Getter for the "IpRouteIfIndex" variable.
     */
    public Integer getIpRouteIfIndex() throws SnmpStatusException;

    /**
     * Setter for the "IpRouteIfIndex" variable.
     */
    public void setIpRouteIfIndex(Integer x) throws SnmpStatusException;

    /**
     * Checker for the "IpRouteIfIndex" variable.
     */
    public void checkIpRouteIfIndex(Integer x) throws SnmpStatusException;

    /**
     * Getter for the "IpRouteMask" variable.
     */
    public String getIpRouteMask() throws SnmpStatusException;

    /**
     * Setter for the "IpRouteMask" variable.
     */
    public void setIpRouteMask(String x) throws SnmpStatusException;

    /**
     * Checker for the "IpRouteMask" variable.
     */
    public void checkIpRouteMask(String x) throws SnmpStatusException;

    /**
     * Getter for the "IpRouteAge" variable.
     */
    public Integer getIpRouteAge() throws SnmpStatusException;

    /**
     * Setter for the "IpRouteAge" variable.
     */
    public void setIpRouteAge(Integer x) throws SnmpStatusException;

    /**
     * Checker for the "IpRouteAge" variable.
     */
    public void checkIpRouteAge(Integer x) throws SnmpStatusException;

    /**
     * Getter for the "IpRouteDest" variable.
     */
    public String getIpRouteDest() throws SnmpStatusException;

    /**
     * Setter for the "IpRouteDest" variable.
     */
    public void setIpRouteDest(String x) throws SnmpStatusException;

    /**
     * Checker for the "IpRouteDest" variable.
     */
    public void checkIpRouteDest(String x) throws SnmpStatusException;

}
