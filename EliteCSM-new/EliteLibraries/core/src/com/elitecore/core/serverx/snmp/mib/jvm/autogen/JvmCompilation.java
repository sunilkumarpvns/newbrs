package com.elitecore.core.serverx.snmp.mib.jvm.autogen;

//
// Generated by mibgen version 5.1 (03/08/07) when compiling JVM-MANAGEMENT-MIB.
//

// java imports
//
import java.io.Serializable;

// jmx imports
//
import javax.management.MBeanServer;
import com.sun.management.snmp.SnmpString;
import com.sun.management.snmp.SnmpStatusException;

// jdmk imports
//
import com.sun.management.snmp.agent.SnmpMib;

/**
 * The class is used for implementing the "JvmCompilation" group.
 * The group is defined with the following oid: 1.3.6.1.4.1.42.2.145.3.163.1.1.5.
 */
public class JvmCompilation implements JvmCompilationMBean, Serializable {

    /**
     * Variable for storing the value of "JvmJITCompilerTimeMonitoring".
     * The variable is identified by: "1.3.6.1.4.1.42.2.145.3.163.1.1.5.3".
     *
     * "Indicates whether the Java virtual machine supports
     * compilation time monitoring.
     * 
     * See java.lang.management.CompilationMXBean.
     * isCompilationTimeMonitoringSupported()
     * "
     *
     */
    protected EnumJvmJITCompilerTimeMonitoring JvmJITCompilerTimeMonitoring = new EnumJvmJITCompilerTimeMonitoring();

    /**
     * Variable for storing the value of "JvmJITCompilerTimeMs".
     * The variable is identified by: "1.3.6.1.4.1.42.2.145.3.163.1.1.5.2".
     *
     * "Gets the approximate accumulated elapsed time (in milliseconds)
     * spent in compilation since the Java virtual machine has started.
     * If multiple threads are used for compilation, this value is
     * the summation of the approximate time that each thread
     * spent in compilation.
     * 
     * If compiler time monitoring is not supported, then this object
     * remains set to 0.
     * 
     * See java.lang.management.CompilationMXBean.getTotalCompilationTime()
     * "
     *
     */
    protected Long JvmJITCompilerTimeMs = new Long(1);

    /**
     * Variable for storing the value of "JvmJITCompilerName".
     * The variable is identified by: "1.3.6.1.4.1.42.2.145.3.163.1.1.5.1".
     *
     * "The name of the Just-in-time (JIT) compiler.
     * 
     * See java.lang.management.CompilationMXBean.getName()
     * "
     *
     */
    protected Byte[] JvmJITCompilerName = { new Byte("74"), new Byte("68"), new Byte("77"), new Byte("75")};


    /**
     * Constructor for the "JvmCompilation" group.
     * If the group contains a table, the entries created through an SNMP SET will not be registered in Java DMK.
     */
    public JvmCompilation(SnmpMib myMib) {
    }


    /**
     * Constructor for the "JvmCompilation" group.
     * If the group contains a table, the entries created through an SNMP SET will be AUTOMATICALLY REGISTERED in Java DMK.
     */
    public JvmCompilation(SnmpMib myMib, MBeanServer server) {
    }

    /**
     * Getter for the "JvmJITCompilerTimeMonitoring" variable.
     */
    public EnumJvmJITCompilerTimeMonitoring getJvmJITCompilerTimeMonitoring() throws SnmpStatusException {
        return JvmJITCompilerTimeMonitoring;
    }

    /**
     * Getter for the "JvmJITCompilerTimeMs" variable.
     */
    public Long getJvmJITCompilerTimeMs() throws SnmpStatusException {
        return JvmJITCompilerTimeMs;
    }

    /**
     * Getter for the "JvmJITCompilerName" variable.
     */
    public Byte[] getJvmJITCompilerName() throws SnmpStatusException {
        return JvmJITCompilerName;
    }

}
