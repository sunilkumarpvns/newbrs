package com.elitecore.core.serverx.snmp.mib.os.autogen;

//
// Generated by mibgen version 5.1 (03/08/07) when compiling UCD-SNMP-MIB.
//

// java imports
//
import java.io.Serializable;

// jmx imports
//
import com.sun.management.snmp.SnmpStatusException;

// jdmk imports
//
import com.sun.management.snmp.agent.SnmpMib;

/**
 * The class is used for implementing the "LogMatchEntry" group.
 * The group is defined with the following oid: 1.3.6.1.4.1.2021.16.2.1.
 */
public class LogMatchEntry implements LogMatchEntryMBean, Serializable {

    /**
     * Variable for storing the value of "LogMatchCounter".
     * The variable is identified by: "1.3.6.1.4.1.2021.16.2.1.9".
     */
    protected Long LogMatchCounter = new Long(1);

    /**
     * Variable for storing the value of "LogMatchCurrentCount".
     * The variable is identified by: "1.3.6.1.4.1.2021.16.2.1.8".
     */
    protected Integer LogMatchCurrentCount = new Integer(1);

    /**
     * Variable for storing the value of "LogMatchCurrentCounter".
     * The variable is identified by: "1.3.6.1.4.1.2021.16.2.1.7".
     */
    protected Long LogMatchCurrentCounter = new Long(1);

    /**
     * Variable for storing the value of "LogMatchGlobalCount".
     * The variable is identified by: "1.3.6.1.4.1.2021.16.2.1.6".
     */
    protected Integer LogMatchGlobalCount = new Integer(1);

    /**
     * Variable for storing the value of "LogMatchGlobalCounter".
     * The variable is identified by: "1.3.6.1.4.1.2021.16.2.1.5".
     */
    protected Long LogMatchGlobalCounter = new Long(1);

    /**
     * Variable for storing the value of "LogMatchRegEx".
     * The variable is identified by: "1.3.6.1.4.1.2021.16.2.1.4".
     */
    protected String LogMatchRegEx = new String("JDMK 5.1");

    /**
     * Variable for storing the value of "LogMatchFilename".
     * The variable is identified by: "1.3.6.1.4.1.2021.16.2.1.3".
     */
    protected String LogMatchFilename = new String("JDMK 5.1");

    /**
     * Variable for storing the value of "LogMatchRegExCompilation".
     * The variable is identified by: "1.3.6.1.4.1.2021.16.2.1.101".
     */
    protected String LogMatchRegExCompilation = new String("JDMK 5.1");

    /**
     * Variable for storing the value of "LogMatchCycle".
     * The variable is identified by: "1.3.6.1.4.1.2021.16.2.1.11".
     */
    protected Integer LogMatchCycle = new Integer(1);

    /**
     * Variable for storing the value of "LogMatchName".
     * The variable is identified by: "1.3.6.1.4.1.2021.16.2.1.2".
     */
    protected String LogMatchName = new String("JDMK 5.1");

    /**
     * Variable for storing the value of "LogMatchCount".
     * The variable is identified by: "1.3.6.1.4.1.2021.16.2.1.10".
     */
    protected Integer LogMatchCount = new Integer(1);

    /**
     * Variable for storing the value of "LogMatchIndex".
     * The variable is identified by: "1.3.6.1.4.1.2021.16.2.1.1".
     */
    protected Integer LogMatchIndex = new Integer(1);

    /**
     * Variable for storing the value of "LogMatchErrorFlag".
     * The variable is identified by: "1.3.6.1.4.1.2021.16.2.1.100".
     */
    protected EnumLogMatchErrorFlag LogMatchErrorFlag = new EnumLogMatchErrorFlag();


    /**
     * Constructor for the "LogMatchEntry" group.
     */
    public LogMatchEntry(SnmpMib myMib) {
    }

    /**
     * Getter for the "LogMatchCounter" variable.
     */
    public Long getLogMatchCounter() throws SnmpStatusException {
        return LogMatchCounter;
    }

    /**
     * Getter for the "LogMatchCurrentCount" variable.
     */
    public Integer getLogMatchCurrentCount() throws SnmpStatusException {
        return LogMatchCurrentCount;
    }

    /**
     * Getter for the "LogMatchCurrentCounter" variable.
     */
    public Long getLogMatchCurrentCounter() throws SnmpStatusException {
        return LogMatchCurrentCounter;
    }

    /**
     * Getter for the "LogMatchGlobalCount" variable.
     */
    public Integer getLogMatchGlobalCount() throws SnmpStatusException {
        return LogMatchGlobalCount;
    }

    /**
     * Getter for the "LogMatchGlobalCounter" variable.
     */
    public Long getLogMatchGlobalCounter() throws SnmpStatusException {
        return LogMatchGlobalCounter;
    }

    /**
     * Getter for the "LogMatchRegEx" variable.
     */
    public String getLogMatchRegEx() throws SnmpStatusException {
        return LogMatchRegEx;
    }

    /**
     * Getter for the "LogMatchFilename" variable.
     */
    public String getLogMatchFilename() throws SnmpStatusException {
        return LogMatchFilename;
    }

    /**
     * Getter for the "LogMatchRegExCompilation" variable.
     */
    public String getLogMatchRegExCompilation() throws SnmpStatusException {
        return LogMatchRegExCompilation;
    }

    /**
     * Getter for the "LogMatchCycle" variable.
     */
    public Integer getLogMatchCycle() throws SnmpStatusException {
        return LogMatchCycle;
    }

    /**
     * Getter for the "LogMatchName" variable.
     */
    public String getLogMatchName() throws SnmpStatusException {
        return LogMatchName;
    }

    /**
     * Getter for the "LogMatchCount" variable.
     */
    public Integer getLogMatchCount() throws SnmpStatusException {
        return LogMatchCount;
    }

    /**
     * Getter for the "LogMatchIndex" variable.
     */
    public Integer getLogMatchIndex() throws SnmpStatusException {
        return LogMatchIndex;
    }

    /**
     * Getter for the "LogMatchErrorFlag" variable.
     */
    public EnumLogMatchErrorFlag getLogMatchErrorFlag() throws SnmpStatusException {
        return LogMatchErrorFlag;
    }

}
