package com.elitecore.core.serverx.snmp.mib.os.autogen;

//
// Generated by mibgen version 5.1 (03/08/07) when compiling UCD-SNMP-MIB in standard metadata mode.
//


// jmx imports
//
import com.sun.management.snmp.SnmpStatusException;

/**
 * This interface is used for representing the remote management interface for the "Version" MBean.
 */
public interface VersionMBean {

    /**
     * Getter for the "VersionDoDebugging" variable.
     */
    public Integer getVersionDoDebugging() throws SnmpStatusException;

    /**
     * Setter for the "VersionDoDebugging" variable.
     */
    public void setVersionDoDebugging(Integer x) throws SnmpStatusException;

    /**
     * Checker for the "VersionDoDebugging" variable.
     */
    public void checkVersionDoDebugging(Integer x) throws SnmpStatusException;

    /**
     * Getter for the "VersionConfigureOptions" variable.
     */
    public String getVersionConfigureOptions() throws SnmpStatusException;

    /**
     * Getter for the "VersionIdent" variable.
     */
    public String getVersionIdent() throws SnmpStatusException;

    /**
     * Getter for the "VersionSavePersistentData" variable.
     */
    public Integer getVersionSavePersistentData() throws SnmpStatusException;

    /**
     * Setter for the "VersionSavePersistentData" variable.
     */
    public void setVersionSavePersistentData(Integer x) throws SnmpStatusException;

    /**
     * Checker for the "VersionSavePersistentData" variable.
     */
    public void checkVersionSavePersistentData(Integer x) throws SnmpStatusException;

    /**
     * Getter for the "VersionCDate" variable.
     */
    public String getVersionCDate() throws SnmpStatusException;

    /**
     * Getter for the "VersionRestartAgent" variable.
     */
    public Integer getVersionRestartAgent() throws SnmpStatusException;

    /**
     * Setter for the "VersionRestartAgent" variable.
     */
    public void setVersionRestartAgent(Integer x) throws SnmpStatusException;

    /**
     * Checker for the "VersionRestartAgent" variable.
     */
    public void checkVersionRestartAgent(Integer x) throws SnmpStatusException;

    /**
     * Getter for the "VersionDate" variable.
     */
    public String getVersionDate() throws SnmpStatusException;

    /**
     * Getter for the "VersionTag" variable.
     */
    public String getVersionTag() throws SnmpStatusException;

    /**
     * Getter for the "VersionUpdateConfig" variable.
     */
    public Integer getVersionUpdateConfig() throws SnmpStatusException;

    /**
     * Setter for the "VersionUpdateConfig" variable.
     */
    public void setVersionUpdateConfig(Integer x) throws SnmpStatusException;

    /**
     * Checker for the "VersionUpdateConfig" variable.
     */
    public void checkVersionUpdateConfig(Integer x) throws SnmpStatusException;

    /**
     * Getter for the "VersionClearCache" variable.
     */
    public Integer getVersionClearCache() throws SnmpStatusException;

    /**
     * Setter for the "VersionClearCache" variable.
     */
    public void setVersionClearCache(Integer x) throws SnmpStatusException;

    /**
     * Checker for the "VersionClearCache" variable.
     */
    public void checkVersionClearCache(Integer x) throws SnmpStatusException;

    /**
     * Getter for the "VersionIndex" variable.
     */
    public Integer getVersionIndex() throws SnmpStatusException;

}
