package com.elitecore.core.serverx.snmp.mib.os.autogen;

//
// Generated by mibgen version 5.1 (03/08/07) when compiling UCD-SNMP-MIB in standard metadata mode.
//

// java imports
//
import java.io.Serializable;
import java.util.Hashtable;

// jmx imports
//
import javax.management.MBeanServer;
import javax.management.ObjectName;
import javax.management.InstanceAlreadyExistsException;

// jdmk imports
//
import com.sun.management.snmp.agent.SnmpMib;
import com.sun.management.snmp.agent.SnmpMibNode;
import com.sun.management.snmp.agent.SnmpMibTable;
import com.sun.management.snmp.agent.SnmpStandardObjectServer;

/**
 * The class is used for representing "UCD-SNMP-MIB".
 * You can edit the file if you want to modify the behavior of the MIB.
 */
public class UCD_SNMP_MIB extends SnmpMib implements Serializable {

    /**
     * Default constructor. Initialize the Mib tree.
     */
    public UCD_SNMP_MIB() {
        mibName = "UCD_SNMP_MIB";
    }

    /**
     * Initialization of the MIB with no registration in Java DMK.
     */
    public void init() throws IllegalAccessException {
        // Allow only one initialization of the MIB.
        //
        if (isInitialized == true) {
            return ;
        }

        try  {
            populate(null, null);
        } catch(IllegalAccessException x)  {
            throw x;
        } catch(RuntimeException x)  {
            throw x;
        } catch(Exception x)  {
            throw new Error(x.getMessage());
        }

        isInitialized = true;
    }

    /**
     * Initialization of the MIB with AUTOMATIC REGISTRATION in Java DMK.
     */
    public ObjectName preRegister(MBeanServer server, ObjectName name)
            throws Exception {
        // Allow only one initialization of the MIB.
        //
        if (isInitialized == true) {
            throw new InstanceAlreadyExistsException();
        }

        // Initialize MBeanServer information.
        //
        this.server = server;

        populate(server, name);

        isInitialized = true;
        return name;
    }

    /**
     * Initialization of the MIB with no registration in Java DMK.
     */
    public void populate(MBeanServer server, ObjectName name) 
        throws Exception {
        // Allow only one initialization of the MIB.
        //
        if (isInitialized == true) {
            return ;
        }

        if (objectserver == null) 
            objectserver = new SnmpStandardObjectServer();

        // Initialization of the "Ucdavis" group.
        // To disable support of this group, redefine the 
        // "createUcdavisMetaNode()" factory method, and make it return "null"
        //
        initUcdavis(server);

        // Initialization of the "LogMatch" group.
        // To disable support of this group, redefine the 
        // "createLogMatchMetaNode()" factory method, and make it return "null"
        //
        initLogMatch(server);

        // Initialization of the "Memory" group.
        // To disable support of this group, redefine the 
        // "createMemoryMetaNode()" factory method, and make it return "null"
        //
        initMemory(server);

        // Initialization of the "SystemStats" group.
        // To disable support of this group, redefine the 
        // "createSystemStatsMetaNode()" factory method, and make it return "null"
        //
        initSystemStats(server);

        // Initialization of the "Snmperrs" group.
        // To disable support of this group, redefine the 
        // "createSnmperrsMetaNode()" factory method, and make it return "null"
        //
        initSnmperrs(server);

        // Initialization of the "Version" group.
        // To disable support of this group, redefine the 
        // "createVersionMetaNode()" factory method, and make it return "null"
        //
        initVersion(server);

        isInitialized = true;
    }


    // ------------------------------------------------------------
    // 
    // Initialization of the "Ucdavis" group.
    // 
    // ------------------------------------------------------------


    /**
     * Initialization of the "Ucdavis" group.
     * 
     * To disable support of this group, redefine the 
     * "createUcdavisMetaNode()" factory method, and make it return "null"
     * 
     * @param server    MBeanServer for this group (may be null)
     * 
     **/
    protected void initUcdavis(MBeanServer server) 
        throws Exception {
        final String oid = getGroupOid("Ucdavis", "1.3.6.1.4.1.2021");
        ObjectName objname = null;
        if (server != null) {
            objname = getGroupObjectName("Ucdavis", oid, mibName + ":name=com.elitecore.core.serverx.snmp.mib.os.autogen.Ucdavis");
        }
        final UcdavisMeta meta = createUcdavisMetaNode("Ucdavis", oid, objname, server);
        if (meta != null) {
            meta.registerTableNodes( this, server );

            // Note that when using standard metadata,
            // the returned object must implement the "UcdavisMBean"
            // interface.
            //
            final UcdavisMBean group = (UcdavisMBean) createUcdavisMBean("Ucdavis", oid, objname, server);
            meta.setInstance( group );
            registerGroupNode("Ucdavis", oid, objname, meta, group, server);
        }
    }


    /**
     * Factory method for "Ucdavis" group metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param groupName Name of the group ("Ucdavis")
     * @param groupOid  OID of this group
     * @param groupObjname ObjectName for this group (may be null)
     * @param server    MBeanServer for this group (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "Ucdavis" group (UcdavisMeta)
     * 
     **/
    protected UcdavisMeta createUcdavisMetaNode(String groupName,
                String groupOid, ObjectName groupObjname, MBeanServer server)  {
        return new UcdavisMeta(this, objectserver);
    }


    /**
     * Factory method for "Ucdavis" group MBean.
     * 
     * You can redefine this method if you need to replace the default
     * generated MBean class with your own customized class.
     * 
     * @param groupName Name of the group ("Ucdavis")
     * @param groupOid  OID of this group
     * @param groupObjname ObjectName for this group (may be null)
     * @param server    MBeanServer for this group (may be null)
     * 
     * @return An instance of the MBean class generated for the
     *         "Ucdavis" group (Ucdavis)
     * 
     * Note that when using standard metadata,
     * the returned object must implement the "UcdavisMBean"
     * interface.
     **/
    protected Object createUcdavisMBean(String groupName,
                String groupOid,  ObjectName groupObjname, MBeanServer server)  {

        // Note that when using standard metadata,
        // the returned object must implement the "UcdavisMBean"
        // interface.
        //
        if (server != null) 
            return new Ucdavis(this,server);
        else 
            return new Ucdavis(this);
    }


    // ------------------------------------------------------------
    // 
    // Initialization of the "LogMatch" group.
    // 
    // ------------------------------------------------------------


    /**
     * Initialization of the "LogMatch" group.
     * 
     * To disable support of this group, redefine the 
     * "createLogMatchMetaNode()" factory method, and make it return "null"
     * 
     * @param server    MBeanServer for this group (may be null)
     * 
     **/
    protected void initLogMatch(MBeanServer server) 
        throws Exception {
        final String oid = getGroupOid("LogMatch", "1.3.6.1.4.1.2021.16");
        ObjectName objname = null;
        if (server != null) {
            objname = getGroupObjectName("LogMatch", oid, mibName + "_Ucdavis:name=com.elitecore.core.serverx.snmp.mib.os.autogen.LogMatch");
        }
        final LogMatchMeta meta = createLogMatchMetaNode("LogMatch", oid, objname, server);
        if (meta != null) {
            meta.registerTableNodes( this, server );

            // Note that when using standard metadata,
            // the returned object must implement the "LogMatchMBean"
            // interface.
            //
            final LogMatchMBean group = (LogMatchMBean) createLogMatchMBean("LogMatch", oid, objname, server);
            meta.setInstance( group );
            registerGroupNode("LogMatch", oid, objname, meta, group, server);
        }
    }


    /**
     * Factory method for "LogMatch" group metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param groupName Name of the group ("LogMatch")
     * @param groupOid  OID of this group
     * @param groupObjname ObjectName for this group (may be null)
     * @param server    MBeanServer for this group (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "LogMatch" group (LogMatchMeta)
     * 
     **/
    protected LogMatchMeta createLogMatchMetaNode(String groupName,
                String groupOid, ObjectName groupObjname, MBeanServer server)  {
        return new LogMatchMeta(this, objectserver);
    }


    /**
     * Factory method for "LogMatch" group MBean.
     * 
     * You can redefine this method if you need to replace the default
     * generated MBean class with your own customized class.
     * 
     * @param groupName Name of the group ("LogMatch")
     * @param groupOid  OID of this group
     * @param groupObjname ObjectName for this group (may be null)
     * @param server    MBeanServer for this group (may be null)
     * 
     * @return An instance of the MBean class generated for the
     *         "LogMatch" group (LogMatch)
     * 
     * Note that when using standard metadata,
     * the returned object must implement the "LogMatchMBean"
     * interface.
     **/
    protected Object createLogMatchMBean(String groupName,
                String groupOid,  ObjectName groupObjname, MBeanServer server)  {

        // Note that when using standard metadata,
        // the returned object must implement the "LogMatchMBean"
        // interface.
        //
        if (server != null) 
            return new LogMatch(this,server);
        else 
            return new LogMatch(this);
    }


    // ------------------------------------------------------------
    // 
    // Initialization of the "Memory" group.
    // 
    // ------------------------------------------------------------


    /**
     * Initialization of the "Memory" group.
     * 
     * To disable support of this group, redefine the 
     * "createMemoryMetaNode()" factory method, and make it return "null"
     * 
     * @param server    MBeanServer for this group (may be null)
     * 
     **/
    protected void initMemory(MBeanServer server) 
        throws Exception {
        final String oid = getGroupOid("Memory", "1.3.6.1.4.1.2021.4");
        ObjectName objname = null;
        if (server != null) {
            objname = getGroupObjectName("Memory", oid, mibName + "_Ucdavis:name=com.elitecore.core.serverx.snmp.mib.os.autogen.Memory");
        }
        final MemoryMeta meta = createMemoryMetaNode("Memory", oid, objname, server);
        if (meta != null) {
            meta.registerTableNodes( this, server );

            // Note that when using standard metadata,
            // the returned object must implement the "MemoryMBean"
            // interface.
            //
            final MemoryMBean group = (MemoryMBean) createMemoryMBean("Memory", oid, objname, server);
            meta.setInstance( group );
            registerGroupNode("Memory", oid, objname, meta, group, server);
        }
    }


    /**
     * Factory method for "Memory" group metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param groupName Name of the group ("Memory")
     * @param groupOid  OID of this group
     * @param groupObjname ObjectName for this group (may be null)
     * @param server    MBeanServer for this group (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "Memory" group (MemoryMeta)
     * 
     **/
    protected MemoryMeta createMemoryMetaNode(String groupName,
                String groupOid, ObjectName groupObjname, MBeanServer server)  {
        return new MemoryMeta(this, objectserver);
    }


    /**
     * Factory method for "Memory" group MBean.
     * 
     * You can redefine this method if you need to replace the default
     * generated MBean class with your own customized class.
     * 
     * @param groupName Name of the group ("Memory")
     * @param groupOid  OID of this group
     * @param groupObjname ObjectName for this group (may be null)
     * @param server    MBeanServer for this group (may be null)
     * 
     * @return An instance of the MBean class generated for the
     *         "Memory" group (Memory)
     * 
     * Note that when using standard metadata,
     * the returned object must implement the "MemoryMBean"
     * interface.
     **/
    protected Object createMemoryMBean(String groupName,
                String groupOid,  ObjectName groupObjname, MBeanServer server)  {

        // Note that when using standard metadata,
        // the returned object must implement the "MemoryMBean"
        // interface.
        //
        if (server != null) 
            return new Memory(this,server);
        else 
            return new Memory(this);
    }


    // ------------------------------------------------------------
    // 
    // Initialization of the "SystemStats" group.
    // 
    // ------------------------------------------------------------


    /**
     * Initialization of the "SystemStats" group.
     * 
     * To disable support of this group, redefine the 
     * "createSystemStatsMetaNode()" factory method, and make it return "null"
     * 
     * @param server    MBeanServer for this group (may be null)
     * 
     **/
    protected void initSystemStats(MBeanServer server) 
        throws Exception {
        final String oid = getGroupOid("SystemStats", "1.3.6.1.4.1.2021.11");
        ObjectName objname = null;
        if (server != null) {
            objname = getGroupObjectName("SystemStats", oid, mibName + "_Ucdavis:name=com.elitecore.core.serverx.snmp.mib.os.autogen.SystemStats");
        }
        final SystemStatsMeta meta = createSystemStatsMetaNode("SystemStats", oid, objname, server);
        if (meta != null) {
            meta.registerTableNodes( this, server );

            // Note that when using standard metadata,
            // the returned object must implement the "SystemStatsMBean"
            // interface.
            //
            final SystemStatsMBean group = (SystemStatsMBean) createSystemStatsMBean("SystemStats", oid, objname, server);
            meta.setInstance( group );
            registerGroupNode("SystemStats", oid, objname, meta, group, server);
        }
    }


    /**
     * Factory method for "SystemStats" group metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param groupName Name of the group ("SystemStats")
     * @param groupOid  OID of this group
     * @param groupObjname ObjectName for this group (may be null)
     * @param server    MBeanServer for this group (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "SystemStats" group (SystemStatsMeta)
     * 
     **/
    protected SystemStatsMeta createSystemStatsMetaNode(String groupName,
                String groupOid, ObjectName groupObjname, MBeanServer server)  {
        return new SystemStatsMeta(this, objectserver);
    }


    /**
     * Factory method for "SystemStats" group MBean.
     * 
     * You can redefine this method if you need to replace the default
     * generated MBean class with your own customized class.
     * 
     * @param groupName Name of the group ("SystemStats")
     * @param groupOid  OID of this group
     * @param groupObjname ObjectName for this group (may be null)
     * @param server    MBeanServer for this group (may be null)
     * 
     * @return An instance of the MBean class generated for the
     *         "SystemStats" group (SystemStats)
     * 
     * Note that when using standard metadata,
     * the returned object must implement the "SystemStatsMBean"
     * interface.
     **/
    protected Object createSystemStatsMBean(String groupName,
                String groupOid,  ObjectName groupObjname, MBeanServer server)  {

        // Note that when using standard metadata,
        // the returned object must implement the "SystemStatsMBean"
        // interface.
        //
        if (server != null) 
            return new SystemStats(this,server);
        else 
            return new SystemStats(this);
    }


    // ------------------------------------------------------------
    // 
    // Initialization of the "Snmperrs" group.
    // 
    // ------------------------------------------------------------


    /**
     * Initialization of the "Snmperrs" group.
     * 
     * To disable support of this group, redefine the 
     * "createSnmperrsMetaNode()" factory method, and make it return "null"
     * 
     * @param server    MBeanServer for this group (may be null)
     * 
     **/
    protected void initSnmperrs(MBeanServer server) 
        throws Exception {
        final String oid = getGroupOid("Snmperrs", "1.3.6.1.4.1.2021.101");
        ObjectName objname = null;
        if (server != null) {
            objname = getGroupObjectName("Snmperrs", oid, mibName + "_Ucdavis:name=com.elitecore.core.serverx.snmp.mib.os.autogen.Snmperrs");
        }
        final SnmperrsMeta meta = createSnmperrsMetaNode("Snmperrs", oid, objname, server);
        if (meta != null) {
            meta.registerTableNodes( this, server );

            // Note that when using standard metadata,
            // the returned object must implement the "SnmperrsMBean"
            // interface.
            //
            final SnmperrsMBean group = (SnmperrsMBean) createSnmperrsMBean("Snmperrs", oid, objname, server);
            meta.setInstance( group );
            registerGroupNode("Snmperrs", oid, objname, meta, group, server);
        }
    }


    /**
     * Factory method for "Snmperrs" group metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param groupName Name of the group ("Snmperrs")
     * @param groupOid  OID of this group
     * @param groupObjname ObjectName for this group (may be null)
     * @param server    MBeanServer for this group (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "Snmperrs" group (SnmperrsMeta)
     * 
     **/
    protected SnmperrsMeta createSnmperrsMetaNode(String groupName,
                String groupOid, ObjectName groupObjname, MBeanServer server)  {
        return new SnmperrsMeta(this, objectserver);
    }


    /**
     * Factory method for "Snmperrs" group MBean.
     * 
     * You can redefine this method if you need to replace the default
     * generated MBean class with your own customized class.
     * 
     * @param groupName Name of the group ("Snmperrs")
     * @param groupOid  OID of this group
     * @param groupObjname ObjectName for this group (may be null)
     * @param server    MBeanServer for this group (may be null)
     * 
     * @return An instance of the MBean class generated for the
     *         "Snmperrs" group (Snmperrs)
     * 
     * Note that when using standard metadata,
     * the returned object must implement the "SnmperrsMBean"
     * interface.
     **/
    protected Object createSnmperrsMBean(String groupName,
                String groupOid,  ObjectName groupObjname, MBeanServer server)  {

        // Note that when using standard metadata,
        // the returned object must implement the "SnmperrsMBean"
        // interface.
        //
        if (server != null) 
            return new Snmperrs(this,server);
        else 
            return new Snmperrs(this);
    }


    // ------------------------------------------------------------
    // 
    // Initialization of the "Version" group.
    // 
    // ------------------------------------------------------------


    /**
     * Initialization of the "Version" group.
     * 
     * To disable support of this group, redefine the 
     * "createVersionMetaNode()" factory method, and make it return "null"
     * 
     * @param server    MBeanServer for this group (may be null)
     * 
     **/
    protected void initVersion(MBeanServer server) 
        throws Exception {
        final String oid = getGroupOid("Version", "1.3.6.1.4.1.2021.100");
        ObjectName objname = null;
        if (server != null) {
            objname = getGroupObjectName("Version", oid, mibName + "_Ucdavis:name=com.elitecore.core.serverx.snmp.mib.os.autogen.Version");
        }
        final VersionMeta meta = createVersionMetaNode("Version", oid, objname, server);
        if (meta != null) {
            meta.registerTableNodes( this, server );

            // Note that when using standard metadata,
            // the returned object must implement the "VersionMBean"
            // interface.
            //
            final VersionMBean group = (VersionMBean) createVersionMBean("Version", oid, objname, server);
            meta.setInstance( group );
            registerGroupNode("Version", oid, objname, meta, group, server);
        }
    }


    /**
     * Factory method for "Version" group metadata class.
     * 
     * You can redefine this method if you need to replace the default
     * generated metadata class with your own customized class.
     * 
     * @param groupName Name of the group ("Version")
     * @param groupOid  OID of this group
     * @param groupObjname ObjectName for this group (may be null)
     * @param server    MBeanServer for this group (may be null)
     * 
     * @return An instance of the metadata class generated for the
     *         "Version" group (VersionMeta)
     * 
     **/
    protected VersionMeta createVersionMetaNode(String groupName,
                String groupOid, ObjectName groupObjname, MBeanServer server)  {
        return new VersionMeta(this, objectserver);
    }


    /**
     * Factory method for "Version" group MBean.
     * 
     * You can redefine this method if you need to replace the default
     * generated MBean class with your own customized class.
     * 
     * @param groupName Name of the group ("Version")
     * @param groupOid  OID of this group
     * @param groupObjname ObjectName for this group (may be null)
     * @param server    MBeanServer for this group (may be null)
     * 
     * @return An instance of the MBean class generated for the
     *         "Version" group (Version)
     * 
     * Note that when using standard metadata,
     * the returned object must implement the "VersionMBean"
     * interface.
     **/
    protected Object createVersionMBean(String groupName,
                String groupOid,  ObjectName groupObjname, MBeanServer server)  {

        // Note that when using standard metadata,
        // the returned object must implement the "VersionMBean"
        // interface.
        //
        if (server != null) 
            return new Version(this,server);
        else 
            return new Version(this);
    }


    // ------------------------------------------------------------
    // 
    // Implements the "registerTableMeta" method defined in "SnmpMib".
    // See the "SnmpMib" Javadoc API for more details.
    // 
    // ------------------------------------------------------------

    public void registerTableMeta( String name, SnmpMibTable meta) {
        if (metadatas == null) return;
        if (name == null) return;
        metadatas.put(name,meta);
    }


    // ------------------------------------------------------------
    // 
    // Implements the "getRegisteredTableMeta" method defined in "SnmpMib".
    // See the "SnmpMib" Javadoc API for more details.
    // 
    // ------------------------------------------------------------

    public SnmpMibTable getRegisteredTableMeta( String name ) {
        if (metadatas == null) return null;
        if (name == null) return null;
        return (SnmpMibTable) metadatas.get(name);
    }

    public SnmpStandardObjectServer getStandardObjectServer() {
        if (objectserver == null) 
            objectserver = new SnmpStandardObjectServer();
        return objectserver;
    }

    private boolean isInitialized = false;

    protected SnmpStandardObjectServer objectserver;

    protected final Hashtable metadatas = new Hashtable();
}
