package com.elitecore.core.serverx.snmp.mib.mib2.autogen;

//
// Generated by mibgen version 5.1 (03/08/07) when compiling RFC1213-MIB.
//

// java imports
//
import java.io.Serializable;

import com.sun.management.snmp.SnmpStatusException;
import com.sun.management.snmp.agent.SnmpMib;

/**
 * The class is used for implementing the "AtEntry" group.
 * The group is defined with the following oid: 1.3.6.1.2.1.3.1.1.
 */
public class AtEntry implements AtEntryMBean, Serializable {

    /**
     * Variable for storing the value of "AtNetAddress".
     * The variable is identified by: "1.3.6.1.2.1.3.1.1.3".
     *
     * "The NetworkAddress (e.g., the IP address)
     * corresponding to the media-dependent `physical'
     * address."
     *
     */
    protected String AtNetAddress = new String("192.9.9.100");

    /**
     * Variable for storing the value of "AtPhysAddress".
     * The variable is identified by: "1.3.6.1.2.1.3.1.1.2".
     *
     * "The media-dependent `physical' address.
     * 
     * Setting this object to a null string (one of zero
     * length) has the effect of invaliding the
     * corresponding entry in the atTable object.  That
     * is, it effectively dissasociates the interface
     * identified with said entry from the mapping
     * identified with said entry.  It is an
     * implementation-specific matter as to whether the
     * agent removes an invalidated entry from the table.
     * Accordingly, management stations must be prepared
     * to receive tabular information from agents that
     * corresponds to entries not currently in use.
     * Proper interpretation of such entries requires
     * examination of the relevant atPhysAddress object."
     *
     */
    protected Byte[] AtPhysAddress = { new Byte("74"), new Byte("68"), new Byte("77"), new Byte("75")};

    /**
     * Variable for storing the value of "AtIfIndex".
     * The variable is identified by: "1.3.6.1.2.1.3.1.1.1".
     *
     * "The interface on which this entry's equivalence
     * is effective.  The interface identified by a
     * particular value of this index is the same
     * interface as identified by the same value of
     * ifIndex."
     *
     */
    protected Integer AtIfIndex = new Integer(1);


    /**
     * Constructor for the "AtEntry" group.
     */
    public AtEntry(SnmpMib myMib) {
    }

    /**
     * Getter for the "AtNetAddress" variable.
     */
    public String getAtNetAddress() throws SnmpStatusException {
        return AtNetAddress;
    }

    /**
     * Setter for the "AtNetAddress" variable.
     */
    public void setAtNetAddress(String x) throws SnmpStatusException {
        AtNetAddress = x;
    }

    /**
     * Checker for the "AtNetAddress" variable.
     */
    public void checkAtNetAddress(String x) throws SnmpStatusException {
        //
        // Add your own checking policy.
        //
    }

    /**
     * Getter for the "AtPhysAddress" variable.
     */
    public Byte[] getAtPhysAddress() throws SnmpStatusException {
        return AtPhysAddress;
    }

    /**
     * Setter for the "AtPhysAddress" variable.
     */
    public void setAtPhysAddress(Byte[] x) throws SnmpStatusException {
        AtPhysAddress = x;
    }

    /**
     * Checker for the "AtPhysAddress" variable.
     */
    public void checkAtPhysAddress(Byte[] x) throws SnmpStatusException {
        //
        // Add your own checking policy.
        //
    }

    /**
     * Getter for the "AtIfIndex" variable.
     */
    public Integer getAtIfIndex() throws SnmpStatusException {
        return AtIfIndex;
    }

    /**
     * Setter for the "AtIfIndex" variable.
     */
    public void setAtIfIndex(Integer x) throws SnmpStatusException {
        AtIfIndex = x;
    }

    /**
     * Checker for the "AtIfIndex" variable.
     */
    public void checkAtIfIndex(Integer x) throws SnmpStatusException {
        //
        // Add your own checking policy.
        //
    }

}
