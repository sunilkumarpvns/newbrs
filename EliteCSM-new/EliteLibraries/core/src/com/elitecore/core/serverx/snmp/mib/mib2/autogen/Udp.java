package com.elitecore.core.serverx.snmp.mib.mib2.autogen;

//
// Generated by mibgen version 5.1 (03/08/07) when compiling RFC1213-MIB.
//

// java imports
//
import java.io.Serializable;

import javax.management.MBeanServer;

import com.sun.management.snmp.SnmpStatusException;
import com.sun.management.snmp.agent.SnmpMib;

/**
 * The class is used for implementing the "Udp" group.
 * The group is defined with the following oid: 1.3.6.1.2.1.7.
 */
public class Udp implements UdpMBean, Serializable {

    /**
     * Variable for storing the value of "UdpTable".
     * The variable is identified by: "1.3.6.1.2.1.7.5".
     *
     * "A table containing UDP listener information."
     *
     */
    protected TableUdpTable UdpTable;

    /**
     * Variable for storing the value of "UdpOutDatagrams".
     * The variable is identified by: "1.3.6.1.2.1.7.4".
     *
     * "The total number of UDP datagrams sent from this
     * entity."
     *
     */
    protected Long UdpOutDatagrams = new Long(1);

    /**
     * Variable for storing the value of "UdpInErrors".
     * The variable is identified by: "1.3.6.1.2.1.7.3".
     *
     * "The number of received UDP datagrams that could
     * not be delivered for reasons other than the lack
     * of an application at the destination port."
     *
     */
    protected Long UdpInErrors = new Long(1);

    /**
     * Variable for storing the value of "UdpNoPorts".
     * The variable is identified by: "1.3.6.1.2.1.7.2".
     *
     * "The total number of received UDP datagrams for
     * which there was no application at the destination
     * port."
     *
     */
    protected Long UdpNoPorts = new Long(1);

    /**
     * Variable for storing the value of "UdpInDatagrams".
     * The variable is identified by: "1.3.6.1.2.1.7.1".
     *
     * "The total number of UDP datagrams delivered to
     * UDP users."
     *
     */
    protected Long UdpInDatagrams = new Long(1);


    /**
     * Constructor for the "Udp" group.
     * If the group contains a table, the entries created through an SNMP SET will not be registered in Java DMK.
     */
    public Udp(SnmpMib myMib) {
        UdpTable = new TableUdpTable (myMib);
    }


    /**
     * Constructor for the "Udp" group.
     * If the group contains a table, the entries created through an SNMP SET will be AUTOMATICALLY REGISTERED in Java DMK.
     */
    public Udp(SnmpMib myMib, MBeanServer server) {
        UdpTable = new TableUdpTable (myMib, server);
    }

    /**
     * Access the "UdpTable" variable.
     */
    public TableUdpTable accessUdpTable() throws SnmpStatusException {
        return UdpTable;
    }

    /**
     * Access the "UdpTable" variable as a bean indexed property.
     */
    public UdpEntryMBean[] getUdpTable() throws SnmpStatusException {
        return UdpTable.getEntries();
    }

    /**
     * Getter for the "UdpOutDatagrams" variable.
     */
    public Long getUdpOutDatagrams() throws SnmpStatusException {
        return UdpOutDatagrams;
    }

    /**
     * Getter for the "UdpInErrors" variable.
     */
    public Long getUdpInErrors() throws SnmpStatusException {
        return UdpInErrors;
    }

    /**
     * Getter for the "UdpNoPorts" variable.
     */
    public Long getUdpNoPorts() throws SnmpStatusException {
        return UdpNoPorts;
    }

    /**
     * Getter for the "UdpInDatagrams" variable.
     */
    public Long getUdpInDatagrams() throws SnmpStatusException {
        return UdpInDatagrams;
    }

}
