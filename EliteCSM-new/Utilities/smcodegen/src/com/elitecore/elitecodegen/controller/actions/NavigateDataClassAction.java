/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.elitecore.elitecodegen.controller.actions;

import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.log4j.Logger;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.elitecore.elitecodegen.base.ColumnBean;
import com.elitecore.elitecodegen.base.EliteCodeGenConstant;
import com.elitecore.elitecodegen.base.TableDataBean;
import com.elitecore.elitecodegen.controller.form.NavigateDataClassForm;

/**
 * MyEclipse Struts Creation date: 07-21-2007 XDoclet definition:
 * 
 * @struts.action path="/navigateDataClassGen" name="NavigateDataClassAction" input="/jsp/genrateDataClass.jsp" scope="request" validate="true"
 * @struts.action-forward name="genrateDataClass" path="/jsp/genrateDataClass.jsp"
 */
public class NavigateDataClassAction extends Action {
    
    /*
     * Generated Methods
     */

    private static Logger log               = Logger.getLogger(NavigateDataClassAction.class);
    
    private static String genrateDataClass  = "genrateDataClass";
    
    private static String genrateDataSource = "genrateDataSource";
    
    /**
     * Method execute
     * 
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    @Override
    public ActionForward execute( ActionMapping mapping ,
                                  ActionForm form ,
                                  HttpServletRequest request ,
                                  HttpServletResponse response ) {
        NavigateDataClassForm navigationForm = (NavigateDataClassForm) form;
        int seq = navigationForm.getSeq();
        
        Map dataClassMap = (HashMap) request.getSession(false).getAttribute(EliteCodeGenConstant.DataClassMap);
        
        TableDataBean tableDataBean = (TableDataBean) dataClassMap.get(new Integer(seq));
        
        tableDataBean.setStrPackageName(navigationForm.getStrPackageName());
        tableDataBean.setStrjavaName(navigationForm.getStrClassName());
        tableDataBean.setStaus(true);
        
        int totalCol = tableDataBean.getCloumnList().size();
        
        String[] javaName = navigationForm.getStrJavaName();
        int[] colId = navigationForm.getChioce();
        String[] javaType = navigationForm.getStrJavaType();
        
        if (colId != null) {
            
            NavigateDataClassAction.log.info("NO of Column processing :" + totalCol);
            
            for ( int j = 0; j < totalCol; j++ ) {
                ColumnBean colBean = tableDataBean.getCloumn(j);
                
                NavigateDataClassAction.log.info("Column under Process :" + j);
                
                for ( int k = 0; k < colId.length; k++ )
                    if (j == colId[k]) {
                        NavigateDataClassAction.log.info("Column is selected..");
                        colBean.setSelectionStaus(true);
                        break;
                    } else colBean.setSelectionStaus(false);
                
                colBean.setJavaName(javaName[j]);
                
                NavigateDataClassAction.log.info("javaName :" + javaName[j]);
                
                if (javaType[j].equals(""))
                    colBean.setJavaType("Type" + j);
                else colBean.setJavaType(javaType[j]);
                
                NavigateDataClassAction.log.info("Type :" + javaType[j]);
                
            }
            
        }
        
        int op = navigationForm.getOp();
        
        if (op == 0) {
            NavigateDataClassAction.log.info("forward to source Genration");
            return mapping.findForward(com.elitecore.elitecodegen.controller.actions.NavigateDataClassAction.genrateDataSource);
        } else if (op == -1)
            seq--;
        else seq++;
        
        request.setAttribute("seq", seq);
        return mapping.findForward(com.elitecore.elitecodegen.controller.actions.NavigateDataClassAction.genrateDataClass);
        
    }
}
