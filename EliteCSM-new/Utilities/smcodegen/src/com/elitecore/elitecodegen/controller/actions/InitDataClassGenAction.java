/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.elitecore.elitecodegen.controller.actions;

import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.log4j.Logger;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionError;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.elitecore.elitecodegen.base.ColumnBean;
import com.elitecore.elitecodegen.base.EliteCodeGenConstant;
import com.elitecore.elitecodegen.base.TableDataBean;
import com.elitecore.elitecodegen.controller.form.DbResourceForm;
import com.elitecore.elitecodegen.controller.form.GenrateDataClassForm;
import com.elitecore.elitecodegen.dao.ConnectionFactory;
import com.elitecore.elitecodegen.exception.EliteCodeGenException;

/**
 * MyEclipse Struts Creation date: 07-20-2007 XDoclet definition:
 * 
 * @struts.action path="/genrateDataClass" name="genrateDataClassForm" input="/jsp/genrateDataClass.jsp" scope="request"
 * @struts.action-forward name="genrateDataClass" path="/jsp/genrateDataClass"
 * @struts.action-forward name="viewTable" path="/jsp/viewTable.jsp"
 */

public class InitDataClassGenAction extends Action {
    
    /*
     * Generated Methods
     */
    /**
     * Method execute
     * 
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    
    private static String genrateDataClass = "genrateDataClass";
    
    private static Logger log              = Logger.getLogger(InitDataClassGenAction.class);
    
    @Override
    public ActionForward execute( ActionMapping mapping ,
                                  ActionForm form ,
                                  HttpServletRequest request ,
                                  HttpServletResponse response ) {
        
        GenrateDataClassForm genForm = (GenrateDataClassForm) form;
        ActionErrors errors = new ActionErrors();
        
        int seq;
        if (request.getAttribute("seq") == null)
            seq = 0;
        else seq = genForm.getSeq();
        
        Map dataClassMap = (HashMap) request.getSession(false).getAttribute(EliteCodeGenConstant.DataClassMap);
        
        try {
            this.populatedMap(dataClassMap, request);
        }
        catch (EliteCodeGenException e) {
            errors.add(ActionErrors.GLOBAL_ERROR, new ActionError("error.enable.connect"));
            saveErrors(request, errors);
            return mapping.findForward("failure");
        }
        
        if (dataClassMap == null) {
            
            errors.add(ActionErrors.GLOBAL_ERROR, new ActionError("error.session.expire"));
            saveErrors(request, errors);
        }
        
        request.setAttribute("seq", seq);
        return mapping.findForward(InitDataClassGenAction.genrateDataClass);
        
    }
    
    public void populatedMap( Map dataClassMap ,
                              HttpServletRequest request ) throws EliteCodeGenException {
        DatabaseMetaData dbMetadata = null;
        Connection con = null;
        ResultSet rs = null;
        try {
            DbResourceForm dbResource = null;
            dbResource = (DbResourceForm) request.getSession(false).getAttribute(EliteCodeGenConstant.DbResource);
            
            InitDataClassGenAction.log.info("url :" + dbResource.getStrJdbcUrl());
            InitDataClassGenAction.log.info("driver :" + dbResource.getStrDriverName());
            InitDataClassGenAction.log.info("userName :" + dbResource.getStrUserName());
            InitDataClassGenAction.log.info("password :" + dbResource.getStrPassword());
            InitDataClassGenAction.log.info("SchemaName:" + dbResource.getStrSchmaName());
            con = ConnectionFactory.Connect(dbResource);
            
            for ( int i = 0; i < dataClassMap.size(); i++ ) {
                
                TableDataBean tableDataBean = (TableDataBean) dataClassMap.get(i);
                
                rs = con.getMetaData().getColumns(null, dbResource.getStrSchmaName(), tableDataBean.getStrTableName(), "%");
                if (rs != null) {
                    
                    List ls = new ArrayList<ColumnBean>();
                    InitDataClassGenAction.log.info("Strart Iterating recordset");
                    InitDataClassGenAction.log.info(tableDataBean.getStrTableName() + "Table Populated");
                    while (rs.next()) {
                        String columnName = rs.getString("COLUMN_NAME");
                        String columnType = rs.getString("TYPE_NAME");
                        int columnSize = rs.getInt("COLUMN_SIZE");
                        
                        String javaType;
                        
                        if (TableDataBean.orcalVsJavaType.containsKey(columnType))
                            javaType = (String) TableDataBean.orcalVsJavaType.get(columnType);
                        
                        else javaType = " ";
                        
                        ls.add(new ColumnBean(columnSize, columnType, columnName, columnName.toLowerCase(), javaType, false));
                        
                        InitDataClassGenAction.log.info("ColumnName:" + columnName);
                    }
                    tableDataBean.setCloumnList(ls);
                }
                rs = null;
            }
            
            con = null;
        }
        catch (Exception e) {
            e.printStackTrace();
            InitDataClassGenAction.log.info("exceptin" + e);
            InitDataClassGenAction.log.info("Unhandled Exception...");
            throw new EliteCodeGenException(e);
        }
        finally {
            
            if (con != null)
                con = null;
            
            if (rs != null)
                rs = null;
            if (dbMetadata != null)
                dbMetadata = null;
        }
        
    }
}
