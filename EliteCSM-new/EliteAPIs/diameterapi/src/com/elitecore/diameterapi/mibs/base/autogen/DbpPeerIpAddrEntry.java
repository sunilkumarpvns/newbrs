package com.elitecore.diameterapi.mibs.base.autogen;

//
// Generated by mibgen version 5.1 (03/08/07) when compiling DIAMETER-BASE-PROTOCOL-MIB.
//

// java imports
//
import java.io.Serializable;

// jmx imports
//
import com.sun.management.snmp.SnmpStatusException;

// jdmk imports
//
import com.sun.management.snmp.agent.SnmpMib;

/**
 * The class is used for implementing the "DbpPeerIpAddrEntry" group.
 * The group is defined with the following oid: 1.3.6.1.2.1.119.1.3.2.1.
 */
public class DbpPeerIpAddrEntry implements DbpPeerIpAddrEntryMBean, Serializable {

	public DbpPeerIpAddrEntry() {
	}
	
    /**
     * Variable for storing the value of "DbpPeerIpAddress".
     * The variable is identified by: "1.3.6.1.2.1.119.1.3.2.1.3".
     *
     * "The active IP Address(es) used for connections."
     *
     */
    protected Byte[] DbpPeerIpAddress = { new Byte("74"), new Byte("68"), new Byte("77"), new Byte("75")};

    /**
     * Variable for storing the value of "DbpPeerIpAddressType".
     * The variable is identified by: "1.3.6.1.2.1.119.1.3.2.1.2".
     *
     * "The type of address stored in dbpPeerIpAddress."
     *
     */
    protected EnumDbpPeerIpAddressType DbpPeerIpAddressType = new EnumDbpPeerIpAddressType();

    /**
     * Variable for storing the value of "DbpPeerIpAddressIndex".
     * The variable is identified by: "1.3.6.1.2.1.119.1.3.2.1.1".
     *
     * "A number uniquely identifying an IP Address
     * supported by this Diameter peer."
     *
     */
    protected Long DbpPeerIpAddressIndex = new Long(1);

    /**
     * Variable for storing the value of "DbpPeerIndex".
     * The variable is identified by: "1.3.6.1.2.1.119.1.3.1.1.1".
     *
     * "A number uniquely identifying each Diameter peer
     * with which the local peer communicates.
     * Upon reload, dbpPeerIndex values may be changed."
     *
     */
    protected Long DbpPeerIndex = new Long(1);


    /**
     * Constructor for the "DbpPeerIpAddrEntry" group.
     */
    public DbpPeerIpAddrEntry(SnmpMib myMib) {
    }

    /**
     * Getter for the "DbpPeerIpAddress" variable.
     */
    public Byte[] getDbpPeerIpAddress() throws SnmpStatusException {
        return DbpPeerIpAddress;
    }

    /**
     * Getter for the "DbpPeerIpAddressType" variable.
     */
    public EnumDbpPeerIpAddressType getDbpPeerIpAddressType() throws SnmpStatusException {
        return DbpPeerIpAddressType;
    }

    /**
     * Getter for the "DbpPeerIpAddressIndex" variable.
     */
    public Long getDbpPeerIpAddressIndex() throws SnmpStatusException {
        return DbpPeerIpAddressIndex;
    }

    /**
     * Getter for the "DbpPeerIndex" variable.
     */
    public Long getDbpPeerIndex() throws SnmpStatusException {
        return DbpPeerIndex;
    }

}
