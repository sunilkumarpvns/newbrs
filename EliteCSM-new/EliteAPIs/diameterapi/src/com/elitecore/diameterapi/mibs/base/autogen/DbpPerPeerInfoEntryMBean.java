package com.elitecore.diameterapi.mibs.base.autogen;

//
// Generated by mibgen version 5.1 (03/08/07) when compiling DIAMETER-BASE-PROTOCOL-MIB in standard metadata mode.
//


// jmx imports
//
import com.sun.management.snmp.SnmpStatusException;

/**
 * This interface is used for representing the remote management interface for the "DbpPerPeerInfoEntry" MBean.
 */
public interface DbpPerPeerInfoEntryMBean {

    /**
     * Getter for the "DbpPerPeerStatsRAAsIn" variable.
     */
    public Long getDbpPerPeerStatsRAAsIn() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsRARsOut" variable.
     */
    public Long getDbpPerPeerStatsRARsOut() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsRARsIn" variable.
     */
    public Long getDbpPerPeerStatsRARsIn() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsDPAsOut" variable.
     */
    public Long getDbpPerPeerStatsDPAsOut() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsDPAsIn" variable.
     */
    public Long getDbpPerPeerStatsDPAsIn() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsDPRsOut" variable.
     */
    public Long getDbpPerPeerStatsDPRsOut() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsDPRsIn" variable.
     */
    public Long getDbpPerPeerStatsDPRsIn() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsDWAsOut" variable.
     */
    public Long getDbpPerPeerStatsDWAsOut() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsDWAsIn" variable.
     */
    public Long getDbpPerPeerStatsDWAsIn() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsDWRsOut" variable.
     */
    public Long getDbpPerPeerStatsDWRsOut() throws SnmpStatusException;

    /**
     * Getter for the "DbpPeerIdentity" variable.
     */
    public String getDbpPeerIdentity() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsTransportDown" variable.
     */
    public Long getDbpPerPeerStatsTransportDown() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsASAsIn" variable.
     */
    public Long getDbpPerPeerStatsASAsIn() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsASRsOut" variable.
     */
    public Long getDbpPerPeerStatsASRsOut() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsDWRsIn" variable.
     */
    public Long getDbpPerPeerStatsDWRsIn() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsASRsIn" variable.
     */
    public Long getDbpPerPeerStatsASRsIn() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsCEAsOut" variable.
     */
    public Long getDbpPerPeerStatsCEAsOut() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsPermanentFailures" variable.
     */
    public Long getDbpPerPeerStatsPermanentFailures() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsTimeoutConnAtmpts" variable.
     */
    public Long getDbpPerPeerStatsTimeoutConnAtmpts() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsCEAsIn" variable.
     */
    public Long getDbpPerPeerStatsCEAsIn() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsDWCurrentStatus" variable.
     */
    public EnumDbpPerPeerStatsDWCurrentStatus getDbpPerPeerStatsDWCurrentStatus() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsCERsOut" variable.
     */
    public Long getDbpPerPeerStatsCERsOut() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsTransientFailures" variable.
     */
    public Long getDbpPerPeerStatsTransientFailures() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerInfoWhoInitDisconnect" variable.
     */
    public EnumDbpPerPeerInfoWhoInitDisconnect getDbpPerPeerInfoWhoInitDisconnect() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsCERsIn" variable.
     */
    public Long getDbpPerPeerStatsCERsIn() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsProtocolErrors" variable.
     */
    public Long getDbpPerPeerStatsProtocolErrors() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerInfoLastDiscCause" variable.
     */
    public EnumDbpPerPeerInfoLastDiscCause getDbpPerPeerInfoLastDiscCause() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsACAsOut" variable.
     */
    public Long getDbpPerPeerStatsACAsOut() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsUnknownTypes" variable.
     */
    public Long getDbpPerPeerStatsUnknownTypes() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerInfoStateDuration" variable.
     */
    public Long getDbpPerPeerInfoStateDuration() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsACAsIn" variable.
     */
    public Long getDbpPerPeerStatsACAsIn() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsEToEDupMessages" variable.
     */
    public Long getDbpPerPeerStatsEToEDupMessages() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerInfoState" variable.
     */
    public EnumDbpPerPeerInfoState getDbpPerPeerInfoState() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsACRsOut" variable.
     */
    public Long getDbpPerPeerStatsACRsOut() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsHByHDropMessages" variable.
     */
    public Long getDbpPerPeerStatsHByHDropMessages() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsACRsIn" variable.
     */
    public Long getDbpPerPeerStatsACRsIn() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsAccReqstsDropped" variable.
     */
    public Long getDbpPerPeerStatsAccReqstsDropped() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsASAsOut" variable.
     */
    public Long getDbpPerPeerStatsASAsOut() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsAccPendReqstsOut" variable.
     */
    public Long getDbpPerPeerStatsAccPendReqstsOut() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsTotalRetrans" variable.
     */
    public Long getDbpPerPeerStatsTotalRetrans() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsAccRetrans" variable.
     */
    public Long getDbpPerPeerStatsAccRetrans() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsAccsNotRecorded" variable.
     */
    public Long getDbpPerPeerStatsAccsNotRecorded() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsMalformedReqsts" variable.
     */
    public Long getDbpPerPeerStatsMalformedReqsts() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsAccDupRequests" variable.
     */
    public Long getDbpPerPeerStatsAccDupRequests() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsRedirectEvents" variable.
     */
    public Long getDbpPerPeerStatsRedirectEvents() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerInfoDWReqTimer" variable.
     */
    public Long getDbpPerPeerInfoDWReqTimer() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsSTAsOut" variable.
     */
    public Long getDbpPerPeerStatsSTAsOut() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsSTAsIn" variable.
     */
    public Long getDbpPerPeerStatsSTAsIn() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsSTRsOut" variable.
     */
    public Long getDbpPerPeerStatsSTRsOut() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsSTRsIn" variable.
     */
    public Long getDbpPerPeerStatsSTRsIn() throws SnmpStatusException;

    /**
     * Getter for the "DbpPerPeerStatsRAAsOut" variable.
     */
    public Long getDbpPerPeerStatsRAAsOut() throws SnmpStatusException;

    /**
     * Getter for the "DbpPeerIndex" variable.
     */
    public Long getDbpPeerIndex() throws SnmpStatusException;

}
