package com.elitecore.diameterapi.mibs.base.autogen;

//
// Generated by mibgen version 5.1 (03/08/07) when compiling DIAMETER-BASE-PROTOCOL-MIB in standard metadata mode.
//


// jmx imports
//
import com.sun.management.snmp.SnmpStatusException;

/**
 * This interface is used for representing the remote management interface for the "DbpNotifCfgs" MBean.
 */
public interface DbpNotifCfgsMBean {

    /**
     * Getter for the "DbpPeerConnectionUpNotifEnabled" variable.
     */
    public EnumDbpPeerConnectionUpNotifEnabled getDbpPeerConnectionUpNotifEnabled() throws SnmpStatusException;

    /**
     * Setter for the "DbpPeerConnectionUpNotifEnabled" variable.
     */
    public void setDbpPeerConnectionUpNotifEnabled(EnumDbpPeerConnectionUpNotifEnabled x) throws SnmpStatusException;

    /**
     * Checker for the "DbpPeerConnectionUpNotifEnabled" variable.
     */
    public void checkDbpPeerConnectionUpNotifEnabled(EnumDbpPeerConnectionUpNotifEnabled x) throws SnmpStatusException;

    /**
     * Getter for the "DbpPeerConnectionDownNotifEnabled" variable.
     */
    public EnumDbpPeerConnectionDownNotifEnabled getDbpPeerConnectionDownNotifEnabled() throws SnmpStatusException;

    /**
     * Setter for the "DbpPeerConnectionDownNotifEnabled" variable.
     */
    public void setDbpPeerConnectionDownNotifEnabled(EnumDbpPeerConnectionDownNotifEnabled x) throws SnmpStatusException;

    /**
     * Checker for the "DbpPeerConnectionDownNotifEnabled" variable.
     */
    public void checkDbpPeerConnectionDownNotifEnabled(EnumDbpPeerConnectionDownNotifEnabled x) throws SnmpStatusException;

    /**
     * Getter for the "DbpPermanentFailureNotifEnabled" variable.
     */
    public EnumDbpPermanentFailureNotifEnabled getDbpPermanentFailureNotifEnabled() throws SnmpStatusException;

    /**
     * Setter for the "DbpPermanentFailureNotifEnabled" variable.
     */
    public void setDbpPermanentFailureNotifEnabled(EnumDbpPermanentFailureNotifEnabled x) throws SnmpStatusException;

    /**
     * Checker for the "DbpPermanentFailureNotifEnabled" variable.
     */
    public void checkDbpPermanentFailureNotifEnabled(EnumDbpPermanentFailureNotifEnabled x) throws SnmpStatusException;

    /**
     * Getter for the "DbpTransientFailureNotifEnabled" variable.
     */
    public EnumDbpTransientFailureNotifEnabled getDbpTransientFailureNotifEnabled() throws SnmpStatusException;

    /**
     * Setter for the "DbpTransientFailureNotifEnabled" variable.
     */
    public void setDbpTransientFailureNotifEnabled(EnumDbpTransientFailureNotifEnabled x) throws SnmpStatusException;

    /**
     * Checker for the "DbpTransientFailureNotifEnabled" variable.
     */
    public void checkDbpTransientFailureNotifEnabled(EnumDbpTransientFailureNotifEnabled x) throws SnmpStatusException;

    /**
     * Getter for the "DbpProtocolErrorNotifEnabled" variable.
     */
    public EnumDbpProtocolErrorNotifEnabled getDbpProtocolErrorNotifEnabled() throws SnmpStatusException;

    /**
     * Setter for the "DbpProtocolErrorNotifEnabled" variable.
     */
    public void setDbpProtocolErrorNotifEnabled(EnumDbpProtocolErrorNotifEnabled x) throws SnmpStatusException;

    /**
     * Checker for the "DbpProtocolErrorNotifEnabled" variable.
     */
    public void checkDbpProtocolErrorNotifEnabled(EnumDbpProtocolErrorNotifEnabled x) throws SnmpStatusException;

}
