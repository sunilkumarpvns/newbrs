package com.elitecore.diameterapi.mibs.custom.autogen;

//
// Generated by mibgen version 5.1 (03/08/07) when compiling DIAMETER-STACK-MIB.
//

// java imports
//
import java.io.Serializable;

import javax.management.MBeanServer;

import com.sun.management.snmp.SnmpStatusException;
import com.sun.management.snmp.agent.SnmpMib;
// jmx imports
//
// jdmk imports
//

/**
 * The class is used for implementing the "StackStatistics" group.
 * The group is defined with the following oid: 1.3.6.1.4.1.21067.5.100.
 */
public class StackStatistics implements StackStatisticsMBean, Serializable {

    /**
     * Variable for storing the value of "TotalDuplicateRequest".
     * The variable is identified by: "1.3.6.1.4.1.21067.5.100.9".
     *
     * " Total number of duplicate request received "
     *
     */
    protected Long TotalDuplicateRequest = new Long(1);

    /**
     * Variable for storing the value of "TotalUnknownHbHAnswerDropped".
     * The variable is identified by: "1.3.6.1.4.1.21067.5.100.8".
     *
     * " Total number of answer dropped , which is received with an
     * unknown Hop-by-Hop Identifer "
     *
     */
    protected Long TotalUnknownHbHAnswerDropped = new Long(1);

    /**
     * Variable for storing the value of "TotalRequestRetransmitted".
     * The variable is identified by: "1.3.6.1.4.1.21067.5.100.7".
     *
     * " Total number of request retransmitted "
     *
     */
    protected Long TotalRequestRetransmitted = new Long(1);

    /**
     * Variable for storing the value of "TotalRequestDr".
     * The variable is identified by: "1.3.6.1.4.1.21067.5.100.6".
     *
     * " Total number of request dropped "
     *
     */
    protected Long TotalRequestDr = new Long(1);

    /**
     * Variable for storing the value of "TotalAnswerDr".
     * The variable is identified by: "1.3.6.1.4.1.21067.5.100.5".
     *
     * " Total number of answer dropped "
     *
     */
    protected Long TotalAnswerDr = new Long(1);

    /**
     * Variable for storing the value of "TotalRequestPn".
     * The variable is identified by: "1.3.6.1.4.1.21067.5.100.13".
     *
     * " Total number of pending (Unprocessed) request; not responded "
     *
     */
    protected Long TotalRequestPn = new Long(1);

    /**
     * Variable for storing the value of "TotalAnswerTx".
     * The variable is identified by: "1.3.6.1.4.1.21067.5.100.4".
     *
     * " Total number of answer transmitted "
     *
     */
    protected Long TotalAnswerTx = new Long(1);

    /**
     * Variable for storing the value of "TotalRequestTimeOut".
     * The variable is identified by: "1.3.6.1.4.1.21067.5.100.12".
     *
     * " Total number of timed out request "
     *
     */
    protected Long TotalRequestTimeOut = new Long(1);

    /**
     * Variable for storing the value of "TotalAnswerRx".
     * The variable is identified by: "1.3.6.1.4.1.21067.5.100.3".
     *
     * " Total number of answer received "
     *
     */
    protected Long TotalAnswerRx = new Long(1);

    /**
     * Variable for storing the value of "TotalMalformedPacketRx".
     * The variable is identified by: "1.3.6.1.4.1.21067.5.100.11".
     *
     * " Total number of malform request received "
     *
     */
    protected Long TotalMalformedPacketRx = new Long(1);

    /**
     * Variable for storing the value of "TotalRequestTx".
     * The variable is identified by: "1.3.6.1.4.1.21067.5.100.2".
     *
     * " Total number of request transmitted "
     *
     */
    protected Long TotalRequestTx = new Long(1);

    /**
     * Variable for storing the value of "TotalDuplicateEtEAnswer".
     * The variable is identified by: "1.3.6.1.4.1.21067.5.100.10".
     *
     * " Total number of duplicate EtE answer received "
     *
     */
    protected Long TotalDuplicateEtEAnswer = new Long(1);

    /**
     * Variable for storing the value of "TotalRequestRx".
     * The variable is identified by: "1.3.6.1.4.1.21067.5.100.1".
     *
     * " Total number of request received "
     *
     */
    protected Long TotalRequestRx = new Long(1);

    public StackStatistics() {
    }

    /**
     * Constructor for the "StackStatistics" group.
     * If the group contains a table, the entries created through an SNMP SET will not be registered in Java DMK.
     */
    public StackStatistics(SnmpMib myMib) {
    }


    /**
     * Constructor for the "StackStatistics" group.
     * If the group contains a table, the entries created through an SNMP SET will be AUTOMATICALLY REGISTERED in Java DMK.
     */
    public StackStatistics(SnmpMib myMib, MBeanServer server) {
    }

    /**
     * Getter for the "TotalDuplicateRequest" variable.
     */
    public Long getTotalDuplicateRequest() throws SnmpStatusException {
        return TotalDuplicateRequest;
    }

    /**
     * Getter for the "TotalUnknownHbHAnswerDropped" variable.
     */
    public Long getTotalUnknownHbHAnswerDropped() throws SnmpStatusException {
        return TotalUnknownHbHAnswerDropped;
    }

    /**
     * Getter for the "TotalRequestRetransmitted" variable.
     */
    public Long getTotalRequestRetransmitted() throws SnmpStatusException {
        return TotalRequestRetransmitted;
    }

    /**
     * Getter for the "TotalRequestDr" variable.
     */
    public Long getTotalRequestDr() throws SnmpStatusException {
        return TotalRequestDr;
    }

    /**
     * Getter for the "TotalAnswerDr" variable.
     */
    public Long getTotalAnswerDr() throws SnmpStatusException {
        return TotalAnswerDr;
    }

    /**
     * Getter for the "TotalRequestPn" variable.
     */
    public Long getTotalRequestPn() throws SnmpStatusException {
        return TotalRequestPn;
    }

    /**
     * Getter for the "TotalAnswerTx" variable.
     */
    public Long getTotalAnswerTx() throws SnmpStatusException {
        return TotalAnswerTx;
    }

    /**
     * Getter for the "TotalRequestTimeOut" variable.
     */
    public Long getTotalRequestTimeOut() throws SnmpStatusException {
        return TotalRequestTimeOut;
    }

    /**
     * Getter for the "TotalAnswerRx" variable.
     */
    public Long getTotalAnswerRx() throws SnmpStatusException {
        return TotalAnswerRx;
    }

    /**
     * Getter for the "TotalMalformedPacketRx" variable.
     */
    public Long getTotalMalformedPacketRx() throws SnmpStatusException {
        return TotalMalformedPacketRx;
    }

    /**
     * Getter for the "TotalRequestTx" variable.
     */
    public Long getTotalRequestTx() throws SnmpStatusException {
        return TotalRequestTx;
    }

    /**
     * Getter for the "TotalDuplicateEtEAnswer" variable.
     */
    public Long getTotalDuplicateEtEAnswer() throws SnmpStatusException {
        return TotalDuplicateEtEAnswer;
    }

    /**
     * Getter for the "TotalRequestRx" variable.
     */
    public Long getTotalRequestRx() throws SnmpStatusException {
        return TotalRequestRx;
    }

}
