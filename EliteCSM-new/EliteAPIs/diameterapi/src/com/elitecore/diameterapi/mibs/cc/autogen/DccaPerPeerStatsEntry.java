package com.elitecore.diameterapi.mibs.cc.autogen;

//
// Generated by mibgen version 5.1 (03/08/07) when compiling DIAMETER-CC-APPLICATION-MIB.
//

// java imports
//
import java.io.Serializable;

import com.sun.management.snmp.SnmpStatusException;
import com.sun.management.snmp.agent.SnmpMib;
// jmx imports
//
// jdmk imports
//

/**
 * The class is used for implementing the "DccaPerPeerStatsEntry" group.
 * The group is defined with the following oid: 1.3.6.1.2.1.4006.2.1.3.1.1.
 */
public class DccaPerPeerStatsEntry implements DccaPerPeerStatsEntryMBean, Serializable {

	public DccaPerPeerStatsEntry() {
	}
	
    /**
     * Variable for storing the value of "DccaPerPeerStatsAAADropped".
     * The variable is identified by: "1.3.6.1.2.1.4006.2.1.3.1.1.19".
     *
     * "Number of Diameter AA-Answer (AAA)
     * messages dropped, per peer."
     *
     */
    protected Long DccaPerPeerStatsAAADropped = new Long(1);

    /**
     * Variable for storing the value of "DccaPerPeerStatsAAAIn".
     * The variable is identified by: "1.3.6.1.2.1.4006.2.1.3.1.1.18".
     *
     * "Number of Diameter AA-Answer (AAA)
     * messages received, per peer."
     *
     */
    protected Long DccaPerPeerStatsAAAIn = new Long(1);

    /**
     * Variable for storing the value of "DccaPerPeerStatsAARDropped".
     * The variable is identified by: "1.3.6.1.2.1.4006.2.1.3.1.1.17".
     *
     * "Number of Diameter AA-Request (AAR)
     * messages dropped, per peer."
     *
     */
    protected Long DccaPerPeerStatsAARDropped = new Long(1);

    /**
     * Variable for storing the value of "DccaPerPeerStatsAAROut".
     * The variable is identified by: "1.3.6.1.2.1.4006.2.1.3.1.1.16".
     *
     * "Number of Diameter AA-Request (AAR)
     * messages transmitted, per peer."
     *
     */
    protected Long DccaPerPeerStatsAAROut = new Long(1);

    /**
     * Variable for storing the value of "DccaPerPeerStatsSTADropped".
     * The variable is identified by: "1.3.6.1.2.1.4006.2.1.3.1.1.15".
     *
     * "Number of Diameter
     * Session-Termination-Answer (STA)
     * messages dropped, per peer."
     *
     */
    protected Long DccaPerPeerStatsSTADropped = new Long(1);

    /**
     * Variable for storing the value of "DccaPerPeerStatsSTAIn".
     * The variable is identified by: "1.3.6.1.2.1.4006.2.1.3.1.1.14".
     *
     * "Number of Diameter
     * Session-Termination-Answer (STA)
     * messages received, per peer."
     *
     */
    protected Long DccaPerPeerStatsSTAIn = new Long(1);

    /**
     * Variable for storing the value of "DccaPerPeerStatsSTRDropped".
     * The variable is identified by: "1.3.6.1.2.1.4006.2.1.3.1.1.13".
     *
     * "Number of Diameter
     * Session-Termination-Request (STR)
     * messages dropped, per peer."
     *
     */
    protected Long DccaPerPeerStatsSTRDropped = new Long(1);

    /**
     * Variable for storing the value of "DccaPerPeerStatsSTROut".
     * The variable is identified by: "1.3.6.1.2.1.4006.2.1.3.1.1.12".
     *
     * "Number of Diameter
     * Session-Termination-Request (STR)
     * messages transmitted, per peer."
     *
     */
    protected Long DccaPerPeerStatsSTROut = new Long(1);

    /**
     * Variable for storing the value of "DccaPerPeerStatsRAADropped".
     * The variable is identified by: "1.3.6.1.2.1.4006.2.1.3.1.1.11".
     *
     * "Number of Diameter Re-Auth-Answer (RAA)
     * messages dropped, per peer."
     *
     */
    protected Long DccaPerPeerStatsRAADropped = new Long(1);

    /**
     * Variable for storing the value of "DccaPerPeerStatsRAAOut".
     * The variable is identified by: "1.3.6.1.2.1.4006.2.1.3.1.1.10".
     *
     * "Number of Diameter Re-Auth-Answer (RAA)
     * messages transmitted, per peer."
     *
     */
    protected Long DccaPerPeerStatsRAAOut = new Long(1);

    /**
     * Variable for storing the value of "DccaPerPeerStatsRARDropped".
     * The variable is identified by: "1.3.6.1.2.1.4006.2.1.3.1.1.9".
     *
     * "Number of Diameter Re-Auth-Request (RAR)
     * messages dropped, per peer."
     *
     */
    protected Long DccaPerPeerStatsRARDropped = new Long(1);

    /**
     * Variable for storing the value of "DccaPerPeerStatsRARIn".
     * The variable is identified by: "1.3.6.1.2.1.4006.2.1.3.1.1.8".
     *
     * "Number of Diameter Re-Auth-Request (RAR)
     * messages received, per peer."
     *
     */
    protected Long DccaPerPeerStatsRARIn = new Long(1);

    /**
     * Variable for storing the value of "DccaPerPeerStatsCCADropped".
     * The variable is identified by: "1.3.6.1.2.1.4006.2.1.3.1.1.7".
     *
     * "Number of Diameter Credit-Control-Answer (CCA)
     * messages dropped, per peer."
     *
     */
    protected Long DccaPerPeerStatsCCADropped = new Long(1);

    /**
     * Variable for storing the value of "DccaPerPeerStatsCCAOut".
     * The variable is identified by: "1.3.6.1.2.1.4006.2.1.3.1.1.6".
     *
     * "Number of Diameter Credit-Control-Answer (CCA)
     * messages sent, per peer."
     *
     */
    protected Long DccaPerPeerStatsCCAOut = new Long(1);

    /**
     * Variable for storing the value of "DccaPerPeerStatsCCAIn".
     * The variable is identified by: "1.3.6.1.2.1.4006.2.1.3.1.1.5".
     *
     * "Number of Diameter Credit-Control-Answer (CCA)
     * messages received, per peer."
     *
     */
    protected Long DccaPerPeerStatsCCAIn = new Long(1);

    /**
     * Variable for storing the value of "DccaPerPeerStatsCCRDropped".
     * The variable is identified by: "1.3.6.1.2.1.4006.2.1.3.1.1.4".
     *
     * "Number of Diameter Credit-Control-Request (CCR)
     * messages dropped, per peer."
     *
     */
    protected Long DccaPerPeerStatsCCRDropped = new Long(1);

    /**
     * Variable for storing the value of "DccaPeerIdentity".
     * The variable is identified by: "1.3.6.1.2.1.4006.2.1.3.1.1.24".
     *
     * " Represent Diameter Peer Identity"
     *
     */
    protected String DccaPeerIdentity = new String("JDMK 5.1");

    /**
     * Variable for storing the value of "DccaPerPeerStatsCCROut".
     * The variable is identified by: "1.3.6.1.2.1.4006.2.1.3.1.1.3".
     *
     * "Number of Diameter Credit-Control-Request (CCR)
     * messages sent, per peer."
     *
     */
    protected Long DccaPerPeerStatsCCROut = new Long(1);

    /**
     * Variable for storing the value of "DccaPerPeerStatsCCRIn".
     * The variable is identified by: "1.3.6.1.2.1.4006.2.1.3.1.1.2".
     *
     * "Number of Diameter Credit-Control-Request
     * (CCR) messages received, per peer."
     *
     */
    protected Long DccaPerPeerStatsCCRIn = new Long(1);

    /**
     * Variable for storing the value of "DccaPerPeerStatsASADropped".
     * The variable is identified by: "1.3.6.1.2.1.4006.2.1.3.1.1.23".
     *
     * "Number of Diameter Abort-Session-Answer
     * (ASA) messages dropped, per peer."
     *
     */
    protected Long DccaPerPeerStatsASADropped = new Long(1);

    /**
     * Variable for storing the value of "DccaPerPeerStatsASAOut".
     * The variable is identified by: "1.3.6.1.2.1.4006.2.1.3.1.1.22".
     *
     * "Number of Diameter Abort-Session-Answer
     * (ASA) messages transmitted, per peer."
     *
     */
    protected Long DccaPerPeerStatsASAOut = new Long(1);

    /**
     * Variable for storing the value of "DccaPerPeerStatsASRDropped".
     * The variable is identified by: "1.3.6.1.2.1.4006.2.1.3.1.1.21".
     *
     * "Number of Diameter Abort-Session-Request
     * (ASR) messages dropped, per peer."
     *
     */
    protected Long DccaPerPeerStatsASRDropped = new Long(1);

    /**
     * Variable for storing the value of "DccaPerPeerStatsASRIn".
     * The variable is identified by: "1.3.6.1.2.1.4006.2.1.3.1.1.20".
     *
     * "Number of Diameter Abort-Session-Request
     * (ASR) messages received, per peer."
     *
     */
    protected Long DccaPerPeerStatsASRIn = new Long(1);

    /**
     * Variable for storing the value of "DccaPeerIndex".
     * The variable is identified by: "1.3.6.1.2.1.4006.2.1.2.1.1.1".
     *
     * "A number uniquely identifying each Diameter
     * Credit Control peer with which this host
     * communicates."
     *
     */
    protected Long DccaPeerIndex = new Long(1);


    /**
     * Constructor for the "DccaPerPeerStatsEntry" group.
     */
    public DccaPerPeerStatsEntry(SnmpMib myMib) {
    }

    /**
     * Getter for the "DccaPerPeerStatsAAADropped" variable.
     */
    public Long getDccaPerPeerStatsAAADropped() throws SnmpStatusException {
        return DccaPerPeerStatsAAADropped;
    }

    /**
     * Getter for the "DccaPerPeerStatsAAAIn" variable.
     */
    public Long getDccaPerPeerStatsAAAIn() throws SnmpStatusException {
        return DccaPerPeerStatsAAAIn;
    }

    /**
     * Getter for the "DccaPerPeerStatsAARDropped" variable.
     */
    public Long getDccaPerPeerStatsAARDropped() throws SnmpStatusException {
        return DccaPerPeerStatsAARDropped;
    }

    /**
     * Getter for the "DccaPerPeerStatsAAROut" variable.
     */
    public Long getDccaPerPeerStatsAAROut() throws SnmpStatusException {
        return DccaPerPeerStatsAAROut;
    }

    /**
     * Getter for the "DccaPerPeerStatsSTADropped" variable.
     */
    public Long getDccaPerPeerStatsSTADropped() throws SnmpStatusException {
        return DccaPerPeerStatsSTADropped;
    }

    /**
     * Getter for the "DccaPerPeerStatsSTAIn" variable.
     */
    public Long getDccaPerPeerStatsSTAIn() throws SnmpStatusException {
        return DccaPerPeerStatsSTAIn;
    }

    /**
     * Getter for the "DccaPerPeerStatsSTRDropped" variable.
     */
    public Long getDccaPerPeerStatsSTRDropped() throws SnmpStatusException {
        return DccaPerPeerStatsSTRDropped;
    }

    /**
     * Getter for the "DccaPerPeerStatsSTROut" variable.
     */
    public Long getDccaPerPeerStatsSTROut() throws SnmpStatusException {
        return DccaPerPeerStatsSTROut;
    }

    /**
     * Getter for the "DccaPerPeerStatsRAADropped" variable.
     */
    public Long getDccaPerPeerStatsRAADropped() throws SnmpStatusException {
        return DccaPerPeerStatsRAADropped;
    }

    /**
     * Getter for the "DccaPerPeerStatsRAAOut" variable.
     */
    public Long getDccaPerPeerStatsRAAOut() throws SnmpStatusException {
        return DccaPerPeerStatsRAAOut;
    }

    /**
     * Getter for the "DccaPerPeerStatsRARDropped" variable.
     */
    public Long getDccaPerPeerStatsRARDropped() throws SnmpStatusException {
        return DccaPerPeerStatsRARDropped;
    }

    /**
     * Getter for the "DccaPerPeerStatsRARIn" variable.
     */
    public Long getDccaPerPeerStatsRARIn() throws SnmpStatusException {
        return DccaPerPeerStatsRARIn;
    }

    /**
     * Getter for the "DccaPerPeerStatsCCADropped" variable.
     */
    public Long getDccaPerPeerStatsCCADropped() throws SnmpStatusException {
        return DccaPerPeerStatsCCADropped;
    }

    /**
     * Getter for the "DccaPerPeerStatsCCAOut" variable.
     */
    public Long getDccaPerPeerStatsCCAOut() throws SnmpStatusException {
        return DccaPerPeerStatsCCAOut;
    }

    /**
     * Getter for the "DccaPerPeerStatsCCAIn" variable.
     */
    public Long getDccaPerPeerStatsCCAIn() throws SnmpStatusException {
        return DccaPerPeerStatsCCAIn;
    }

    /**
     * Getter for the "DccaPerPeerStatsCCRDropped" variable.
     */
    public Long getDccaPerPeerStatsCCRDropped() throws SnmpStatusException {
        return DccaPerPeerStatsCCRDropped;
    }

    /**
     * Getter for the "DccaPeerIdentity" variable.
     */
    public String getDccaPeerIdentity() throws SnmpStatusException {
        return DccaPeerIdentity;
    }

    /**
     * Getter for the "DccaPerPeerStatsCCROut" variable.
     */
    public Long getDccaPerPeerStatsCCROut() throws SnmpStatusException {
        return DccaPerPeerStatsCCROut;
    }

    /**
     * Getter for the "DccaPerPeerStatsCCRIn" variable.
     */
    public Long getDccaPerPeerStatsCCRIn() throws SnmpStatusException {
        return DccaPerPeerStatsCCRIn;
    }

    /**
     * Getter for the "DccaPerPeerStatsASADropped" variable.
     */
    public Long getDccaPerPeerStatsASADropped() throws SnmpStatusException {
        return DccaPerPeerStatsASADropped;
    }

    /**
     * Getter for the "DccaPerPeerStatsASAOut" variable.
     */
    public Long getDccaPerPeerStatsASAOut() throws SnmpStatusException {
        return DccaPerPeerStatsASAOut;
    }

    /**
     * Getter for the "DccaPerPeerStatsASRDropped" variable.
     */
    public Long getDccaPerPeerStatsASRDropped() throws SnmpStatusException {
        return DccaPerPeerStatsASRDropped;
    }

    /**
     * Getter for the "DccaPerPeerStatsASRIn" variable.
     */
    public Long getDccaPerPeerStatsASRIn() throws SnmpStatusException {
        return DccaPerPeerStatsASRIn;
    }

    /**
     * Getter for the "DccaPeerIndex" variable.
     */
    public Long getDccaPeerIndex() throws SnmpStatusException {
        return DccaPeerIndex;
    }

}
