package com.elitecore.diameterapi.mibs.base.autogen;

//
// Generated by mibgen version 5.1 (03/08/07) when compiling DIAMETER-BASE-PROTOCOL-MIB.
//

// java imports
//
import java.io.Serializable;

import com.sun.management.snmp.SnmpStatusException;
import com.sun.management.snmp.agent.SnmpMib;
// jmx imports
//
// jdmk imports
//

/**
 * The class is used for implementing the "DbpRealmMessageRouteEntry" group.
 * The group is defined with the following oid: 1.3.6.1.2.1.119.1.6.1.1.
 */
public class DbpRealmMessageRouteEntry implements DbpRealmMessageRouteEntryMBean, Serializable {

	public DbpRealmMessageRouteEntry() {
	}
	
    /**
     * Variable for storing the value of "DbpRealmMessageRouteASRsOut".
     * The variable is identified by: "1.3.6.1.2.1.119.1.6.1.1.19".
     *
     * "Number of Abort-Session-Request messages
     * sent to the realm."
     *
     */
    protected Long DbpRealmMessageRouteASRsOut = new Long(1);

    /**
     * Variable for storing the value of "DbpRealmMessageRouteASRsIn".
     * The variable is identified by: "1.3.6.1.2.1.119.1.6.1.1.18".
     *
     * "Number of Abort-Session-Request messages
     * received from the realm."
     *
     */
    protected Long DbpRealmMessageRouteASRsIn = new Long(1);

    /**
     * Variable for storing the value of "DbpRealmMessageRouteSTAsOut".
     * The variable is identified by: "1.3.6.1.2.1.119.1.6.1.1.17".
     *
     * "Number of Session-Termination-Answer messages
     * sent to the realm."
     *
     */
    protected Long DbpRealmMessageRouteSTAsOut = new Long(1);

    /**
     * Variable for storing the value of "DbpRealmMessageRouteSTAsIn".
     * The variable is identified by: "1.3.6.1.2.1.119.1.6.1.1.16".
     *
     * "Number of Session-Termination-Answer messages
     * received from the realm."
     *
     */
    protected Long DbpRealmMessageRouteSTAsIn = new Long(1);

    /**
     * Variable for storing the value of "DbpRealmMessageRouteSTRsOut".
     * The variable is identified by: "1.3.6.1.2.1.119.1.6.1.1.15".
     *
     * "Number of Session-Termination-Request messages
     * sent to the realm."
     *
     */
    protected Long DbpRealmMessageRouteSTRsOut = new Long(1);

    /**
     * Variable for storing the value of "DbpRealmMessageRouteSTRsIn".
     * The variable is identified by: "1.3.6.1.2.1.119.1.6.1.1.14".
     *
     * "Number of Session-Termination-Request messages
     * received from the realm."
     *
     */
    protected Long DbpRealmMessageRouteSTRsIn = new Long(1);

    /**
     * Variable for storing the value of "DbpRealmMessageRouteRAAsOut".
     * The variable is identified by: "1.3.6.1.2.1.119.1.6.1.1.13".
     *
     * "Number of Re-Auth-Answer messages
     * sent to the realm."
     *
     */
    protected Long DbpRealmMessageRouteRAAsOut = new Long(1);

    /**
     * Variable for storing the value of "DbpRealmMessageRouteRAAsIn".
     * The variable is identified by: "1.3.6.1.2.1.119.1.6.1.1.12".
     *
     * "Number of Re-Auth-Answer messages
     * received from the realm."
     *
     */
    protected Long DbpRealmMessageRouteRAAsIn = new Long(1);

    /**
     * Variable for storing the value of "DbpRealmMessageRouteRARsOut".
     * The variable is identified by: "1.3.6.1.2.1.119.1.6.1.1.11".
     *
     * "Number of Re-Auth-Request messages
     * sent to the realm."
     *
     */
    protected Long DbpRealmMessageRouteRARsOut = new Long(1);

    /**
     * Variable for storing the value of "DbpRealmMessageRouteRARsIn".
     * The variable is identified by: "1.3.6.1.2.1.119.1.6.1.1.10".
     *
     * "Number of Re-Auth-Request messages
     * received from the realm."
     *
     */
    protected Long DbpRealmMessageRouteRARsIn = new Long(1);

    /**
     * Variable for storing the value of "DbpRealmMessageRouteACAsOut".
     * The variable is identified by: "1.3.6.1.2.1.119.1.6.1.1.9".
     *
     * "Number of Accounting-Answer messages
     * sent to the realm."
     *
     */
    protected Long DbpRealmMessageRouteACAsOut = new Long(1);

    /**
     * Variable for storing the value of "DbpRealmMessageRouteACAsIn".
     * The variable is identified by: "1.3.6.1.2.1.119.1.6.1.1.8".
     *
     * "Number of Accounting-Answer messages
     * received from the realm."
     *
     */
    protected Long DbpRealmMessageRouteACAsIn = new Long(1);

    /**
     * Variable for storing the value of "DbpRealmMessageRouteACRsOut".
     * The variable is identified by: "1.3.6.1.2.1.119.1.6.1.1.7".
     *
     * "Number of Accounting-Request messages
     * sent to the realm."
     *
     */
    protected Long DbpRealmMessageRouteACRsOut = new Long(1);

    /**
     * Variable for storing the value of "DbpRealmMessageRouteACRsIn".
     * The variable is identified by: "1.3.6.1.2.1.119.1.6.1.1.6".
     *
     * "Number of Accounting-Request messages
     * received from the realm."
     *
     */
    protected Long DbpRealmMessageRouteACRsIn = new Long(1);

    /**
     * Variable for storing the value of "DbpRealmMessageRouteAction".
     * The variable is identified by: "1.3.6.1.2.1.119.1.6.1.1.5".
     *
     * "The action is used to identify how a
     * message should be treated based on the realm,
     * application and type.
     * local    - Diameter messages that resolve to a
     * route entry with the Local Action set to
     * Local can be satisfied locally, and do
     * not need to be routed to another peer.
     * relay    - All Diameter messages that fall within
     * this category MUST be routed to a
     * next-hop peer, without modifying any
     * non-routing AVPs.
     * proxy    - All Diameter messages that fall within this
     * category MUST be routed to a next-hop
     * peer.
     * redirect - Diameter messages that fall within this
     * category MUST have the identity of the home
     * Diameter peer(s) appended, and returned
     * to the sender of the message."
     *
     */
    protected EnumDbpRealmMessageRouteAction DbpRealmMessageRouteAction = new EnumDbpRealmMessageRouteAction();

    /**
     * Variable for storing the value of "DbpRealmMessageRouteType".
     * The variable is identified by: "1.3.6.1.2.1.119.1.6.1.1.4".
     *
     * "The types of service supported for each
     * realm application: accounting,
     * authentication or both."
     *
     */
    protected EnumDbpRealmMessageRouteType DbpRealmMessageRouteType = new EnumDbpRealmMessageRouteType();

    /**
     * Variable for storing the value of "DbpRealmMessageRouteReqstsDrop".
     * The variable is identified by: "1.3.6.1.2.1.119.1.6.1.1.25".
     *
     * "The number of requsts dropped by this realm."
     *
     */
    protected Long DbpRealmMessageRouteReqstsDrop = new Long(1);

    /**
     * Variable for storing the value of "DbpRealmMessageRouteApp".
     * The variable is identified by: "1.3.6.1.2.1.119.1.6.1.1.3".
     *
     * "Application id used to route messages
     * to this realm."
     *
     */
    protected Long DbpRealmMessageRouteApp = new Long(1);

    /**
     * Variable for storing the value of "DbpRealmMessageRoutePendReqstsOut".
     * The variable is identified by: "1.3.6.1.2.1.119.1.6.1.1.24".
     *
     * "The number of Diameter Accounting-Request messages
     * sent to this peer that have not yet timed out or
     * received a response. This variable is incremented when an
     * Accounting-Request is sent to this peer and decremented
     * due to receipt of an Accounting-Response, a timeout or
     * a retransmission."
     *
     */
    protected Long DbpRealmMessageRoutePendReqstsOut = new Long(1);

    /**
     * Variable for storing the value of "DbpRealmMessageRouteAccDupReqsts".
     * The variable is identified by: "1.3.6.1.2.1.119.1.6.1.1.23".
     *
     * "The number of duplicate Diameter accounting
     * messages sent to this realm."
     *
     */
    protected Long DbpRealmMessageRouteAccDupReqsts = new Long(1);

    /**
     * Variable for storing the value of "DbpRealmMessageRouteRealm".
     * The variable is identified by: "1.3.6.1.2.1.119.1.6.1.1.2".
     *
     * "Realm name"
     *
     */
    protected String DbpRealmMessageRouteRealm = new String("JDMK 5.1");

    /**
     * Variable for storing the value of "DbpRealmMessageRouteIndex".
     * The variable is identified by: "1.3.6.1.2.1.119.1.6.1.1.1".
     *
     * "A number uniquely identifying each Realm."
     *
     */
    protected Long DbpRealmMessageRouteIndex = new Long(1);

    /**
     * Variable for storing the value of "DbpRealmMessageRouteAccRetrans".
     * The variable is identified by: "1.3.6.1.2.1.119.1.6.1.1.22".
     *
     * "The number of Diameter accounting messages
     * retransmitted to this realm."
     *
     */
    protected Long DbpRealmMessageRouteAccRetrans = new Long(1);

    /**
     * Variable for storing the value of "DbpRealmMessageRouteASAsOut".
     * The variable is identified by: "1.3.6.1.2.1.119.1.6.1.1.21".
     *
     * "Number of Abort-Session-Answer messages
     * sent to the realm."
     *
     */
    protected Long DbpRealmMessageRouteASAsOut = new Long(1);

    /**
     * Variable for storing the value of "DbpRealmMessageRouteASAsIn".
     * The variable is identified by: "1.3.6.1.2.1.119.1.6.1.1.20".
     *
     * "Number of Abort-Session-Answer messages
     * received from the realm."
     *
     */
    protected Long DbpRealmMessageRouteASAsIn = new Long(1);


    /**
     * Constructor for the "DbpRealmMessageRouteEntry" group.
     */
    public DbpRealmMessageRouteEntry(SnmpMib myMib) {
    }

    /**
     * Getter for the "DbpRealmMessageRouteASRsOut" variable.
     */
    public Long getDbpRealmMessageRouteASRsOut() throws SnmpStatusException {
        return DbpRealmMessageRouteASRsOut;
    }

    /**
     * Getter for the "DbpRealmMessageRouteASRsIn" variable.
     */
    public Long getDbpRealmMessageRouteASRsIn() throws SnmpStatusException {
        return DbpRealmMessageRouteASRsIn;
    }

    /**
     * Getter for the "DbpRealmMessageRouteSTAsOut" variable.
     */
    public Long getDbpRealmMessageRouteSTAsOut() throws SnmpStatusException {
        return DbpRealmMessageRouteSTAsOut;
    }

    /**
     * Getter for the "DbpRealmMessageRouteSTAsIn" variable.
     */
    public Long getDbpRealmMessageRouteSTAsIn() throws SnmpStatusException {
        return DbpRealmMessageRouteSTAsIn;
    }

    /**
     * Getter for the "DbpRealmMessageRouteSTRsOut" variable.
     */
    public Long getDbpRealmMessageRouteSTRsOut() throws SnmpStatusException {
        return DbpRealmMessageRouteSTRsOut;
    }

    /**
     * Getter for the "DbpRealmMessageRouteSTRsIn" variable.
     */
    public Long getDbpRealmMessageRouteSTRsIn() throws SnmpStatusException {
        return DbpRealmMessageRouteSTRsIn;
    }

    /**
     * Getter for the "DbpRealmMessageRouteRAAsOut" variable.
     */
    public Long getDbpRealmMessageRouteRAAsOut() throws SnmpStatusException {
        return DbpRealmMessageRouteRAAsOut;
    }

    /**
     * Getter for the "DbpRealmMessageRouteRAAsIn" variable.
     */
    public Long getDbpRealmMessageRouteRAAsIn() throws SnmpStatusException {
        return DbpRealmMessageRouteRAAsIn;
    }

    /**
     * Getter for the "DbpRealmMessageRouteRARsOut" variable.
     */
    public Long getDbpRealmMessageRouteRARsOut() throws SnmpStatusException {
        return DbpRealmMessageRouteRARsOut;
    }

    /**
     * Getter for the "DbpRealmMessageRouteRARsIn" variable.
     */
    public Long getDbpRealmMessageRouteRARsIn() throws SnmpStatusException {
        return DbpRealmMessageRouteRARsIn;
    }

    /**
     * Getter for the "DbpRealmMessageRouteACAsOut" variable.
     */
    public Long getDbpRealmMessageRouteACAsOut() throws SnmpStatusException {
        return DbpRealmMessageRouteACAsOut;
    }

    /**
     * Getter for the "DbpRealmMessageRouteACAsIn" variable.
     */
    public Long getDbpRealmMessageRouteACAsIn() throws SnmpStatusException {
        return DbpRealmMessageRouteACAsIn;
    }

    /**
     * Getter for the "DbpRealmMessageRouteACRsOut" variable.
     */
    public Long getDbpRealmMessageRouteACRsOut() throws SnmpStatusException {
        return DbpRealmMessageRouteACRsOut;
    }

    /**
     * Getter for the "DbpRealmMessageRouteACRsIn" variable.
     */
    public Long getDbpRealmMessageRouteACRsIn() throws SnmpStatusException {
        return DbpRealmMessageRouteACRsIn;
    }

    /**
     * Getter for the "DbpRealmMessageRouteAction" variable.
     */
    public EnumDbpRealmMessageRouteAction getDbpRealmMessageRouteAction() throws SnmpStatusException {
        return DbpRealmMessageRouteAction;
    }

    /**
     * Getter for the "DbpRealmMessageRouteType" variable.
     */
    public EnumDbpRealmMessageRouteType getDbpRealmMessageRouteType() throws SnmpStatusException {
        return DbpRealmMessageRouteType;
    }

    /**
     * Getter for the "DbpRealmMessageRouteReqstsDrop" variable.
     */
    public Long getDbpRealmMessageRouteReqstsDrop() throws SnmpStatusException {
        return DbpRealmMessageRouteReqstsDrop;
    }

    /**
     * Getter for the "DbpRealmMessageRouteApp" variable.
     */
    public Long getDbpRealmMessageRouteApp() throws SnmpStatusException {
        return DbpRealmMessageRouteApp;
    }

    /**
     * Getter for the "DbpRealmMessageRoutePendReqstsOut" variable.
     */
    public Long getDbpRealmMessageRoutePendReqstsOut() throws SnmpStatusException {
        return DbpRealmMessageRoutePendReqstsOut;
    }

    /**
     * Getter for the "DbpRealmMessageRouteAccDupReqsts" variable.
     */
    public Long getDbpRealmMessageRouteAccDupReqsts() throws SnmpStatusException {
        return DbpRealmMessageRouteAccDupReqsts;
    }

    /**
     * Getter for the "DbpRealmMessageRouteRealm" variable.
     */
    public String getDbpRealmMessageRouteRealm() throws SnmpStatusException {
        return DbpRealmMessageRouteRealm;
    }

    /**
     * Getter for the "DbpRealmMessageRouteIndex" variable.
     */
    public Long getDbpRealmMessageRouteIndex() throws SnmpStatusException {
        return DbpRealmMessageRouteIndex;
    }

    /**
     * Getter for the "DbpRealmMessageRouteAccRetrans" variable.
     */
    public Long getDbpRealmMessageRouteAccRetrans() throws SnmpStatusException {
        return DbpRealmMessageRouteAccRetrans;
    }

    /**
     * Getter for the "DbpRealmMessageRouteASAsOut" variable.
     */
    public Long getDbpRealmMessageRouteASAsOut() throws SnmpStatusException {
        return DbpRealmMessageRouteASAsOut;
    }

    /**
     * Getter for the "DbpRealmMessageRouteASAsIn" variable.
     */
    public Long getDbpRealmMessageRouteASAsIn() throws SnmpStatusException {
        return DbpRealmMessageRouteASAsIn;
    }

}
